typedef
    module_info = tuple<string;string;string> const

var
    DAS_PAK_ROOT = "./"

var
    modules : array< function<(req,from:string):module_info> >

def module_default(req,from:string) : module_info
    let rs <- split_by_chars(req,"./")
    var fr <- split_by_chars(from,"/")
    let mod_name = rs[length(rs)-1]
    if length(rs)==0
        return [[auto mod_name, req + ".das", ""]]
    elif length(rs)==1 && rs[0]=="daslib"
        return [[auto mod_name, "{get_das_root()}/daslib/{mod_name}.das", ""]]
    else
        pop(fr)
        for se in rs
            push(fr,se)
        let path_name = join(fr,"/") + ".das"
        return [[auto mod_name, path_name, ""]]

[export]
def module_get(req,from:string) : module_info
    print("looking for {req} from {from}\n")
    for mod in modules
        let res = invoke(mod,req,from)
        if res._0 != ""
            return res
    return module_default(req,from)


