// generated by dasBinder

#include "daScript/daScript.h"

#include "vulkan/vulkan.h"

using namespace das;

//
// enums
//

DAS_BIND_ENUM_CAST(VkResult);
DAS_BASE_BIND_ENUM(VkResult, VkResult
,   VK_SUCCESS
,   VK_NOT_READY
,   VK_TIMEOUT
,   VK_EVENT_SET
,   VK_EVENT_RESET
,   VK_INCOMPLETE
,   VK_ERROR_OUT_OF_HOST_MEMORY
,   VK_ERROR_OUT_OF_DEVICE_MEMORY
,   VK_ERROR_INITIALIZATION_FAILED
,   VK_ERROR_DEVICE_LOST
,   VK_ERROR_MEMORY_MAP_FAILED
,   VK_ERROR_LAYER_NOT_PRESENT
,   VK_ERROR_EXTENSION_NOT_PRESENT
,   VK_ERROR_FEATURE_NOT_PRESENT
,   VK_ERROR_INCOMPATIBLE_DRIVER
,   VK_ERROR_TOO_MANY_OBJECTS
,   VK_ERROR_FORMAT_NOT_SUPPORTED
,   VK_ERROR_FRAGMENTED_POOL
,   VK_ERROR_UNKNOWN
,   VK_ERROR_OUT_OF_POOL_MEMORY
,   VK_ERROR_INVALID_EXTERNAL_HANDLE
,   VK_ERROR_FRAGMENTATION
,   VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS
,   VK_ERROR_SURFACE_LOST_KHR
,   VK_ERROR_NATIVE_WINDOW_IN_USE_KHR
,   VK_SUBOPTIMAL_KHR
,   VK_ERROR_OUT_OF_DATE_KHR
,   VK_ERROR_INCOMPATIBLE_DISPLAY_KHR
,   VK_ERROR_VALIDATION_FAILED_EXT
,   VK_ERROR_INVALID_SHADER_NV
,   VK_ERROR_INCOMPATIBLE_VERSION_KHR
,   VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT
,   VK_ERROR_NOT_PERMITTED_EXT
,   VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT
,   VK_THREAD_IDLE_KHR
,   VK_THREAD_DONE_KHR
,   VK_OPERATION_DEFERRED_KHR
,   VK_OPERATION_NOT_DEFERRED_KHR
,   VK_PIPELINE_COMPILE_REQUIRED_EXT
,   VK_ERROR_OUT_OF_POOL_MEMORY_KHR
,   VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR
,   VK_ERROR_FRAGMENTATION_EXT
,   VK_ERROR_INVALID_DEVICE_ADDRESS_EXT
,   VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR
,   VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT
,   VK_RESULT_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkStructureType);
DAS_BASE_BIND_ENUM(VkStructureType, VkStructureType
,   VK_STRUCTURE_TYPE_APPLICATION_INFO
,   VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO
,   VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO
,   VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO
,   VK_STRUCTURE_TYPE_SUBMIT_INFO
,   VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO
,   VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE
,   VK_STRUCTURE_TYPE_BIND_SPARSE_INFO
,   VK_STRUCTURE_TYPE_FENCE_CREATE_INFO
,   VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO
,   VK_STRUCTURE_TYPE_EVENT_CREATE_INFO
,   VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO
,   VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO
,   VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO
,   VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO
,   VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO
,   VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO
,   VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO
,   VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO
,   VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO
,   VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO
,   VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO
,   VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO
,   VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET
,   VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET
,   VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO
,   VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO
,   VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO
,   VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO
,   VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO
,   VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO
,   VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO
,   VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER
,   VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER
,   VK_STRUCTURE_TYPE_MEMORY_BARRIER
,   VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO
,   VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES
,   VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO
,   VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES
,   VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS
,   VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO
,   VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO
,   VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO
,   VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO
,   VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO
,   VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO
,   VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO
,   VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES
,   VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO
,   VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2
,   VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2
,   VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2
,   VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2
,   VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2
,   VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2
,   VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2
,   VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2
,   VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES
,   VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO
,   VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO
,   VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES
,   VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES
,   VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2
,   VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO
,   VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO
,   VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO
,   VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES
,   VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES
,   VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO
,   VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO
,   VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES
,   VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO
,   VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO
,   VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO
,   VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES
,   VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO
,   VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO
,   VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES
,   VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES
,   VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO
,   VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2
,   VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2
,   VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2
,   VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2
,   VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2
,   VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO
,   VK_STRUCTURE_TYPE_SUBPASS_END_INFO
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES
,   VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES
,   VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO
,   VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES
,   VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES
,   VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES
,   VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES
,   VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO
,   VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO
,   VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES
,   VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT
,   VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES
,   VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO
,   VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO
,   VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO
,   VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES
,   VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO
,   VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO
,   VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO
,   VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO
,   VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_PRESENT_INFO_KHR
,   VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR
,   VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR
,   VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR
,   VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR
,   VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR
,   VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD
,   VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT
,   VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT
,   VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT
,   VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX
,   VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX
,   VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD
,   VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV
,   VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV
,   VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV
,   VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV
,   VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV
,   VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT
,   VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT
,   VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT
,   VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR
,   VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR
,   VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR
,   VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR
,   VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR
,   VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR
,   VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR
,   VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR
,   VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR
,   VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR
,   VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR
,   VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT
,   VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT
,   VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR
,   VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT
,   VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT
,   VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT
,   VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT
,   VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX
,   VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_HDR_METADATA_EXT
,   VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR
,   VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR
,   VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR
,   VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR
,   VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR
,   VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR
,   VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR
,   VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR
,   VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR
,   VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR
,   VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR
,   VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR
,   VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR
,   VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR
,   VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR
,   VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR
,   VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK
,   VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK
,   VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT
,   VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT
,   VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT
,   VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT
,   VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID
,   VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID
,   VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID
,   VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID
,   VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID
,   VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT
,   VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT
,   VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT
,   VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_KHR
,   VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR
,   VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR
,   VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_GEOMETRY_TYPE_INFO_KHR
,   VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR
,   VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR
,   VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR
,   VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR
,   VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR
,   VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_KHR
,   VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_KHR
,   VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR
,   VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR
,   VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_FEATURES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV
,   VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT
,   VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT
,   VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV
,   VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_GEOMETRY_NV
,   VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV
,   VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV
,   VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV
,   VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV
,   VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT
,   VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT
,   VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR
,   VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD
,   VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD
,   VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP
,   VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV
,   VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV
,   VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV
,   VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL
,   VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL
,   VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL
,   VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL
,   VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL
,   VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL
,   VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD
,   VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD
,   VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA
,   VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT
,   VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT
,   VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT
,   VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV
,   VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV
,   VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT
,   VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT
,   VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT
,   VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT
,   VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT
,   VK_STRUCTURE_TYPE_DEFERRED_OPERATION_INFO_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR
,   VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR
,   VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR
,   VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR
,   VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV
,   VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV
,   VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV
,   VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM
,   VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT
,   VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV
,   VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT
,   VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES
,   VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR
,   VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR
,   VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR
,   VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR
,   VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR
,   VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR
,   VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR
,   VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR
,   VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR
,   VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR
,   VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR
,   VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR
,   VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR
,   VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR
,   VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR
,   VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR
,   VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR
,   VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR
,   VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR
,   VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR
,   VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR
,   VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR
,   VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR
,   VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR
,   VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR
,   VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR
,   VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR
,   VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR
,   VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR
,   VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR
,   VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR
,   VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR
,   VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR
,   VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR
,   VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR
,   VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR
,   VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR
,   VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT
,   VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT
,   VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT
,   VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV
,   VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR
,   VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR
,   VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR
,   VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR
,   VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR
,   VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR
,   VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT
,   VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT
,   VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR
,   VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR
,   VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR
,   VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR
,   VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR
,   VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT
,   VK_STRUCTURE_TYPE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkImageLayout);
DAS_BASE_BIND_ENUM(VkImageLayout, VkImageLayout
,   VK_IMAGE_LAYOUT_UNDEFINED
,   VK_IMAGE_LAYOUT_GENERAL
,   VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL
,   VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL
,   VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL
,   VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL
,   VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL
,   VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL
,   VK_IMAGE_LAYOUT_PREINITIALIZED
,   VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL
,   VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL
,   VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL
,   VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL
,   VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL
,   VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL
,   VK_IMAGE_LAYOUT_PRESENT_SRC_KHR
,   VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR
,   VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV
,   VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT
,   VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR
,   VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR
,   VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL_KHR
,   VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL_KHR
,   VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL_KHR
,   VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL_KHR
,   VK_IMAGE_LAYOUT_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkObjectType);
DAS_BASE_BIND_ENUM(VkObjectType, VkObjectType
,   VK_OBJECT_TYPE_UNKNOWN
,   VK_OBJECT_TYPE_INSTANCE
,   VK_OBJECT_TYPE_PHYSICAL_DEVICE
,   VK_OBJECT_TYPE_DEVICE
,   VK_OBJECT_TYPE_QUEUE
,   VK_OBJECT_TYPE_SEMAPHORE
,   VK_OBJECT_TYPE_COMMAND_BUFFER
,   VK_OBJECT_TYPE_FENCE
,   VK_OBJECT_TYPE_DEVICE_MEMORY
,   VK_OBJECT_TYPE_BUFFER
,   VK_OBJECT_TYPE_IMAGE
,   VK_OBJECT_TYPE_EVENT
,   VK_OBJECT_TYPE_QUERY_POOL
,   VK_OBJECT_TYPE_BUFFER_VIEW
,   VK_OBJECT_TYPE_IMAGE_VIEW
,   VK_OBJECT_TYPE_SHADER_MODULE
,   VK_OBJECT_TYPE_PIPELINE_CACHE
,   VK_OBJECT_TYPE_PIPELINE_LAYOUT
,   VK_OBJECT_TYPE_RENDER_PASS
,   VK_OBJECT_TYPE_PIPELINE
,   VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT
,   VK_OBJECT_TYPE_SAMPLER
,   VK_OBJECT_TYPE_DESCRIPTOR_POOL
,   VK_OBJECT_TYPE_DESCRIPTOR_SET
,   VK_OBJECT_TYPE_FRAMEBUFFER
,   VK_OBJECT_TYPE_COMMAND_POOL
,   VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION
,   VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE
,   VK_OBJECT_TYPE_SURFACE_KHR
,   VK_OBJECT_TYPE_SWAPCHAIN_KHR
,   VK_OBJECT_TYPE_DISPLAY_KHR
,   VK_OBJECT_TYPE_DISPLAY_MODE_KHR
,   VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT
,   VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT
,   VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR
,   VK_OBJECT_TYPE_VALIDATION_CACHE_EXT
,   VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL
,   VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR
,   VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV
,   VK_OBJECT_TYPE_PRIVATE_DATA_SLOT_EXT
,   VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR
,   VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR
,   VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV
,   VK_OBJECT_TYPE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkVendorId);
DAS_BASE_BIND_ENUM(VkVendorId, VkVendorId
,   VK_VENDOR_ID_VIV
,   VK_VENDOR_ID_VSI
,   VK_VENDOR_ID_KAZAN
,   VK_VENDOR_ID_CODEPLAY
,   VK_VENDOR_ID_MESA
,   VK_VENDOR_ID_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkPipelineCacheHeaderVersion);
DAS_BASE_BIND_ENUM(VkPipelineCacheHeaderVersion, VkPipelineCacheHeaderVersion
,   VK_PIPELINE_CACHE_HEADER_VERSION_ONE
,   VK_PIPELINE_CACHE_HEADER_VERSION_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkSystemAllocationScope);
DAS_BASE_BIND_ENUM(VkSystemAllocationScope, VkSystemAllocationScope
,   VK_SYSTEM_ALLOCATION_SCOPE_COMMAND
,   VK_SYSTEM_ALLOCATION_SCOPE_OBJECT
,   VK_SYSTEM_ALLOCATION_SCOPE_CACHE
,   VK_SYSTEM_ALLOCATION_SCOPE_DEVICE
,   VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE
,   VK_SYSTEM_ALLOCATION_SCOPE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkInternalAllocationType);
DAS_BASE_BIND_ENUM(VkInternalAllocationType, VkInternalAllocationType
,   VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE
,   VK_INTERNAL_ALLOCATION_TYPE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkFormat);
DAS_BASE_BIND_ENUM(VkFormat, VkFormat
,   VK_FORMAT_UNDEFINED
,   VK_FORMAT_R4G4_UNORM_PACK8
,   VK_FORMAT_R4G4B4A4_UNORM_PACK16
,   VK_FORMAT_B4G4R4A4_UNORM_PACK16
,   VK_FORMAT_R5G6B5_UNORM_PACK16
,   VK_FORMAT_B5G6R5_UNORM_PACK16
,   VK_FORMAT_R5G5B5A1_UNORM_PACK16
,   VK_FORMAT_B5G5R5A1_UNORM_PACK16
,   VK_FORMAT_A1R5G5B5_UNORM_PACK16
,   VK_FORMAT_R8_UNORM
,   VK_FORMAT_R8_SNORM
,   VK_FORMAT_R8_USCALED
,   VK_FORMAT_R8_SSCALED
,   VK_FORMAT_R8_UINT
,   VK_FORMAT_R8_SINT
,   VK_FORMAT_R8_SRGB
,   VK_FORMAT_R8G8_UNORM
,   VK_FORMAT_R8G8_SNORM
,   VK_FORMAT_R8G8_USCALED
,   VK_FORMAT_R8G8_SSCALED
,   VK_FORMAT_R8G8_UINT
,   VK_FORMAT_R8G8_SINT
,   VK_FORMAT_R8G8_SRGB
,   VK_FORMAT_R8G8B8_UNORM
,   VK_FORMAT_R8G8B8_SNORM
,   VK_FORMAT_R8G8B8_USCALED
,   VK_FORMAT_R8G8B8_SSCALED
,   VK_FORMAT_R8G8B8_UINT
,   VK_FORMAT_R8G8B8_SINT
,   VK_FORMAT_R8G8B8_SRGB
,   VK_FORMAT_B8G8R8_UNORM
,   VK_FORMAT_B8G8R8_SNORM
,   VK_FORMAT_B8G8R8_USCALED
,   VK_FORMAT_B8G8R8_SSCALED
,   VK_FORMAT_B8G8R8_UINT
,   VK_FORMAT_B8G8R8_SINT
,   VK_FORMAT_B8G8R8_SRGB
,   VK_FORMAT_R8G8B8A8_UNORM
,   VK_FORMAT_R8G8B8A8_SNORM
,   VK_FORMAT_R8G8B8A8_USCALED
,   VK_FORMAT_R8G8B8A8_SSCALED
,   VK_FORMAT_R8G8B8A8_UINT
,   VK_FORMAT_R8G8B8A8_SINT
,   VK_FORMAT_R8G8B8A8_SRGB
,   VK_FORMAT_B8G8R8A8_UNORM
,   VK_FORMAT_B8G8R8A8_SNORM
,   VK_FORMAT_B8G8R8A8_USCALED
,   VK_FORMAT_B8G8R8A8_SSCALED
,   VK_FORMAT_B8G8R8A8_UINT
,   VK_FORMAT_B8G8R8A8_SINT
,   VK_FORMAT_B8G8R8A8_SRGB
,   VK_FORMAT_A8B8G8R8_UNORM_PACK32
,   VK_FORMAT_A8B8G8R8_SNORM_PACK32
,   VK_FORMAT_A8B8G8R8_USCALED_PACK32
,   VK_FORMAT_A8B8G8R8_SSCALED_PACK32
,   VK_FORMAT_A8B8G8R8_UINT_PACK32
,   VK_FORMAT_A8B8G8R8_SINT_PACK32
,   VK_FORMAT_A8B8G8R8_SRGB_PACK32
,   VK_FORMAT_A2R10G10B10_UNORM_PACK32
,   VK_FORMAT_A2R10G10B10_SNORM_PACK32
,   VK_FORMAT_A2R10G10B10_USCALED_PACK32
,   VK_FORMAT_A2R10G10B10_SSCALED_PACK32
,   VK_FORMAT_A2R10G10B10_UINT_PACK32
,   VK_FORMAT_A2R10G10B10_SINT_PACK32
,   VK_FORMAT_A2B10G10R10_UNORM_PACK32
,   VK_FORMAT_A2B10G10R10_SNORM_PACK32
,   VK_FORMAT_A2B10G10R10_USCALED_PACK32
,   VK_FORMAT_A2B10G10R10_SSCALED_PACK32
,   VK_FORMAT_A2B10G10R10_UINT_PACK32
,   VK_FORMAT_A2B10G10R10_SINT_PACK32
,   VK_FORMAT_R16_UNORM
,   VK_FORMAT_R16_SNORM
,   VK_FORMAT_R16_USCALED
,   VK_FORMAT_R16_SSCALED
,   VK_FORMAT_R16_UINT
,   VK_FORMAT_R16_SINT
,   VK_FORMAT_R16_SFLOAT
,   VK_FORMAT_R16G16_UNORM
,   VK_FORMAT_R16G16_SNORM
,   VK_FORMAT_R16G16_USCALED
,   VK_FORMAT_R16G16_SSCALED
,   VK_FORMAT_R16G16_UINT
,   VK_FORMAT_R16G16_SINT
,   VK_FORMAT_R16G16_SFLOAT
,   VK_FORMAT_R16G16B16_UNORM
,   VK_FORMAT_R16G16B16_SNORM
,   VK_FORMAT_R16G16B16_USCALED
,   VK_FORMAT_R16G16B16_SSCALED
,   VK_FORMAT_R16G16B16_UINT
,   VK_FORMAT_R16G16B16_SINT
,   VK_FORMAT_R16G16B16_SFLOAT
,   VK_FORMAT_R16G16B16A16_UNORM
,   VK_FORMAT_R16G16B16A16_SNORM
,   VK_FORMAT_R16G16B16A16_USCALED
,   VK_FORMAT_R16G16B16A16_SSCALED
,   VK_FORMAT_R16G16B16A16_UINT
,   VK_FORMAT_R16G16B16A16_SINT
,   VK_FORMAT_R16G16B16A16_SFLOAT
,   VK_FORMAT_R32_UINT
,   VK_FORMAT_R32_SINT
,   VK_FORMAT_R32_SFLOAT
,   VK_FORMAT_R32G32_UINT
,   VK_FORMAT_R32G32_SINT
,   VK_FORMAT_R32G32_SFLOAT
,   VK_FORMAT_R32G32B32_UINT
,   VK_FORMAT_R32G32B32_SINT
,   VK_FORMAT_R32G32B32_SFLOAT
,   VK_FORMAT_R32G32B32A32_UINT
,   VK_FORMAT_R32G32B32A32_SINT
,   VK_FORMAT_R32G32B32A32_SFLOAT
,   VK_FORMAT_R64_UINT
,   VK_FORMAT_R64_SINT
,   VK_FORMAT_R64_SFLOAT
,   VK_FORMAT_R64G64_UINT
,   VK_FORMAT_R64G64_SINT
,   VK_FORMAT_R64G64_SFLOAT
,   VK_FORMAT_R64G64B64_UINT
,   VK_FORMAT_R64G64B64_SINT
,   VK_FORMAT_R64G64B64_SFLOAT
,   VK_FORMAT_R64G64B64A64_UINT
,   VK_FORMAT_R64G64B64A64_SINT
,   VK_FORMAT_R64G64B64A64_SFLOAT
,   VK_FORMAT_B10G11R11_UFLOAT_PACK32
,   VK_FORMAT_E5B9G9R9_UFLOAT_PACK32
,   VK_FORMAT_D16_UNORM
,   VK_FORMAT_X8_D24_UNORM_PACK32
,   VK_FORMAT_D32_SFLOAT
,   VK_FORMAT_S8_UINT
,   VK_FORMAT_D16_UNORM_S8_UINT
,   VK_FORMAT_D24_UNORM_S8_UINT
,   VK_FORMAT_D32_SFLOAT_S8_UINT
,   VK_FORMAT_BC1_RGB_UNORM_BLOCK
,   VK_FORMAT_BC1_RGB_SRGB_BLOCK
,   VK_FORMAT_BC1_RGBA_UNORM_BLOCK
,   VK_FORMAT_BC1_RGBA_SRGB_BLOCK
,   VK_FORMAT_BC2_UNORM_BLOCK
,   VK_FORMAT_BC2_SRGB_BLOCK
,   VK_FORMAT_BC3_UNORM_BLOCK
,   VK_FORMAT_BC3_SRGB_BLOCK
,   VK_FORMAT_BC4_UNORM_BLOCK
,   VK_FORMAT_BC4_SNORM_BLOCK
,   VK_FORMAT_BC5_UNORM_BLOCK
,   VK_FORMAT_BC5_SNORM_BLOCK
,   VK_FORMAT_BC6H_UFLOAT_BLOCK
,   VK_FORMAT_BC6H_SFLOAT_BLOCK
,   VK_FORMAT_BC7_UNORM_BLOCK
,   VK_FORMAT_BC7_SRGB_BLOCK
,   VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK
,   VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK
,   VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK
,   VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK
,   VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK
,   VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK
,   VK_FORMAT_EAC_R11_UNORM_BLOCK
,   VK_FORMAT_EAC_R11_SNORM_BLOCK
,   VK_FORMAT_EAC_R11G11_UNORM_BLOCK
,   VK_FORMAT_EAC_R11G11_SNORM_BLOCK
,   VK_FORMAT_ASTC_4x4_UNORM_BLOCK
,   VK_FORMAT_ASTC_4x4_SRGB_BLOCK
,   VK_FORMAT_ASTC_5x4_UNORM_BLOCK
,   VK_FORMAT_ASTC_5x4_SRGB_BLOCK
,   VK_FORMAT_ASTC_5x5_UNORM_BLOCK
,   VK_FORMAT_ASTC_5x5_SRGB_BLOCK
,   VK_FORMAT_ASTC_6x5_UNORM_BLOCK
,   VK_FORMAT_ASTC_6x5_SRGB_BLOCK
,   VK_FORMAT_ASTC_6x6_UNORM_BLOCK
,   VK_FORMAT_ASTC_6x6_SRGB_BLOCK
,   VK_FORMAT_ASTC_8x5_UNORM_BLOCK
,   VK_FORMAT_ASTC_8x5_SRGB_BLOCK
,   VK_FORMAT_ASTC_8x6_UNORM_BLOCK
,   VK_FORMAT_ASTC_8x6_SRGB_BLOCK
,   VK_FORMAT_ASTC_8x8_UNORM_BLOCK
,   VK_FORMAT_ASTC_8x8_SRGB_BLOCK
,   VK_FORMAT_ASTC_10x5_UNORM_BLOCK
,   VK_FORMAT_ASTC_10x5_SRGB_BLOCK
,   VK_FORMAT_ASTC_10x6_UNORM_BLOCK
,   VK_FORMAT_ASTC_10x6_SRGB_BLOCK
,   VK_FORMAT_ASTC_10x8_UNORM_BLOCK
,   VK_FORMAT_ASTC_10x8_SRGB_BLOCK
,   VK_FORMAT_ASTC_10x10_UNORM_BLOCK
,   VK_FORMAT_ASTC_10x10_SRGB_BLOCK
,   VK_FORMAT_ASTC_12x10_UNORM_BLOCK
,   VK_FORMAT_ASTC_12x10_SRGB_BLOCK
,   VK_FORMAT_ASTC_12x12_UNORM_BLOCK
,   VK_FORMAT_ASTC_12x12_SRGB_BLOCK
,   VK_FORMAT_G8B8G8R8_422_UNORM
,   VK_FORMAT_B8G8R8G8_422_UNORM
,   VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM
,   VK_FORMAT_G8_B8R8_2PLANE_420_UNORM
,   VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM
,   VK_FORMAT_G8_B8R8_2PLANE_422_UNORM
,   VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM
,   VK_FORMAT_R10X6_UNORM_PACK16
,   VK_FORMAT_R10X6G10X6_UNORM_2PACK16
,   VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16
,   VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16
,   VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16
,   VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16
,   VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16
,   VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16
,   VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16
,   VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16
,   VK_FORMAT_R12X4_UNORM_PACK16
,   VK_FORMAT_R12X4G12X4_UNORM_2PACK16
,   VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16
,   VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16
,   VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16
,   VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16
,   VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16
,   VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16
,   VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16
,   VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16
,   VK_FORMAT_G16B16G16R16_422_UNORM
,   VK_FORMAT_B16G16R16G16_422_UNORM
,   VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM
,   VK_FORMAT_G16_B16R16_2PLANE_420_UNORM
,   VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM
,   VK_FORMAT_G16_B16R16_2PLANE_422_UNORM
,   VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM
,   VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG
,   VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG
,   VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG
,   VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG
,   VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG
,   VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG
,   VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG
,   VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG
,   VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT
,   VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT
,   VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT
,   VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT
,   VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT
,   VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT
,   VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT
,   VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT
,   VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT
,   VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT
,   VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT
,   VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT
,   VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT
,   VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT
,   VK_FORMAT_G8B8G8R8_422_UNORM_KHR
,   VK_FORMAT_B8G8R8G8_422_UNORM_KHR
,   VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR
,   VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR
,   VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR
,   VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR
,   VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR
,   VK_FORMAT_R10X6_UNORM_PACK16_KHR
,   VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR
,   VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR
,   VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR
,   VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR
,   VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR
,   VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR
,   VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR
,   VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR
,   VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR
,   VK_FORMAT_R12X4_UNORM_PACK16_KHR
,   VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR
,   VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR
,   VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR
,   VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR
,   VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR
,   VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR
,   VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR
,   VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR
,   VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR
,   VK_FORMAT_G16B16G16R16_422_UNORM_KHR
,   VK_FORMAT_B16G16R16G16_422_UNORM_KHR
,   VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR
,   VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR
,   VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR
,   VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR
,   VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR
,   VK_FORMAT_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkImageTiling);
DAS_BASE_BIND_ENUM(VkImageTiling, VkImageTiling
,   VK_IMAGE_TILING_OPTIMAL
,   VK_IMAGE_TILING_LINEAR
,   VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT
,   VK_IMAGE_TILING_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkImageType);
DAS_BASE_BIND_ENUM(VkImageType, VkImageType
,   VK_IMAGE_TYPE_1D
,   VK_IMAGE_TYPE_2D
,   VK_IMAGE_TYPE_3D
,   VK_IMAGE_TYPE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkPhysicalDeviceType);
DAS_BASE_BIND_ENUM(VkPhysicalDeviceType, VkPhysicalDeviceType
,   VK_PHYSICAL_DEVICE_TYPE_OTHER
,   VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU
,   VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU
,   VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU
,   VK_PHYSICAL_DEVICE_TYPE_CPU
,   VK_PHYSICAL_DEVICE_TYPE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkQueryType);
DAS_BASE_BIND_ENUM(VkQueryType, VkQueryType
,   VK_QUERY_TYPE_OCCLUSION
,   VK_QUERY_TYPE_PIPELINE_STATISTICS
,   VK_QUERY_TYPE_TIMESTAMP
,   VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT
,   VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR
,   VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR
,   VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR
,   VK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL
,   VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV
,   VK_QUERY_TYPE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkSharingMode);
DAS_BASE_BIND_ENUM(VkSharingMode, VkSharingMode
,   VK_SHARING_MODE_EXCLUSIVE
,   VK_SHARING_MODE_CONCURRENT
,   VK_SHARING_MODE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkComponentSwizzle);
DAS_BASE_BIND_ENUM(VkComponentSwizzle, VkComponentSwizzle
,   VK_COMPONENT_SWIZZLE_IDENTITY
,   VK_COMPONENT_SWIZZLE_ZERO
,   VK_COMPONENT_SWIZZLE_ONE
,   VK_COMPONENT_SWIZZLE_R
,   VK_COMPONENT_SWIZZLE_G
,   VK_COMPONENT_SWIZZLE_B
,   VK_COMPONENT_SWIZZLE_A
,   VK_COMPONENT_SWIZZLE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkImageViewType);
DAS_BASE_BIND_ENUM(VkImageViewType, VkImageViewType
,   VK_IMAGE_VIEW_TYPE_1D
,   VK_IMAGE_VIEW_TYPE_2D
,   VK_IMAGE_VIEW_TYPE_3D
,   VK_IMAGE_VIEW_TYPE_CUBE
,   VK_IMAGE_VIEW_TYPE_1D_ARRAY
,   VK_IMAGE_VIEW_TYPE_2D_ARRAY
,   VK_IMAGE_VIEW_TYPE_CUBE_ARRAY
,   VK_IMAGE_VIEW_TYPE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkBlendFactor);
DAS_BASE_BIND_ENUM(VkBlendFactor, VkBlendFactor
,   VK_BLEND_FACTOR_ZERO
,   VK_BLEND_FACTOR_ONE
,   VK_BLEND_FACTOR_SRC_COLOR
,   VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR
,   VK_BLEND_FACTOR_DST_COLOR
,   VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR
,   VK_BLEND_FACTOR_SRC_ALPHA
,   VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA
,   VK_BLEND_FACTOR_DST_ALPHA
,   VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA
,   VK_BLEND_FACTOR_CONSTANT_COLOR
,   VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR
,   VK_BLEND_FACTOR_CONSTANT_ALPHA
,   VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA
,   VK_BLEND_FACTOR_SRC_ALPHA_SATURATE
,   VK_BLEND_FACTOR_SRC1_COLOR
,   VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR
,   VK_BLEND_FACTOR_SRC1_ALPHA
,   VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA
,   VK_BLEND_FACTOR_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkBlendOp);
DAS_BASE_BIND_ENUM(VkBlendOp, VkBlendOp
,   VK_BLEND_OP_ADD
,   VK_BLEND_OP_SUBTRACT
,   VK_BLEND_OP_REVERSE_SUBTRACT
,   VK_BLEND_OP_MIN
,   VK_BLEND_OP_MAX
,   VK_BLEND_OP_ZERO_EXT
,   VK_BLEND_OP_SRC_EXT
,   VK_BLEND_OP_DST_EXT
,   VK_BLEND_OP_SRC_OVER_EXT
,   VK_BLEND_OP_DST_OVER_EXT
,   VK_BLEND_OP_SRC_IN_EXT
,   VK_BLEND_OP_DST_IN_EXT
,   VK_BLEND_OP_SRC_OUT_EXT
,   VK_BLEND_OP_DST_OUT_EXT
,   VK_BLEND_OP_SRC_ATOP_EXT
,   VK_BLEND_OP_DST_ATOP_EXT
,   VK_BLEND_OP_XOR_EXT
,   VK_BLEND_OP_MULTIPLY_EXT
,   VK_BLEND_OP_SCREEN_EXT
,   VK_BLEND_OP_OVERLAY_EXT
,   VK_BLEND_OP_DARKEN_EXT
,   VK_BLEND_OP_LIGHTEN_EXT
,   VK_BLEND_OP_COLORDODGE_EXT
,   VK_BLEND_OP_COLORBURN_EXT
,   VK_BLEND_OP_HARDLIGHT_EXT
,   VK_BLEND_OP_SOFTLIGHT_EXT
,   VK_BLEND_OP_DIFFERENCE_EXT
,   VK_BLEND_OP_EXCLUSION_EXT
,   VK_BLEND_OP_INVERT_EXT
,   VK_BLEND_OP_INVERT_RGB_EXT
,   VK_BLEND_OP_LINEARDODGE_EXT
,   VK_BLEND_OP_LINEARBURN_EXT
,   VK_BLEND_OP_VIVIDLIGHT_EXT
,   VK_BLEND_OP_LINEARLIGHT_EXT
,   VK_BLEND_OP_PINLIGHT_EXT
,   VK_BLEND_OP_HARDMIX_EXT
,   VK_BLEND_OP_HSL_HUE_EXT
,   VK_BLEND_OP_HSL_SATURATION_EXT
,   VK_BLEND_OP_HSL_COLOR_EXT
,   VK_BLEND_OP_HSL_LUMINOSITY_EXT
,   VK_BLEND_OP_PLUS_EXT
,   VK_BLEND_OP_PLUS_CLAMPED_EXT
,   VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT
,   VK_BLEND_OP_PLUS_DARKER_EXT
,   VK_BLEND_OP_MINUS_EXT
,   VK_BLEND_OP_MINUS_CLAMPED_EXT
,   VK_BLEND_OP_CONTRAST_EXT
,   VK_BLEND_OP_INVERT_OVG_EXT
,   VK_BLEND_OP_RED_EXT
,   VK_BLEND_OP_GREEN_EXT
,   VK_BLEND_OP_BLUE_EXT
,   VK_BLEND_OP_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkCompareOp);
DAS_BASE_BIND_ENUM(VkCompareOp, VkCompareOp
,   VK_COMPARE_OP_NEVER
,   VK_COMPARE_OP_LESS
,   VK_COMPARE_OP_EQUAL
,   VK_COMPARE_OP_LESS_OR_EQUAL
,   VK_COMPARE_OP_GREATER
,   VK_COMPARE_OP_NOT_EQUAL
,   VK_COMPARE_OP_GREATER_OR_EQUAL
,   VK_COMPARE_OP_ALWAYS
,   VK_COMPARE_OP_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkDynamicState);
DAS_BASE_BIND_ENUM(VkDynamicState, VkDynamicState
,   VK_DYNAMIC_STATE_VIEWPORT
,   VK_DYNAMIC_STATE_SCISSOR
,   VK_DYNAMIC_STATE_LINE_WIDTH
,   VK_DYNAMIC_STATE_DEPTH_BIAS
,   VK_DYNAMIC_STATE_BLEND_CONSTANTS
,   VK_DYNAMIC_STATE_DEPTH_BOUNDS
,   VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK
,   VK_DYNAMIC_STATE_STENCIL_WRITE_MASK
,   VK_DYNAMIC_STATE_STENCIL_REFERENCE
,   VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV
,   VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT
,   VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT
,   VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV
,   VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV
,   VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV
,   VK_DYNAMIC_STATE_LINE_STIPPLE_EXT
,   VK_DYNAMIC_STATE_CULL_MODE_EXT
,   VK_DYNAMIC_STATE_FRONT_FACE_EXT
,   VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY_EXT
,   VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT_EXT
,   VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT_EXT
,   VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT
,   VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE_EXT
,   VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE_EXT
,   VK_DYNAMIC_STATE_DEPTH_COMPARE_OP_EXT
,   VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE_EXT
,   VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE_EXT
,   VK_DYNAMIC_STATE_STENCIL_OP_EXT
,   VK_DYNAMIC_STATE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkFrontFace);
DAS_BASE_BIND_ENUM(VkFrontFace, VkFrontFace
,   VK_FRONT_FACE_COUNTER_CLOCKWISE
,   VK_FRONT_FACE_CLOCKWISE
,   VK_FRONT_FACE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkVertexInputRate);
DAS_BASE_BIND_ENUM(VkVertexInputRate, VkVertexInputRate
,   VK_VERTEX_INPUT_RATE_VERTEX
,   VK_VERTEX_INPUT_RATE_INSTANCE
,   VK_VERTEX_INPUT_RATE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkPrimitiveTopology);
DAS_BASE_BIND_ENUM(VkPrimitiveTopology, VkPrimitiveTopology
,   VK_PRIMITIVE_TOPOLOGY_POINT_LIST
,   VK_PRIMITIVE_TOPOLOGY_LINE_LIST
,   VK_PRIMITIVE_TOPOLOGY_LINE_STRIP
,   VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST
,   VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP
,   VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN
,   VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY
,   VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY
,   VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY
,   VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY
,   VK_PRIMITIVE_TOPOLOGY_PATCH_LIST
,   VK_PRIMITIVE_TOPOLOGY_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkPolygonMode);
DAS_BASE_BIND_ENUM(VkPolygonMode, VkPolygonMode
,   VK_POLYGON_MODE_FILL
,   VK_POLYGON_MODE_LINE
,   VK_POLYGON_MODE_POINT
,   VK_POLYGON_MODE_FILL_RECTANGLE_NV
,   VK_POLYGON_MODE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkStencilOp);
DAS_BASE_BIND_ENUM(VkStencilOp, VkStencilOp
,   VK_STENCIL_OP_KEEP
,   VK_STENCIL_OP_ZERO
,   VK_STENCIL_OP_REPLACE
,   VK_STENCIL_OP_INCREMENT_AND_CLAMP
,   VK_STENCIL_OP_DECREMENT_AND_CLAMP
,   VK_STENCIL_OP_INVERT
,   VK_STENCIL_OP_INCREMENT_AND_WRAP
,   VK_STENCIL_OP_DECREMENT_AND_WRAP
,   VK_STENCIL_OP_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkLogicOp);
DAS_BASE_BIND_ENUM(VkLogicOp, VkLogicOp
,   VK_LOGIC_OP_CLEAR
,   VK_LOGIC_OP_AND
,   VK_LOGIC_OP_AND_REVERSE
,   VK_LOGIC_OP_COPY
,   VK_LOGIC_OP_AND_INVERTED
,   VK_LOGIC_OP_NO_OP
,   VK_LOGIC_OP_XOR
,   VK_LOGIC_OP_OR
,   VK_LOGIC_OP_NOR
,   VK_LOGIC_OP_EQUIVALENT
,   VK_LOGIC_OP_INVERT
,   VK_LOGIC_OP_OR_REVERSE
,   VK_LOGIC_OP_COPY_INVERTED
,   VK_LOGIC_OP_OR_INVERTED
,   VK_LOGIC_OP_NAND
,   VK_LOGIC_OP_SET
,   VK_LOGIC_OP_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkBorderColor);
DAS_BASE_BIND_ENUM(VkBorderColor, VkBorderColor
,   VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK
,   VK_BORDER_COLOR_INT_TRANSPARENT_BLACK
,   VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK
,   VK_BORDER_COLOR_INT_OPAQUE_BLACK
,   VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE
,   VK_BORDER_COLOR_INT_OPAQUE_WHITE
,   VK_BORDER_COLOR_FLOAT_CUSTOM_EXT
,   VK_BORDER_COLOR_INT_CUSTOM_EXT
,   VK_BORDER_COLOR_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkFilter);
DAS_BASE_BIND_ENUM(VkFilter, VkFilter
,   VK_FILTER_NEAREST
,   VK_FILTER_LINEAR
,   VK_FILTER_CUBIC_IMG
,   VK_FILTER_CUBIC_EXT
,   VK_FILTER_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkSamplerAddressMode);
DAS_BASE_BIND_ENUM(VkSamplerAddressMode, VkSamplerAddressMode
,   VK_SAMPLER_ADDRESS_MODE_REPEAT
,   VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT
,   VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE
,   VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER
,   VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE
,   VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR
,   VK_SAMPLER_ADDRESS_MODE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkSamplerMipmapMode);
DAS_BASE_BIND_ENUM(VkSamplerMipmapMode, VkSamplerMipmapMode
,   VK_SAMPLER_MIPMAP_MODE_NEAREST
,   VK_SAMPLER_MIPMAP_MODE_LINEAR
,   VK_SAMPLER_MIPMAP_MODE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkDescriptorType);
DAS_BASE_BIND_ENUM(VkDescriptorType, VkDescriptorType
,   VK_DESCRIPTOR_TYPE_SAMPLER
,   VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER
,   VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE
,   VK_DESCRIPTOR_TYPE_STORAGE_IMAGE
,   VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER
,   VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER
,   VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER
,   VK_DESCRIPTOR_TYPE_STORAGE_BUFFER
,   VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC
,   VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC
,   VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT
,   VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT
,   VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR
,   VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV
,   VK_DESCRIPTOR_TYPE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkAttachmentLoadOp);
DAS_BASE_BIND_ENUM(VkAttachmentLoadOp, VkAttachmentLoadOp
,   VK_ATTACHMENT_LOAD_OP_LOAD
,   VK_ATTACHMENT_LOAD_OP_CLEAR
,   VK_ATTACHMENT_LOAD_OP_DONT_CARE
,   VK_ATTACHMENT_LOAD_OP_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkAttachmentStoreOp);
DAS_BASE_BIND_ENUM(VkAttachmentStoreOp, VkAttachmentStoreOp
,   VK_ATTACHMENT_STORE_OP_STORE
,   VK_ATTACHMENT_STORE_OP_DONT_CARE
,   VK_ATTACHMENT_STORE_OP_NONE_QCOM
,   VK_ATTACHMENT_STORE_OP_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkPipelineBindPoint);
DAS_BASE_BIND_ENUM(VkPipelineBindPoint, VkPipelineBindPoint
,   VK_PIPELINE_BIND_POINT_GRAPHICS
,   VK_PIPELINE_BIND_POINT_COMPUTE
,   VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR
,   VK_PIPELINE_BIND_POINT_RAY_TRACING_NV
,   VK_PIPELINE_BIND_POINT_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkCommandBufferLevel);
DAS_BASE_BIND_ENUM(VkCommandBufferLevel, VkCommandBufferLevel
,   VK_COMMAND_BUFFER_LEVEL_PRIMARY
,   VK_COMMAND_BUFFER_LEVEL_SECONDARY
,   VK_COMMAND_BUFFER_LEVEL_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkIndexType);
DAS_BASE_BIND_ENUM(VkIndexType, VkIndexType
,   VK_INDEX_TYPE_UINT16
,   VK_INDEX_TYPE_UINT32
,   VK_INDEX_TYPE_NONE_KHR
,   VK_INDEX_TYPE_UINT8_EXT
,   VK_INDEX_TYPE_NONE_NV
,   VK_INDEX_TYPE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkSubpassContents);
DAS_BASE_BIND_ENUM(VkSubpassContents, VkSubpassContents
,   VK_SUBPASS_CONTENTS_INLINE
,   VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS
,   VK_SUBPASS_CONTENTS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkAccessFlagBits);
DAS_BASE_BIND_ENUM(VkAccessFlagBits, VkAccessFlagBits
,   VK_ACCESS_INDIRECT_COMMAND_READ_BIT
,   VK_ACCESS_INDEX_READ_BIT
,   VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT
,   VK_ACCESS_UNIFORM_READ_BIT
,   VK_ACCESS_INPUT_ATTACHMENT_READ_BIT
,   VK_ACCESS_SHADER_READ_BIT
,   VK_ACCESS_SHADER_WRITE_BIT
,   VK_ACCESS_COLOR_ATTACHMENT_READ_BIT
,   VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT
,   VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT
,   VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT
,   VK_ACCESS_TRANSFER_READ_BIT
,   VK_ACCESS_TRANSFER_WRITE_BIT
,   VK_ACCESS_HOST_READ_BIT
,   VK_ACCESS_HOST_WRITE_BIT
,   VK_ACCESS_MEMORY_READ_BIT
,   VK_ACCESS_MEMORY_WRITE_BIT
,   VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT
,   VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT
,   VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT
,   VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT
,   VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT
,   VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR
,   VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR
,   VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV
,   VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT
,   VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV
,   VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV
,   VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV
,   VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV
,   VK_ACCESS_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkImageAspectFlagBits);
DAS_BASE_BIND_ENUM(VkImageAspectFlagBits, VkImageAspectFlagBits
,   VK_IMAGE_ASPECT_COLOR_BIT
,   VK_IMAGE_ASPECT_DEPTH_BIT
,   VK_IMAGE_ASPECT_STENCIL_BIT
,   VK_IMAGE_ASPECT_METADATA_BIT
,   VK_IMAGE_ASPECT_PLANE_0_BIT
,   VK_IMAGE_ASPECT_PLANE_1_BIT
,   VK_IMAGE_ASPECT_PLANE_2_BIT
,   VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT
,   VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT
,   VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT
,   VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT
,   VK_IMAGE_ASPECT_PLANE_0_BIT_KHR
,   VK_IMAGE_ASPECT_PLANE_1_BIT_KHR
,   VK_IMAGE_ASPECT_PLANE_2_BIT_KHR
,   VK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkFormatFeatureFlagBits);
DAS_BASE_BIND_ENUM(VkFormatFeatureFlagBits, VkFormatFeatureFlagBits
,   VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT
,   VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT
,   VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT
,   VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT
,   VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT
,   VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT
,   VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT
,   VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT
,   VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT
,   VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT
,   VK_FORMAT_FEATURE_BLIT_SRC_BIT
,   VK_FORMAT_FEATURE_BLIT_DST_BIT
,   VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT
,   VK_FORMAT_FEATURE_TRANSFER_SRC_BIT
,   VK_FORMAT_FEATURE_TRANSFER_DST_BIT
,   VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT
,   VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT
,   VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT
,   VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT
,   VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT
,   VK_FORMAT_FEATURE_DISJOINT_BIT
,   VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT
,   VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT
,   VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG
,   VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR
,   VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT
,   VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR
,   VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR
,   VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT
,   VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR
,   VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR
,   VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR
,   VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR
,   VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR
,   VK_FORMAT_FEATURE_DISJOINT_BIT_KHR
,   VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR
,   VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT
,   VK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkImageCreateFlagBits);
DAS_BASE_BIND_ENUM(VkImageCreateFlagBits, VkImageCreateFlagBits
,   VK_IMAGE_CREATE_SPARSE_BINDING_BIT
,   VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT
,   VK_IMAGE_CREATE_SPARSE_ALIASED_BIT
,   VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT
,   VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT
,   VK_IMAGE_CREATE_ALIAS_BIT
,   VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT
,   VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT
,   VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT
,   VK_IMAGE_CREATE_EXTENDED_USAGE_BIT
,   VK_IMAGE_CREATE_PROTECTED_BIT
,   VK_IMAGE_CREATE_DISJOINT_BIT
,   VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV
,   VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT
,   VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT
,   VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR
,   VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR
,   VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR
,   VK_IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR
,   VK_IMAGE_CREATE_DISJOINT_BIT_KHR
,   VK_IMAGE_CREATE_ALIAS_BIT_KHR
,   VK_IMAGE_CREATE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkSampleCountFlagBits);
DAS_BASE_BIND_ENUM(VkSampleCountFlagBits, VkSampleCountFlagBits
,   VK_SAMPLE_COUNT_1_BIT
,   VK_SAMPLE_COUNT_2_BIT
,   VK_SAMPLE_COUNT_4_BIT
,   VK_SAMPLE_COUNT_8_BIT
,   VK_SAMPLE_COUNT_16_BIT
,   VK_SAMPLE_COUNT_32_BIT
,   VK_SAMPLE_COUNT_64_BIT
,   VK_SAMPLE_COUNT_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkImageUsageFlagBits);
DAS_BASE_BIND_ENUM(VkImageUsageFlagBits, VkImageUsageFlagBits
,   VK_IMAGE_USAGE_TRANSFER_SRC_BIT
,   VK_IMAGE_USAGE_TRANSFER_DST_BIT
,   VK_IMAGE_USAGE_SAMPLED_BIT
,   VK_IMAGE_USAGE_STORAGE_BIT
,   VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT
,   VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT
,   VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT
,   VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT
,   VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV
,   VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT
,   VK_IMAGE_USAGE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkMemoryHeapFlagBits);
DAS_BASE_BIND_ENUM(VkMemoryHeapFlagBits, VkMemoryHeapFlagBits
,   VK_MEMORY_HEAP_DEVICE_LOCAL_BIT
,   VK_MEMORY_HEAP_MULTI_INSTANCE_BIT
,   VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR
,   VK_MEMORY_HEAP_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkMemoryPropertyFlagBits);
DAS_BASE_BIND_ENUM(VkMemoryPropertyFlagBits, VkMemoryPropertyFlagBits
,   VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT
,   VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT
,   VK_MEMORY_PROPERTY_HOST_COHERENT_BIT
,   VK_MEMORY_PROPERTY_HOST_CACHED_BIT
,   VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT
,   VK_MEMORY_PROPERTY_PROTECTED_BIT
,   VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD
,   VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD
,   VK_MEMORY_PROPERTY_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkQueueFlagBits);
DAS_BASE_BIND_ENUM(VkQueueFlagBits, VkQueueFlagBits
,   VK_QUEUE_GRAPHICS_BIT
,   VK_QUEUE_COMPUTE_BIT
,   VK_QUEUE_TRANSFER_BIT
,   VK_QUEUE_SPARSE_BINDING_BIT
,   VK_QUEUE_PROTECTED_BIT
,   VK_QUEUE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkDeviceQueueCreateFlagBits);
DAS_BASE_BIND_ENUM(VkDeviceQueueCreateFlagBits, VkDeviceQueueCreateFlagBits
,   VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT
,   VK_DEVICE_QUEUE_CREATE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkPipelineStageFlagBits);
DAS_BASE_BIND_ENUM(VkPipelineStageFlagBits, VkPipelineStageFlagBits
,   VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT
,   VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT
,   VK_PIPELINE_STAGE_VERTEX_INPUT_BIT
,   VK_PIPELINE_STAGE_VERTEX_SHADER_BIT
,   VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT
,   VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT
,   VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT
,   VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT
,   VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT
,   VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT
,   VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT
,   VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT
,   VK_PIPELINE_STAGE_TRANSFER_BIT
,   VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT
,   VK_PIPELINE_STAGE_HOST_BIT
,   VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT
,   VK_PIPELINE_STAGE_ALL_COMMANDS_BIT
,   VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT
,   VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT
,   VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR
,   VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR
,   VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV
,   VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV
,   VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV
,   VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT
,   VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV
,   VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV
,   VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV
,   VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkSparseMemoryBindFlagBits);
DAS_BASE_BIND_ENUM(VkSparseMemoryBindFlagBits, VkSparseMemoryBindFlagBits
,   VK_SPARSE_MEMORY_BIND_METADATA_BIT
,   VK_SPARSE_MEMORY_BIND_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkSparseImageFormatFlagBits);
DAS_BASE_BIND_ENUM(VkSparseImageFormatFlagBits, VkSparseImageFormatFlagBits
,   VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT
,   VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT
,   VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT
,   VK_SPARSE_IMAGE_FORMAT_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkFenceCreateFlagBits);
DAS_BASE_BIND_ENUM(VkFenceCreateFlagBits, VkFenceCreateFlagBits
,   VK_FENCE_CREATE_SIGNALED_BIT
,   VK_FENCE_CREATE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkQueryPipelineStatisticFlagBits);
DAS_BASE_BIND_ENUM(VkQueryPipelineStatisticFlagBits, VkQueryPipelineStatisticFlagBits
,   VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT
,   VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT
,   VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT
,   VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT
,   VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT
,   VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT
,   VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT
,   VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT
,   VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT
,   VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT
,   VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT
,   VK_QUERY_PIPELINE_STATISTIC_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkQueryResultFlagBits);
DAS_BASE_BIND_ENUM(VkQueryResultFlagBits, VkQueryResultFlagBits
,   VK_QUERY_RESULT_64_BIT
,   VK_QUERY_RESULT_WAIT_BIT
,   VK_QUERY_RESULT_WITH_AVAILABILITY_BIT
,   VK_QUERY_RESULT_PARTIAL_BIT
,   VK_QUERY_RESULT_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkBufferCreateFlagBits);
DAS_BASE_BIND_ENUM(VkBufferCreateFlagBits, VkBufferCreateFlagBits
,   VK_BUFFER_CREATE_SPARSE_BINDING_BIT
,   VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT
,   VK_BUFFER_CREATE_SPARSE_ALIASED_BIT
,   VK_BUFFER_CREATE_PROTECTED_BIT
,   VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT
,   VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT
,   VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR
,   VK_BUFFER_CREATE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkBufferUsageFlagBits);
DAS_BASE_BIND_ENUM(VkBufferUsageFlagBits, VkBufferUsageFlagBits
,   VK_BUFFER_USAGE_TRANSFER_SRC_BIT
,   VK_BUFFER_USAGE_TRANSFER_DST_BIT
,   VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT
,   VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT
,   VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT
,   VK_BUFFER_USAGE_STORAGE_BUFFER_BIT
,   VK_BUFFER_USAGE_INDEX_BUFFER_BIT
,   VK_BUFFER_USAGE_VERTEX_BUFFER_BIT
,   VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT
,   VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT
,   VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT
,   VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT
,   VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT
,   VK_BUFFER_USAGE_RAY_TRACING_BIT_KHR
,   VK_BUFFER_USAGE_RAY_TRACING_BIT_NV
,   VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT
,   VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_KHR
,   VK_BUFFER_USAGE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkImageViewCreateFlagBits);
DAS_BASE_BIND_ENUM(VkImageViewCreateFlagBits, VkImageViewCreateFlagBits
,   VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT
,   VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT
,   VK_IMAGE_VIEW_CREATE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkShaderModuleCreateFlagBits);
DAS_BASE_BIND_ENUM(VkShaderModuleCreateFlagBits, VkShaderModuleCreateFlagBits
,   VK_SHADER_MODULE_CREATE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkPipelineCacheCreateFlagBits);
DAS_BASE_BIND_ENUM(VkPipelineCacheCreateFlagBits, VkPipelineCacheCreateFlagBits
,   VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT
,   VK_PIPELINE_CACHE_CREATE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkColorComponentFlagBits);
DAS_BASE_BIND_ENUM(VkColorComponentFlagBits, VkColorComponentFlagBits
,   VK_COLOR_COMPONENT_R_BIT
,   VK_COLOR_COMPONENT_G_BIT
,   VK_COLOR_COMPONENT_B_BIT
,   VK_COLOR_COMPONENT_A_BIT
,   VK_COLOR_COMPONENT_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkPipelineCreateFlagBits);
DAS_BASE_BIND_ENUM(VkPipelineCreateFlagBits, VkPipelineCreateFlagBits
,   VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT
,   VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT
,   VK_PIPELINE_CREATE_DERIVATIVE_BIT
,   VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT
,   VK_PIPELINE_CREATE_DISPATCH_BASE_BIT
,   VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR
,   VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR
,   VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR
,   VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR
,   VK_PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR
,   VK_PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR
,   VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV
,   VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR
,   VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR
,   VK_PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV
,   VK_PIPELINE_CREATE_LIBRARY_BIT_KHR
,   VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT
,   VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT_EXT
,   VK_PIPELINE_CREATE_DISPATCH_BASE
,   VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR
,   VK_PIPELINE_CREATE_DISPATCH_BASE_KHR
,   VK_PIPELINE_CREATE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkPipelineShaderStageCreateFlagBits);
DAS_BASE_BIND_ENUM(VkPipelineShaderStageCreateFlagBits, VkPipelineShaderStageCreateFlagBits
,   VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT
,   VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT
,   VK_PIPELINE_SHADER_STAGE_CREATE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkShaderStageFlagBits);
DAS_BASE_BIND_ENUM(VkShaderStageFlagBits, VkShaderStageFlagBits
,   VK_SHADER_STAGE_VERTEX_BIT
,   VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT
,   VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT
,   VK_SHADER_STAGE_GEOMETRY_BIT
,   VK_SHADER_STAGE_FRAGMENT_BIT
,   VK_SHADER_STAGE_COMPUTE_BIT
,   VK_SHADER_STAGE_ALL_GRAPHICS
,   VK_SHADER_STAGE_ALL
,   VK_SHADER_STAGE_RAYGEN_BIT_KHR
,   VK_SHADER_STAGE_ANY_HIT_BIT_KHR
,   VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR
,   VK_SHADER_STAGE_MISS_BIT_KHR
,   VK_SHADER_STAGE_INTERSECTION_BIT_KHR
,   VK_SHADER_STAGE_CALLABLE_BIT_KHR
,   VK_SHADER_STAGE_TASK_BIT_NV
,   VK_SHADER_STAGE_MESH_BIT_NV
,   VK_SHADER_STAGE_RAYGEN_BIT_NV
,   VK_SHADER_STAGE_ANY_HIT_BIT_NV
,   VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV
,   VK_SHADER_STAGE_MISS_BIT_NV
,   VK_SHADER_STAGE_INTERSECTION_BIT_NV
,   VK_SHADER_STAGE_CALLABLE_BIT_NV
,   VK_SHADER_STAGE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkCullModeFlagBits);
DAS_BASE_BIND_ENUM(VkCullModeFlagBits, VkCullModeFlagBits
,   VK_CULL_MODE_NONE
,   VK_CULL_MODE_FRONT_BIT
,   VK_CULL_MODE_BACK_BIT
,   VK_CULL_MODE_FRONT_AND_BACK
,   VK_CULL_MODE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkSamplerCreateFlagBits);
DAS_BASE_BIND_ENUM(VkSamplerCreateFlagBits, VkSamplerCreateFlagBits
,   VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT
,   VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT
,   VK_SAMPLER_CREATE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkDescriptorPoolCreateFlagBits);
DAS_BASE_BIND_ENUM(VkDescriptorPoolCreateFlagBits, VkDescriptorPoolCreateFlagBits
,   VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT
,   VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT
,   VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT
,   VK_DESCRIPTOR_POOL_CREATE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkDescriptorSetLayoutCreateFlagBits);
DAS_BASE_BIND_ENUM(VkDescriptorSetLayoutCreateFlagBits, VkDescriptorSetLayoutCreateFlagBits
,   VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT
,   VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR
,   VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT
,   VK_DESCRIPTOR_SET_LAYOUT_CREATE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkAttachmentDescriptionFlagBits);
DAS_BASE_BIND_ENUM(VkAttachmentDescriptionFlagBits, VkAttachmentDescriptionFlagBits
,   VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT
,   VK_ATTACHMENT_DESCRIPTION_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkDependencyFlagBits);
DAS_BASE_BIND_ENUM(VkDependencyFlagBits, VkDependencyFlagBits
,   VK_DEPENDENCY_BY_REGION_BIT
,   VK_DEPENDENCY_DEVICE_GROUP_BIT
,   VK_DEPENDENCY_VIEW_LOCAL_BIT
,   VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR
,   VK_DEPENDENCY_DEVICE_GROUP_BIT_KHR
,   VK_DEPENDENCY_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkFramebufferCreateFlagBits);
DAS_BASE_BIND_ENUM(VkFramebufferCreateFlagBits, VkFramebufferCreateFlagBits
,   VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT
,   VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR
,   VK_FRAMEBUFFER_CREATE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkRenderPassCreateFlagBits);
DAS_BASE_BIND_ENUM(VkRenderPassCreateFlagBits, VkRenderPassCreateFlagBits
,   VK_RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM
,   VK_RENDER_PASS_CREATE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkSubpassDescriptionFlagBits);
DAS_BASE_BIND_ENUM(VkSubpassDescriptionFlagBits, VkSubpassDescriptionFlagBits
,   VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX
,   VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX
,   VK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM
,   VK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM
,   VK_SUBPASS_DESCRIPTION_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkCommandPoolCreateFlagBits);
DAS_BASE_BIND_ENUM(VkCommandPoolCreateFlagBits, VkCommandPoolCreateFlagBits
,   VK_COMMAND_POOL_CREATE_TRANSIENT_BIT
,   VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT
,   VK_COMMAND_POOL_CREATE_PROTECTED_BIT
,   VK_COMMAND_POOL_CREATE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkCommandPoolResetFlagBits);
DAS_BASE_BIND_ENUM(VkCommandPoolResetFlagBits, VkCommandPoolResetFlagBits
,   VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT
,   VK_COMMAND_POOL_RESET_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkCommandBufferUsageFlagBits);
DAS_BASE_BIND_ENUM(VkCommandBufferUsageFlagBits, VkCommandBufferUsageFlagBits
,   VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT
,   VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT
,   VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT
,   VK_COMMAND_BUFFER_USAGE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkQueryControlFlagBits);
DAS_BASE_BIND_ENUM(VkQueryControlFlagBits, VkQueryControlFlagBits
,   VK_QUERY_CONTROL_PRECISE_BIT
,   VK_QUERY_CONTROL_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkCommandBufferResetFlagBits);
DAS_BASE_BIND_ENUM(VkCommandBufferResetFlagBits, VkCommandBufferResetFlagBits
,   VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT
,   VK_COMMAND_BUFFER_RESET_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkStencilFaceFlagBits);
DAS_BASE_BIND_ENUM(VkStencilFaceFlagBits, VkStencilFaceFlagBits
,   VK_STENCIL_FACE_FRONT_BIT
,   VK_STENCIL_FACE_BACK_BIT
,   VK_STENCIL_FACE_FRONT_AND_BACK
,   VK_STENCIL_FRONT_AND_BACK
,   VK_STENCIL_FACE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkPointClippingBehavior);
DAS_BASE_BIND_ENUM(VkPointClippingBehavior, VkPointClippingBehavior
,   VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES
,   VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY
,   VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR
,   VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR
,   VK_POINT_CLIPPING_BEHAVIOR_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkTessellationDomainOrigin);
DAS_BASE_BIND_ENUM(VkTessellationDomainOrigin, VkTessellationDomainOrigin
,   VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT
,   VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT
,   VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT_KHR
,   VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT_KHR
,   VK_TESSELLATION_DOMAIN_ORIGIN_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkSamplerYcbcrModelConversion);
DAS_BASE_BIND_ENUM(VkSamplerYcbcrModelConversion, VkSamplerYcbcrModelConversion
,   VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY
,   VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY
,   VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709
,   VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601
,   VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020
,   VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY_KHR
,   VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY_KHR
,   VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709_KHR
,   VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601_KHR
,   VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020_KHR
,   VK_SAMPLER_YCBCR_MODEL_CONVERSION_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkSamplerYcbcrRange);
DAS_BASE_BIND_ENUM(VkSamplerYcbcrRange, VkSamplerYcbcrRange
,   VK_SAMPLER_YCBCR_RANGE_ITU_FULL
,   VK_SAMPLER_YCBCR_RANGE_ITU_NARROW
,   VK_SAMPLER_YCBCR_RANGE_ITU_FULL_KHR
,   VK_SAMPLER_YCBCR_RANGE_ITU_NARROW_KHR
,   VK_SAMPLER_YCBCR_RANGE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkChromaLocation);
DAS_BASE_BIND_ENUM(VkChromaLocation, VkChromaLocation
,   VK_CHROMA_LOCATION_COSITED_EVEN
,   VK_CHROMA_LOCATION_MIDPOINT
,   VK_CHROMA_LOCATION_COSITED_EVEN_KHR
,   VK_CHROMA_LOCATION_MIDPOINT_KHR
,   VK_CHROMA_LOCATION_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkDescriptorUpdateTemplateType);
DAS_BASE_BIND_ENUM(VkDescriptorUpdateTemplateType, VkDescriptorUpdateTemplateType
,   VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET
,   VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR
,   VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR
,   VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkSubgroupFeatureFlagBits);
DAS_BASE_BIND_ENUM(VkSubgroupFeatureFlagBits, VkSubgroupFeatureFlagBits
,   VK_SUBGROUP_FEATURE_BASIC_BIT
,   VK_SUBGROUP_FEATURE_VOTE_BIT
,   VK_SUBGROUP_FEATURE_ARITHMETIC_BIT
,   VK_SUBGROUP_FEATURE_BALLOT_BIT
,   VK_SUBGROUP_FEATURE_SHUFFLE_BIT
,   VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT
,   VK_SUBGROUP_FEATURE_CLUSTERED_BIT
,   VK_SUBGROUP_FEATURE_QUAD_BIT
,   VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV
,   VK_SUBGROUP_FEATURE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkPeerMemoryFeatureFlagBits);
DAS_BASE_BIND_ENUM(VkPeerMemoryFeatureFlagBits, VkPeerMemoryFeatureFlagBits
,   VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT
,   VK_PEER_MEMORY_FEATURE_COPY_DST_BIT
,   VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT
,   VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT
,   VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR
,   VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR
,   VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR
,   VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR
,   VK_PEER_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkMemoryAllocateFlagBits);
DAS_BASE_BIND_ENUM(VkMemoryAllocateFlagBits, VkMemoryAllocateFlagBits
,   VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT
,   VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT
,   VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT
,   VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR
,   VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT_KHR
,   VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR
,   VK_MEMORY_ALLOCATE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkExternalMemoryHandleTypeFlagBits);
DAS_BASE_BIND_ENUM(VkExternalMemoryHandleTypeFlagBits, VkExternalMemoryHandleTypeFlagBits
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkExternalMemoryFeatureFlagBits);
DAS_BASE_BIND_ENUM(VkExternalMemoryFeatureFlagBits, VkExternalMemoryFeatureFlagBits
,   VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT
,   VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT
,   VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT
,   VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR
,   VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR
,   VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR
,   VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkExternalFenceHandleTypeFlagBits);
DAS_BASE_BIND_ENUM(VkExternalFenceHandleTypeFlagBits, VkExternalFenceHandleTypeFlagBits
,   VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT
,   VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT
,   VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT
,   VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT
,   VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR
,   VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR
,   VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR
,   VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR
,   VK_EXTERNAL_FENCE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkExternalFenceFeatureFlagBits);
DAS_BASE_BIND_ENUM(VkExternalFenceFeatureFlagBits, VkExternalFenceFeatureFlagBits
,   VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT
,   VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT
,   VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR
,   VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR
,   VK_EXTERNAL_FENCE_FEATURE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkFenceImportFlagBits);
DAS_BASE_BIND_ENUM(VkFenceImportFlagBits, VkFenceImportFlagBits
,   VK_FENCE_IMPORT_TEMPORARY_BIT
,   VK_FENCE_IMPORT_TEMPORARY_BIT_KHR
,   VK_FENCE_IMPORT_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkSemaphoreImportFlagBits);
DAS_BASE_BIND_ENUM(VkSemaphoreImportFlagBits, VkSemaphoreImportFlagBits
,   VK_SEMAPHORE_IMPORT_TEMPORARY_BIT
,   VK_SEMAPHORE_IMPORT_TEMPORARY_BIT_KHR
,   VK_SEMAPHORE_IMPORT_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkExternalSemaphoreHandleTypeFlagBits);
DAS_BASE_BIND_ENUM(VkExternalSemaphoreHandleTypeFlagBits, VkExternalSemaphoreHandleTypeFlagBits
,   VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT
,   VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT
,   VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT
,   VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT
,   VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT
,   VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT
,   VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR
,   VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR
,   VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR
,   VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR
,   VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR
,   VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkExternalSemaphoreFeatureFlagBits);
DAS_BASE_BIND_ENUM(VkExternalSemaphoreFeatureFlagBits, VkExternalSemaphoreFeatureFlagBits
,   VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT
,   VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT
,   VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR
,   VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR
,   VK_EXTERNAL_SEMAPHORE_FEATURE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkDriverId);
DAS_BASE_BIND_ENUM(VkDriverId, VkDriverId
,   VK_DRIVER_ID_AMD_PROPRIETARY
,   VK_DRIVER_ID_AMD_OPEN_SOURCE
,   VK_DRIVER_ID_MESA_RADV
,   VK_DRIVER_ID_NVIDIA_PROPRIETARY
,   VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS
,   VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA
,   VK_DRIVER_ID_IMAGINATION_PROPRIETARY
,   VK_DRIVER_ID_QUALCOMM_PROPRIETARY
,   VK_DRIVER_ID_ARM_PROPRIETARY
,   VK_DRIVER_ID_GOOGLE_SWIFTSHADER
,   VK_DRIVER_ID_GGP_PROPRIETARY
,   VK_DRIVER_ID_BROADCOM_PROPRIETARY
,   VK_DRIVER_ID_MESA_LLVMPIPE
,   VK_DRIVER_ID_MOLTENVK
,   VK_DRIVER_ID_AMD_PROPRIETARY_KHR
,   VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR
,   VK_DRIVER_ID_MESA_RADV_KHR
,   VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR
,   VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR
,   VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR
,   VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR
,   VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR
,   VK_DRIVER_ID_ARM_PROPRIETARY_KHR
,   VK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR
,   VK_DRIVER_ID_GGP_PROPRIETARY_KHR
,   VK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR
,   VK_DRIVER_ID_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkShaderFloatControlsIndependence);
DAS_BASE_BIND_ENUM(VkShaderFloatControlsIndependence, VkShaderFloatControlsIndependence
,   VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY
,   VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL
,   VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE
,   VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR
,   VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR
,   VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR
,   VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkSamplerReductionMode);
DAS_BASE_BIND_ENUM(VkSamplerReductionMode, VkSamplerReductionMode
,   VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE
,   VK_SAMPLER_REDUCTION_MODE_MIN
,   VK_SAMPLER_REDUCTION_MODE_MAX
,   VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT
,   VK_SAMPLER_REDUCTION_MODE_MIN_EXT
,   VK_SAMPLER_REDUCTION_MODE_MAX_EXT
,   VK_SAMPLER_REDUCTION_MODE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkSemaphoreType);
DAS_BASE_BIND_ENUM(VkSemaphoreType, VkSemaphoreType
,   VK_SEMAPHORE_TYPE_BINARY
,   VK_SEMAPHORE_TYPE_TIMELINE
,   VK_SEMAPHORE_TYPE_BINARY_KHR
,   VK_SEMAPHORE_TYPE_TIMELINE_KHR
,   VK_SEMAPHORE_TYPE_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkResolveModeFlagBits);
DAS_BASE_BIND_ENUM(VkResolveModeFlagBits, VkResolveModeFlagBits
,   VK_RESOLVE_MODE_NONE
,   VK_RESOLVE_MODE_SAMPLE_ZERO_BIT
,   VK_RESOLVE_MODE_AVERAGE_BIT
,   VK_RESOLVE_MODE_MIN_BIT
,   VK_RESOLVE_MODE_MAX_BIT
,   VK_RESOLVE_MODE_NONE_KHR
,   VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR
,   VK_RESOLVE_MODE_AVERAGE_BIT_KHR
,   VK_RESOLVE_MODE_MIN_BIT_KHR
,   VK_RESOLVE_MODE_MAX_BIT_KHR
,   VK_RESOLVE_MODE_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkDescriptorBindingFlagBits);
DAS_BASE_BIND_ENUM(VkDescriptorBindingFlagBits, VkDescriptorBindingFlagBits
,   VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT
,   VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT
,   VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT
,   VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT
,   VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT
,   VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT
,   VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT
,   VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT
,   VK_DESCRIPTOR_BINDING_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkSemaphoreWaitFlagBits);
DAS_BASE_BIND_ENUM(VkSemaphoreWaitFlagBits, VkSemaphoreWaitFlagBits
,   VK_SEMAPHORE_WAIT_ANY_BIT
,   VK_SEMAPHORE_WAIT_ANY_BIT_KHR
,   VK_SEMAPHORE_WAIT_FLAG_BITS_MAX_ENUM
)
DAS_BIND_ENUM_CAST(VkPresentModeKHR);
DAS_BASE_BIND_ENUM(VkPresentModeKHR, VkPresentModeKHR
,   VK_PRESENT_MODE_IMMEDIATE_KHR
,   VK_PRESENT_MODE_MAILBOX_KHR
,   VK_PRESENT_MODE_FIFO_KHR
,   VK_PRESENT_MODE_FIFO_RELAXED_KHR
,   VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR
,   VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR
,   VK_PRESENT_MODE_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkColorSpaceKHR);
DAS_BASE_BIND_ENUM(VkColorSpaceKHR, VkColorSpaceKHR
,   VK_COLOR_SPACE_SRGB_NONLINEAR_KHR
,   VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT
,   VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT
,   VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT
,   VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT
,   VK_COLOR_SPACE_BT709_LINEAR_EXT
,   VK_COLOR_SPACE_BT709_NONLINEAR_EXT
,   VK_COLOR_SPACE_BT2020_LINEAR_EXT
,   VK_COLOR_SPACE_HDR10_ST2084_EXT
,   VK_COLOR_SPACE_DOLBYVISION_EXT
,   VK_COLOR_SPACE_HDR10_HLG_EXT
,   VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT
,   VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT
,   VK_COLOR_SPACE_PASS_THROUGH_EXT
,   VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT
,   VK_COLOR_SPACE_DISPLAY_NATIVE_AMD
,   VK_COLORSPACE_SRGB_NONLINEAR_KHR
,   VK_COLOR_SPACE_DCI_P3_LINEAR_EXT
,   VK_COLOR_SPACE_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkSurfaceTransformFlagBitsKHR);
DAS_BASE_BIND_ENUM(VkSurfaceTransformFlagBitsKHR, VkSurfaceTransformFlagBitsKHR
,   VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR
,   VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR
,   VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR
,   VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR
,   VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR
,   VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR
,   VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR
,   VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR
,   VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR
,   VK_SURFACE_TRANSFORM_FLAG_BITS_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkCompositeAlphaFlagBitsKHR);
DAS_BASE_BIND_ENUM(VkCompositeAlphaFlagBitsKHR, VkCompositeAlphaFlagBitsKHR
,   VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR
,   VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR
,   VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR
,   VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR
,   VK_COMPOSITE_ALPHA_FLAG_BITS_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkSwapchainCreateFlagBitsKHR);
DAS_BASE_BIND_ENUM(VkSwapchainCreateFlagBitsKHR, VkSwapchainCreateFlagBitsKHR
,   VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR
,   VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR
,   VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR
,   VK_SWAPCHAIN_CREATE_FLAG_BITS_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkDeviceGroupPresentModeFlagBitsKHR);
DAS_BASE_BIND_ENUM(VkDeviceGroupPresentModeFlagBitsKHR, VkDeviceGroupPresentModeFlagBitsKHR
,   VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR
,   VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR
,   VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR
,   VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR
,   VK_DEVICE_GROUP_PRESENT_MODE_FLAG_BITS_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkDisplayPlaneAlphaFlagBitsKHR);
DAS_BASE_BIND_ENUM(VkDisplayPlaneAlphaFlagBitsKHR, VkDisplayPlaneAlphaFlagBitsKHR
,   VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR
,   VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR
,   VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR
,   VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR
,   VK_DISPLAY_PLANE_ALPHA_FLAG_BITS_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkPerformanceCounterUnitKHR);
DAS_BASE_BIND_ENUM(VkPerformanceCounterUnitKHR, VkPerformanceCounterUnitKHR
,   VK_PERFORMANCE_COUNTER_UNIT_GENERIC_KHR
,   VK_PERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHR
,   VK_PERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHR
,   VK_PERFORMANCE_COUNTER_UNIT_BYTES_KHR
,   VK_PERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHR
,   VK_PERFORMANCE_COUNTER_UNIT_KELVIN_KHR
,   VK_PERFORMANCE_COUNTER_UNIT_WATTS_KHR
,   VK_PERFORMANCE_COUNTER_UNIT_VOLTS_KHR
,   VK_PERFORMANCE_COUNTER_UNIT_AMPS_KHR
,   VK_PERFORMANCE_COUNTER_UNIT_HERTZ_KHR
,   VK_PERFORMANCE_COUNTER_UNIT_CYCLES_KHR
,   VK_PERFORMANCE_COUNTER_UNIT_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkPerformanceCounterScopeKHR);
DAS_BASE_BIND_ENUM(VkPerformanceCounterScopeKHR, VkPerformanceCounterScopeKHR
,   VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR
,   VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR
,   VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR
,   VK_QUERY_SCOPE_COMMAND_BUFFER_KHR
,   VK_QUERY_SCOPE_RENDER_PASS_KHR
,   VK_QUERY_SCOPE_COMMAND_KHR
,   VK_PERFORMANCE_COUNTER_SCOPE_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkPerformanceCounterStorageKHR);
DAS_BASE_BIND_ENUM(VkPerformanceCounterStorageKHR, VkPerformanceCounterStorageKHR
,   VK_PERFORMANCE_COUNTER_STORAGE_INT32_KHR
,   VK_PERFORMANCE_COUNTER_STORAGE_INT64_KHR
,   VK_PERFORMANCE_COUNTER_STORAGE_UINT32_KHR
,   VK_PERFORMANCE_COUNTER_STORAGE_UINT64_KHR
,   VK_PERFORMANCE_COUNTER_STORAGE_FLOAT32_KHR
,   VK_PERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR
,   VK_PERFORMANCE_COUNTER_STORAGE_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkPerformanceCounterDescriptionFlagBitsKHR);
DAS_BASE_BIND_ENUM(VkPerformanceCounterDescriptionFlagBitsKHR, VkPerformanceCounterDescriptionFlagBitsKHR
,   VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_KHR
,   VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_KHR
,   VK_PERFORMANCE_COUNTER_DESCRIPTION_FLAG_BITS_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkAcquireProfilingLockFlagBitsKHR);
DAS_BASE_BIND_ENUM(VkAcquireProfilingLockFlagBitsKHR, VkAcquireProfilingLockFlagBitsKHR
,   VK_ACQUIRE_PROFILING_LOCK_FLAG_BITS_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkPipelineExecutableStatisticFormatKHR);
DAS_BASE_BIND_ENUM(VkPipelineExecutableStatisticFormatKHR, VkPipelineExecutableStatisticFormatKHR
,   VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR
,   VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR
,   VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR
,   VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR
,   VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkDebugReportObjectTypeEXT);
DAS_BASE_BIND_ENUM(VkDebugReportObjectTypeEXT, VkDebugReportObjectTypeEXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT
,   VK_DEBUG_REPORT_OBJECT_TYPE_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkDebugReportFlagBitsEXT);
DAS_BASE_BIND_ENUM(VkDebugReportFlagBitsEXT, VkDebugReportFlagBitsEXT
,   VK_DEBUG_REPORT_INFORMATION_BIT_EXT
,   VK_DEBUG_REPORT_WARNING_BIT_EXT
,   VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT
,   VK_DEBUG_REPORT_ERROR_BIT_EXT
,   VK_DEBUG_REPORT_DEBUG_BIT_EXT
,   VK_DEBUG_REPORT_FLAG_BITS_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkRasterizationOrderAMD);
DAS_BASE_BIND_ENUM(VkRasterizationOrderAMD, VkRasterizationOrderAMD
,   VK_RASTERIZATION_ORDER_STRICT_AMD
,   VK_RASTERIZATION_ORDER_RELAXED_AMD
,   VK_RASTERIZATION_ORDER_MAX_ENUM_AMD
)
DAS_BIND_ENUM_CAST(VkShaderInfoTypeAMD);
DAS_BASE_BIND_ENUM(VkShaderInfoTypeAMD, VkShaderInfoTypeAMD
,   VK_SHADER_INFO_TYPE_STATISTICS_AMD
,   VK_SHADER_INFO_TYPE_BINARY_AMD
,   VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD
,   VK_SHADER_INFO_TYPE_MAX_ENUM_AMD
)
DAS_BIND_ENUM_CAST(VkExternalMemoryHandleTypeFlagBitsNV);
DAS_BASE_BIND_ENUM(VkExternalMemoryHandleTypeFlagBitsNV, VkExternalMemoryHandleTypeFlagBitsNV
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV
,   VK_EXTERNAL_MEMORY_HANDLE_TYPE_FLAG_BITS_MAX_ENUM_NV
)
DAS_BIND_ENUM_CAST(VkExternalMemoryFeatureFlagBitsNV);
DAS_BASE_BIND_ENUM(VkExternalMemoryFeatureFlagBitsNV, VkExternalMemoryFeatureFlagBitsNV
,   VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV
,   VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV
,   VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV
,   VK_EXTERNAL_MEMORY_FEATURE_FLAG_BITS_MAX_ENUM_NV
)
DAS_BIND_ENUM_CAST(VkValidationCheckEXT);
DAS_BASE_BIND_ENUM(VkValidationCheckEXT, VkValidationCheckEXT
,   VK_VALIDATION_CHECK_ALL_EXT
,   VK_VALIDATION_CHECK_SHADERS_EXT
,   VK_VALIDATION_CHECK_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkConditionalRenderingFlagBitsEXT);
DAS_BASE_BIND_ENUM(VkConditionalRenderingFlagBitsEXT, VkConditionalRenderingFlagBitsEXT
,   VK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT
,   VK_CONDITIONAL_RENDERING_FLAG_BITS_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkSurfaceCounterFlagBitsEXT);
DAS_BASE_BIND_ENUM(VkSurfaceCounterFlagBitsEXT, VkSurfaceCounterFlagBitsEXT
,   VK_SURFACE_COUNTER_VBLANK_EXT
,   VK_SURFACE_COUNTER_FLAG_BITS_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkDisplayPowerStateEXT);
DAS_BASE_BIND_ENUM(VkDisplayPowerStateEXT, VkDisplayPowerStateEXT
,   VK_DISPLAY_POWER_STATE_OFF_EXT
,   VK_DISPLAY_POWER_STATE_SUSPEND_EXT
,   VK_DISPLAY_POWER_STATE_ON_EXT
,   VK_DISPLAY_POWER_STATE_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkDeviceEventTypeEXT);
DAS_BASE_BIND_ENUM(VkDeviceEventTypeEXT, VkDeviceEventTypeEXT
,   VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT
,   VK_DEVICE_EVENT_TYPE_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkDisplayEventTypeEXT);
DAS_BASE_BIND_ENUM(VkDisplayEventTypeEXT, VkDisplayEventTypeEXT
,   VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT
,   VK_DISPLAY_EVENT_TYPE_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkViewportCoordinateSwizzleNV);
DAS_BASE_BIND_ENUM(VkViewportCoordinateSwizzleNV, VkViewportCoordinateSwizzleNV
,   VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV
,   VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV
,   VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV
,   VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV
,   VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV
,   VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV
,   VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV
,   VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV
,   VK_VIEWPORT_COORDINATE_SWIZZLE_MAX_ENUM_NV
)
DAS_BIND_ENUM_CAST(VkDiscardRectangleModeEXT);
DAS_BASE_BIND_ENUM(VkDiscardRectangleModeEXT, VkDiscardRectangleModeEXT
,   VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT
,   VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT
,   VK_DISCARD_RECTANGLE_MODE_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkConservativeRasterizationModeEXT);
DAS_BASE_BIND_ENUM(VkConservativeRasterizationModeEXT, VkConservativeRasterizationModeEXT
,   VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT
,   VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT
,   VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT
,   VK_CONSERVATIVE_RASTERIZATION_MODE_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkDebugUtilsMessageSeverityFlagBitsEXT);
DAS_BASE_BIND_ENUM(VkDebugUtilsMessageSeverityFlagBitsEXT, VkDebugUtilsMessageSeverityFlagBitsEXT
,   VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT
,   VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT
,   VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT
,   VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT
,   VK_DEBUG_UTILS_MESSAGE_SEVERITY_FLAG_BITS_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkDebugUtilsMessageTypeFlagBitsEXT);
DAS_BASE_BIND_ENUM(VkDebugUtilsMessageTypeFlagBitsEXT, VkDebugUtilsMessageTypeFlagBitsEXT
,   VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT
,   VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT
,   VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT
,   VK_DEBUG_UTILS_MESSAGE_TYPE_FLAG_BITS_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkBlendOverlapEXT);
DAS_BASE_BIND_ENUM(VkBlendOverlapEXT, VkBlendOverlapEXT
,   VK_BLEND_OVERLAP_UNCORRELATED_EXT
,   VK_BLEND_OVERLAP_DISJOINT_EXT
,   VK_BLEND_OVERLAP_CONJOINT_EXT
,   VK_BLEND_OVERLAP_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkCoverageModulationModeNV);
DAS_BASE_BIND_ENUM(VkCoverageModulationModeNV, VkCoverageModulationModeNV
,   VK_COVERAGE_MODULATION_MODE_NONE_NV
,   VK_COVERAGE_MODULATION_MODE_RGB_NV
,   VK_COVERAGE_MODULATION_MODE_ALPHA_NV
,   VK_COVERAGE_MODULATION_MODE_RGBA_NV
,   VK_COVERAGE_MODULATION_MODE_MAX_ENUM_NV
)
DAS_BIND_ENUM_CAST(VkValidationCacheHeaderVersionEXT);
DAS_BASE_BIND_ENUM(VkValidationCacheHeaderVersionEXT, VkValidationCacheHeaderVersionEXT
,   VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT
,   VK_VALIDATION_CACHE_HEADER_VERSION_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkShadingRatePaletteEntryNV);
DAS_BASE_BIND_ENUM(VkShadingRatePaletteEntryNV, VkShadingRatePaletteEntryNV
,   VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV
,   VK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV
,   VK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV
,   VK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV
,   VK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV
,   VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV
,   VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV
,   VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV
,   VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV
,   VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV
,   VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV
,   VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV
,   VK_SHADING_RATE_PALETTE_ENTRY_MAX_ENUM_NV
)
DAS_BIND_ENUM_CAST(VkCoarseSampleOrderTypeNV);
DAS_BASE_BIND_ENUM(VkCoarseSampleOrderTypeNV, VkCoarseSampleOrderTypeNV
,   VK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV
,   VK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV
,   VK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV
,   VK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV
,   VK_COARSE_SAMPLE_ORDER_TYPE_MAX_ENUM_NV
)
DAS_BIND_ENUM_CAST(VkRayTracingShaderGroupTypeKHR);
DAS_BASE_BIND_ENUM(VkRayTracingShaderGroupTypeKHR, VkRayTracingShaderGroupTypeKHR
,   VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR
,   VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR
,   VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR
,   VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV
,   VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV
,   VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV
,   VK_RAY_TRACING_SHADER_GROUP_TYPE_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkGeometryTypeKHR);
DAS_BASE_BIND_ENUM(VkGeometryTypeKHR, VkGeometryTypeKHR
,   VK_GEOMETRY_TYPE_TRIANGLES_KHR
,   VK_GEOMETRY_TYPE_AABBS_KHR
,   VK_GEOMETRY_TYPE_INSTANCES_KHR
,   VK_GEOMETRY_TYPE_TRIANGLES_NV
,   VK_GEOMETRY_TYPE_AABBS_NV
,   VK_GEOMETRY_TYPE_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkAccelerationStructureTypeKHR);
DAS_BASE_BIND_ENUM(VkAccelerationStructureTypeKHR, VkAccelerationStructureTypeKHR
,   VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_KHR
,   VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_KHR
,   VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV
,   VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV
,   VK_ACCELERATION_STRUCTURE_TYPE_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkCopyAccelerationStructureModeKHR);
DAS_BASE_BIND_ENUM(VkCopyAccelerationStructureModeKHR, VkCopyAccelerationStructureModeKHR
,   VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR
,   VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR
,   VK_COPY_ACCELERATION_STRUCTURE_MODE_SERIALIZE_KHR
,   VK_COPY_ACCELERATION_STRUCTURE_MODE_DESERIALIZE_KHR
,   VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV
,   VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV
,   VK_COPY_ACCELERATION_STRUCTURE_MODE_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkAccelerationStructureMemoryRequirementsTypeKHR);
DAS_BASE_BIND_ENUM(VkAccelerationStructureMemoryRequirementsTypeKHR, VkAccelerationStructureMemoryRequirementsTypeKHR
,   VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_KHR
,   VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_KHR
,   VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_KHR
,   VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV
,   VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV
,   VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV
,   VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkGeometryFlagBitsKHR);
DAS_BASE_BIND_ENUM(VkGeometryFlagBitsKHR, VkGeometryFlagBitsKHR
,   VK_GEOMETRY_OPAQUE_BIT_KHR
,   VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR
,   VK_GEOMETRY_OPAQUE_BIT_NV
,   VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV
,   VK_GEOMETRY_FLAG_BITS_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkGeometryInstanceFlagBitsKHR);
DAS_BASE_BIND_ENUM(VkGeometryInstanceFlagBitsKHR, VkGeometryInstanceFlagBitsKHR
,   VK_GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR
,   VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR
,   VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR
,   VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR
,   VK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV
,   VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV
,   VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV
,   VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV
,   VK_GEOMETRY_INSTANCE_FLAG_BITS_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkBuildAccelerationStructureFlagBitsKHR);
DAS_BASE_BIND_ENUM(VkBuildAccelerationStructureFlagBitsKHR, VkBuildAccelerationStructureFlagBitsKHR
,   VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_KHR
,   VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_KHR
,   VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_KHR
,   VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_KHR
,   VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_KHR
,   VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV
,   VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV
,   VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV
,   VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV
,   VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV
,   VK_BUILD_ACCELERATION_STRUCTURE_FLAG_BITS_MAX_ENUM_KHR
)
DAS_BIND_ENUM_CAST(VkQueueGlobalPriorityEXT);
DAS_BASE_BIND_ENUM(VkQueueGlobalPriorityEXT, VkQueueGlobalPriorityEXT
,   VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT
,   VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT
,   VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT
,   VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT
,   VK_QUEUE_GLOBAL_PRIORITY_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkPipelineCompilerControlFlagBitsAMD);
DAS_BASE_BIND_ENUM(VkPipelineCompilerControlFlagBitsAMD, VkPipelineCompilerControlFlagBitsAMD
,   VK_PIPELINE_COMPILER_CONTROL_FLAG_BITS_MAX_ENUM_AMD
)
DAS_BIND_ENUM_CAST(VkTimeDomainEXT);
DAS_BASE_BIND_ENUM(VkTimeDomainEXT, VkTimeDomainEXT
,   VK_TIME_DOMAIN_DEVICE_EXT
,   VK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT
,   VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT
,   VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT
,   VK_TIME_DOMAIN_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkMemoryOverallocationBehaviorAMD);
DAS_BASE_BIND_ENUM(VkMemoryOverallocationBehaviorAMD, VkMemoryOverallocationBehaviorAMD
,   VK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD
,   VK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD
,   VK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD
,   VK_MEMORY_OVERALLOCATION_BEHAVIOR_MAX_ENUM_AMD
)
DAS_BIND_ENUM_CAST(VkPipelineCreationFeedbackFlagBitsEXT);
DAS_BASE_BIND_ENUM(VkPipelineCreationFeedbackFlagBitsEXT, VkPipelineCreationFeedbackFlagBitsEXT
,   VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT
,   VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT
,   VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT
,   VK_PIPELINE_CREATION_FEEDBACK_FLAG_BITS_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkPerformanceConfigurationTypeINTEL);
DAS_BASE_BIND_ENUM(VkPerformanceConfigurationTypeINTEL, VkPerformanceConfigurationTypeINTEL
,   VK_PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL
,   VK_PERFORMANCE_CONFIGURATION_TYPE_MAX_ENUM_INTEL
)
DAS_BIND_ENUM_CAST(VkQueryPoolSamplingModeINTEL);
DAS_BASE_BIND_ENUM(VkQueryPoolSamplingModeINTEL, VkQueryPoolSamplingModeINTEL
,   VK_QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL
,   VK_QUERY_POOL_SAMPLING_MODE_MAX_ENUM_INTEL
)
DAS_BIND_ENUM_CAST(VkPerformanceOverrideTypeINTEL);
DAS_BASE_BIND_ENUM(VkPerformanceOverrideTypeINTEL, VkPerformanceOverrideTypeINTEL
,   VK_PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL
,   VK_PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL
,   VK_PERFORMANCE_OVERRIDE_TYPE_MAX_ENUM_INTEL
)
DAS_BIND_ENUM_CAST(VkPerformanceParameterTypeINTEL);
DAS_BASE_BIND_ENUM(VkPerformanceParameterTypeINTEL, VkPerformanceParameterTypeINTEL
,   VK_PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL
,   VK_PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL
,   VK_PERFORMANCE_PARAMETER_TYPE_MAX_ENUM_INTEL
)
DAS_BIND_ENUM_CAST(VkPerformanceValueTypeINTEL);
DAS_BASE_BIND_ENUM(VkPerformanceValueTypeINTEL, VkPerformanceValueTypeINTEL
,   VK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL
,   VK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL
,   VK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL
,   VK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL
,   VK_PERFORMANCE_VALUE_TYPE_STRING_INTEL
,   VK_PERFORMANCE_VALUE_TYPE_MAX_ENUM_INTEL
)
DAS_BIND_ENUM_CAST(VkShaderCorePropertiesFlagBitsAMD);
DAS_BASE_BIND_ENUM(VkShaderCorePropertiesFlagBitsAMD, VkShaderCorePropertiesFlagBitsAMD
,   VK_SHADER_CORE_PROPERTIES_FLAG_BITS_MAX_ENUM_AMD
)
DAS_BIND_ENUM_CAST(VkToolPurposeFlagBitsEXT);
DAS_BASE_BIND_ENUM(VkToolPurposeFlagBitsEXT, VkToolPurposeFlagBitsEXT
,   VK_TOOL_PURPOSE_VALIDATION_BIT_EXT
,   VK_TOOL_PURPOSE_PROFILING_BIT_EXT
,   VK_TOOL_PURPOSE_TRACING_BIT_EXT
,   VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT
,   VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT
,   VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT
,   VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT
,   VK_TOOL_PURPOSE_FLAG_BITS_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkValidationFeatureEnableEXT);
DAS_BASE_BIND_ENUM(VkValidationFeatureEnableEXT, VkValidationFeatureEnableEXT
,   VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT
,   VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT
,   VK_VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT
,   VK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT
,   VK_VALIDATION_FEATURE_ENABLE_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkValidationFeatureDisableEXT);
DAS_BASE_BIND_ENUM(VkValidationFeatureDisableEXT, VkValidationFeatureDisableEXT
,   VK_VALIDATION_FEATURE_DISABLE_ALL_EXT
,   VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT
,   VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT
,   VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT
,   VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT
,   VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT
,   VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT
,   VK_VALIDATION_FEATURE_DISABLE_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkComponentTypeNV);
DAS_BASE_BIND_ENUM(VkComponentTypeNV, VkComponentTypeNV
,   VK_COMPONENT_TYPE_FLOAT16_NV
,   VK_COMPONENT_TYPE_FLOAT32_NV
,   VK_COMPONENT_TYPE_FLOAT64_NV
,   VK_COMPONENT_TYPE_SINT8_NV
,   VK_COMPONENT_TYPE_SINT16_NV
,   VK_COMPONENT_TYPE_SINT32_NV
,   VK_COMPONENT_TYPE_SINT64_NV
,   VK_COMPONENT_TYPE_UINT8_NV
,   VK_COMPONENT_TYPE_UINT16_NV
,   VK_COMPONENT_TYPE_UINT32_NV
,   VK_COMPONENT_TYPE_UINT64_NV
,   VK_COMPONENT_TYPE_MAX_ENUM_NV
)
DAS_BIND_ENUM_CAST(VkScopeNV);
DAS_BASE_BIND_ENUM(VkScopeNV, VkScopeNV
,   VK_SCOPE_DEVICE_NV
,   VK_SCOPE_WORKGROUP_NV
,   VK_SCOPE_SUBGROUP_NV
,   VK_SCOPE_QUEUE_FAMILY_NV
,   VK_SCOPE_MAX_ENUM_NV
)
DAS_BIND_ENUM_CAST(VkCoverageReductionModeNV);
DAS_BASE_BIND_ENUM(VkCoverageReductionModeNV, VkCoverageReductionModeNV
,   VK_COVERAGE_REDUCTION_MODE_MERGE_NV
,   VK_COVERAGE_REDUCTION_MODE_TRUNCATE_NV
,   VK_COVERAGE_REDUCTION_MODE_MAX_ENUM_NV
)
DAS_BIND_ENUM_CAST(VkLineRasterizationModeEXT);
DAS_BASE_BIND_ENUM(VkLineRasterizationModeEXT, VkLineRasterizationModeEXT
,   VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT
,   VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT
,   VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT
,   VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT
,   VK_LINE_RASTERIZATION_MODE_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkIndirectCommandsTokenTypeNV);
DAS_BASE_BIND_ENUM(VkIndirectCommandsTokenTypeNV, VkIndirectCommandsTokenTypeNV
,   VK_INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NV
,   VK_INDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NV
,   VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NV
,   VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NV
,   VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NV
,   VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NV
,   VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NV
,   VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV
,   VK_INDIRECT_COMMANDS_TOKEN_TYPE_MAX_ENUM_NV
)
DAS_BIND_ENUM_CAST(VkIndirectStateFlagBitsNV);
DAS_BASE_BIND_ENUM(VkIndirectStateFlagBitsNV, VkIndirectStateFlagBitsNV
,   VK_INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV
,   VK_INDIRECT_STATE_FLAG_BITS_MAX_ENUM_NV
)
DAS_BIND_ENUM_CAST(VkIndirectCommandsLayoutUsageFlagBitsNV);
DAS_BASE_BIND_ENUM(VkIndirectCommandsLayoutUsageFlagBitsNV, VkIndirectCommandsLayoutUsageFlagBitsNV
,   VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NV
,   VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV
,   VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV
,   VK_INDIRECT_COMMANDS_LAYOUT_USAGE_FLAG_BITS_MAX_ENUM_NV
)
DAS_BIND_ENUM_CAST(VkPrivateDataSlotCreateFlagBitsEXT);
DAS_BASE_BIND_ENUM(VkPrivateDataSlotCreateFlagBitsEXT, VkPrivateDataSlotCreateFlagBitsEXT
,   VK_PRIVATE_DATA_SLOT_CREATE_FLAG_BITS_MAX_ENUM_EXT
)
DAS_BIND_ENUM_CAST(VkDeviceDiagnosticsConfigFlagBitsNV);
DAS_BASE_BIND_ENUM(VkDeviceDiagnosticsConfigFlagBitsNV, VkDeviceDiagnosticsConfigFlagBitsNV
,   VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_DEBUG_INFO_BIT_NV
,   VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_RESOURCE_TRACKING_BIT_NV
,   VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV
,   VK_DEVICE_DIAGNOSTICS_CONFIG_FLAG_BITS_MAX_ENUM_NV
)

//
// structs
//

MAKE_TYPE_FACTORY(VkExtent2D, VkExtent2D);
struct VkExtent2DAnnotation
: public ManagedStructureAnnotation<VkExtent2D,true,true> {
    VkExtent2DAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkExtent2D", ml) {
        addField<DAS_BIND_MANAGED_FIELD(width)>("width");
        addField<DAS_BIND_MANAGED_FIELD(height)>("height");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkExtent3D, VkExtent3D);
struct VkExtent3DAnnotation
: public ManagedStructureAnnotation<VkExtent3D,true,true> {
    VkExtent3DAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkExtent3D", ml) {
        addField<DAS_BIND_MANAGED_FIELD(width)>("width");
        addField<DAS_BIND_MANAGED_FIELD(height)>("height");
        addField<DAS_BIND_MANAGED_FIELD(depth)>("depth");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkOffset2D, VkOffset2D);
struct VkOffset2DAnnotation
: public ManagedStructureAnnotation<VkOffset2D,true,true> {
    VkOffset2DAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkOffset2D", ml) {
        addField<DAS_BIND_MANAGED_FIELD(x)>("x");
        addField<DAS_BIND_MANAGED_FIELD(y)>("y");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkOffset3D, VkOffset3D);
struct VkOffset3DAnnotation
: public ManagedStructureAnnotation<VkOffset3D,true,true> {
    VkOffset3DAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkOffset3D", ml) {
        addField<DAS_BIND_MANAGED_FIELD(x)>("x");
        addField<DAS_BIND_MANAGED_FIELD(y)>("y");
        addField<DAS_BIND_MANAGED_FIELD(z)>("z");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkRect2D, VkRect2D);
struct VkRect2DAnnotation
: public ManagedStructureAnnotation<VkRect2D,true,true> {
    VkRect2DAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkRect2D", ml) {
        addField<DAS_BIND_MANAGED_FIELD(offset)>("offset");
        addField<DAS_BIND_MANAGED_FIELD(extent)>("extent");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkDispatchIndirectCommand, VkDispatchIndirectCommand);
struct VkDispatchIndirectCommandAnnotation
: public ManagedStructureAnnotation<VkDispatchIndirectCommand,true,true> {
    VkDispatchIndirectCommandAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkDispatchIndirectCommand", ml) {
        addField<DAS_BIND_MANAGED_FIELD(x)>("x");
        addField<DAS_BIND_MANAGED_FIELD(y)>("y");
        addField<DAS_BIND_MANAGED_FIELD(z)>("z");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkDrawIndexedIndirectCommand, VkDrawIndexedIndirectCommand);
struct VkDrawIndexedIndirectCommandAnnotation
: public ManagedStructureAnnotation<VkDrawIndexedIndirectCommand,true,true> {
    VkDrawIndexedIndirectCommandAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkDrawIndexedIndirectCommand", ml) {
        addField<DAS_BIND_MANAGED_FIELD(indexCount)>("indexCount");
        addField<DAS_BIND_MANAGED_FIELD(instanceCount)>("instanceCount");
        addField<DAS_BIND_MANAGED_FIELD(firstIndex)>("firstIndex");
        addField<DAS_BIND_MANAGED_FIELD(vertexOffset)>("vertexOffset");
        addField<DAS_BIND_MANAGED_FIELD(firstInstance)>("firstInstance");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkDrawIndirectCommand, VkDrawIndirectCommand);
struct VkDrawIndirectCommandAnnotation
: public ManagedStructureAnnotation<VkDrawIndirectCommand,true,true> {
    VkDrawIndirectCommandAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkDrawIndirectCommand", ml) {
        addField<DAS_BIND_MANAGED_FIELD(vertexCount)>("vertexCount");
        addField<DAS_BIND_MANAGED_FIELD(instanceCount)>("instanceCount");
        addField<DAS_BIND_MANAGED_FIELD(firstVertex)>("firstVertex");
        addField<DAS_BIND_MANAGED_FIELD(firstInstance)>("firstInstance");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkImageSubresourceRange, VkImageSubresourceRange);
struct VkImageSubresourceRangeAnnotation
: public ManagedStructureAnnotation<VkImageSubresourceRange,true,true> {
    VkImageSubresourceRangeAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkImageSubresourceRange", ml) {
        addField<DAS_BIND_MANAGED_FIELD(aspectMask)>("aspectMask");
        addField<DAS_BIND_MANAGED_FIELD(baseMipLevel)>("baseMipLevel");
        addField<DAS_BIND_MANAGED_FIELD(levelCount)>("levelCount");
        addField<DAS_BIND_MANAGED_FIELD(baseArrayLayer)>("baseArrayLayer");
        addField<DAS_BIND_MANAGED_FIELD(layerCount)>("layerCount");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkFormatProperties, VkFormatProperties);
struct VkFormatPropertiesAnnotation
: public ManagedStructureAnnotation<VkFormatProperties,true,true> {
    VkFormatPropertiesAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkFormatProperties", ml) {
        addField<DAS_BIND_MANAGED_FIELD(linearTilingFeatures)>("linearTilingFeatures");
        addField<DAS_BIND_MANAGED_FIELD(optimalTilingFeatures)>("optimalTilingFeatures");
        addField<DAS_BIND_MANAGED_FIELD(bufferFeatures)>("bufferFeatures");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkMemoryType, VkMemoryType);
struct VkMemoryTypeAnnotation
: public ManagedStructureAnnotation<VkMemoryType,true,true> {
    VkMemoryTypeAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkMemoryType", ml) {
        addField<DAS_BIND_MANAGED_FIELD(propertyFlags)>("propertyFlags");
        addField<DAS_BIND_MANAGED_FIELD(heapIndex)>("heapIndex");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkPhysicalDeviceFeatures, VkPhysicalDeviceFeatures);
struct VkPhysicalDeviceFeaturesAnnotation
: public ManagedStructureAnnotation<VkPhysicalDeviceFeatures,true,true> {
    VkPhysicalDeviceFeaturesAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkPhysicalDeviceFeatures", ml) {
        addField<DAS_BIND_MANAGED_FIELD(robustBufferAccess)>("robustBufferAccess");
        addField<DAS_BIND_MANAGED_FIELD(fullDrawIndexUint32)>("fullDrawIndexUint32");
        addField<DAS_BIND_MANAGED_FIELD(imageCubeArray)>("imageCubeArray");
        addField<DAS_BIND_MANAGED_FIELD(independentBlend)>("independentBlend");
        addField<DAS_BIND_MANAGED_FIELD(geometryShader)>("geometryShader");
        addField<DAS_BIND_MANAGED_FIELD(tessellationShader)>("tessellationShader");
        addField<DAS_BIND_MANAGED_FIELD(sampleRateShading)>("sampleRateShading");
        addField<DAS_BIND_MANAGED_FIELD(dualSrcBlend)>("dualSrcBlend");
        addField<DAS_BIND_MANAGED_FIELD(logicOp)>("logicOp");
        addField<DAS_BIND_MANAGED_FIELD(multiDrawIndirect)>("multiDrawIndirect");
        addField<DAS_BIND_MANAGED_FIELD(drawIndirectFirstInstance)>("drawIndirectFirstInstance");
        addField<DAS_BIND_MANAGED_FIELD(depthClamp)>("depthClamp");
        addField<DAS_BIND_MANAGED_FIELD(depthBiasClamp)>("depthBiasClamp");
        addField<DAS_BIND_MANAGED_FIELD(fillModeNonSolid)>("fillModeNonSolid");
        addField<DAS_BIND_MANAGED_FIELD(depthBounds)>("depthBounds");
        addField<DAS_BIND_MANAGED_FIELD(wideLines)>("wideLines");
        addField<DAS_BIND_MANAGED_FIELD(largePoints)>("largePoints");
        addField<DAS_BIND_MANAGED_FIELD(alphaToOne)>("alphaToOne");
        addField<DAS_BIND_MANAGED_FIELD(multiViewport)>("multiViewport");
        addField<DAS_BIND_MANAGED_FIELD(samplerAnisotropy)>("samplerAnisotropy");
        addField<DAS_BIND_MANAGED_FIELD(textureCompressionETC2)>("textureCompressionETC2");
        addField<DAS_BIND_MANAGED_FIELD(textureCompressionASTC_LDR)>("textureCompressionASTC_LDR");
        addField<DAS_BIND_MANAGED_FIELD(textureCompressionBC)>("textureCompressionBC");
        addField<DAS_BIND_MANAGED_FIELD(occlusionQueryPrecise)>("occlusionQueryPrecise");
        addField<DAS_BIND_MANAGED_FIELD(pipelineStatisticsQuery)>("pipelineStatisticsQuery");
        addField<DAS_BIND_MANAGED_FIELD(vertexPipelineStoresAndAtomics)>("vertexPipelineStoresAndAtomics");
        addField<DAS_BIND_MANAGED_FIELD(fragmentStoresAndAtomics)>("fragmentStoresAndAtomics");
        addField<DAS_BIND_MANAGED_FIELD(shaderTessellationAndGeometryPointSize)>("shaderTessellationAndGeometryPointSize");
        addField<DAS_BIND_MANAGED_FIELD(shaderImageGatherExtended)>("shaderImageGatherExtended");
        addField<DAS_BIND_MANAGED_FIELD(shaderStorageImageExtendedFormats)>("shaderStorageImageExtendedFormats");
        addField<DAS_BIND_MANAGED_FIELD(shaderStorageImageMultisample)>("shaderStorageImageMultisample");
        addField<DAS_BIND_MANAGED_FIELD(shaderStorageImageReadWithoutFormat)>("shaderStorageImageReadWithoutFormat");
        addField<DAS_BIND_MANAGED_FIELD(shaderStorageImageWriteWithoutFormat)>("shaderStorageImageWriteWithoutFormat");
        addField<DAS_BIND_MANAGED_FIELD(shaderUniformBufferArrayDynamicIndexing)>("shaderUniformBufferArrayDynamicIndexing");
        addField<DAS_BIND_MANAGED_FIELD(shaderSampledImageArrayDynamicIndexing)>("shaderSampledImageArrayDynamicIndexing");
        addField<DAS_BIND_MANAGED_FIELD(shaderStorageBufferArrayDynamicIndexing)>("shaderStorageBufferArrayDynamicIndexing");
        addField<DAS_BIND_MANAGED_FIELD(shaderStorageImageArrayDynamicIndexing)>("shaderStorageImageArrayDynamicIndexing");
        addField<DAS_BIND_MANAGED_FIELD(shaderClipDistance)>("shaderClipDistance");
        addField<DAS_BIND_MANAGED_FIELD(shaderCullDistance)>("shaderCullDistance");
        addField<DAS_BIND_MANAGED_FIELD(shaderFloat64)>("shaderFloat64");
        addField<DAS_BIND_MANAGED_FIELD(shaderInt64)>("shaderInt64");
        addField<DAS_BIND_MANAGED_FIELD(shaderInt16)>("shaderInt16");
        addField<DAS_BIND_MANAGED_FIELD(shaderResourceResidency)>("shaderResourceResidency");
        addField<DAS_BIND_MANAGED_FIELD(shaderResourceMinLod)>("shaderResourceMinLod");
        addField<DAS_BIND_MANAGED_FIELD(sparseBinding)>("sparseBinding");
        addField<DAS_BIND_MANAGED_FIELD(sparseResidencyBuffer)>("sparseResidencyBuffer");
        addField<DAS_BIND_MANAGED_FIELD(sparseResidencyImage2D)>("sparseResidencyImage2D");
        addField<DAS_BIND_MANAGED_FIELD(sparseResidencyImage3D)>("sparseResidencyImage3D");
        addField<DAS_BIND_MANAGED_FIELD(sparseResidency2Samples)>("sparseResidency2Samples");
        addField<DAS_BIND_MANAGED_FIELD(sparseResidency4Samples)>("sparseResidency4Samples");
        addField<DAS_BIND_MANAGED_FIELD(sparseResidency8Samples)>("sparseResidency8Samples");
        addField<DAS_BIND_MANAGED_FIELD(sparseResidency16Samples)>("sparseResidency16Samples");
        addField<DAS_BIND_MANAGED_FIELD(sparseResidencyAliased)>("sparseResidencyAliased");
        addField<DAS_BIND_MANAGED_FIELD(variableMultisampleRate)>("variableMultisampleRate");
        addField<DAS_BIND_MANAGED_FIELD(inheritedQueries)>("inheritedQueries");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkPhysicalDeviceSparseProperties, VkPhysicalDeviceSparseProperties);
struct VkPhysicalDeviceSparsePropertiesAnnotation
: public ManagedStructureAnnotation<VkPhysicalDeviceSparseProperties,true,true> {
    VkPhysicalDeviceSparsePropertiesAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkPhysicalDeviceSparseProperties", ml) {
        addField<DAS_BIND_MANAGED_FIELD(residencyStandard2DBlockShape)>("residencyStandard2DBlockShape");
        addField<DAS_BIND_MANAGED_FIELD(residencyStandard2DMultisampleBlockShape)>("residencyStandard2DMultisampleBlockShape");
        addField<DAS_BIND_MANAGED_FIELD(residencyStandard3DBlockShape)>("residencyStandard3DBlockShape");
        addField<DAS_BIND_MANAGED_FIELD(residencyAlignedMipSize)>("residencyAlignedMipSize");
        addField<DAS_BIND_MANAGED_FIELD(residencyNonResidentStrict)>("residencyNonResidentStrict");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkQueueFamilyProperties, VkQueueFamilyProperties);
struct VkQueueFamilyPropertiesAnnotation
: public ManagedStructureAnnotation<VkQueueFamilyProperties,true,true> {
    VkQueueFamilyPropertiesAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkQueueFamilyProperties", ml) {
        addField<DAS_BIND_MANAGED_FIELD(queueFlags)>("queueFlags");
        addField<DAS_BIND_MANAGED_FIELD(queueCount)>("queueCount");
        addField<DAS_BIND_MANAGED_FIELD(timestampValidBits)>("timestampValidBits");
        addField<DAS_BIND_MANAGED_FIELD(minImageTransferGranularity)>("minImageTransferGranularity");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkImageSubresource, VkImageSubresource);
struct VkImageSubresourceAnnotation
: public ManagedStructureAnnotation<VkImageSubresource,true,true> {
    VkImageSubresourceAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkImageSubresource", ml) {
        addField<DAS_BIND_MANAGED_FIELD(aspectMask)>("aspectMask");
        addField<DAS_BIND_MANAGED_FIELD(mipLevel)>("mipLevel");
        addField<DAS_BIND_MANAGED_FIELD(arrayLayer)>("arrayLayer");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkSparseImageFormatProperties, VkSparseImageFormatProperties);
struct VkSparseImageFormatPropertiesAnnotation
: public ManagedStructureAnnotation<VkSparseImageFormatProperties,true,true> {
    VkSparseImageFormatPropertiesAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkSparseImageFormatProperties", ml) {
        addField<DAS_BIND_MANAGED_FIELD(aspectMask)>("aspectMask");
        addField<DAS_BIND_MANAGED_FIELD(imageGranularity)>("imageGranularity");
        addField<DAS_BIND_MANAGED_FIELD(flags)>("flags");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkComponentMapping, VkComponentMapping);
struct VkComponentMappingAnnotation
: public ManagedStructureAnnotation<VkComponentMapping,true,true> {
    VkComponentMappingAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkComponentMapping", ml) {
        addField<DAS_BIND_MANAGED_FIELD(r)>("r");
        addField<DAS_BIND_MANAGED_FIELD(g)>("g");
        addField<DAS_BIND_MANAGED_FIELD(b)>("b");
        addField<DAS_BIND_MANAGED_FIELD(a)>("a");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkVertexInputBindingDescription, VkVertexInputBindingDescription);
struct VkVertexInputBindingDescriptionAnnotation
: public ManagedStructureAnnotation<VkVertexInputBindingDescription,true,true> {
    VkVertexInputBindingDescriptionAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkVertexInputBindingDescription", ml) {
        addField<DAS_BIND_MANAGED_FIELD(binding)>("binding");
        addField<DAS_BIND_MANAGED_FIELD(stride)>("stride");
        addField<DAS_BIND_MANAGED_FIELD(inputRate)>("inputRate");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkVertexInputAttributeDescription, VkVertexInputAttributeDescription);
struct VkVertexInputAttributeDescriptionAnnotation
: public ManagedStructureAnnotation<VkVertexInputAttributeDescription,true,true> {
    VkVertexInputAttributeDescriptionAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkVertexInputAttributeDescription", ml) {
        addField<DAS_BIND_MANAGED_FIELD(location)>("location");
        addField<DAS_BIND_MANAGED_FIELD(binding)>("binding");
        addField<DAS_BIND_MANAGED_FIELD(format)>("format");
        addField<DAS_BIND_MANAGED_FIELD(offset)>("offset");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkViewport, VkViewport);
struct VkViewportAnnotation
: public ManagedStructureAnnotation<VkViewport,true,true> {
    VkViewportAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkViewport", ml) {
        addField<DAS_BIND_MANAGED_FIELD(x)>("x");
        addField<DAS_BIND_MANAGED_FIELD(y)>("y");
        addField<DAS_BIND_MANAGED_FIELD(width)>("width");
        addField<DAS_BIND_MANAGED_FIELD(height)>("height");
        addField<DAS_BIND_MANAGED_FIELD(minDepth)>("minDepth");
        addField<DAS_BIND_MANAGED_FIELD(maxDepth)>("maxDepth");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkStencilOpState, VkStencilOpState);
struct VkStencilOpStateAnnotation
: public ManagedStructureAnnotation<VkStencilOpState,true,true> {
    VkStencilOpStateAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkStencilOpState", ml) {
        addField<DAS_BIND_MANAGED_FIELD(failOp)>("failOp");
        addField<DAS_BIND_MANAGED_FIELD(passOp)>("passOp");
        addField<DAS_BIND_MANAGED_FIELD(depthFailOp)>("depthFailOp");
        addField<DAS_BIND_MANAGED_FIELD(compareOp)>("compareOp");
        addField<DAS_BIND_MANAGED_FIELD(compareMask)>("compareMask");
        addField<DAS_BIND_MANAGED_FIELD(writeMask)>("writeMask");
        addField<DAS_BIND_MANAGED_FIELD(reference)>("reference");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkPipelineColorBlendAttachmentState, VkPipelineColorBlendAttachmentState);
struct VkPipelineColorBlendAttachmentStateAnnotation
: public ManagedStructureAnnotation<VkPipelineColorBlendAttachmentState,true,true> {
    VkPipelineColorBlendAttachmentStateAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkPipelineColorBlendAttachmentState", ml) {
        addField<DAS_BIND_MANAGED_FIELD(blendEnable)>("blendEnable");
        addField<DAS_BIND_MANAGED_FIELD(srcColorBlendFactor)>("srcColorBlendFactor");
        addField<DAS_BIND_MANAGED_FIELD(dstColorBlendFactor)>("dstColorBlendFactor");
        addField<DAS_BIND_MANAGED_FIELD(colorBlendOp)>("colorBlendOp");
        addField<DAS_BIND_MANAGED_FIELD(srcAlphaBlendFactor)>("srcAlphaBlendFactor");
        addField<DAS_BIND_MANAGED_FIELD(dstAlphaBlendFactor)>("dstAlphaBlendFactor");
        addField<DAS_BIND_MANAGED_FIELD(alphaBlendOp)>("alphaBlendOp");
        addField<DAS_BIND_MANAGED_FIELD(colorWriteMask)>("colorWriteMask");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkPushConstantRange, VkPushConstantRange);
struct VkPushConstantRangeAnnotation
: public ManagedStructureAnnotation<VkPushConstantRange,true,true> {
    VkPushConstantRangeAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkPushConstantRange", ml) {
        addField<DAS_BIND_MANAGED_FIELD(stageFlags)>("stageFlags");
        addField<DAS_BIND_MANAGED_FIELD(offset)>("offset");
        addField<DAS_BIND_MANAGED_FIELD(size)>("size");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkDescriptorPoolSize, VkDescriptorPoolSize);
struct VkDescriptorPoolSizeAnnotation
: public ManagedStructureAnnotation<VkDescriptorPoolSize,true,true> {
    VkDescriptorPoolSizeAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkDescriptorPoolSize", ml) {
        addField<DAS_BIND_MANAGED_FIELD(type)>("type");
        addField<DAS_BIND_MANAGED_FIELD(descriptorCount)>("descriptorCount");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkAttachmentDescription, VkAttachmentDescription);
struct VkAttachmentDescriptionAnnotation
: public ManagedStructureAnnotation<VkAttachmentDescription,true,true> {
    VkAttachmentDescriptionAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkAttachmentDescription", ml) {
        addField<DAS_BIND_MANAGED_FIELD(flags)>("flags");
        addField<DAS_BIND_MANAGED_FIELD(format)>("format");
        addField<DAS_BIND_MANAGED_FIELD(samples)>("samples");
        addField<DAS_BIND_MANAGED_FIELD(loadOp)>("loadOp");
        addField<DAS_BIND_MANAGED_FIELD(storeOp)>("storeOp");
        addField<DAS_BIND_MANAGED_FIELD(stencilLoadOp)>("stencilLoadOp");
        addField<DAS_BIND_MANAGED_FIELD(stencilStoreOp)>("stencilStoreOp");
        addField<DAS_BIND_MANAGED_FIELD(initialLayout)>("initialLayout");
        addField<DAS_BIND_MANAGED_FIELD(finalLayout)>("finalLayout");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkAttachmentReference, VkAttachmentReference);
struct VkAttachmentReferenceAnnotation
: public ManagedStructureAnnotation<VkAttachmentReference,true,true> {
    VkAttachmentReferenceAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkAttachmentReference", ml) {
        addField<DAS_BIND_MANAGED_FIELD(attachment)>("attachment");
        addField<DAS_BIND_MANAGED_FIELD(layout)>("layout");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkSubpassDependency, VkSubpassDependency);
struct VkSubpassDependencyAnnotation
: public ManagedStructureAnnotation<VkSubpassDependency,true,true> {
    VkSubpassDependencyAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkSubpassDependency", ml) {
        addField<DAS_BIND_MANAGED_FIELD(srcSubpass)>("srcSubpass");
        addField<DAS_BIND_MANAGED_FIELD(dstSubpass)>("dstSubpass");
        addField<DAS_BIND_MANAGED_FIELD(srcStageMask)>("srcStageMask");
        addField<DAS_BIND_MANAGED_FIELD(dstStageMask)>("dstStageMask");
        addField<DAS_BIND_MANAGED_FIELD(srcAccessMask)>("srcAccessMask");
        addField<DAS_BIND_MANAGED_FIELD(dstAccessMask)>("dstAccessMask");
        addField<DAS_BIND_MANAGED_FIELD(dependencyFlags)>("dependencyFlags");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkImageSubresourceLayers, VkImageSubresourceLayers);
struct VkImageSubresourceLayersAnnotation
: public ManagedStructureAnnotation<VkImageSubresourceLayers,true,true> {
    VkImageSubresourceLayersAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkImageSubresourceLayers", ml) {
        addField<DAS_BIND_MANAGED_FIELD(aspectMask)>("aspectMask");
        addField<DAS_BIND_MANAGED_FIELD(mipLevel)>("mipLevel");
        addField<DAS_BIND_MANAGED_FIELD(baseArrayLayer)>("baseArrayLayer");
        addField<DAS_BIND_MANAGED_FIELD(layerCount)>("layerCount");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkClearDepthStencilValue, VkClearDepthStencilValue);
struct VkClearDepthStencilValueAnnotation
: public ManagedStructureAnnotation<VkClearDepthStencilValue,true,true> {
    VkClearDepthStencilValueAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkClearDepthStencilValue", ml) {
        addField<DAS_BIND_MANAGED_FIELD(depth)>("depth");
        addField<DAS_BIND_MANAGED_FIELD(stencil)>("stencil");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkClearRect, VkClearRect);
struct VkClearRectAnnotation
: public ManagedStructureAnnotation<VkClearRect,true,true> {
    VkClearRectAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkClearRect", ml) {
        addField<DAS_BIND_MANAGED_FIELD(rect)>("rect");
        addField<DAS_BIND_MANAGED_FIELD(baseArrayLayer)>("baseArrayLayer");
        addField<DAS_BIND_MANAGED_FIELD(layerCount)>("layerCount");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkImageCopy, VkImageCopy);
struct VkImageCopyAnnotation
: public ManagedStructureAnnotation<VkImageCopy,true,true> {
    VkImageCopyAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkImageCopy", ml) {
        addField<DAS_BIND_MANAGED_FIELD(srcSubresource)>("srcSubresource");
        addField<DAS_BIND_MANAGED_FIELD(srcOffset)>("srcOffset");
        addField<DAS_BIND_MANAGED_FIELD(dstSubresource)>("dstSubresource");
        addField<DAS_BIND_MANAGED_FIELD(dstOffset)>("dstOffset");
        addField<DAS_BIND_MANAGED_FIELD(extent)>("extent");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkImageResolve, VkImageResolve);
struct VkImageResolveAnnotation
: public ManagedStructureAnnotation<VkImageResolve,true,true> {
    VkImageResolveAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkImageResolve", ml) {
        addField<DAS_BIND_MANAGED_FIELD(srcSubresource)>("srcSubresource");
        addField<DAS_BIND_MANAGED_FIELD(srcOffset)>("srcOffset");
        addField<DAS_BIND_MANAGED_FIELD(dstSubresource)>("dstSubresource");
        addField<DAS_BIND_MANAGED_FIELD(dstOffset)>("dstOffset");
        addField<DAS_BIND_MANAGED_FIELD(extent)>("extent");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkInputAttachmentAspectReference, VkInputAttachmentAspectReference);
struct VkInputAttachmentAspectReferenceAnnotation
: public ManagedStructureAnnotation<VkInputAttachmentAspectReference,true,true> {
    VkInputAttachmentAspectReferenceAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkInputAttachmentAspectReference", ml) {
        addField<DAS_BIND_MANAGED_FIELD(subpass)>("subpass");
        addField<DAS_BIND_MANAGED_FIELD(inputAttachmentIndex)>("inputAttachmentIndex");
        addField<DAS_BIND_MANAGED_FIELD(aspectMask)>("aspectMask");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkExternalMemoryProperties, VkExternalMemoryProperties);
struct VkExternalMemoryPropertiesAnnotation
: public ManagedStructureAnnotation<VkExternalMemoryProperties,true,true> {
    VkExternalMemoryPropertiesAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkExternalMemoryProperties", ml) {
        addField<DAS_BIND_MANAGED_FIELD(externalMemoryFeatures)>("externalMemoryFeatures");
        addField<DAS_BIND_MANAGED_FIELD(exportFromImportedHandleTypes)>("exportFromImportedHandleTypes");
        addField<DAS_BIND_MANAGED_FIELD(compatibleHandleTypes)>("compatibleHandleTypes");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkConformanceVersion, VkConformanceVersion);
struct VkConformanceVersionAnnotation
: public ManagedStructureAnnotation<VkConformanceVersion,true,true> {
    VkConformanceVersionAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkConformanceVersion", ml) {
        addField<DAS_BIND_MANAGED_FIELD(major)>("major");
        addField<DAS_BIND_MANAGED_FIELD(minor)>("minor");
        addField<DAS_BIND_MANAGED_FIELD(subminor)>("subminor");
        addField<DAS_BIND_MANAGED_FIELD(patch)>("patch");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkSurfaceCapabilitiesKHR, VkSurfaceCapabilitiesKHR);
struct VkSurfaceCapabilitiesKHRAnnotation
: public ManagedStructureAnnotation<VkSurfaceCapabilitiesKHR,true,true> {
    VkSurfaceCapabilitiesKHRAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkSurfaceCapabilitiesKHR", ml) {
        addField<DAS_BIND_MANAGED_FIELD(minImageCount)>("minImageCount");
        addField<DAS_BIND_MANAGED_FIELD(maxImageCount)>("maxImageCount");
        addField<DAS_BIND_MANAGED_FIELD(currentExtent)>("currentExtent");
        addField<DAS_BIND_MANAGED_FIELD(minImageExtent)>("minImageExtent");
        addField<DAS_BIND_MANAGED_FIELD(maxImageExtent)>("maxImageExtent");
        addField<DAS_BIND_MANAGED_FIELD(maxImageArrayLayers)>("maxImageArrayLayers");
        addField<DAS_BIND_MANAGED_FIELD(supportedTransforms)>("supportedTransforms");
        addField<DAS_BIND_MANAGED_FIELD(currentTransform)>("currentTransform");
        addField<DAS_BIND_MANAGED_FIELD(supportedCompositeAlpha)>("supportedCompositeAlpha");
        addField<DAS_BIND_MANAGED_FIELD(supportedUsageFlags)>("supportedUsageFlags");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkSurfaceFormatKHR, VkSurfaceFormatKHR);
struct VkSurfaceFormatKHRAnnotation
: public ManagedStructureAnnotation<VkSurfaceFormatKHR,true,true> {
    VkSurfaceFormatKHRAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkSurfaceFormatKHR", ml) {
        addField<DAS_BIND_MANAGED_FIELD(format)>("format");
        addField<DAS_BIND_MANAGED_FIELD(colorSpace)>("colorSpace");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkDisplayModeParametersKHR, VkDisplayModeParametersKHR);
struct VkDisplayModeParametersKHRAnnotation
: public ManagedStructureAnnotation<VkDisplayModeParametersKHR,true,true> {
    VkDisplayModeParametersKHRAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkDisplayModeParametersKHR", ml) {
        addField<DAS_BIND_MANAGED_FIELD(visibleRegion)>("visibleRegion");
        addField<DAS_BIND_MANAGED_FIELD(refreshRate)>("refreshRate");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkDisplayPlaneCapabilitiesKHR, VkDisplayPlaneCapabilitiesKHR);
struct VkDisplayPlaneCapabilitiesKHRAnnotation
: public ManagedStructureAnnotation<VkDisplayPlaneCapabilitiesKHR,true,true> {
    VkDisplayPlaneCapabilitiesKHRAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkDisplayPlaneCapabilitiesKHR", ml) {
        addField<DAS_BIND_MANAGED_FIELD(supportedAlpha)>("supportedAlpha");
        addField<DAS_BIND_MANAGED_FIELD(minSrcPosition)>("minSrcPosition");
        addField<DAS_BIND_MANAGED_FIELD(maxSrcPosition)>("maxSrcPosition");
        addField<DAS_BIND_MANAGED_FIELD(minSrcExtent)>("minSrcExtent");
        addField<DAS_BIND_MANAGED_FIELD(maxSrcExtent)>("maxSrcExtent");
        addField<DAS_BIND_MANAGED_FIELD(minDstPosition)>("minDstPosition");
        addField<DAS_BIND_MANAGED_FIELD(maxDstPosition)>("maxDstPosition");
        addField<DAS_BIND_MANAGED_FIELD(minDstExtent)>("minDstExtent");
        addField<DAS_BIND_MANAGED_FIELD(maxDstExtent)>("maxDstExtent");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkRectLayerKHR, VkRectLayerKHR);
struct VkRectLayerKHRAnnotation
: public ManagedStructureAnnotation<VkRectLayerKHR,true,true> {
    VkRectLayerKHRAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkRectLayerKHR", ml) {
        addField<DAS_BIND_MANAGED_FIELD(offset)>("offset");
        addField<DAS_BIND_MANAGED_FIELD(extent)>("extent");
        addField<DAS_BIND_MANAGED_FIELD(layer)>("layer");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkViewportWScalingNV, VkViewportWScalingNV);
struct VkViewportWScalingNVAnnotation
: public ManagedStructureAnnotation<VkViewportWScalingNV,true,true> {
    VkViewportWScalingNVAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkViewportWScalingNV", ml) {
        addField<DAS_BIND_MANAGED_FIELD(xcoeff)>("xcoeff");
        addField<DAS_BIND_MANAGED_FIELD(ycoeff)>("ycoeff");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkViewportSwizzleNV, VkViewportSwizzleNV);
struct VkViewportSwizzleNVAnnotation
: public ManagedStructureAnnotation<VkViewportSwizzleNV,true,true> {
    VkViewportSwizzleNVAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkViewportSwizzleNV", ml) {
        addField<DAS_BIND_MANAGED_FIELD(x)>("x");
        addField<DAS_BIND_MANAGED_FIELD(y)>("y");
        addField<DAS_BIND_MANAGED_FIELD(z)>("z");
        addField<DAS_BIND_MANAGED_FIELD(w)>("w");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkXYColorEXT, VkXYColorEXT);
struct VkXYColorEXTAnnotation
: public ManagedStructureAnnotation<VkXYColorEXT,true,true> {
    VkXYColorEXTAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkXYColorEXT", ml) {
        addField<DAS_BIND_MANAGED_FIELD(x)>("x");
        addField<DAS_BIND_MANAGED_FIELD(y)>("y");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkSampleLocationEXT, VkSampleLocationEXT);
struct VkSampleLocationEXTAnnotation
: public ManagedStructureAnnotation<VkSampleLocationEXT,true,true> {
    VkSampleLocationEXTAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkSampleLocationEXT", ml) {
        addField<DAS_BIND_MANAGED_FIELD(x)>("x");
        addField<DAS_BIND_MANAGED_FIELD(y)>("y");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkCoarseSampleLocationNV, VkCoarseSampleLocationNV);
struct VkCoarseSampleLocationNVAnnotation
: public ManagedStructureAnnotation<VkCoarseSampleLocationNV,true,true> {
    VkCoarseSampleLocationNVAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkCoarseSampleLocationNV", ml) {
        addField<DAS_BIND_MANAGED_FIELD(pixelX)>("pixelX");
        addField<DAS_BIND_MANAGED_FIELD(pixelY)>("pixelY");
        addField<DAS_BIND_MANAGED_FIELD(sample)>("sample");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkAabbPositionsKHR, VkAabbPositionsKHR);
struct VkAabbPositionsKHRAnnotation
: public ManagedStructureAnnotation<VkAabbPositionsKHR,true,true> {
    VkAabbPositionsKHRAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkAabbPositionsKHR", ml) {
        addField<DAS_BIND_MANAGED_FIELD(minX)>("minX");
        addField<DAS_BIND_MANAGED_FIELD(minY)>("minY");
        addField<DAS_BIND_MANAGED_FIELD(minZ)>("minZ");
        addField<DAS_BIND_MANAGED_FIELD(maxX)>("maxX");
        addField<DAS_BIND_MANAGED_FIELD(maxY)>("maxY");
        addField<DAS_BIND_MANAGED_FIELD(maxZ)>("maxZ");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkVertexInputBindingDivisorDescriptionEXT, VkVertexInputBindingDivisorDescriptionEXT);
struct VkVertexInputBindingDivisorDescriptionEXTAnnotation
: public ManagedStructureAnnotation<VkVertexInputBindingDivisorDescriptionEXT,true,true> {
    VkVertexInputBindingDivisorDescriptionEXTAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkVertexInputBindingDivisorDescriptionEXT", ml) {
        addField<DAS_BIND_MANAGED_FIELD(binding)>("binding");
        addField<DAS_BIND_MANAGED_FIELD(divisor)>("divisor");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkDrawMeshTasksIndirectCommandNV, VkDrawMeshTasksIndirectCommandNV);
struct VkDrawMeshTasksIndirectCommandNVAnnotation
: public ManagedStructureAnnotation<VkDrawMeshTasksIndirectCommandNV,true,true> {
    VkDrawMeshTasksIndirectCommandNVAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkDrawMeshTasksIndirectCommandNV", ml) {
        addField<DAS_BIND_MANAGED_FIELD(taskCount)>("taskCount");
        addField<DAS_BIND_MANAGED_FIELD(firstTask)>("firstTask");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkBindShaderGroupIndirectCommandNV, VkBindShaderGroupIndirectCommandNV);
struct VkBindShaderGroupIndirectCommandNVAnnotation
: public ManagedStructureAnnotation<VkBindShaderGroupIndirectCommandNV,true,true> {
    VkBindShaderGroupIndirectCommandNVAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkBindShaderGroupIndirectCommandNV", ml) {
        addField<DAS_BIND_MANAGED_FIELD(groupIndex)>("groupIndex");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};
MAKE_TYPE_FACTORY(VkSetStateFlagsIndirectCommandNV, VkSetStateFlagsIndirectCommandNV);
struct VkSetStateFlagsIndirectCommandNVAnnotation
: public ManagedStructureAnnotation<VkSetStateFlagsIndirectCommandNV,true,true> {
    VkSetStateFlagsIndirectCommandNVAnnotation(ModuleLibrary & ml)
    : ManagedStructureAnnotation ("VkSetStateFlagsIndirectCommandNV", ml) {
        addField<DAS_BIND_MANAGED_FIELD(data)>("data");
    }
    virtual bool isLocal() const override { return true; }
    virtual bool canCopy() const override { return true; }
    virtual bool canMove() const override { return true; }
};

class Module_vulkan : public Module {
public:
    Module_vulkan() : Module("vulkan") {
        ModuleLibrary lib;
        lib.addModule(this);
        lib.addBuiltInModule();

        //
        // enums
        //

        addEnumeration(make_smart<EnumerationVkResult>());
        addEnumeration(make_smart<EnumerationVkStructureType>());
        addEnumeration(make_smart<EnumerationVkImageLayout>());
        addEnumeration(make_smart<EnumerationVkObjectType>());
        addEnumeration(make_smart<EnumerationVkVendorId>());
        addEnumeration(make_smart<EnumerationVkPipelineCacheHeaderVersion>());
        addEnumeration(make_smart<EnumerationVkSystemAllocationScope>());
        addEnumeration(make_smart<EnumerationVkInternalAllocationType>());
        addEnumeration(make_smart<EnumerationVkFormat>());
        addEnumeration(make_smart<EnumerationVkImageTiling>());
        addEnumeration(make_smart<EnumerationVkImageType>());
        addEnumeration(make_smart<EnumerationVkPhysicalDeviceType>());
        addEnumeration(make_smart<EnumerationVkQueryType>());
        addEnumeration(make_smart<EnumerationVkSharingMode>());
        addEnumeration(make_smart<EnumerationVkComponentSwizzle>());
        addEnumeration(make_smart<EnumerationVkImageViewType>());
        addEnumeration(make_smart<EnumerationVkBlendFactor>());
        addEnumeration(make_smart<EnumerationVkBlendOp>());
        addEnumeration(make_smart<EnumerationVkCompareOp>());
        addEnumeration(make_smart<EnumerationVkDynamicState>());
        addEnumeration(make_smart<EnumerationVkFrontFace>());
        addEnumeration(make_smart<EnumerationVkVertexInputRate>());
        addEnumeration(make_smart<EnumerationVkPrimitiveTopology>());
        addEnumeration(make_smart<EnumerationVkPolygonMode>());
        addEnumeration(make_smart<EnumerationVkStencilOp>());
        addEnumeration(make_smart<EnumerationVkLogicOp>());
        addEnumeration(make_smart<EnumerationVkBorderColor>());
        addEnumeration(make_smart<EnumerationVkFilter>());
        addEnumeration(make_smart<EnumerationVkSamplerAddressMode>());
        addEnumeration(make_smart<EnumerationVkSamplerMipmapMode>());
        addEnumeration(make_smart<EnumerationVkDescriptorType>());
        addEnumeration(make_smart<EnumerationVkAttachmentLoadOp>());
        addEnumeration(make_smart<EnumerationVkAttachmentStoreOp>());
        addEnumeration(make_smart<EnumerationVkPipelineBindPoint>());
        addEnumeration(make_smart<EnumerationVkCommandBufferLevel>());
        addEnumeration(make_smart<EnumerationVkIndexType>());
        addEnumeration(make_smart<EnumerationVkSubpassContents>());
        addEnumeration(make_smart<EnumerationVkAccessFlagBits>());
        addEnumeration(make_smart<EnumerationVkImageAspectFlagBits>());
        addEnumeration(make_smart<EnumerationVkFormatFeatureFlagBits>());
        addEnumeration(make_smart<EnumerationVkImageCreateFlagBits>());
        addEnumeration(make_smart<EnumerationVkSampleCountFlagBits>());
        addEnumeration(make_smart<EnumerationVkImageUsageFlagBits>());
        addEnumeration(make_smart<EnumerationVkMemoryHeapFlagBits>());
        addEnumeration(make_smart<EnumerationVkMemoryPropertyFlagBits>());
        addEnumeration(make_smart<EnumerationVkQueueFlagBits>());
        addEnumeration(make_smart<EnumerationVkDeviceQueueCreateFlagBits>());
        addEnumeration(make_smart<EnumerationVkPipelineStageFlagBits>());
        addEnumeration(make_smart<EnumerationVkSparseMemoryBindFlagBits>());
        addEnumeration(make_smart<EnumerationVkSparseImageFormatFlagBits>());
        addEnumeration(make_smart<EnumerationVkFenceCreateFlagBits>());
        addEnumeration(make_smart<EnumerationVkQueryPipelineStatisticFlagBits>());
        addEnumeration(make_smart<EnumerationVkQueryResultFlagBits>());
        addEnumeration(make_smart<EnumerationVkBufferCreateFlagBits>());
        addEnumeration(make_smart<EnumerationVkBufferUsageFlagBits>());
        addEnumeration(make_smart<EnumerationVkImageViewCreateFlagBits>());
        addEnumeration(make_smart<EnumerationVkShaderModuleCreateFlagBits>());
        addEnumeration(make_smart<EnumerationVkPipelineCacheCreateFlagBits>());
        addEnumeration(make_smart<EnumerationVkColorComponentFlagBits>());
        addEnumeration(make_smart<EnumerationVkPipelineCreateFlagBits>());
        addEnumeration(make_smart<EnumerationVkPipelineShaderStageCreateFlagBits>());
        addEnumeration(make_smart<EnumerationVkShaderStageFlagBits>());
        addEnumeration(make_smart<EnumerationVkCullModeFlagBits>());
        addEnumeration(make_smart<EnumerationVkSamplerCreateFlagBits>());
        addEnumeration(make_smart<EnumerationVkDescriptorPoolCreateFlagBits>());
        addEnumeration(make_smart<EnumerationVkDescriptorSetLayoutCreateFlagBits>());
        addEnumeration(make_smart<EnumerationVkAttachmentDescriptionFlagBits>());
        addEnumeration(make_smart<EnumerationVkDependencyFlagBits>());
        addEnumeration(make_smart<EnumerationVkFramebufferCreateFlagBits>());
        addEnumeration(make_smart<EnumerationVkRenderPassCreateFlagBits>());
        addEnumeration(make_smart<EnumerationVkSubpassDescriptionFlagBits>());
        addEnumeration(make_smart<EnumerationVkCommandPoolCreateFlagBits>());
        addEnumeration(make_smart<EnumerationVkCommandPoolResetFlagBits>());
        addEnumeration(make_smart<EnumerationVkCommandBufferUsageFlagBits>());
        addEnumeration(make_smart<EnumerationVkQueryControlFlagBits>());
        addEnumeration(make_smart<EnumerationVkCommandBufferResetFlagBits>());
        addEnumeration(make_smart<EnumerationVkStencilFaceFlagBits>());
        addEnumeration(make_smart<EnumerationVkPointClippingBehavior>());
        addEnumeration(make_smart<EnumerationVkTessellationDomainOrigin>());
        addEnumeration(make_smart<EnumerationVkSamplerYcbcrModelConversion>());
        addEnumeration(make_smart<EnumerationVkSamplerYcbcrRange>());
        addEnumeration(make_smart<EnumerationVkChromaLocation>());
        addEnumeration(make_smart<EnumerationVkDescriptorUpdateTemplateType>());
        addEnumeration(make_smart<EnumerationVkSubgroupFeatureFlagBits>());
        addEnumeration(make_smart<EnumerationVkPeerMemoryFeatureFlagBits>());
        addEnumeration(make_smart<EnumerationVkMemoryAllocateFlagBits>());
        addEnumeration(make_smart<EnumerationVkExternalMemoryHandleTypeFlagBits>());
        addEnumeration(make_smart<EnumerationVkExternalMemoryFeatureFlagBits>());
        addEnumeration(make_smart<EnumerationVkExternalFenceHandleTypeFlagBits>());
        addEnumeration(make_smart<EnumerationVkExternalFenceFeatureFlagBits>());
        addEnumeration(make_smart<EnumerationVkFenceImportFlagBits>());
        addEnumeration(make_smart<EnumerationVkSemaphoreImportFlagBits>());
        addEnumeration(make_smart<EnumerationVkExternalSemaphoreHandleTypeFlagBits>());
        addEnumeration(make_smart<EnumerationVkExternalSemaphoreFeatureFlagBits>());
        addEnumeration(make_smart<EnumerationVkDriverId>());
        addEnumeration(make_smart<EnumerationVkShaderFloatControlsIndependence>());
        addEnumeration(make_smart<EnumerationVkSamplerReductionMode>());
        addEnumeration(make_smart<EnumerationVkSemaphoreType>());
        addEnumeration(make_smart<EnumerationVkResolveModeFlagBits>());
        addEnumeration(make_smart<EnumerationVkDescriptorBindingFlagBits>());
        addEnumeration(make_smart<EnumerationVkSemaphoreWaitFlagBits>());
        addEnumeration(make_smart<EnumerationVkPresentModeKHR>());
        addEnumeration(make_smart<EnumerationVkColorSpaceKHR>());
        addEnumeration(make_smart<EnumerationVkSurfaceTransformFlagBitsKHR>());
        addEnumeration(make_smart<EnumerationVkCompositeAlphaFlagBitsKHR>());
        addEnumeration(make_smart<EnumerationVkSwapchainCreateFlagBitsKHR>());
        addEnumeration(make_smart<EnumerationVkDeviceGroupPresentModeFlagBitsKHR>());
        addEnumeration(make_smart<EnumerationVkDisplayPlaneAlphaFlagBitsKHR>());
        addEnumeration(make_smart<EnumerationVkPerformanceCounterUnitKHR>());
        addEnumeration(make_smart<EnumerationVkPerformanceCounterScopeKHR>());
        addEnumeration(make_smart<EnumerationVkPerformanceCounterStorageKHR>());
        addEnumeration(make_smart<EnumerationVkPerformanceCounterDescriptionFlagBitsKHR>());
        addEnumeration(make_smart<EnumerationVkAcquireProfilingLockFlagBitsKHR>());
        addEnumeration(make_smart<EnumerationVkPipelineExecutableStatisticFormatKHR>());
        addEnumeration(make_smart<EnumerationVkDebugReportObjectTypeEXT>());
        addEnumeration(make_smart<EnumerationVkDebugReportFlagBitsEXT>());
        addEnumeration(make_smart<EnumerationVkRasterizationOrderAMD>());
        addEnumeration(make_smart<EnumerationVkShaderInfoTypeAMD>());
        addEnumeration(make_smart<EnumerationVkExternalMemoryHandleTypeFlagBitsNV>());
        addEnumeration(make_smart<EnumerationVkExternalMemoryFeatureFlagBitsNV>());
        addEnumeration(make_smart<EnumerationVkValidationCheckEXT>());
        addEnumeration(make_smart<EnumerationVkConditionalRenderingFlagBitsEXT>());
        addEnumeration(make_smart<EnumerationVkSurfaceCounterFlagBitsEXT>());
        addEnumeration(make_smart<EnumerationVkDisplayPowerStateEXT>());
        addEnumeration(make_smart<EnumerationVkDeviceEventTypeEXT>());
        addEnumeration(make_smart<EnumerationVkDisplayEventTypeEXT>());
        addEnumeration(make_smart<EnumerationVkViewportCoordinateSwizzleNV>());
        addEnumeration(make_smart<EnumerationVkDiscardRectangleModeEXT>());
        addEnumeration(make_smart<EnumerationVkConservativeRasterizationModeEXT>());
        addEnumeration(make_smart<EnumerationVkDebugUtilsMessageSeverityFlagBitsEXT>());
        addEnumeration(make_smart<EnumerationVkDebugUtilsMessageTypeFlagBitsEXT>());
        addEnumeration(make_smart<EnumerationVkBlendOverlapEXT>());
        addEnumeration(make_smart<EnumerationVkCoverageModulationModeNV>());
        addEnumeration(make_smart<EnumerationVkValidationCacheHeaderVersionEXT>());
        addEnumeration(make_smart<EnumerationVkShadingRatePaletteEntryNV>());
        addEnumeration(make_smart<EnumerationVkCoarseSampleOrderTypeNV>());
        addEnumeration(make_smart<EnumerationVkRayTracingShaderGroupTypeKHR>());
        addEnumeration(make_smart<EnumerationVkGeometryTypeKHR>());
        addEnumeration(make_smart<EnumerationVkAccelerationStructureTypeKHR>());
        addEnumeration(make_smart<EnumerationVkCopyAccelerationStructureModeKHR>());
        addEnumeration(make_smart<EnumerationVkAccelerationStructureMemoryRequirementsTypeKHR>());
        addEnumeration(make_smart<EnumerationVkGeometryFlagBitsKHR>());
        addEnumeration(make_smart<EnumerationVkGeometryInstanceFlagBitsKHR>());
        addEnumeration(make_smart<EnumerationVkBuildAccelerationStructureFlagBitsKHR>());
        addEnumeration(make_smart<EnumerationVkQueueGlobalPriorityEXT>());
        addEnumeration(make_smart<EnumerationVkPipelineCompilerControlFlagBitsAMD>());
        addEnumeration(make_smart<EnumerationVkTimeDomainEXT>());
        addEnumeration(make_smart<EnumerationVkMemoryOverallocationBehaviorAMD>());
        addEnumeration(make_smart<EnumerationVkPipelineCreationFeedbackFlagBitsEXT>());
        addEnumeration(make_smart<EnumerationVkPerformanceConfigurationTypeINTEL>());
        addEnumeration(make_smart<EnumerationVkQueryPoolSamplingModeINTEL>());
        addEnumeration(make_smart<EnumerationVkPerformanceOverrideTypeINTEL>());
        addEnumeration(make_smart<EnumerationVkPerformanceParameterTypeINTEL>());
        addEnumeration(make_smart<EnumerationVkPerformanceValueTypeINTEL>());
        addEnumeration(make_smart<EnumerationVkShaderCorePropertiesFlagBitsAMD>());
        addEnumeration(make_smart<EnumerationVkToolPurposeFlagBitsEXT>());
        addEnumeration(make_smart<EnumerationVkValidationFeatureEnableEXT>());
        addEnumeration(make_smart<EnumerationVkValidationFeatureDisableEXT>());
        addEnumeration(make_smart<EnumerationVkComponentTypeNV>());
        addEnumeration(make_smart<EnumerationVkScopeNV>());
        addEnumeration(make_smart<EnumerationVkCoverageReductionModeNV>());
        addEnumeration(make_smart<EnumerationVkLineRasterizationModeEXT>());
        addEnumeration(make_smart<EnumerationVkIndirectCommandsTokenTypeNV>());
        addEnumeration(make_smart<EnumerationVkIndirectStateFlagBitsNV>());
        addEnumeration(make_smart<EnumerationVkIndirectCommandsLayoutUsageFlagBitsNV>());
        addEnumeration(make_smart<EnumerationVkPrivateDataSlotCreateFlagBitsEXT>());
        addEnumeration(make_smart<EnumerationVkDeviceDiagnosticsConfigFlagBitsNV>());

        //
        // structs
        //

        addAnnotation(make_smart<VkExtent2DAnnotation>(lib));
        addAnnotation(make_smart<VkExtent3DAnnotation>(lib));
        addAnnotation(make_smart<VkOffset2DAnnotation>(lib));
        addAnnotation(make_smart<VkOffset3DAnnotation>(lib));
        addAnnotation(make_smart<VkRect2DAnnotation>(lib));
        addAnnotation(make_smart<VkDispatchIndirectCommandAnnotation>(lib));
        addAnnotation(make_smart<VkDrawIndexedIndirectCommandAnnotation>(lib));
        addAnnotation(make_smart<VkDrawIndirectCommandAnnotation>(lib));
        addAnnotation(make_smart<VkImageSubresourceRangeAnnotation>(lib));
        addAnnotation(make_smart<VkFormatPropertiesAnnotation>(lib));
        addAnnotation(make_smart<VkMemoryTypeAnnotation>(lib));
        addAnnotation(make_smart<VkPhysicalDeviceFeaturesAnnotation>(lib));
        addAnnotation(make_smart<VkPhysicalDeviceSparsePropertiesAnnotation>(lib));
        addAnnotation(make_smart<VkQueueFamilyPropertiesAnnotation>(lib));
        addAnnotation(make_smart<VkImageSubresourceAnnotation>(lib));
        addAnnotation(make_smart<VkSparseImageFormatPropertiesAnnotation>(lib));
        addAnnotation(make_smart<VkComponentMappingAnnotation>(lib));
        addAnnotation(make_smart<VkVertexInputBindingDescriptionAnnotation>(lib));
        addAnnotation(make_smart<VkVertexInputAttributeDescriptionAnnotation>(lib));
        addAnnotation(make_smart<VkViewportAnnotation>(lib));
        addAnnotation(make_smart<VkStencilOpStateAnnotation>(lib));
        addAnnotation(make_smart<VkPipelineColorBlendAttachmentStateAnnotation>(lib));
        addAnnotation(make_smart<VkPushConstantRangeAnnotation>(lib));
        addAnnotation(make_smart<VkDescriptorPoolSizeAnnotation>(lib));
        addAnnotation(make_smart<VkAttachmentDescriptionAnnotation>(lib));
        addAnnotation(make_smart<VkAttachmentReferenceAnnotation>(lib));
        addAnnotation(make_smart<VkSubpassDependencyAnnotation>(lib));
        addAnnotation(make_smart<VkImageSubresourceLayersAnnotation>(lib));
        addAnnotation(make_smart<VkClearDepthStencilValueAnnotation>(lib));
        addAnnotation(make_smart<VkClearRectAnnotation>(lib));
        addAnnotation(make_smart<VkImageCopyAnnotation>(lib));
        addAnnotation(make_smart<VkImageResolveAnnotation>(lib));
        addAnnotation(make_smart<VkInputAttachmentAspectReferenceAnnotation>(lib));
        addAnnotation(make_smart<VkExternalMemoryPropertiesAnnotation>(lib));
        addAnnotation(make_smart<VkConformanceVersionAnnotation>(lib));
        addAnnotation(make_smart<VkSurfaceCapabilitiesKHRAnnotation>(lib));
        addAnnotation(make_smart<VkSurfaceFormatKHRAnnotation>(lib));
        addAnnotation(make_smart<VkDisplayModeParametersKHRAnnotation>(lib));
        addAnnotation(make_smart<VkDisplayPlaneCapabilitiesKHRAnnotation>(lib));
        addAnnotation(make_smart<VkRectLayerKHRAnnotation>(lib));
        addAnnotation(make_smart<VkViewportWScalingNVAnnotation>(lib));
        addAnnotation(make_smart<VkViewportSwizzleNVAnnotation>(lib));
        addAnnotation(make_smart<VkXYColorEXTAnnotation>(lib));
        addAnnotation(make_smart<VkSampleLocationEXTAnnotation>(lib));
        addAnnotation(make_smart<VkCoarseSampleLocationNVAnnotation>(lib));
        addAnnotation(make_smart<VkAabbPositionsKHRAnnotation>(lib));
        addAnnotation(make_smart<VkVertexInputBindingDivisorDescriptionEXTAnnotation>(lib));
        addAnnotation(make_smart<VkDrawMeshTasksIndirectCommandNVAnnotation>(lib));
        addAnnotation(make_smart<VkBindShaderGroupIndirectCommandNVAnnotation>(lib));
        addAnnotation(make_smart<VkSetStateFlagsIndirectCommandNVAnnotation>(lib));
    }
};

REGISTER_MODULE(Module_vulkan);
