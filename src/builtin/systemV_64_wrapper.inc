vec4f fastcall64_0_0_0 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_1 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_2 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_3 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_4 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_5 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_6 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_7 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_8 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_9 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_10 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_11 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_12 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_13 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_14 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_15 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_16 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_17 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_18 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_19 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_20 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_21 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_22 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_23 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_24 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_25 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_26 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_27 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_28 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_29 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_30 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_31 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_32 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_33 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_34 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_35 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_36 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_37 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_38 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_39 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_40 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_41 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_42 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_43 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_44 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_45 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_46 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_47 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_48 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_49 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_50 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_51 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_52 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_53 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_54 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_55 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_56 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_57 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_58 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_59 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_60 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_61 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_62 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_63 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_1_0 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_1 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_2 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_3 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_4 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_5 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_6 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_7 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_8 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_9 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_10 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_11 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_12 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_13 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_14 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_15 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_16 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_17 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_18 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_19 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_20 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_21 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_22 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_23 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_24 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_25 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_26 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_27 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_28 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_29 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_30 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_31 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_32 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_33 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_34 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_35 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_36 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_37 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_38 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_39 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_40 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_41 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_42 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_43 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_44 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_45 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_46 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_47 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_48 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_49 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_50 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_51 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_52 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_53 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_54 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_55 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_56 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_57 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_58 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_59 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_60 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_61 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_62 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_63 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_1_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_16 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_17 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_18 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_19 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_20 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_21 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_22 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_23 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_24 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_25 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_26 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_27 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_28 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_29 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_30 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_31 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_32 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_33 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_34 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_35 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_36 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_37 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_38 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_39 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_40 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_41 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_42 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_43 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_44 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_45 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_46 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_47 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_48 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_49 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_50 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_51 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_52 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_53 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_54 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_55 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_56 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_57 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_58 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_59 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_60 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_61 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_62 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_63 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_16 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_17 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_18 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_19 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_20 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_21 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_22 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_23 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_24 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_25 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_26 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_27 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_28 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_29 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_30 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_31 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_32 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_33 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_34 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_35 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_36 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_37 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_38 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_39 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_40 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_41 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_42 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_43 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_44 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_45 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_46 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_47 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_48 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_49 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_50 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_51 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_52 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_53 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_54 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_55 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_56 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_57 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_58 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_59 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_60 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_61 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_62 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_63 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_2_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_16 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_17 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_18 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_19 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_20 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_21 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_22 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_23 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_24 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_25 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_26 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_27 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_28 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_29 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_30 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_31 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_32 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_33 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_34 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_35 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_36 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_37 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_38 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_39 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_40 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_41 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_42 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_43 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_44 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_45 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_46 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_47 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_48 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_49 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_50 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_51 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_52 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_53 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_54 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_55 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_56 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_57 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_58 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_59 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_60 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_61 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_62 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_63 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_16 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_17 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_18 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_19 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_20 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_21 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_22 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_23 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_24 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_25 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_26 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_27 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_28 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_29 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_30 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_31 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_32 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_33 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_34 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_35 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_36 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_37 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_38 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_39 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_40 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_41 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_42 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_43 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_44 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_45 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_46 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_47 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_48 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_49 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_50 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_51 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_52 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_53 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_54 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_55 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_56 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_57 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_58 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_59 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_60 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_61 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_62 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_63 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_3_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_16 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_17 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_18 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_19 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_20 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_21 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_22 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_23 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_24 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_25 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_26 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_27 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_28 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_29 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_30 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_31 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_32 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_33 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_34 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_35 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_36 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_37 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_38 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_39 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_40 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_41 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_42 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_43 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_44 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_45 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_46 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_47 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_48 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_49 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_50 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_51 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_52 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_53 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_54 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_55 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_56 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_57 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_58 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_59 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_60 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_61 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_62 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_63 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_16 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_17 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_18 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_19 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_20 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_21 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_22 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_23 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_24 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_25 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_26 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_27 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_28 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_29 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_30 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_31 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_32 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_33 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_34 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_35 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_36 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_37 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_38 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_39 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_40 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_41 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_42 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_43 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_44 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_45 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_46 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_47 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_48 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_49 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_50 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_51 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_52 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_53 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_54 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_55 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_56 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_57 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_58 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_59 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_60 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_61 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_62 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_63 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2) );
}

vec4f fastcall64_4_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_16 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_17 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_18 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_19 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_20 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_21 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_22 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_23 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_24 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_25 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_26 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_27 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_28 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_29 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_30 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_31 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_32 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_33 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_34 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_35 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_36 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_37 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_38 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_39 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_40 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_41 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_42 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_43 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_44 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_45 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_46 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_47 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_48 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_49 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_50 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_51 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_52 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_53 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_54 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_55 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_56 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_57 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_58 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_59 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_60 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_61 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_62 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_63 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_16 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_17 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_18 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_19 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_20 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_21 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_22 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_23 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_24 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_25 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_26 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_27 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_28 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_29 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_30 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_31 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_32 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_33 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_34 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_35 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_36 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_37 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_38 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_39 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_40 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_41 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_42 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_43 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_44 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_45 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_46 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_47 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_48 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_49 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_50 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_51 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_52 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_53 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_54 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_55 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_56 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_57 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_58 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_59 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_60 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_61 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_62 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_63 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3) );
}

vec4f fastcall64_5_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_16 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4) ) );
}

vec4f fastcall64_5_0_17 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4) ) );
}

vec4f fastcall64_5_0_18 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4) ) );
}

vec4f fastcall64_5_0_19 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4) ) );
}

vec4f fastcall64_5_0_20 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4) ) );
}

vec4f fastcall64_5_0_21 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4) ) );
}

vec4f fastcall64_5_0_22 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4) ) );
}

vec4f fastcall64_5_0_23 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4) ) );
}

vec4f fastcall64_5_0_24 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4) ) );
}

vec4f fastcall64_5_0_25 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4) ) );
}

vec4f fastcall64_5_0_26 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4) ) );
}

vec4f fastcall64_5_0_27 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4) ) );
}

vec4f fastcall64_5_0_28 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4) ) );
}

vec4f fastcall64_5_0_29 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4) ) );
}

vec4f fastcall64_5_0_30 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4) ) );
}

vec4f fastcall64_5_0_31 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4) ) );
}

vec4f fastcall64_5_0_32 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_33 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_34 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_35 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_36 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_37 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_38 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_39 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_40 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_41 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_42 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_43 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_44 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_45 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_46 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_47 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_48 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4) ) );
}

vec4f fastcall64_5_0_49 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4) ) );
}

vec4f fastcall64_5_0_50 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4) ) );
}

vec4f fastcall64_5_0_51 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4) ) );
}

vec4f fastcall64_5_0_52 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4) ) );
}

vec4f fastcall64_5_0_53 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4) ) );
}

vec4f fastcall64_5_0_54 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4) ) );
}

vec4f fastcall64_5_0_55 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4) ) );
}

vec4f fastcall64_5_0_56 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4) ) );
}

vec4f fastcall64_5_0_57 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4) ) );
}

vec4f fastcall64_5_0_58 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4) ) );
}

vec4f fastcall64_5_0_59 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4) ) );
}

vec4f fastcall64_5_0_60 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4) ) );
}

vec4f fastcall64_5_0_61 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4) ) );
}

vec4f fastcall64_5_0_62 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4) ) );
}

vec4f fastcall64_5_0_63 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4) ) );
}

vec4f fastcall64_5_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_16 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4) );
}

vec4f fastcall64_5_1_17 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4) );
}

vec4f fastcall64_5_1_18 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4) );
}

vec4f fastcall64_5_1_19 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4) );
}

vec4f fastcall64_5_1_20 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4) );
}

vec4f fastcall64_5_1_21 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4) );
}

vec4f fastcall64_5_1_22 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4) );
}

vec4f fastcall64_5_1_23 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4) );
}

vec4f fastcall64_5_1_24 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4) );
}

vec4f fastcall64_5_1_25 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4) );
}

vec4f fastcall64_5_1_26 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4) );
}

vec4f fastcall64_5_1_27 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4) );
}

vec4f fastcall64_5_1_28 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4) );
}

vec4f fastcall64_5_1_29 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4) );
}

vec4f fastcall64_5_1_30 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4) );
}

vec4f fastcall64_5_1_31 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4) );
}

vec4f fastcall64_5_1_32 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_33 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_34 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_35 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_36 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_37 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_38 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_39 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_40 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_41 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_42 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_43 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_44 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_45 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_46 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_47 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_48 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4) );
}

vec4f fastcall64_5_1_49 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4) );
}

vec4f fastcall64_5_1_50 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4) );
}

vec4f fastcall64_5_1_51 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4) );
}

vec4f fastcall64_5_1_52 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4) );
}

vec4f fastcall64_5_1_53 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4) );
}

vec4f fastcall64_5_1_54 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4) );
}

vec4f fastcall64_5_1_55 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4) );
}

vec4f fastcall64_5_1_56 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4) );
}

vec4f fastcall64_5_1_57 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4) );
}

vec4f fastcall64_5_1_58 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4) );
}

vec4f fastcall64_5_1_59 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4) );
}

vec4f fastcall64_5_1_60 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4) );
}

vec4f fastcall64_5_1_61 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4) );
}

vec4f fastcall64_5_1_62 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4) );
}

vec4f fastcall64_5_1_63 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4) );
}

vec4f fastcall64_6_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_16 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5) ) );
}

vec4f fastcall64_6_0_17 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5) ) );
}

vec4f fastcall64_6_0_18 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5) ) );
}

vec4f fastcall64_6_0_19 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5) ) );
}

vec4f fastcall64_6_0_20 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5) ) );
}

vec4f fastcall64_6_0_21 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5) ) );
}

vec4f fastcall64_6_0_22 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5) ) );
}

vec4f fastcall64_6_0_23 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5) ) );
}

vec4f fastcall64_6_0_24 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5) ) );
}

vec4f fastcall64_6_0_25 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5) ) );
}

vec4f fastcall64_6_0_26 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5) ) );
}

vec4f fastcall64_6_0_27 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5) ) );
}

vec4f fastcall64_6_0_28 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5) ) );
}

vec4f fastcall64_6_0_29 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5) ) );
}

vec4f fastcall64_6_0_30 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5) ) );
}

vec4f fastcall64_6_0_31 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5) ) );
}

vec4f fastcall64_6_0_32 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5) ) );
}

vec4f fastcall64_6_0_33 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5) ) );
}

vec4f fastcall64_6_0_34 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5) ) );
}

vec4f fastcall64_6_0_35 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5) ) );
}

vec4f fastcall64_6_0_36 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5) ) );
}

vec4f fastcall64_6_0_37 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5) ) );
}

vec4f fastcall64_6_0_38 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5) ) );
}

vec4f fastcall64_6_0_39 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5) ) );
}

vec4f fastcall64_6_0_40 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5) ) );
}

vec4f fastcall64_6_0_41 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5) ) );
}

vec4f fastcall64_6_0_42 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5) ) );
}

vec4f fastcall64_6_0_43 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5) ) );
}

vec4f fastcall64_6_0_44 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5) ) );
}

vec4f fastcall64_6_0_45 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5) ) );
}

vec4f fastcall64_6_0_46 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5) ) );
}

vec4f fastcall64_6_0_47 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5) ) );
}

vec4f fastcall64_6_0_48 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5) ) );
}

vec4f fastcall64_6_0_49 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5) ) );
}

vec4f fastcall64_6_0_50 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5) ) );
}

vec4f fastcall64_6_0_51 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5) ) );
}

vec4f fastcall64_6_0_52 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5) ) );
}

vec4f fastcall64_6_0_53 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5) ) );
}

vec4f fastcall64_6_0_54 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5) ) );
}

vec4f fastcall64_6_0_55 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5) ) );
}

vec4f fastcall64_6_0_56 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5) ) );
}

vec4f fastcall64_6_0_57 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5) ) );
}

vec4f fastcall64_6_0_58 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5) ) );
}

vec4f fastcall64_6_0_59 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5) ) );
}

vec4f fastcall64_6_0_60 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5) ) );
}

vec4f fastcall64_6_0_61 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5) ) );
}

vec4f fastcall64_6_0_62 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5) ) );
}

vec4f fastcall64_6_0_63 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5) ) );
}

vec4f fastcall64_6_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_16 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5) );
}

vec4f fastcall64_6_1_17 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5) );
}

vec4f fastcall64_6_1_18 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5) );
}

vec4f fastcall64_6_1_19 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5) );
}

vec4f fastcall64_6_1_20 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5) );
}

vec4f fastcall64_6_1_21 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5) );
}

vec4f fastcall64_6_1_22 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5) );
}

vec4f fastcall64_6_1_23 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5) );
}

vec4f fastcall64_6_1_24 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5) );
}

vec4f fastcall64_6_1_25 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5) );
}

vec4f fastcall64_6_1_26 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5) );
}

vec4f fastcall64_6_1_27 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5) );
}

vec4f fastcall64_6_1_28 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5) );
}

vec4f fastcall64_6_1_29 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5) );
}

vec4f fastcall64_6_1_30 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5) );
}

vec4f fastcall64_6_1_31 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5) );
}

vec4f fastcall64_6_1_32 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5) );
}

vec4f fastcall64_6_1_33 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5) );
}

vec4f fastcall64_6_1_34 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5) );
}

vec4f fastcall64_6_1_35 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,double );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5) );
}

vec4f fastcall64_6_1_36 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5) );
}

vec4f fastcall64_6_1_37 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5) );
}

vec4f fastcall64_6_1_38 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5) );
}

vec4f fastcall64_6_1_39 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5) );
}

vec4f fastcall64_6_1_40 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5) );
}

vec4f fastcall64_6_1_41 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5) );
}

vec4f fastcall64_6_1_42 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,double );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5) );
}

vec4f fastcall64_6_1_43 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,double );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5) );
}

vec4f fastcall64_6_1_44 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5) );
}

vec4f fastcall64_6_1_45 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5) );
}

vec4f fastcall64_6_1_46 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5) );
}

vec4f fastcall64_6_1_47 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5) );
}

vec4f fastcall64_6_1_48 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5) );
}

vec4f fastcall64_6_1_49 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,double );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5) );
}

vec4f fastcall64_6_1_50 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,double );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5) );
}

vec4f fastcall64_6_1_51 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,double );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5) );
}

vec4f fastcall64_6_1_52 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5) );
}

vec4f fastcall64_6_1_53 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5) );
}

vec4f fastcall64_6_1_54 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5) );
}

vec4f fastcall64_6_1_55 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5) );
}

vec4f fastcall64_6_1_56 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,double );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5) );
}

vec4f fastcall64_6_1_57 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,double );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5) );
}

vec4f fastcall64_6_1_58 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,double );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5) );
}

vec4f fastcall64_6_1_59 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5) );
}

vec4f fastcall64_6_1_60 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5) );
}

vec4f fastcall64_6_1_61 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5) );
}

vec4f fastcall64_6_1_62 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5) );
}

vec4f fastcall64_6_1_63 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5) );
}

vec4f fastcall64_7_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_16 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_17 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_18 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_19 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_20 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_21 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_22 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_23 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_24 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_25 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_26 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_27 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_28 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_29 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_30 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_31 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_32 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_33 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_34 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_35 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_36 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_37 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_38 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_39 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_40 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_41 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_42 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_43 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_44 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_45 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_46 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_47 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_48 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_49 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_50 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_51 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_52 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_53 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_54 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_55 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_56 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_57 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_58 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_59 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_60 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_61 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_62 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_0_63 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6) ) );
}

vec4f fastcall64_7_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_16 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_17 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_18 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_19 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_20 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_21 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_22 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_23 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_24 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_25 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_26 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_27 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_28 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_29 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_30 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_31 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_32 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_33 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_34 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_35 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_36 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_37 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_38 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_39 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_40 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_41 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_42 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_43 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_44 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_45 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_46 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_47 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_48 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_49 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_50 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_51 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_52 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_53 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_54 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_55 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_56 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_57 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_58 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_59 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_60 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_61 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_62 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6) );
}

vec4f fastcall64_7_1_63 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6) );
}

vec4f fastcall64_8_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_16 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_17 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_18 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_19 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_20 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_21 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_22 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_23 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_24 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_25 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_26 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_27 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_28 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_29 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_30 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_31 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_32 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_33 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_34 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_35 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_36 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_37 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_38 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_39 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_40 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_41 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_42 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_43 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_44 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_45 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_46 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_47 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_48 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_49 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_50 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_51 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_52 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_53 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_54 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_55 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_56 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_57 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_58 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_59 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_60 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_61 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_62 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_63 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_16 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_17 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_18 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_19 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_20 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_21 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_22 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_23 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_24 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_25 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_26 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_27 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_28 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_29 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_30 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_31 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_32 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_33 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_34 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_35 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_36 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_37 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_38 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_39 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_40 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_41 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_42 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_43 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_44 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_45 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_46 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_47 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_48 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_49 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_50 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_51 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_52 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_53 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_54 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_55 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_56 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_57 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_58 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_59 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_60 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_61 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_62 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_63 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7) );
}

vec4f fastcall64_9_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_16 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_17 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_18 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_19 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_20 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_21 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_22 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_23 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_24 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_25 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_26 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_27 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_28 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_29 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_30 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_31 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_32 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_33 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_34 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_35 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_36 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_37 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_38 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_39 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_40 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_41 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_42 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_43 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_44 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_45 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_46 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_47 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_48 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_49 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_50 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_51 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_52 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_53 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_54 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_55 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_56 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_57 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_58 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_59 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_60 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_61 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_62 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_63 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_16 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_17 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_18 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_19 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_20 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_21 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_22 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_23 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_24 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_25 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_26 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_27 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_28 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_29 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_30 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_31 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_32 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_33 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_34 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_35 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_36 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_37 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_38 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_39 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_40 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_41 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_42 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_43 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_44 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_45 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_46 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_47 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_48 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_49 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_50 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_51 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_52 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_53 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_54 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_55 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_56 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_57 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_58 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_59 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_60 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_61 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_62 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_63 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_10_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_16 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_17 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_18 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_19 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_20 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_21 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_22 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_23 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_24 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_25 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_26 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_27 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_28 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_29 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_30 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_31 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_32 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_33 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_34 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_35 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_36 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_37 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_38 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_39 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_40 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_41 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_42 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_43 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_44 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_45 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_46 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_47 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_48 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_49 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_50 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_51 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_52 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_53 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_54 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_55 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_56 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_57 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_58 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_59 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_60 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_61 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_62 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_63 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_16 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_17 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_18 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_19 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_20 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_21 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_22 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_23 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_24 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_25 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_26 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_27 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_28 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_29 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_30 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_31 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_32 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_33 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_34 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_35 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_36 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_37 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_38 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_39 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_40 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_41 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_42 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_43 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_44 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_45 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_46 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_47 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_48 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_49 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_50 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_51 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_52 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_53 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_54 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_55 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_56 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_57 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_58 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_59 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_60 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_61 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_62 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_63 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_11_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_16 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_17 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_18 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_19 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_20 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_21 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_22 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_23 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_24 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_25 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_26 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_27 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_28 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_29 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_30 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_31 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_32 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_33 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_34 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_35 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_36 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_37 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_38 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_39 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_40 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_41 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_42 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_43 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_44 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_45 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_46 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_47 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_48 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_49 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_50 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_51 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_52 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_53 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_54 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_55 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_56 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_57 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_58 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_59 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_60 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_61 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_62 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_63 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_16 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_17 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_18 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_19 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_20 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_21 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_22 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_23 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_24 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_25 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_26 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_27 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_28 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_29 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_30 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_31 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_32 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_33 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_34 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_35 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_36 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_37 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_38 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_39 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_40 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_41 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_42 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_43 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_44 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_45 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_46 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_47 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_48 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_49 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_50 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_51 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_52 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_53 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_54 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_55 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_56 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_57 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_58 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_59 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_60 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_61 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_62 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_63 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_12_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_16 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_17 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_18 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_19 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_20 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_21 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_22 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_23 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_24 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_25 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_26 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_27 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_28 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_29 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_30 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_31 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_32 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_33 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_34 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_35 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_36 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_37 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_38 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_39 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_40 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_41 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_42 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_43 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_44 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_45 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_46 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_47 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_48 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_49 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_50 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_51 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_52 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_53 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_54 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_55 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_56 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_57 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_58 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_59 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_60 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_61 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_62 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_63 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_16 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_17 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_18 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_19 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_20 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_21 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_22 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_23 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_24 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_25 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_26 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_27 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_28 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_29 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_30 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_31 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_32 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_33 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_34 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_35 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_36 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_37 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_38 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_39 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_40 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_41 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_42 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_43 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_44 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_45 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_46 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_47 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_48 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_49 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_50 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_51 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_52 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_53 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_54 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_55 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_56 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_57 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_58 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_59 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_60 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_61 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_62 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_63 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_13_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_16 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_17 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_18 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_19 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_20 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_21 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_22 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_23 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_24 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_25 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_26 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_27 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_28 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_29 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_30 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_31 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_32 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_33 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_34 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_35 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_36 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_37 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_38 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_39 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_40 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_41 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_42 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_43 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_44 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_45 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_46 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_47 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_48 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_49 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_50 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_51 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_52 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_53 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_54 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_55 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_56 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_57 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_58 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_59 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_60 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_61 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_62 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_63 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_16 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_17 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_18 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_19 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_20 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_21 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_22 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_23 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_24 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_25 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_26 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_27 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_28 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_29 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_30 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_31 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_32 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_33 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_34 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_35 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_36 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_37 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_38 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_39 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_40 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_41 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_42 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_43 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_44 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_45 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_46 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_47 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_48 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_49 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_50 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_51 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_52 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_53 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_54 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_55 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_56 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_57 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_58 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_59 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_60 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_61 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_62 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_63 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_14_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_16 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_17 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_18 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_19 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_20 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_21 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_22 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_23 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_24 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_25 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_26 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_27 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_28 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_29 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_30 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_31 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_32 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_33 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_34 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_35 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_36 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_37 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_38 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_39 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_40 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_41 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_42 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_43 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_44 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_45 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_46 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_47 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_48 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_49 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_50 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_51 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_52 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_53 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_54 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_55 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_56 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_57 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_58 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_59 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_60 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_61 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_62 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_63 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_16 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_17 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_18 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_19 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_20 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_21 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_22 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_23 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_24 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_25 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_26 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_27 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_28 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_29 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_30 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_31 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_32 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_33 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_34 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_35 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_36 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_37 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_38 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_39 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_40 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_41 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_42 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_43 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_44 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_45 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_46 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_47 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_48 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_49 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_50 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_51 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_52 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_53 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_54 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_55 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_56 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_57 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_58 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_59 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_60 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_61 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_62 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_63 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_15_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_16 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_17 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_18 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_19 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_20 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_21 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_22 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_23 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_24 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_25 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_26 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_27 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_28 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_29 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_30 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_31 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_32 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_33 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_34 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_35 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_36 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_37 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_38 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_39 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_40 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_41 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_42 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_43 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_44 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_45 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_46 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_47 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_48 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_49 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_50 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_51 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_52 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_53 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_54 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_55 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_56 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_57 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_58 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_59 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_60 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_61 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_62 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_63 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_16 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_17 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_18 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_19 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_20 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_21 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_22 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_23 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_24 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_25 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_26 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_27 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_28 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_29 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_30 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_31 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_32 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_33 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_34 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_35 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_36 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_37 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_38 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_39 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_40 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_41 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_42 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_43 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_44 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_45 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_46 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_47 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_48 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_49 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_50 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_51 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_52 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_53 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_54 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_55 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_56 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_57 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_58 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_59 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_60 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_61 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_62 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_63 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AD(4),AD(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

#define MAX_WRAPPER_ARGUMENTS  16

FastCallWrapper fastcall64_table [] = {
    &fastcall64_0_0_0,&fastcall64_0_0_1,&fastcall64_0_0_2,&fastcall64_0_0_3,&fastcall64_0_0_4,&fastcall64_0_0_5,&fastcall64_0_0_6,&fastcall64_0_0_7,&fastcall64_0_0_8,&fastcall64_0_0_9,&fastcall64_0_0_10,&fastcall64_0_0_11,&fastcall64_0_0_12,&fastcall64_0_0_13,&fastcall64_0_0_14,&fastcall64_0_0_15,&fastcall64_0_0_16,&fastcall64_0_0_17,&fastcall64_0_0_18,&fastcall64_0_0_19,&fastcall64_0_0_20,&fastcall64_0_0_21,&fastcall64_0_0_22,&fastcall64_0_0_23,&fastcall64_0_0_24,&fastcall64_0_0_25,&fastcall64_0_0_26,&fastcall64_0_0_27,&fastcall64_0_0_28,&fastcall64_0_0_29,&fastcall64_0_0_30,&fastcall64_0_0_31,&fastcall64_0_0_32,&fastcall64_0_0_33,&fastcall64_0_0_34,&fastcall64_0_0_35,&fastcall64_0_0_36,&fastcall64_0_0_37,&fastcall64_0_0_38,&fastcall64_0_0_39,&fastcall64_0_0_40,&fastcall64_0_0_41,&fastcall64_0_0_42,&fastcall64_0_0_43,&fastcall64_0_0_44,&fastcall64_0_0_45,&fastcall64_0_0_46,&fastcall64_0_0_47,&fastcall64_0_0_48,&fastcall64_0_0_49,&fastcall64_0_0_50,&fastcall64_0_0_51,&fastcall64_0_0_52,&fastcall64_0_0_53,&fastcall64_0_0_54,&fastcall64_0_0_55,&fastcall64_0_0_56,&fastcall64_0_0_57,&fastcall64_0_0_58,&fastcall64_0_0_59,&fastcall64_0_0_60,&fastcall64_0_0_61,&fastcall64_0_0_62,&fastcall64_0_0_63,
    &fastcall64_0_1_0,&fastcall64_0_1_1,&fastcall64_0_1_2,&fastcall64_0_1_3,&fastcall64_0_1_4,&fastcall64_0_1_5,&fastcall64_0_1_6,&fastcall64_0_1_7,&fastcall64_0_1_8,&fastcall64_0_1_9,&fastcall64_0_1_10,&fastcall64_0_1_11,&fastcall64_0_1_12,&fastcall64_0_1_13,&fastcall64_0_1_14,&fastcall64_0_1_15,&fastcall64_0_1_16,&fastcall64_0_1_17,&fastcall64_0_1_18,&fastcall64_0_1_19,&fastcall64_0_1_20,&fastcall64_0_1_21,&fastcall64_0_1_22,&fastcall64_0_1_23,&fastcall64_0_1_24,&fastcall64_0_1_25,&fastcall64_0_1_26,&fastcall64_0_1_27,&fastcall64_0_1_28,&fastcall64_0_1_29,&fastcall64_0_1_30,&fastcall64_0_1_31,&fastcall64_0_1_32,&fastcall64_0_1_33,&fastcall64_0_1_34,&fastcall64_0_1_35,&fastcall64_0_1_36,&fastcall64_0_1_37,&fastcall64_0_1_38,&fastcall64_0_1_39,&fastcall64_0_1_40,&fastcall64_0_1_41,&fastcall64_0_1_42,&fastcall64_0_1_43,&fastcall64_0_1_44,&fastcall64_0_1_45,&fastcall64_0_1_46,&fastcall64_0_1_47,&fastcall64_0_1_48,&fastcall64_0_1_49,&fastcall64_0_1_50,&fastcall64_0_1_51,&fastcall64_0_1_52,&fastcall64_0_1_53,&fastcall64_0_1_54,&fastcall64_0_1_55,&fastcall64_0_1_56,&fastcall64_0_1_57,&fastcall64_0_1_58,&fastcall64_0_1_59,&fastcall64_0_1_60,&fastcall64_0_1_61,&fastcall64_0_1_62,&fastcall64_0_1_63,
    &fastcall64_1_0_0,&fastcall64_1_0_1,&fastcall64_1_0_2,&fastcall64_1_0_3,&fastcall64_1_0_4,&fastcall64_1_0_5,&fastcall64_1_0_6,&fastcall64_1_0_7,&fastcall64_1_0_8,&fastcall64_1_0_9,&fastcall64_1_0_10,&fastcall64_1_0_11,&fastcall64_1_0_12,&fastcall64_1_0_13,&fastcall64_1_0_14,&fastcall64_1_0_15,&fastcall64_1_0_16,&fastcall64_1_0_17,&fastcall64_1_0_18,&fastcall64_1_0_19,&fastcall64_1_0_20,&fastcall64_1_0_21,&fastcall64_1_0_22,&fastcall64_1_0_23,&fastcall64_1_0_24,&fastcall64_1_0_25,&fastcall64_1_0_26,&fastcall64_1_0_27,&fastcall64_1_0_28,&fastcall64_1_0_29,&fastcall64_1_0_30,&fastcall64_1_0_31,&fastcall64_1_0_32,&fastcall64_1_0_33,&fastcall64_1_0_34,&fastcall64_1_0_35,&fastcall64_1_0_36,&fastcall64_1_0_37,&fastcall64_1_0_38,&fastcall64_1_0_39,&fastcall64_1_0_40,&fastcall64_1_0_41,&fastcall64_1_0_42,&fastcall64_1_0_43,&fastcall64_1_0_44,&fastcall64_1_0_45,&fastcall64_1_0_46,&fastcall64_1_0_47,&fastcall64_1_0_48,&fastcall64_1_0_49,&fastcall64_1_0_50,&fastcall64_1_0_51,&fastcall64_1_0_52,&fastcall64_1_0_53,&fastcall64_1_0_54,&fastcall64_1_0_55,&fastcall64_1_0_56,&fastcall64_1_0_57,&fastcall64_1_0_58,&fastcall64_1_0_59,&fastcall64_1_0_60,&fastcall64_1_0_61,&fastcall64_1_0_62,&fastcall64_1_0_63,
    &fastcall64_1_1_0,&fastcall64_1_1_1,&fastcall64_1_1_2,&fastcall64_1_1_3,&fastcall64_1_1_4,&fastcall64_1_1_5,&fastcall64_1_1_6,&fastcall64_1_1_7,&fastcall64_1_1_8,&fastcall64_1_1_9,&fastcall64_1_1_10,&fastcall64_1_1_11,&fastcall64_1_1_12,&fastcall64_1_1_13,&fastcall64_1_1_14,&fastcall64_1_1_15,&fastcall64_1_1_16,&fastcall64_1_1_17,&fastcall64_1_1_18,&fastcall64_1_1_19,&fastcall64_1_1_20,&fastcall64_1_1_21,&fastcall64_1_1_22,&fastcall64_1_1_23,&fastcall64_1_1_24,&fastcall64_1_1_25,&fastcall64_1_1_26,&fastcall64_1_1_27,&fastcall64_1_1_28,&fastcall64_1_1_29,&fastcall64_1_1_30,&fastcall64_1_1_31,&fastcall64_1_1_32,&fastcall64_1_1_33,&fastcall64_1_1_34,&fastcall64_1_1_35,&fastcall64_1_1_36,&fastcall64_1_1_37,&fastcall64_1_1_38,&fastcall64_1_1_39,&fastcall64_1_1_40,&fastcall64_1_1_41,&fastcall64_1_1_42,&fastcall64_1_1_43,&fastcall64_1_1_44,&fastcall64_1_1_45,&fastcall64_1_1_46,&fastcall64_1_1_47,&fastcall64_1_1_48,&fastcall64_1_1_49,&fastcall64_1_1_50,&fastcall64_1_1_51,&fastcall64_1_1_52,&fastcall64_1_1_53,&fastcall64_1_1_54,&fastcall64_1_1_55,&fastcall64_1_1_56,&fastcall64_1_1_57,&fastcall64_1_1_58,&fastcall64_1_1_59,&fastcall64_1_1_60,&fastcall64_1_1_61,&fastcall64_1_1_62,&fastcall64_1_1_63,
    &fastcall64_2_0_0,&fastcall64_2_0_1,&fastcall64_2_0_2,&fastcall64_2_0_3,&fastcall64_2_0_4,&fastcall64_2_0_5,&fastcall64_2_0_6,&fastcall64_2_0_7,&fastcall64_2_0_8,&fastcall64_2_0_9,&fastcall64_2_0_10,&fastcall64_2_0_11,&fastcall64_2_0_12,&fastcall64_2_0_13,&fastcall64_2_0_14,&fastcall64_2_0_15,&fastcall64_2_0_16,&fastcall64_2_0_17,&fastcall64_2_0_18,&fastcall64_2_0_19,&fastcall64_2_0_20,&fastcall64_2_0_21,&fastcall64_2_0_22,&fastcall64_2_0_23,&fastcall64_2_0_24,&fastcall64_2_0_25,&fastcall64_2_0_26,&fastcall64_2_0_27,&fastcall64_2_0_28,&fastcall64_2_0_29,&fastcall64_2_0_30,&fastcall64_2_0_31,&fastcall64_2_0_32,&fastcall64_2_0_33,&fastcall64_2_0_34,&fastcall64_2_0_35,&fastcall64_2_0_36,&fastcall64_2_0_37,&fastcall64_2_0_38,&fastcall64_2_0_39,&fastcall64_2_0_40,&fastcall64_2_0_41,&fastcall64_2_0_42,&fastcall64_2_0_43,&fastcall64_2_0_44,&fastcall64_2_0_45,&fastcall64_2_0_46,&fastcall64_2_0_47,&fastcall64_2_0_48,&fastcall64_2_0_49,&fastcall64_2_0_50,&fastcall64_2_0_51,&fastcall64_2_0_52,&fastcall64_2_0_53,&fastcall64_2_0_54,&fastcall64_2_0_55,&fastcall64_2_0_56,&fastcall64_2_0_57,&fastcall64_2_0_58,&fastcall64_2_0_59,&fastcall64_2_0_60,&fastcall64_2_0_61,&fastcall64_2_0_62,&fastcall64_2_0_63,
    &fastcall64_2_1_0,&fastcall64_2_1_1,&fastcall64_2_1_2,&fastcall64_2_1_3,&fastcall64_2_1_4,&fastcall64_2_1_5,&fastcall64_2_1_6,&fastcall64_2_1_7,&fastcall64_2_1_8,&fastcall64_2_1_9,&fastcall64_2_1_10,&fastcall64_2_1_11,&fastcall64_2_1_12,&fastcall64_2_1_13,&fastcall64_2_1_14,&fastcall64_2_1_15,&fastcall64_2_1_16,&fastcall64_2_1_17,&fastcall64_2_1_18,&fastcall64_2_1_19,&fastcall64_2_1_20,&fastcall64_2_1_21,&fastcall64_2_1_22,&fastcall64_2_1_23,&fastcall64_2_1_24,&fastcall64_2_1_25,&fastcall64_2_1_26,&fastcall64_2_1_27,&fastcall64_2_1_28,&fastcall64_2_1_29,&fastcall64_2_1_30,&fastcall64_2_1_31,&fastcall64_2_1_32,&fastcall64_2_1_33,&fastcall64_2_1_34,&fastcall64_2_1_35,&fastcall64_2_1_36,&fastcall64_2_1_37,&fastcall64_2_1_38,&fastcall64_2_1_39,&fastcall64_2_1_40,&fastcall64_2_1_41,&fastcall64_2_1_42,&fastcall64_2_1_43,&fastcall64_2_1_44,&fastcall64_2_1_45,&fastcall64_2_1_46,&fastcall64_2_1_47,&fastcall64_2_1_48,&fastcall64_2_1_49,&fastcall64_2_1_50,&fastcall64_2_1_51,&fastcall64_2_1_52,&fastcall64_2_1_53,&fastcall64_2_1_54,&fastcall64_2_1_55,&fastcall64_2_1_56,&fastcall64_2_1_57,&fastcall64_2_1_58,&fastcall64_2_1_59,&fastcall64_2_1_60,&fastcall64_2_1_61,&fastcall64_2_1_62,&fastcall64_2_1_63,
    &fastcall64_3_0_0,&fastcall64_3_0_1,&fastcall64_3_0_2,&fastcall64_3_0_3,&fastcall64_3_0_4,&fastcall64_3_0_5,&fastcall64_3_0_6,&fastcall64_3_0_7,&fastcall64_3_0_8,&fastcall64_3_0_9,&fastcall64_3_0_10,&fastcall64_3_0_11,&fastcall64_3_0_12,&fastcall64_3_0_13,&fastcall64_3_0_14,&fastcall64_3_0_15,&fastcall64_3_0_16,&fastcall64_3_0_17,&fastcall64_3_0_18,&fastcall64_3_0_19,&fastcall64_3_0_20,&fastcall64_3_0_21,&fastcall64_3_0_22,&fastcall64_3_0_23,&fastcall64_3_0_24,&fastcall64_3_0_25,&fastcall64_3_0_26,&fastcall64_3_0_27,&fastcall64_3_0_28,&fastcall64_3_0_29,&fastcall64_3_0_30,&fastcall64_3_0_31,&fastcall64_3_0_32,&fastcall64_3_0_33,&fastcall64_3_0_34,&fastcall64_3_0_35,&fastcall64_3_0_36,&fastcall64_3_0_37,&fastcall64_3_0_38,&fastcall64_3_0_39,&fastcall64_3_0_40,&fastcall64_3_0_41,&fastcall64_3_0_42,&fastcall64_3_0_43,&fastcall64_3_0_44,&fastcall64_3_0_45,&fastcall64_3_0_46,&fastcall64_3_0_47,&fastcall64_3_0_48,&fastcall64_3_0_49,&fastcall64_3_0_50,&fastcall64_3_0_51,&fastcall64_3_0_52,&fastcall64_3_0_53,&fastcall64_3_0_54,&fastcall64_3_0_55,&fastcall64_3_0_56,&fastcall64_3_0_57,&fastcall64_3_0_58,&fastcall64_3_0_59,&fastcall64_3_0_60,&fastcall64_3_0_61,&fastcall64_3_0_62,&fastcall64_3_0_63,
    &fastcall64_3_1_0,&fastcall64_3_1_1,&fastcall64_3_1_2,&fastcall64_3_1_3,&fastcall64_3_1_4,&fastcall64_3_1_5,&fastcall64_3_1_6,&fastcall64_3_1_7,&fastcall64_3_1_8,&fastcall64_3_1_9,&fastcall64_3_1_10,&fastcall64_3_1_11,&fastcall64_3_1_12,&fastcall64_3_1_13,&fastcall64_3_1_14,&fastcall64_3_1_15,&fastcall64_3_1_16,&fastcall64_3_1_17,&fastcall64_3_1_18,&fastcall64_3_1_19,&fastcall64_3_1_20,&fastcall64_3_1_21,&fastcall64_3_1_22,&fastcall64_3_1_23,&fastcall64_3_1_24,&fastcall64_3_1_25,&fastcall64_3_1_26,&fastcall64_3_1_27,&fastcall64_3_1_28,&fastcall64_3_1_29,&fastcall64_3_1_30,&fastcall64_3_1_31,&fastcall64_3_1_32,&fastcall64_3_1_33,&fastcall64_3_1_34,&fastcall64_3_1_35,&fastcall64_3_1_36,&fastcall64_3_1_37,&fastcall64_3_1_38,&fastcall64_3_1_39,&fastcall64_3_1_40,&fastcall64_3_1_41,&fastcall64_3_1_42,&fastcall64_3_1_43,&fastcall64_3_1_44,&fastcall64_3_1_45,&fastcall64_3_1_46,&fastcall64_3_1_47,&fastcall64_3_1_48,&fastcall64_3_1_49,&fastcall64_3_1_50,&fastcall64_3_1_51,&fastcall64_3_1_52,&fastcall64_3_1_53,&fastcall64_3_1_54,&fastcall64_3_1_55,&fastcall64_3_1_56,&fastcall64_3_1_57,&fastcall64_3_1_58,&fastcall64_3_1_59,&fastcall64_3_1_60,&fastcall64_3_1_61,&fastcall64_3_1_62,&fastcall64_3_1_63,
    &fastcall64_4_0_0,&fastcall64_4_0_1,&fastcall64_4_0_2,&fastcall64_4_0_3,&fastcall64_4_0_4,&fastcall64_4_0_5,&fastcall64_4_0_6,&fastcall64_4_0_7,&fastcall64_4_0_8,&fastcall64_4_0_9,&fastcall64_4_0_10,&fastcall64_4_0_11,&fastcall64_4_0_12,&fastcall64_4_0_13,&fastcall64_4_0_14,&fastcall64_4_0_15,&fastcall64_4_0_16,&fastcall64_4_0_17,&fastcall64_4_0_18,&fastcall64_4_0_19,&fastcall64_4_0_20,&fastcall64_4_0_21,&fastcall64_4_0_22,&fastcall64_4_0_23,&fastcall64_4_0_24,&fastcall64_4_0_25,&fastcall64_4_0_26,&fastcall64_4_0_27,&fastcall64_4_0_28,&fastcall64_4_0_29,&fastcall64_4_0_30,&fastcall64_4_0_31,&fastcall64_4_0_32,&fastcall64_4_0_33,&fastcall64_4_0_34,&fastcall64_4_0_35,&fastcall64_4_0_36,&fastcall64_4_0_37,&fastcall64_4_0_38,&fastcall64_4_0_39,&fastcall64_4_0_40,&fastcall64_4_0_41,&fastcall64_4_0_42,&fastcall64_4_0_43,&fastcall64_4_0_44,&fastcall64_4_0_45,&fastcall64_4_0_46,&fastcall64_4_0_47,&fastcall64_4_0_48,&fastcall64_4_0_49,&fastcall64_4_0_50,&fastcall64_4_0_51,&fastcall64_4_0_52,&fastcall64_4_0_53,&fastcall64_4_0_54,&fastcall64_4_0_55,&fastcall64_4_0_56,&fastcall64_4_0_57,&fastcall64_4_0_58,&fastcall64_4_0_59,&fastcall64_4_0_60,&fastcall64_4_0_61,&fastcall64_4_0_62,&fastcall64_4_0_63,
    &fastcall64_4_1_0,&fastcall64_4_1_1,&fastcall64_4_1_2,&fastcall64_4_1_3,&fastcall64_4_1_4,&fastcall64_4_1_5,&fastcall64_4_1_6,&fastcall64_4_1_7,&fastcall64_4_1_8,&fastcall64_4_1_9,&fastcall64_4_1_10,&fastcall64_4_1_11,&fastcall64_4_1_12,&fastcall64_4_1_13,&fastcall64_4_1_14,&fastcall64_4_1_15,&fastcall64_4_1_16,&fastcall64_4_1_17,&fastcall64_4_1_18,&fastcall64_4_1_19,&fastcall64_4_1_20,&fastcall64_4_1_21,&fastcall64_4_1_22,&fastcall64_4_1_23,&fastcall64_4_1_24,&fastcall64_4_1_25,&fastcall64_4_1_26,&fastcall64_4_1_27,&fastcall64_4_1_28,&fastcall64_4_1_29,&fastcall64_4_1_30,&fastcall64_4_1_31,&fastcall64_4_1_32,&fastcall64_4_1_33,&fastcall64_4_1_34,&fastcall64_4_1_35,&fastcall64_4_1_36,&fastcall64_4_1_37,&fastcall64_4_1_38,&fastcall64_4_1_39,&fastcall64_4_1_40,&fastcall64_4_1_41,&fastcall64_4_1_42,&fastcall64_4_1_43,&fastcall64_4_1_44,&fastcall64_4_1_45,&fastcall64_4_1_46,&fastcall64_4_1_47,&fastcall64_4_1_48,&fastcall64_4_1_49,&fastcall64_4_1_50,&fastcall64_4_1_51,&fastcall64_4_1_52,&fastcall64_4_1_53,&fastcall64_4_1_54,&fastcall64_4_1_55,&fastcall64_4_1_56,&fastcall64_4_1_57,&fastcall64_4_1_58,&fastcall64_4_1_59,&fastcall64_4_1_60,&fastcall64_4_1_61,&fastcall64_4_1_62,&fastcall64_4_1_63,
    &fastcall64_5_0_0,&fastcall64_5_0_1,&fastcall64_5_0_2,&fastcall64_5_0_3,&fastcall64_5_0_4,&fastcall64_5_0_5,&fastcall64_5_0_6,&fastcall64_5_0_7,&fastcall64_5_0_8,&fastcall64_5_0_9,&fastcall64_5_0_10,&fastcall64_5_0_11,&fastcall64_5_0_12,&fastcall64_5_0_13,&fastcall64_5_0_14,&fastcall64_5_0_15,&fastcall64_5_0_16,&fastcall64_5_0_17,&fastcall64_5_0_18,&fastcall64_5_0_19,&fastcall64_5_0_20,&fastcall64_5_0_21,&fastcall64_5_0_22,&fastcall64_5_0_23,&fastcall64_5_0_24,&fastcall64_5_0_25,&fastcall64_5_0_26,&fastcall64_5_0_27,&fastcall64_5_0_28,&fastcall64_5_0_29,&fastcall64_5_0_30,&fastcall64_5_0_31,&fastcall64_5_0_32,&fastcall64_5_0_33,&fastcall64_5_0_34,&fastcall64_5_0_35,&fastcall64_5_0_36,&fastcall64_5_0_37,&fastcall64_5_0_38,&fastcall64_5_0_39,&fastcall64_5_0_40,&fastcall64_5_0_41,&fastcall64_5_0_42,&fastcall64_5_0_43,&fastcall64_5_0_44,&fastcall64_5_0_45,&fastcall64_5_0_46,&fastcall64_5_0_47,&fastcall64_5_0_48,&fastcall64_5_0_49,&fastcall64_5_0_50,&fastcall64_5_0_51,&fastcall64_5_0_52,&fastcall64_5_0_53,&fastcall64_5_0_54,&fastcall64_5_0_55,&fastcall64_5_0_56,&fastcall64_5_0_57,&fastcall64_5_0_58,&fastcall64_5_0_59,&fastcall64_5_0_60,&fastcall64_5_0_61,&fastcall64_5_0_62,&fastcall64_5_0_63,
    &fastcall64_5_1_0,&fastcall64_5_1_1,&fastcall64_5_1_2,&fastcall64_5_1_3,&fastcall64_5_1_4,&fastcall64_5_1_5,&fastcall64_5_1_6,&fastcall64_5_1_7,&fastcall64_5_1_8,&fastcall64_5_1_9,&fastcall64_5_1_10,&fastcall64_5_1_11,&fastcall64_5_1_12,&fastcall64_5_1_13,&fastcall64_5_1_14,&fastcall64_5_1_15,&fastcall64_5_1_16,&fastcall64_5_1_17,&fastcall64_5_1_18,&fastcall64_5_1_19,&fastcall64_5_1_20,&fastcall64_5_1_21,&fastcall64_5_1_22,&fastcall64_5_1_23,&fastcall64_5_1_24,&fastcall64_5_1_25,&fastcall64_5_1_26,&fastcall64_5_1_27,&fastcall64_5_1_28,&fastcall64_5_1_29,&fastcall64_5_1_30,&fastcall64_5_1_31,&fastcall64_5_1_32,&fastcall64_5_1_33,&fastcall64_5_1_34,&fastcall64_5_1_35,&fastcall64_5_1_36,&fastcall64_5_1_37,&fastcall64_5_1_38,&fastcall64_5_1_39,&fastcall64_5_1_40,&fastcall64_5_1_41,&fastcall64_5_1_42,&fastcall64_5_1_43,&fastcall64_5_1_44,&fastcall64_5_1_45,&fastcall64_5_1_46,&fastcall64_5_1_47,&fastcall64_5_1_48,&fastcall64_5_1_49,&fastcall64_5_1_50,&fastcall64_5_1_51,&fastcall64_5_1_52,&fastcall64_5_1_53,&fastcall64_5_1_54,&fastcall64_5_1_55,&fastcall64_5_1_56,&fastcall64_5_1_57,&fastcall64_5_1_58,&fastcall64_5_1_59,&fastcall64_5_1_60,&fastcall64_5_1_61,&fastcall64_5_1_62,&fastcall64_5_1_63,
    &fastcall64_6_0_0,&fastcall64_6_0_1,&fastcall64_6_0_2,&fastcall64_6_0_3,&fastcall64_6_0_4,&fastcall64_6_0_5,&fastcall64_6_0_6,&fastcall64_6_0_7,&fastcall64_6_0_8,&fastcall64_6_0_9,&fastcall64_6_0_10,&fastcall64_6_0_11,&fastcall64_6_0_12,&fastcall64_6_0_13,&fastcall64_6_0_14,&fastcall64_6_0_15,&fastcall64_6_0_16,&fastcall64_6_0_17,&fastcall64_6_0_18,&fastcall64_6_0_19,&fastcall64_6_0_20,&fastcall64_6_0_21,&fastcall64_6_0_22,&fastcall64_6_0_23,&fastcall64_6_0_24,&fastcall64_6_0_25,&fastcall64_6_0_26,&fastcall64_6_0_27,&fastcall64_6_0_28,&fastcall64_6_0_29,&fastcall64_6_0_30,&fastcall64_6_0_31,&fastcall64_6_0_32,&fastcall64_6_0_33,&fastcall64_6_0_34,&fastcall64_6_0_35,&fastcall64_6_0_36,&fastcall64_6_0_37,&fastcall64_6_0_38,&fastcall64_6_0_39,&fastcall64_6_0_40,&fastcall64_6_0_41,&fastcall64_6_0_42,&fastcall64_6_0_43,&fastcall64_6_0_44,&fastcall64_6_0_45,&fastcall64_6_0_46,&fastcall64_6_0_47,&fastcall64_6_0_48,&fastcall64_6_0_49,&fastcall64_6_0_50,&fastcall64_6_0_51,&fastcall64_6_0_52,&fastcall64_6_0_53,&fastcall64_6_0_54,&fastcall64_6_0_55,&fastcall64_6_0_56,&fastcall64_6_0_57,&fastcall64_6_0_58,&fastcall64_6_0_59,&fastcall64_6_0_60,&fastcall64_6_0_61,&fastcall64_6_0_62,&fastcall64_6_0_63,
    &fastcall64_6_1_0,&fastcall64_6_1_1,&fastcall64_6_1_2,&fastcall64_6_1_3,&fastcall64_6_1_4,&fastcall64_6_1_5,&fastcall64_6_1_6,&fastcall64_6_1_7,&fastcall64_6_1_8,&fastcall64_6_1_9,&fastcall64_6_1_10,&fastcall64_6_1_11,&fastcall64_6_1_12,&fastcall64_6_1_13,&fastcall64_6_1_14,&fastcall64_6_1_15,&fastcall64_6_1_16,&fastcall64_6_1_17,&fastcall64_6_1_18,&fastcall64_6_1_19,&fastcall64_6_1_20,&fastcall64_6_1_21,&fastcall64_6_1_22,&fastcall64_6_1_23,&fastcall64_6_1_24,&fastcall64_6_1_25,&fastcall64_6_1_26,&fastcall64_6_1_27,&fastcall64_6_1_28,&fastcall64_6_1_29,&fastcall64_6_1_30,&fastcall64_6_1_31,&fastcall64_6_1_32,&fastcall64_6_1_33,&fastcall64_6_1_34,&fastcall64_6_1_35,&fastcall64_6_1_36,&fastcall64_6_1_37,&fastcall64_6_1_38,&fastcall64_6_1_39,&fastcall64_6_1_40,&fastcall64_6_1_41,&fastcall64_6_1_42,&fastcall64_6_1_43,&fastcall64_6_1_44,&fastcall64_6_1_45,&fastcall64_6_1_46,&fastcall64_6_1_47,&fastcall64_6_1_48,&fastcall64_6_1_49,&fastcall64_6_1_50,&fastcall64_6_1_51,&fastcall64_6_1_52,&fastcall64_6_1_53,&fastcall64_6_1_54,&fastcall64_6_1_55,&fastcall64_6_1_56,&fastcall64_6_1_57,&fastcall64_6_1_58,&fastcall64_6_1_59,&fastcall64_6_1_60,&fastcall64_6_1_61,&fastcall64_6_1_62,&fastcall64_6_1_63,
    &fastcall64_7_0_0,&fastcall64_7_0_1,&fastcall64_7_0_2,&fastcall64_7_0_3,&fastcall64_7_0_4,&fastcall64_7_0_5,&fastcall64_7_0_6,&fastcall64_7_0_7,&fastcall64_7_0_8,&fastcall64_7_0_9,&fastcall64_7_0_10,&fastcall64_7_0_11,&fastcall64_7_0_12,&fastcall64_7_0_13,&fastcall64_7_0_14,&fastcall64_7_0_15,&fastcall64_7_0_16,&fastcall64_7_0_17,&fastcall64_7_0_18,&fastcall64_7_0_19,&fastcall64_7_0_20,&fastcall64_7_0_21,&fastcall64_7_0_22,&fastcall64_7_0_23,&fastcall64_7_0_24,&fastcall64_7_0_25,&fastcall64_7_0_26,&fastcall64_7_0_27,&fastcall64_7_0_28,&fastcall64_7_0_29,&fastcall64_7_0_30,&fastcall64_7_0_31,&fastcall64_7_0_32,&fastcall64_7_0_33,&fastcall64_7_0_34,&fastcall64_7_0_35,&fastcall64_7_0_36,&fastcall64_7_0_37,&fastcall64_7_0_38,&fastcall64_7_0_39,&fastcall64_7_0_40,&fastcall64_7_0_41,&fastcall64_7_0_42,&fastcall64_7_0_43,&fastcall64_7_0_44,&fastcall64_7_0_45,&fastcall64_7_0_46,&fastcall64_7_0_47,&fastcall64_7_0_48,&fastcall64_7_0_49,&fastcall64_7_0_50,&fastcall64_7_0_51,&fastcall64_7_0_52,&fastcall64_7_0_53,&fastcall64_7_0_54,&fastcall64_7_0_55,&fastcall64_7_0_56,&fastcall64_7_0_57,&fastcall64_7_0_58,&fastcall64_7_0_59,&fastcall64_7_0_60,&fastcall64_7_0_61,&fastcall64_7_0_62,&fastcall64_7_0_63,
    &fastcall64_7_1_0,&fastcall64_7_1_1,&fastcall64_7_1_2,&fastcall64_7_1_3,&fastcall64_7_1_4,&fastcall64_7_1_5,&fastcall64_7_1_6,&fastcall64_7_1_7,&fastcall64_7_1_8,&fastcall64_7_1_9,&fastcall64_7_1_10,&fastcall64_7_1_11,&fastcall64_7_1_12,&fastcall64_7_1_13,&fastcall64_7_1_14,&fastcall64_7_1_15,&fastcall64_7_1_16,&fastcall64_7_1_17,&fastcall64_7_1_18,&fastcall64_7_1_19,&fastcall64_7_1_20,&fastcall64_7_1_21,&fastcall64_7_1_22,&fastcall64_7_1_23,&fastcall64_7_1_24,&fastcall64_7_1_25,&fastcall64_7_1_26,&fastcall64_7_1_27,&fastcall64_7_1_28,&fastcall64_7_1_29,&fastcall64_7_1_30,&fastcall64_7_1_31,&fastcall64_7_1_32,&fastcall64_7_1_33,&fastcall64_7_1_34,&fastcall64_7_1_35,&fastcall64_7_1_36,&fastcall64_7_1_37,&fastcall64_7_1_38,&fastcall64_7_1_39,&fastcall64_7_1_40,&fastcall64_7_1_41,&fastcall64_7_1_42,&fastcall64_7_1_43,&fastcall64_7_1_44,&fastcall64_7_1_45,&fastcall64_7_1_46,&fastcall64_7_1_47,&fastcall64_7_1_48,&fastcall64_7_1_49,&fastcall64_7_1_50,&fastcall64_7_1_51,&fastcall64_7_1_52,&fastcall64_7_1_53,&fastcall64_7_1_54,&fastcall64_7_1_55,&fastcall64_7_1_56,&fastcall64_7_1_57,&fastcall64_7_1_58,&fastcall64_7_1_59,&fastcall64_7_1_60,&fastcall64_7_1_61,&fastcall64_7_1_62,&fastcall64_7_1_63,
    &fastcall64_8_0_0,&fastcall64_8_0_1,&fastcall64_8_0_2,&fastcall64_8_0_3,&fastcall64_8_0_4,&fastcall64_8_0_5,&fastcall64_8_0_6,&fastcall64_8_0_7,&fastcall64_8_0_8,&fastcall64_8_0_9,&fastcall64_8_0_10,&fastcall64_8_0_11,&fastcall64_8_0_12,&fastcall64_8_0_13,&fastcall64_8_0_14,&fastcall64_8_0_15,&fastcall64_8_0_16,&fastcall64_8_0_17,&fastcall64_8_0_18,&fastcall64_8_0_19,&fastcall64_8_0_20,&fastcall64_8_0_21,&fastcall64_8_0_22,&fastcall64_8_0_23,&fastcall64_8_0_24,&fastcall64_8_0_25,&fastcall64_8_0_26,&fastcall64_8_0_27,&fastcall64_8_0_28,&fastcall64_8_0_29,&fastcall64_8_0_30,&fastcall64_8_0_31,&fastcall64_8_0_32,&fastcall64_8_0_33,&fastcall64_8_0_34,&fastcall64_8_0_35,&fastcall64_8_0_36,&fastcall64_8_0_37,&fastcall64_8_0_38,&fastcall64_8_0_39,&fastcall64_8_0_40,&fastcall64_8_0_41,&fastcall64_8_0_42,&fastcall64_8_0_43,&fastcall64_8_0_44,&fastcall64_8_0_45,&fastcall64_8_0_46,&fastcall64_8_0_47,&fastcall64_8_0_48,&fastcall64_8_0_49,&fastcall64_8_0_50,&fastcall64_8_0_51,&fastcall64_8_0_52,&fastcall64_8_0_53,&fastcall64_8_0_54,&fastcall64_8_0_55,&fastcall64_8_0_56,&fastcall64_8_0_57,&fastcall64_8_0_58,&fastcall64_8_0_59,&fastcall64_8_0_60,&fastcall64_8_0_61,&fastcall64_8_0_62,&fastcall64_8_0_63,
    &fastcall64_8_1_0,&fastcall64_8_1_1,&fastcall64_8_1_2,&fastcall64_8_1_3,&fastcall64_8_1_4,&fastcall64_8_1_5,&fastcall64_8_1_6,&fastcall64_8_1_7,&fastcall64_8_1_8,&fastcall64_8_1_9,&fastcall64_8_1_10,&fastcall64_8_1_11,&fastcall64_8_1_12,&fastcall64_8_1_13,&fastcall64_8_1_14,&fastcall64_8_1_15,&fastcall64_8_1_16,&fastcall64_8_1_17,&fastcall64_8_1_18,&fastcall64_8_1_19,&fastcall64_8_1_20,&fastcall64_8_1_21,&fastcall64_8_1_22,&fastcall64_8_1_23,&fastcall64_8_1_24,&fastcall64_8_1_25,&fastcall64_8_1_26,&fastcall64_8_1_27,&fastcall64_8_1_28,&fastcall64_8_1_29,&fastcall64_8_1_30,&fastcall64_8_1_31,&fastcall64_8_1_32,&fastcall64_8_1_33,&fastcall64_8_1_34,&fastcall64_8_1_35,&fastcall64_8_1_36,&fastcall64_8_1_37,&fastcall64_8_1_38,&fastcall64_8_1_39,&fastcall64_8_1_40,&fastcall64_8_1_41,&fastcall64_8_1_42,&fastcall64_8_1_43,&fastcall64_8_1_44,&fastcall64_8_1_45,&fastcall64_8_1_46,&fastcall64_8_1_47,&fastcall64_8_1_48,&fastcall64_8_1_49,&fastcall64_8_1_50,&fastcall64_8_1_51,&fastcall64_8_1_52,&fastcall64_8_1_53,&fastcall64_8_1_54,&fastcall64_8_1_55,&fastcall64_8_1_56,&fastcall64_8_1_57,&fastcall64_8_1_58,&fastcall64_8_1_59,&fastcall64_8_1_60,&fastcall64_8_1_61,&fastcall64_8_1_62,&fastcall64_8_1_63,
    &fastcall64_9_0_0,&fastcall64_9_0_1,&fastcall64_9_0_2,&fastcall64_9_0_3,&fastcall64_9_0_4,&fastcall64_9_0_5,&fastcall64_9_0_6,&fastcall64_9_0_7,&fastcall64_9_0_8,&fastcall64_9_0_9,&fastcall64_9_0_10,&fastcall64_9_0_11,&fastcall64_9_0_12,&fastcall64_9_0_13,&fastcall64_9_0_14,&fastcall64_9_0_15,&fastcall64_9_0_16,&fastcall64_9_0_17,&fastcall64_9_0_18,&fastcall64_9_0_19,&fastcall64_9_0_20,&fastcall64_9_0_21,&fastcall64_9_0_22,&fastcall64_9_0_23,&fastcall64_9_0_24,&fastcall64_9_0_25,&fastcall64_9_0_26,&fastcall64_9_0_27,&fastcall64_9_0_28,&fastcall64_9_0_29,&fastcall64_9_0_30,&fastcall64_9_0_31,&fastcall64_9_0_32,&fastcall64_9_0_33,&fastcall64_9_0_34,&fastcall64_9_0_35,&fastcall64_9_0_36,&fastcall64_9_0_37,&fastcall64_9_0_38,&fastcall64_9_0_39,&fastcall64_9_0_40,&fastcall64_9_0_41,&fastcall64_9_0_42,&fastcall64_9_0_43,&fastcall64_9_0_44,&fastcall64_9_0_45,&fastcall64_9_0_46,&fastcall64_9_0_47,&fastcall64_9_0_48,&fastcall64_9_0_49,&fastcall64_9_0_50,&fastcall64_9_0_51,&fastcall64_9_0_52,&fastcall64_9_0_53,&fastcall64_9_0_54,&fastcall64_9_0_55,&fastcall64_9_0_56,&fastcall64_9_0_57,&fastcall64_9_0_58,&fastcall64_9_0_59,&fastcall64_9_0_60,&fastcall64_9_0_61,&fastcall64_9_0_62,&fastcall64_9_0_63,
    &fastcall64_9_1_0,&fastcall64_9_1_1,&fastcall64_9_1_2,&fastcall64_9_1_3,&fastcall64_9_1_4,&fastcall64_9_1_5,&fastcall64_9_1_6,&fastcall64_9_1_7,&fastcall64_9_1_8,&fastcall64_9_1_9,&fastcall64_9_1_10,&fastcall64_9_1_11,&fastcall64_9_1_12,&fastcall64_9_1_13,&fastcall64_9_1_14,&fastcall64_9_1_15,&fastcall64_9_1_16,&fastcall64_9_1_17,&fastcall64_9_1_18,&fastcall64_9_1_19,&fastcall64_9_1_20,&fastcall64_9_1_21,&fastcall64_9_1_22,&fastcall64_9_1_23,&fastcall64_9_1_24,&fastcall64_9_1_25,&fastcall64_9_1_26,&fastcall64_9_1_27,&fastcall64_9_1_28,&fastcall64_9_1_29,&fastcall64_9_1_30,&fastcall64_9_1_31,&fastcall64_9_1_32,&fastcall64_9_1_33,&fastcall64_9_1_34,&fastcall64_9_1_35,&fastcall64_9_1_36,&fastcall64_9_1_37,&fastcall64_9_1_38,&fastcall64_9_1_39,&fastcall64_9_1_40,&fastcall64_9_1_41,&fastcall64_9_1_42,&fastcall64_9_1_43,&fastcall64_9_1_44,&fastcall64_9_1_45,&fastcall64_9_1_46,&fastcall64_9_1_47,&fastcall64_9_1_48,&fastcall64_9_1_49,&fastcall64_9_1_50,&fastcall64_9_1_51,&fastcall64_9_1_52,&fastcall64_9_1_53,&fastcall64_9_1_54,&fastcall64_9_1_55,&fastcall64_9_1_56,&fastcall64_9_1_57,&fastcall64_9_1_58,&fastcall64_9_1_59,&fastcall64_9_1_60,&fastcall64_9_1_61,&fastcall64_9_1_62,&fastcall64_9_1_63,
    &fastcall64_10_0_0,&fastcall64_10_0_1,&fastcall64_10_0_2,&fastcall64_10_0_3,&fastcall64_10_0_4,&fastcall64_10_0_5,&fastcall64_10_0_6,&fastcall64_10_0_7,&fastcall64_10_0_8,&fastcall64_10_0_9,&fastcall64_10_0_10,&fastcall64_10_0_11,&fastcall64_10_0_12,&fastcall64_10_0_13,&fastcall64_10_0_14,&fastcall64_10_0_15,&fastcall64_10_0_16,&fastcall64_10_0_17,&fastcall64_10_0_18,&fastcall64_10_0_19,&fastcall64_10_0_20,&fastcall64_10_0_21,&fastcall64_10_0_22,&fastcall64_10_0_23,&fastcall64_10_0_24,&fastcall64_10_0_25,&fastcall64_10_0_26,&fastcall64_10_0_27,&fastcall64_10_0_28,&fastcall64_10_0_29,&fastcall64_10_0_30,&fastcall64_10_0_31,&fastcall64_10_0_32,&fastcall64_10_0_33,&fastcall64_10_0_34,&fastcall64_10_0_35,&fastcall64_10_0_36,&fastcall64_10_0_37,&fastcall64_10_0_38,&fastcall64_10_0_39,&fastcall64_10_0_40,&fastcall64_10_0_41,&fastcall64_10_0_42,&fastcall64_10_0_43,&fastcall64_10_0_44,&fastcall64_10_0_45,&fastcall64_10_0_46,&fastcall64_10_0_47,&fastcall64_10_0_48,&fastcall64_10_0_49,&fastcall64_10_0_50,&fastcall64_10_0_51,&fastcall64_10_0_52,&fastcall64_10_0_53,&fastcall64_10_0_54,&fastcall64_10_0_55,&fastcall64_10_0_56,&fastcall64_10_0_57,&fastcall64_10_0_58,&fastcall64_10_0_59,&fastcall64_10_0_60,&fastcall64_10_0_61,&fastcall64_10_0_62,&fastcall64_10_0_63,
    &fastcall64_10_1_0,&fastcall64_10_1_1,&fastcall64_10_1_2,&fastcall64_10_1_3,&fastcall64_10_1_4,&fastcall64_10_1_5,&fastcall64_10_1_6,&fastcall64_10_1_7,&fastcall64_10_1_8,&fastcall64_10_1_9,&fastcall64_10_1_10,&fastcall64_10_1_11,&fastcall64_10_1_12,&fastcall64_10_1_13,&fastcall64_10_1_14,&fastcall64_10_1_15,&fastcall64_10_1_16,&fastcall64_10_1_17,&fastcall64_10_1_18,&fastcall64_10_1_19,&fastcall64_10_1_20,&fastcall64_10_1_21,&fastcall64_10_1_22,&fastcall64_10_1_23,&fastcall64_10_1_24,&fastcall64_10_1_25,&fastcall64_10_1_26,&fastcall64_10_1_27,&fastcall64_10_1_28,&fastcall64_10_1_29,&fastcall64_10_1_30,&fastcall64_10_1_31,&fastcall64_10_1_32,&fastcall64_10_1_33,&fastcall64_10_1_34,&fastcall64_10_1_35,&fastcall64_10_1_36,&fastcall64_10_1_37,&fastcall64_10_1_38,&fastcall64_10_1_39,&fastcall64_10_1_40,&fastcall64_10_1_41,&fastcall64_10_1_42,&fastcall64_10_1_43,&fastcall64_10_1_44,&fastcall64_10_1_45,&fastcall64_10_1_46,&fastcall64_10_1_47,&fastcall64_10_1_48,&fastcall64_10_1_49,&fastcall64_10_1_50,&fastcall64_10_1_51,&fastcall64_10_1_52,&fastcall64_10_1_53,&fastcall64_10_1_54,&fastcall64_10_1_55,&fastcall64_10_1_56,&fastcall64_10_1_57,&fastcall64_10_1_58,&fastcall64_10_1_59,&fastcall64_10_1_60,&fastcall64_10_1_61,&fastcall64_10_1_62,&fastcall64_10_1_63,
    &fastcall64_11_0_0,&fastcall64_11_0_1,&fastcall64_11_0_2,&fastcall64_11_0_3,&fastcall64_11_0_4,&fastcall64_11_0_5,&fastcall64_11_0_6,&fastcall64_11_0_7,&fastcall64_11_0_8,&fastcall64_11_0_9,&fastcall64_11_0_10,&fastcall64_11_0_11,&fastcall64_11_0_12,&fastcall64_11_0_13,&fastcall64_11_0_14,&fastcall64_11_0_15,&fastcall64_11_0_16,&fastcall64_11_0_17,&fastcall64_11_0_18,&fastcall64_11_0_19,&fastcall64_11_0_20,&fastcall64_11_0_21,&fastcall64_11_0_22,&fastcall64_11_0_23,&fastcall64_11_0_24,&fastcall64_11_0_25,&fastcall64_11_0_26,&fastcall64_11_0_27,&fastcall64_11_0_28,&fastcall64_11_0_29,&fastcall64_11_0_30,&fastcall64_11_0_31,&fastcall64_11_0_32,&fastcall64_11_0_33,&fastcall64_11_0_34,&fastcall64_11_0_35,&fastcall64_11_0_36,&fastcall64_11_0_37,&fastcall64_11_0_38,&fastcall64_11_0_39,&fastcall64_11_0_40,&fastcall64_11_0_41,&fastcall64_11_0_42,&fastcall64_11_0_43,&fastcall64_11_0_44,&fastcall64_11_0_45,&fastcall64_11_0_46,&fastcall64_11_0_47,&fastcall64_11_0_48,&fastcall64_11_0_49,&fastcall64_11_0_50,&fastcall64_11_0_51,&fastcall64_11_0_52,&fastcall64_11_0_53,&fastcall64_11_0_54,&fastcall64_11_0_55,&fastcall64_11_0_56,&fastcall64_11_0_57,&fastcall64_11_0_58,&fastcall64_11_0_59,&fastcall64_11_0_60,&fastcall64_11_0_61,&fastcall64_11_0_62,&fastcall64_11_0_63,
    &fastcall64_11_1_0,&fastcall64_11_1_1,&fastcall64_11_1_2,&fastcall64_11_1_3,&fastcall64_11_1_4,&fastcall64_11_1_5,&fastcall64_11_1_6,&fastcall64_11_1_7,&fastcall64_11_1_8,&fastcall64_11_1_9,&fastcall64_11_1_10,&fastcall64_11_1_11,&fastcall64_11_1_12,&fastcall64_11_1_13,&fastcall64_11_1_14,&fastcall64_11_1_15,&fastcall64_11_1_16,&fastcall64_11_1_17,&fastcall64_11_1_18,&fastcall64_11_1_19,&fastcall64_11_1_20,&fastcall64_11_1_21,&fastcall64_11_1_22,&fastcall64_11_1_23,&fastcall64_11_1_24,&fastcall64_11_1_25,&fastcall64_11_1_26,&fastcall64_11_1_27,&fastcall64_11_1_28,&fastcall64_11_1_29,&fastcall64_11_1_30,&fastcall64_11_1_31,&fastcall64_11_1_32,&fastcall64_11_1_33,&fastcall64_11_1_34,&fastcall64_11_1_35,&fastcall64_11_1_36,&fastcall64_11_1_37,&fastcall64_11_1_38,&fastcall64_11_1_39,&fastcall64_11_1_40,&fastcall64_11_1_41,&fastcall64_11_1_42,&fastcall64_11_1_43,&fastcall64_11_1_44,&fastcall64_11_1_45,&fastcall64_11_1_46,&fastcall64_11_1_47,&fastcall64_11_1_48,&fastcall64_11_1_49,&fastcall64_11_1_50,&fastcall64_11_1_51,&fastcall64_11_1_52,&fastcall64_11_1_53,&fastcall64_11_1_54,&fastcall64_11_1_55,&fastcall64_11_1_56,&fastcall64_11_1_57,&fastcall64_11_1_58,&fastcall64_11_1_59,&fastcall64_11_1_60,&fastcall64_11_1_61,&fastcall64_11_1_62,&fastcall64_11_1_63,
    &fastcall64_12_0_0,&fastcall64_12_0_1,&fastcall64_12_0_2,&fastcall64_12_0_3,&fastcall64_12_0_4,&fastcall64_12_0_5,&fastcall64_12_0_6,&fastcall64_12_0_7,&fastcall64_12_0_8,&fastcall64_12_0_9,&fastcall64_12_0_10,&fastcall64_12_0_11,&fastcall64_12_0_12,&fastcall64_12_0_13,&fastcall64_12_0_14,&fastcall64_12_0_15,&fastcall64_12_0_16,&fastcall64_12_0_17,&fastcall64_12_0_18,&fastcall64_12_0_19,&fastcall64_12_0_20,&fastcall64_12_0_21,&fastcall64_12_0_22,&fastcall64_12_0_23,&fastcall64_12_0_24,&fastcall64_12_0_25,&fastcall64_12_0_26,&fastcall64_12_0_27,&fastcall64_12_0_28,&fastcall64_12_0_29,&fastcall64_12_0_30,&fastcall64_12_0_31,&fastcall64_12_0_32,&fastcall64_12_0_33,&fastcall64_12_0_34,&fastcall64_12_0_35,&fastcall64_12_0_36,&fastcall64_12_0_37,&fastcall64_12_0_38,&fastcall64_12_0_39,&fastcall64_12_0_40,&fastcall64_12_0_41,&fastcall64_12_0_42,&fastcall64_12_0_43,&fastcall64_12_0_44,&fastcall64_12_0_45,&fastcall64_12_0_46,&fastcall64_12_0_47,&fastcall64_12_0_48,&fastcall64_12_0_49,&fastcall64_12_0_50,&fastcall64_12_0_51,&fastcall64_12_0_52,&fastcall64_12_0_53,&fastcall64_12_0_54,&fastcall64_12_0_55,&fastcall64_12_0_56,&fastcall64_12_0_57,&fastcall64_12_0_58,&fastcall64_12_0_59,&fastcall64_12_0_60,&fastcall64_12_0_61,&fastcall64_12_0_62,&fastcall64_12_0_63,
    &fastcall64_12_1_0,&fastcall64_12_1_1,&fastcall64_12_1_2,&fastcall64_12_1_3,&fastcall64_12_1_4,&fastcall64_12_1_5,&fastcall64_12_1_6,&fastcall64_12_1_7,&fastcall64_12_1_8,&fastcall64_12_1_9,&fastcall64_12_1_10,&fastcall64_12_1_11,&fastcall64_12_1_12,&fastcall64_12_1_13,&fastcall64_12_1_14,&fastcall64_12_1_15,&fastcall64_12_1_16,&fastcall64_12_1_17,&fastcall64_12_1_18,&fastcall64_12_1_19,&fastcall64_12_1_20,&fastcall64_12_1_21,&fastcall64_12_1_22,&fastcall64_12_1_23,&fastcall64_12_1_24,&fastcall64_12_1_25,&fastcall64_12_1_26,&fastcall64_12_1_27,&fastcall64_12_1_28,&fastcall64_12_1_29,&fastcall64_12_1_30,&fastcall64_12_1_31,&fastcall64_12_1_32,&fastcall64_12_1_33,&fastcall64_12_1_34,&fastcall64_12_1_35,&fastcall64_12_1_36,&fastcall64_12_1_37,&fastcall64_12_1_38,&fastcall64_12_1_39,&fastcall64_12_1_40,&fastcall64_12_1_41,&fastcall64_12_1_42,&fastcall64_12_1_43,&fastcall64_12_1_44,&fastcall64_12_1_45,&fastcall64_12_1_46,&fastcall64_12_1_47,&fastcall64_12_1_48,&fastcall64_12_1_49,&fastcall64_12_1_50,&fastcall64_12_1_51,&fastcall64_12_1_52,&fastcall64_12_1_53,&fastcall64_12_1_54,&fastcall64_12_1_55,&fastcall64_12_1_56,&fastcall64_12_1_57,&fastcall64_12_1_58,&fastcall64_12_1_59,&fastcall64_12_1_60,&fastcall64_12_1_61,&fastcall64_12_1_62,&fastcall64_12_1_63,
    &fastcall64_13_0_0,&fastcall64_13_0_1,&fastcall64_13_0_2,&fastcall64_13_0_3,&fastcall64_13_0_4,&fastcall64_13_0_5,&fastcall64_13_0_6,&fastcall64_13_0_7,&fastcall64_13_0_8,&fastcall64_13_0_9,&fastcall64_13_0_10,&fastcall64_13_0_11,&fastcall64_13_0_12,&fastcall64_13_0_13,&fastcall64_13_0_14,&fastcall64_13_0_15,&fastcall64_13_0_16,&fastcall64_13_0_17,&fastcall64_13_0_18,&fastcall64_13_0_19,&fastcall64_13_0_20,&fastcall64_13_0_21,&fastcall64_13_0_22,&fastcall64_13_0_23,&fastcall64_13_0_24,&fastcall64_13_0_25,&fastcall64_13_0_26,&fastcall64_13_0_27,&fastcall64_13_0_28,&fastcall64_13_0_29,&fastcall64_13_0_30,&fastcall64_13_0_31,&fastcall64_13_0_32,&fastcall64_13_0_33,&fastcall64_13_0_34,&fastcall64_13_0_35,&fastcall64_13_0_36,&fastcall64_13_0_37,&fastcall64_13_0_38,&fastcall64_13_0_39,&fastcall64_13_0_40,&fastcall64_13_0_41,&fastcall64_13_0_42,&fastcall64_13_0_43,&fastcall64_13_0_44,&fastcall64_13_0_45,&fastcall64_13_0_46,&fastcall64_13_0_47,&fastcall64_13_0_48,&fastcall64_13_0_49,&fastcall64_13_0_50,&fastcall64_13_0_51,&fastcall64_13_0_52,&fastcall64_13_0_53,&fastcall64_13_0_54,&fastcall64_13_0_55,&fastcall64_13_0_56,&fastcall64_13_0_57,&fastcall64_13_0_58,&fastcall64_13_0_59,&fastcall64_13_0_60,&fastcall64_13_0_61,&fastcall64_13_0_62,&fastcall64_13_0_63,
    &fastcall64_13_1_0,&fastcall64_13_1_1,&fastcall64_13_1_2,&fastcall64_13_1_3,&fastcall64_13_1_4,&fastcall64_13_1_5,&fastcall64_13_1_6,&fastcall64_13_1_7,&fastcall64_13_1_8,&fastcall64_13_1_9,&fastcall64_13_1_10,&fastcall64_13_1_11,&fastcall64_13_1_12,&fastcall64_13_1_13,&fastcall64_13_1_14,&fastcall64_13_1_15,&fastcall64_13_1_16,&fastcall64_13_1_17,&fastcall64_13_1_18,&fastcall64_13_1_19,&fastcall64_13_1_20,&fastcall64_13_1_21,&fastcall64_13_1_22,&fastcall64_13_1_23,&fastcall64_13_1_24,&fastcall64_13_1_25,&fastcall64_13_1_26,&fastcall64_13_1_27,&fastcall64_13_1_28,&fastcall64_13_1_29,&fastcall64_13_1_30,&fastcall64_13_1_31,&fastcall64_13_1_32,&fastcall64_13_1_33,&fastcall64_13_1_34,&fastcall64_13_1_35,&fastcall64_13_1_36,&fastcall64_13_1_37,&fastcall64_13_1_38,&fastcall64_13_1_39,&fastcall64_13_1_40,&fastcall64_13_1_41,&fastcall64_13_1_42,&fastcall64_13_1_43,&fastcall64_13_1_44,&fastcall64_13_1_45,&fastcall64_13_1_46,&fastcall64_13_1_47,&fastcall64_13_1_48,&fastcall64_13_1_49,&fastcall64_13_1_50,&fastcall64_13_1_51,&fastcall64_13_1_52,&fastcall64_13_1_53,&fastcall64_13_1_54,&fastcall64_13_1_55,&fastcall64_13_1_56,&fastcall64_13_1_57,&fastcall64_13_1_58,&fastcall64_13_1_59,&fastcall64_13_1_60,&fastcall64_13_1_61,&fastcall64_13_1_62,&fastcall64_13_1_63,
    &fastcall64_14_0_0,&fastcall64_14_0_1,&fastcall64_14_0_2,&fastcall64_14_0_3,&fastcall64_14_0_4,&fastcall64_14_0_5,&fastcall64_14_0_6,&fastcall64_14_0_7,&fastcall64_14_0_8,&fastcall64_14_0_9,&fastcall64_14_0_10,&fastcall64_14_0_11,&fastcall64_14_0_12,&fastcall64_14_0_13,&fastcall64_14_0_14,&fastcall64_14_0_15,&fastcall64_14_0_16,&fastcall64_14_0_17,&fastcall64_14_0_18,&fastcall64_14_0_19,&fastcall64_14_0_20,&fastcall64_14_0_21,&fastcall64_14_0_22,&fastcall64_14_0_23,&fastcall64_14_0_24,&fastcall64_14_0_25,&fastcall64_14_0_26,&fastcall64_14_0_27,&fastcall64_14_0_28,&fastcall64_14_0_29,&fastcall64_14_0_30,&fastcall64_14_0_31,&fastcall64_14_0_32,&fastcall64_14_0_33,&fastcall64_14_0_34,&fastcall64_14_0_35,&fastcall64_14_0_36,&fastcall64_14_0_37,&fastcall64_14_0_38,&fastcall64_14_0_39,&fastcall64_14_0_40,&fastcall64_14_0_41,&fastcall64_14_0_42,&fastcall64_14_0_43,&fastcall64_14_0_44,&fastcall64_14_0_45,&fastcall64_14_0_46,&fastcall64_14_0_47,&fastcall64_14_0_48,&fastcall64_14_0_49,&fastcall64_14_0_50,&fastcall64_14_0_51,&fastcall64_14_0_52,&fastcall64_14_0_53,&fastcall64_14_0_54,&fastcall64_14_0_55,&fastcall64_14_0_56,&fastcall64_14_0_57,&fastcall64_14_0_58,&fastcall64_14_0_59,&fastcall64_14_0_60,&fastcall64_14_0_61,&fastcall64_14_0_62,&fastcall64_14_0_63,
    &fastcall64_14_1_0,&fastcall64_14_1_1,&fastcall64_14_1_2,&fastcall64_14_1_3,&fastcall64_14_1_4,&fastcall64_14_1_5,&fastcall64_14_1_6,&fastcall64_14_1_7,&fastcall64_14_1_8,&fastcall64_14_1_9,&fastcall64_14_1_10,&fastcall64_14_1_11,&fastcall64_14_1_12,&fastcall64_14_1_13,&fastcall64_14_1_14,&fastcall64_14_1_15,&fastcall64_14_1_16,&fastcall64_14_1_17,&fastcall64_14_1_18,&fastcall64_14_1_19,&fastcall64_14_1_20,&fastcall64_14_1_21,&fastcall64_14_1_22,&fastcall64_14_1_23,&fastcall64_14_1_24,&fastcall64_14_1_25,&fastcall64_14_1_26,&fastcall64_14_1_27,&fastcall64_14_1_28,&fastcall64_14_1_29,&fastcall64_14_1_30,&fastcall64_14_1_31,&fastcall64_14_1_32,&fastcall64_14_1_33,&fastcall64_14_1_34,&fastcall64_14_1_35,&fastcall64_14_1_36,&fastcall64_14_1_37,&fastcall64_14_1_38,&fastcall64_14_1_39,&fastcall64_14_1_40,&fastcall64_14_1_41,&fastcall64_14_1_42,&fastcall64_14_1_43,&fastcall64_14_1_44,&fastcall64_14_1_45,&fastcall64_14_1_46,&fastcall64_14_1_47,&fastcall64_14_1_48,&fastcall64_14_1_49,&fastcall64_14_1_50,&fastcall64_14_1_51,&fastcall64_14_1_52,&fastcall64_14_1_53,&fastcall64_14_1_54,&fastcall64_14_1_55,&fastcall64_14_1_56,&fastcall64_14_1_57,&fastcall64_14_1_58,&fastcall64_14_1_59,&fastcall64_14_1_60,&fastcall64_14_1_61,&fastcall64_14_1_62,&fastcall64_14_1_63,
    &fastcall64_15_0_0,&fastcall64_15_0_1,&fastcall64_15_0_2,&fastcall64_15_0_3,&fastcall64_15_0_4,&fastcall64_15_0_5,&fastcall64_15_0_6,&fastcall64_15_0_7,&fastcall64_15_0_8,&fastcall64_15_0_9,&fastcall64_15_0_10,&fastcall64_15_0_11,&fastcall64_15_0_12,&fastcall64_15_0_13,&fastcall64_15_0_14,&fastcall64_15_0_15,&fastcall64_15_0_16,&fastcall64_15_0_17,&fastcall64_15_0_18,&fastcall64_15_0_19,&fastcall64_15_0_20,&fastcall64_15_0_21,&fastcall64_15_0_22,&fastcall64_15_0_23,&fastcall64_15_0_24,&fastcall64_15_0_25,&fastcall64_15_0_26,&fastcall64_15_0_27,&fastcall64_15_0_28,&fastcall64_15_0_29,&fastcall64_15_0_30,&fastcall64_15_0_31,&fastcall64_15_0_32,&fastcall64_15_0_33,&fastcall64_15_0_34,&fastcall64_15_0_35,&fastcall64_15_0_36,&fastcall64_15_0_37,&fastcall64_15_0_38,&fastcall64_15_0_39,&fastcall64_15_0_40,&fastcall64_15_0_41,&fastcall64_15_0_42,&fastcall64_15_0_43,&fastcall64_15_0_44,&fastcall64_15_0_45,&fastcall64_15_0_46,&fastcall64_15_0_47,&fastcall64_15_0_48,&fastcall64_15_0_49,&fastcall64_15_0_50,&fastcall64_15_0_51,&fastcall64_15_0_52,&fastcall64_15_0_53,&fastcall64_15_0_54,&fastcall64_15_0_55,&fastcall64_15_0_56,&fastcall64_15_0_57,&fastcall64_15_0_58,&fastcall64_15_0_59,&fastcall64_15_0_60,&fastcall64_15_0_61,&fastcall64_15_0_62,&fastcall64_15_0_63,
    &fastcall64_15_1_0,&fastcall64_15_1_1,&fastcall64_15_1_2,&fastcall64_15_1_3,&fastcall64_15_1_4,&fastcall64_15_1_5,&fastcall64_15_1_6,&fastcall64_15_1_7,&fastcall64_15_1_8,&fastcall64_15_1_9,&fastcall64_15_1_10,&fastcall64_15_1_11,&fastcall64_15_1_12,&fastcall64_15_1_13,&fastcall64_15_1_14,&fastcall64_15_1_15,&fastcall64_15_1_16,&fastcall64_15_1_17,&fastcall64_15_1_18,&fastcall64_15_1_19,&fastcall64_15_1_20,&fastcall64_15_1_21,&fastcall64_15_1_22,&fastcall64_15_1_23,&fastcall64_15_1_24,&fastcall64_15_1_25,&fastcall64_15_1_26,&fastcall64_15_1_27,&fastcall64_15_1_28,&fastcall64_15_1_29,&fastcall64_15_1_30,&fastcall64_15_1_31,&fastcall64_15_1_32,&fastcall64_15_1_33,&fastcall64_15_1_34,&fastcall64_15_1_35,&fastcall64_15_1_36,&fastcall64_15_1_37,&fastcall64_15_1_38,&fastcall64_15_1_39,&fastcall64_15_1_40,&fastcall64_15_1_41,&fastcall64_15_1_42,&fastcall64_15_1_43,&fastcall64_15_1_44,&fastcall64_15_1_45,&fastcall64_15_1_46,&fastcall64_15_1_47,&fastcall64_15_1_48,&fastcall64_15_1_49,&fastcall64_15_1_50,&fastcall64_15_1_51,&fastcall64_15_1_52,&fastcall64_15_1_53,&fastcall64_15_1_54,&fastcall64_15_1_55,&fastcall64_15_1_56,&fastcall64_15_1_57,&fastcall64_15_1_58,&fastcall64_15_1_59,&fastcall64_15_1_60,&fastcall64_15_1_61,&fastcall64_15_1_62,&fastcall64_15_1_63,
};

