vec4f fastcall64_0_0_0 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_1 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_2 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_3 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_4 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_5 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_6 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_7 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_8 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_9 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_10 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_11 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_12 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_13 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_14 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_0_15 ( void * fn, vec4f *  ) {
    using call_kind = int64_t ( * ) (  );
    return Rx ( call_kind(fn) (  ) );
}

vec4f fastcall64_0_1_0 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_1 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_2 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_3 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_4 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_5 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_6 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_7 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_8 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_9 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_10 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_11 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_12 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_13 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_14 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_0_1_15 ( void * fn, vec4f *  ) {
    using call_kind = vec4f ( * ) (  );
    return call_kind(fn) (  );
}

vec4f fastcall64_1_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t );
    return Rx ( call_kind(fn) ( AX(0) ) );
}

vec4f fastcall64_1_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double );
    return Rx ( call_kind(fn) ( AD(0) ) );
}

vec4f fastcall64_1_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_1_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t );
    return call_kind(fn) ( AX(0) );
}

vec4f fastcall64_1_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double );
    return call_kind(fn) ( AD(0) );
}

vec4f fastcall64_2_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1) ) );
}

vec4f fastcall64_2_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1) ) );
}

vec4f fastcall64_2_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1) ) );
}

vec4f fastcall64_2_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1) ) );
}

vec4f fastcall64_2_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_2_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1) );
}

vec4f fastcall64_2_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t );
    return call_kind(fn) ( AD(0),AX(1) );
}

vec4f fastcall64_2_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double );
    return call_kind(fn) ( AX(0),AD(1) );
}

vec4f fastcall64_2_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double );
    return call_kind(fn) ( AD(0),AD(1) );
}

vec4f fastcall64_3_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2) ) );
}

vec4f fastcall64_3_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2) ) );
}

vec4f fastcall64_3_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2) ) );
}

vec4f fastcall64_3_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2) ) );
}

vec4f fastcall64_3_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2) );
}

vec4f fastcall64_3_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2) );
}

vec4f fastcall64_3_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2) );
}

vec4f fastcall64_3_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2) );
}

vec4f fastcall64_3_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2) );
}

vec4f fastcall64_4_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3) ) );
}

vec4f fastcall64_4_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3) ) );
}

vec4f fastcall64_4_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3) ) );
}

vec4f fastcall64_4_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3) ) );
}

vec4f fastcall64_4_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3) );
}

vec4f fastcall64_4_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3) );
}

vec4f fastcall64_4_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3) );
}

vec4f fastcall64_4_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3) );
}

vec4f fastcall64_4_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3) );
}

vec4f fastcall64_5_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4) ) );
}

vec4f fastcall64_5_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4) ) );
}

vec4f fastcall64_5_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4) );
}

vec4f fastcall64_5_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4) );
}

vec4f fastcall64_5_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4) );
}

vec4f fastcall64_6_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5) ) );
}

vec4f fastcall64_6_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5) );
}

vec4f fastcall64_6_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5) );
}

vec4f fastcall64_7_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6) ) );
}

vec4f fastcall64_7_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_7_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6) );
}

vec4f fastcall64_8_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7) ) );
}

vec4f fastcall64_8_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_8_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7) );
}

vec4f fastcall64_9_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) ) );
}

vec4f fastcall64_9_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_9_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8) );
}

vec4f fastcall64_10_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) ) );
}

vec4f fastcall64_10_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_10_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9) );
}

vec4f fastcall64_11_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) ) );
}

vec4f fastcall64_11_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_11_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10) );
}

vec4f fastcall64_12_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) ) );
}

vec4f fastcall64_12_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_12_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11) );
}

vec4f fastcall64_13_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) ) );
}

vec4f fastcall64_13_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_13_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12) );
}

vec4f fastcall64_14_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) ) );
}

vec4f fastcall64_14_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_14_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13) );
}

vec4f fastcall64_15_0_0 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_1 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_2 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_3 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_4 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_5 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_6 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_7 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_8 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_9 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_10 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_11 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_12 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_13 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_14 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_0_15 ( void * fn, vec4f * args ) {
    using call_kind = int64_t ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return Rx ( call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) ) );
}

vec4f fastcall64_15_1_0 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_1 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_2 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_3 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_4 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_5 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_6 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_7 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AX(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_8 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_9 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_10 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_11 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,int64_t,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AX(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_12 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_13 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,int64_t,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AX(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_14 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( int64_t,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AX(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

vec4f fastcall64_15_1_15 ( void * fn, vec4f * args ) {
    using call_kind = vec4f ( * ) ( double,double,double,double,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t,int64_t );
    return call_kind(fn) ( AD(0),AD(1),AD(2),AD(3),AX(4),AX(5),AX(6),AX(7),AX(8),AX(9),AX(10),AX(11),AX(12),AX(13),AX(14) );
}

#define MAX_WRAPPER_ARGUMENTS  16

FastCallWrapper fastcall64_table [] = {
    &fastcall64_0_0_0,&fastcall64_0_0_1,&fastcall64_0_0_2,&fastcall64_0_0_3,&fastcall64_0_0_4,&fastcall64_0_0_5,&fastcall64_0_0_6,&fastcall64_0_0_7,&fastcall64_0_0_8,&fastcall64_0_0_9,&fastcall64_0_0_10,&fastcall64_0_0_11,&fastcall64_0_0_12,&fastcall64_0_0_13,&fastcall64_0_0_14,&fastcall64_0_0_15,
    &fastcall64_0_1_0,&fastcall64_0_1_1,&fastcall64_0_1_2,&fastcall64_0_1_3,&fastcall64_0_1_4,&fastcall64_0_1_5,&fastcall64_0_1_6,&fastcall64_0_1_7,&fastcall64_0_1_8,&fastcall64_0_1_9,&fastcall64_0_1_10,&fastcall64_0_1_11,&fastcall64_0_1_12,&fastcall64_0_1_13,&fastcall64_0_1_14,&fastcall64_0_1_15,
    &fastcall64_1_0_0,&fastcall64_1_0_1,&fastcall64_1_0_2,&fastcall64_1_0_3,&fastcall64_1_0_4,&fastcall64_1_0_5,&fastcall64_1_0_6,&fastcall64_1_0_7,&fastcall64_1_0_8,&fastcall64_1_0_9,&fastcall64_1_0_10,&fastcall64_1_0_11,&fastcall64_1_0_12,&fastcall64_1_0_13,&fastcall64_1_0_14,&fastcall64_1_0_15,
    &fastcall64_1_1_0,&fastcall64_1_1_1,&fastcall64_1_1_2,&fastcall64_1_1_3,&fastcall64_1_1_4,&fastcall64_1_1_5,&fastcall64_1_1_6,&fastcall64_1_1_7,&fastcall64_1_1_8,&fastcall64_1_1_9,&fastcall64_1_1_10,&fastcall64_1_1_11,&fastcall64_1_1_12,&fastcall64_1_1_13,&fastcall64_1_1_14,&fastcall64_1_1_15,
    &fastcall64_2_0_0,&fastcall64_2_0_1,&fastcall64_2_0_2,&fastcall64_2_0_3,&fastcall64_2_0_4,&fastcall64_2_0_5,&fastcall64_2_0_6,&fastcall64_2_0_7,&fastcall64_2_0_8,&fastcall64_2_0_9,&fastcall64_2_0_10,&fastcall64_2_0_11,&fastcall64_2_0_12,&fastcall64_2_0_13,&fastcall64_2_0_14,&fastcall64_2_0_15,
    &fastcall64_2_1_0,&fastcall64_2_1_1,&fastcall64_2_1_2,&fastcall64_2_1_3,&fastcall64_2_1_4,&fastcall64_2_1_5,&fastcall64_2_1_6,&fastcall64_2_1_7,&fastcall64_2_1_8,&fastcall64_2_1_9,&fastcall64_2_1_10,&fastcall64_2_1_11,&fastcall64_2_1_12,&fastcall64_2_1_13,&fastcall64_2_1_14,&fastcall64_2_1_15,
    &fastcall64_3_0_0,&fastcall64_3_0_1,&fastcall64_3_0_2,&fastcall64_3_0_3,&fastcall64_3_0_4,&fastcall64_3_0_5,&fastcall64_3_0_6,&fastcall64_3_0_7,&fastcall64_3_0_8,&fastcall64_3_0_9,&fastcall64_3_0_10,&fastcall64_3_0_11,&fastcall64_3_0_12,&fastcall64_3_0_13,&fastcall64_3_0_14,&fastcall64_3_0_15,
    &fastcall64_3_1_0,&fastcall64_3_1_1,&fastcall64_3_1_2,&fastcall64_3_1_3,&fastcall64_3_1_4,&fastcall64_3_1_5,&fastcall64_3_1_6,&fastcall64_3_1_7,&fastcall64_3_1_8,&fastcall64_3_1_9,&fastcall64_3_1_10,&fastcall64_3_1_11,&fastcall64_3_1_12,&fastcall64_3_1_13,&fastcall64_3_1_14,&fastcall64_3_1_15,
    &fastcall64_4_0_0,&fastcall64_4_0_1,&fastcall64_4_0_2,&fastcall64_4_0_3,&fastcall64_4_0_4,&fastcall64_4_0_5,&fastcall64_4_0_6,&fastcall64_4_0_7,&fastcall64_4_0_8,&fastcall64_4_0_9,&fastcall64_4_0_10,&fastcall64_4_0_11,&fastcall64_4_0_12,&fastcall64_4_0_13,&fastcall64_4_0_14,&fastcall64_4_0_15,
    &fastcall64_4_1_0,&fastcall64_4_1_1,&fastcall64_4_1_2,&fastcall64_4_1_3,&fastcall64_4_1_4,&fastcall64_4_1_5,&fastcall64_4_1_6,&fastcall64_4_1_7,&fastcall64_4_1_8,&fastcall64_4_1_9,&fastcall64_4_1_10,&fastcall64_4_1_11,&fastcall64_4_1_12,&fastcall64_4_1_13,&fastcall64_4_1_14,&fastcall64_4_1_15,
    &fastcall64_5_0_0,&fastcall64_5_0_1,&fastcall64_5_0_2,&fastcall64_5_0_3,&fastcall64_5_0_4,&fastcall64_5_0_5,&fastcall64_5_0_6,&fastcall64_5_0_7,&fastcall64_5_0_8,&fastcall64_5_0_9,&fastcall64_5_0_10,&fastcall64_5_0_11,&fastcall64_5_0_12,&fastcall64_5_0_13,&fastcall64_5_0_14,&fastcall64_5_0_15,
    &fastcall64_5_1_0,&fastcall64_5_1_1,&fastcall64_5_1_2,&fastcall64_5_1_3,&fastcall64_5_1_4,&fastcall64_5_1_5,&fastcall64_5_1_6,&fastcall64_5_1_7,&fastcall64_5_1_8,&fastcall64_5_1_9,&fastcall64_5_1_10,&fastcall64_5_1_11,&fastcall64_5_1_12,&fastcall64_5_1_13,&fastcall64_5_1_14,&fastcall64_5_1_15,
    &fastcall64_6_0_0,&fastcall64_6_0_1,&fastcall64_6_0_2,&fastcall64_6_0_3,&fastcall64_6_0_4,&fastcall64_6_0_5,&fastcall64_6_0_6,&fastcall64_6_0_7,&fastcall64_6_0_8,&fastcall64_6_0_9,&fastcall64_6_0_10,&fastcall64_6_0_11,&fastcall64_6_0_12,&fastcall64_6_0_13,&fastcall64_6_0_14,&fastcall64_6_0_15,
    &fastcall64_6_1_0,&fastcall64_6_1_1,&fastcall64_6_1_2,&fastcall64_6_1_3,&fastcall64_6_1_4,&fastcall64_6_1_5,&fastcall64_6_1_6,&fastcall64_6_1_7,&fastcall64_6_1_8,&fastcall64_6_1_9,&fastcall64_6_1_10,&fastcall64_6_1_11,&fastcall64_6_1_12,&fastcall64_6_1_13,&fastcall64_6_1_14,&fastcall64_6_1_15,
    &fastcall64_7_0_0,&fastcall64_7_0_1,&fastcall64_7_0_2,&fastcall64_7_0_3,&fastcall64_7_0_4,&fastcall64_7_0_5,&fastcall64_7_0_6,&fastcall64_7_0_7,&fastcall64_7_0_8,&fastcall64_7_0_9,&fastcall64_7_0_10,&fastcall64_7_0_11,&fastcall64_7_0_12,&fastcall64_7_0_13,&fastcall64_7_0_14,&fastcall64_7_0_15,
    &fastcall64_7_1_0,&fastcall64_7_1_1,&fastcall64_7_1_2,&fastcall64_7_1_3,&fastcall64_7_1_4,&fastcall64_7_1_5,&fastcall64_7_1_6,&fastcall64_7_1_7,&fastcall64_7_1_8,&fastcall64_7_1_9,&fastcall64_7_1_10,&fastcall64_7_1_11,&fastcall64_7_1_12,&fastcall64_7_1_13,&fastcall64_7_1_14,&fastcall64_7_1_15,
    &fastcall64_8_0_0,&fastcall64_8_0_1,&fastcall64_8_0_2,&fastcall64_8_0_3,&fastcall64_8_0_4,&fastcall64_8_0_5,&fastcall64_8_0_6,&fastcall64_8_0_7,&fastcall64_8_0_8,&fastcall64_8_0_9,&fastcall64_8_0_10,&fastcall64_8_0_11,&fastcall64_8_0_12,&fastcall64_8_0_13,&fastcall64_8_0_14,&fastcall64_8_0_15,
    &fastcall64_8_1_0,&fastcall64_8_1_1,&fastcall64_8_1_2,&fastcall64_8_1_3,&fastcall64_8_1_4,&fastcall64_8_1_5,&fastcall64_8_1_6,&fastcall64_8_1_7,&fastcall64_8_1_8,&fastcall64_8_1_9,&fastcall64_8_1_10,&fastcall64_8_1_11,&fastcall64_8_1_12,&fastcall64_8_1_13,&fastcall64_8_1_14,&fastcall64_8_1_15,
    &fastcall64_9_0_0,&fastcall64_9_0_1,&fastcall64_9_0_2,&fastcall64_9_0_3,&fastcall64_9_0_4,&fastcall64_9_0_5,&fastcall64_9_0_6,&fastcall64_9_0_7,&fastcall64_9_0_8,&fastcall64_9_0_9,&fastcall64_9_0_10,&fastcall64_9_0_11,&fastcall64_9_0_12,&fastcall64_9_0_13,&fastcall64_9_0_14,&fastcall64_9_0_15,
    &fastcall64_9_1_0,&fastcall64_9_1_1,&fastcall64_9_1_2,&fastcall64_9_1_3,&fastcall64_9_1_4,&fastcall64_9_1_5,&fastcall64_9_1_6,&fastcall64_9_1_7,&fastcall64_9_1_8,&fastcall64_9_1_9,&fastcall64_9_1_10,&fastcall64_9_1_11,&fastcall64_9_1_12,&fastcall64_9_1_13,&fastcall64_9_1_14,&fastcall64_9_1_15,
    &fastcall64_10_0_0,&fastcall64_10_0_1,&fastcall64_10_0_2,&fastcall64_10_0_3,&fastcall64_10_0_4,&fastcall64_10_0_5,&fastcall64_10_0_6,&fastcall64_10_0_7,&fastcall64_10_0_8,&fastcall64_10_0_9,&fastcall64_10_0_10,&fastcall64_10_0_11,&fastcall64_10_0_12,&fastcall64_10_0_13,&fastcall64_10_0_14,&fastcall64_10_0_15,
    &fastcall64_10_1_0,&fastcall64_10_1_1,&fastcall64_10_1_2,&fastcall64_10_1_3,&fastcall64_10_1_4,&fastcall64_10_1_5,&fastcall64_10_1_6,&fastcall64_10_1_7,&fastcall64_10_1_8,&fastcall64_10_1_9,&fastcall64_10_1_10,&fastcall64_10_1_11,&fastcall64_10_1_12,&fastcall64_10_1_13,&fastcall64_10_1_14,&fastcall64_10_1_15,
    &fastcall64_11_0_0,&fastcall64_11_0_1,&fastcall64_11_0_2,&fastcall64_11_0_3,&fastcall64_11_0_4,&fastcall64_11_0_5,&fastcall64_11_0_6,&fastcall64_11_0_7,&fastcall64_11_0_8,&fastcall64_11_0_9,&fastcall64_11_0_10,&fastcall64_11_0_11,&fastcall64_11_0_12,&fastcall64_11_0_13,&fastcall64_11_0_14,&fastcall64_11_0_15,
    &fastcall64_11_1_0,&fastcall64_11_1_1,&fastcall64_11_1_2,&fastcall64_11_1_3,&fastcall64_11_1_4,&fastcall64_11_1_5,&fastcall64_11_1_6,&fastcall64_11_1_7,&fastcall64_11_1_8,&fastcall64_11_1_9,&fastcall64_11_1_10,&fastcall64_11_1_11,&fastcall64_11_1_12,&fastcall64_11_1_13,&fastcall64_11_1_14,&fastcall64_11_1_15,
    &fastcall64_12_0_0,&fastcall64_12_0_1,&fastcall64_12_0_2,&fastcall64_12_0_3,&fastcall64_12_0_4,&fastcall64_12_0_5,&fastcall64_12_0_6,&fastcall64_12_0_7,&fastcall64_12_0_8,&fastcall64_12_0_9,&fastcall64_12_0_10,&fastcall64_12_0_11,&fastcall64_12_0_12,&fastcall64_12_0_13,&fastcall64_12_0_14,&fastcall64_12_0_15,
    &fastcall64_12_1_0,&fastcall64_12_1_1,&fastcall64_12_1_2,&fastcall64_12_1_3,&fastcall64_12_1_4,&fastcall64_12_1_5,&fastcall64_12_1_6,&fastcall64_12_1_7,&fastcall64_12_1_8,&fastcall64_12_1_9,&fastcall64_12_1_10,&fastcall64_12_1_11,&fastcall64_12_1_12,&fastcall64_12_1_13,&fastcall64_12_1_14,&fastcall64_12_1_15,
    &fastcall64_13_0_0,&fastcall64_13_0_1,&fastcall64_13_0_2,&fastcall64_13_0_3,&fastcall64_13_0_4,&fastcall64_13_0_5,&fastcall64_13_0_6,&fastcall64_13_0_7,&fastcall64_13_0_8,&fastcall64_13_0_9,&fastcall64_13_0_10,&fastcall64_13_0_11,&fastcall64_13_0_12,&fastcall64_13_0_13,&fastcall64_13_0_14,&fastcall64_13_0_15,
    &fastcall64_13_1_0,&fastcall64_13_1_1,&fastcall64_13_1_2,&fastcall64_13_1_3,&fastcall64_13_1_4,&fastcall64_13_1_5,&fastcall64_13_1_6,&fastcall64_13_1_7,&fastcall64_13_1_8,&fastcall64_13_1_9,&fastcall64_13_1_10,&fastcall64_13_1_11,&fastcall64_13_1_12,&fastcall64_13_1_13,&fastcall64_13_1_14,&fastcall64_13_1_15,
    &fastcall64_14_0_0,&fastcall64_14_0_1,&fastcall64_14_0_2,&fastcall64_14_0_3,&fastcall64_14_0_4,&fastcall64_14_0_5,&fastcall64_14_0_6,&fastcall64_14_0_7,&fastcall64_14_0_8,&fastcall64_14_0_9,&fastcall64_14_0_10,&fastcall64_14_0_11,&fastcall64_14_0_12,&fastcall64_14_0_13,&fastcall64_14_0_14,&fastcall64_14_0_15,
    &fastcall64_14_1_0,&fastcall64_14_1_1,&fastcall64_14_1_2,&fastcall64_14_1_3,&fastcall64_14_1_4,&fastcall64_14_1_5,&fastcall64_14_1_6,&fastcall64_14_1_7,&fastcall64_14_1_8,&fastcall64_14_1_9,&fastcall64_14_1_10,&fastcall64_14_1_11,&fastcall64_14_1_12,&fastcall64_14_1_13,&fastcall64_14_1_14,&fastcall64_14_1_15,
    &fastcall64_15_0_0,&fastcall64_15_0_1,&fastcall64_15_0_2,&fastcall64_15_0_3,&fastcall64_15_0_4,&fastcall64_15_0_5,&fastcall64_15_0_6,&fastcall64_15_0_7,&fastcall64_15_0_8,&fastcall64_15_0_9,&fastcall64_15_0_10,&fastcall64_15_0_11,&fastcall64_15_0_12,&fastcall64_15_0_13,&fastcall64_15_0_14,&fastcall64_15_0_15,
    &fastcall64_15_1_0,&fastcall64_15_1_1,&fastcall64_15_1_2,&fastcall64_15_1_3,&fastcall64_15_1_4,&fastcall64_15_1_5,&fastcall64_15_1_6,&fastcall64_15_1_7,&fastcall64_15_1_8,&fastcall64_15_1_9,&fastcall64_15_1_10,&fastcall64_15_1_11,&fastcall64_15_1_12,&fastcall64_15_1_13,&fastcall64_15_1_14,&fastcall64_15_1_15,
};

