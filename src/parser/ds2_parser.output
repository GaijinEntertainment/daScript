Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


State 1425 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration SEMICOLON
    9        | program options_declaration SEMICOLON
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program SEMICOLON

   16 COMMA: ','
   17      | "new line, comma"

   18 SEMICOLON: ';'
   19          | "new line, semicolon"

   20 top_level_reader_macro: expr_reader SEMICOLON

   21 optional_public_or_private_module: %empty
   22                                  | "public"
   23                                  | "private"

   24 module_name: '$'
   25            | "name"

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   27 character_sequence: STRING_CHARACTER
   28                   | STRING_CHARACTER_ESC
   29                   | character_sequence STRING_CHARACTER
   30                   | character_sequence STRING_CHARACTER_ESC

   31 string_constant: "start of the string" character_sequence "end of the string"
   32                | "start of the string" "end of the string"

   33 format_string: %empty
   34              | format_string STRING_CHARACTER

   35 optional_format_string: %empty

   36 $@1: %empty

   37 optional_format_string: ':' $@1 format_string

   38 string_builder_body: %empty
   39                    | string_builder_body character_sequence
   40                    | string_builder_body "{" expr optional_format_string "}"

   41 string_builder: "start of the string" string_builder_body "end of the string"

   42 reader_character_sequence: STRING_CHARACTER
   43                          | reader_character_sequence STRING_CHARACTER

   44 $@2: %empty

   45 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   46 options_declaration: "options" annotation_argument_list

   47 require_declaration: "require" require_module

   48 require_module_name: "name"
   49                    | '%' require_module_name
   50                    | require_module_name '.' "name"
   51                    | require_module_name '/' "name"

   52 require_module: require_module_name is_public_module
   53               | require_module_name "as" "name" is_public_module

   54 is_public_module: %empty
   55                 | "public"

   56 expect_declaration: "expect" expect_list

   57 expect_list: expect_error
   58            | expect_list ',' expect_error

   59 expect_error: "integer constant"
   60             | "integer constant" ':' "integer constant"

   61 expression_label: "label" "integer constant" ':'

   62 expression_goto: "goto" "label" "integer constant"
   63                | "goto" expr

   64 elif_or_static_elif: "elif"
   65                    | "static_elif"

   66 emit_semis: "new line, semicolon"
   67           | emit_semis "new line, semicolon"

   68 optional_emit_semis: %empty
   69                    | emit_semis

   70 expression_else: %empty
   71                | "else" optional_emit_semis expression_block
   72                | elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else

   73 if_or_static_if: "if"
   74                | "static_if"

   75 expression_else_one_liner: %empty
   76                          | "else" expression_if_one_liner

   77 expression_if_one_liner: expr
   78                        | expression_return
   79                        | expression_yield
   80                        | expression_break
   81                        | expression_continue

   82 semis: SEMICOLON
   83      | semis SEMICOLON

   84 optional_semis: %empty
   85               | semis

   86 $@3: %empty

   87 $@4: %empty

   88 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally

   89 $@5: %empty

   90 expression_if_block: $@5 expression_if_one_liner SEMICOLON

   91 $@6: %empty

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON

   94 $@7: %empty

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

   96 expression_unsafe: "unsafe" optional_emit_semis expression_block

   97 $@8: %empty

   98 expression_while_loop: $@8 "while" '(' expr ')' optional_emit_semis expression_block

   99 $@9: %empty

  100 expression_with: $@9 "with" '(' expr ')' optional_emit_semis expression_block

  101 expression_with_alias: "assume" "name" '=' expr

  102 annotation_argument_value: string_constant
  103                          | "name"
  104                          | "integer constant"
  105                          | "floating point constant"
  106                          | "true"
  107                          | "false"

  108 annotation_argument_value_list: annotation_argument_value
  109                               | annotation_argument_value_list ',' annotation_argument_value

  110 annotation_argument_name: "name"
  111                         | "type"
  112                         | "in"

  113 annotation_argument: annotation_argument_name '=' string_constant
  114                    | annotation_argument_name '=' "name"
  115                    | annotation_argument_name '=' "integer constant"
  116                    | annotation_argument_name '=' "floating point constant"
  117                    | annotation_argument_name '=' "true"
  118                    | annotation_argument_name '=' "false"
  119                    | annotation_argument_name
  120                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  121 annotation_argument_list: annotation_argument
  122                         | annotation_argument_list ',' annotation_argument

  123 metadata_argument_list: '@' annotation_argument optional_emit_semis
  124                       | metadata_argument_list '@' annotation_argument optional_emit_semis

  125 annotation_declaration_name: name_in_namespace
  126                            | "require"
  127                            | "private"
  128                            | "template"

  129 annotation_declaration_basic: annotation_declaration_name
  130                             | annotation_declaration_name '(' annotation_argument_list ')'

  131 annotation_declaration: annotation_declaration_basic
  132                       | '!' annotation_declaration
  133                       | annotation_declaration "&&" annotation_declaration
  134                       | annotation_declaration "||" annotation_declaration
  135                       | annotation_declaration "^^" annotation_declaration
  136                       | '(' annotation_declaration ')'
  137                       | "|>" annotation_declaration

  138 annotation_list: annotation_declaration
  139                | annotation_list ',' annotation_declaration

  140 optional_annotation_list: %empty
  141                         | '[' annotation_list ']'

  142 optional_annotation_list_with_emit_semis: %empty
  143                                         | '[' annotation_list ']' optional_emit_semis

  144 optional_function_argument_list: %empty
  145                                | '(' ')'
  146                                | '(' function_argument_list ')'

  147 optional_function_type: %empty
  148                       | ':' type_declaration
  149                       | ':' '(' tuple_type_list ')'

  150 function_name: "name"
  151              | "operator" '!'
  152              | "operator" '~'
  153              | "operator" "+="
  154              | "operator" "-="
  155              | "operator" "*="
  156              | "operator" "/="
  157              | "operator" "%="
  158              | "operator" "&="
  159              | "operator" "|="
  160              | "operator" "^="
  161              | "operator" "&&="
  162              | "operator" "||="
  163              | "operator" "^^="
  164              | "operator" "&&"
  165              | "operator" "||"
  166              | "operator" "^^"
  167              | "operator" '+'
  168              | "operator" '-'
  169              | "operator" '*'
  170              | "operator" '/'
  171              | "operator" '%'
  172              | "operator" '<'
  173              | "operator" '>'
  174              | "operator" ".."
  175              | "operator" "=="
  176              | "operator" "!="
  177              | "operator" "<="
  178              | "operator" ">="
  179              | "operator" '&'
  180              | "operator" '|'
  181              | "operator" '^'
  182              | "++" "operator"
  183              | "--" "operator"
  184              | "operator" "++"
  185              | "operator" "--"
  186              | "operator" "<<"
  187              | "operator" ">>"
  188              | "operator" "<<="
  189              | "operator" ">>="
  190              | "operator" "<<<"
  191              | "operator" ">>>"
  192              | "operator" "<<<="
  193              | "operator" ">>>="
  194              | "operator" '[' ']'
  195              | "operator" "?[" ']'
  196              | "operator" '.'
  197              | "operator" "?."
  198              | "operator" '.' "name"
  199              | "operator" '.' "name" ":="
  200              | "operator" "?." "name"
  201              | "operator" ":="
  202              | "operator" "delete"
  203              | "operator" "??"
  204              | "operator" "is"
  205              | "operator" "as"
  206              | "operator" "is" "name"
  207              | "operator" "as" "name"
  208              | "operator" '?' "as"
  209              | "operator" '?' "as" "name"
  210              | "bool"
  211              | "string"
  212              | "int"
  213              | "int2"
  214              | "int3"
  215              | "int4"
  216              | "uint"
  217              | "uint2"
  218              | "uint3"
  219              | "uint4"
  220              | "float"
  221              | "float2"
  222              | "float3"
  223              | "float4"
  224              | "range"
  225              | "urange"
  226              | "range64"
  227              | "urange64"
  228              | "int64"
  229              | "uint64"
  230              | "double"
  231              | "int8"
  232              | "uint8"
  233              | "int16"
  234              | "uint16"

  235 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration

  236 optional_public_or_private_function: %empty
  237                                    | "private"
  238                                    | "public"

  239 function_declaration_header: function_name optional_function_argument_list optional_function_type

  240 $@10: %empty

  241 function_declaration: optional_public_or_private_function $@10 function_declaration_header optional_emit_semis expression_block

  242 expression_block_finally: %empty

  243 $@11: %empty

  244 $@12: %empty

  245 expression_block_finally: "finally" $@11 '{' expressions $@12 '}'

  246 $@13: %empty

  247 $@14: %empty

  248 expression_block: $@13 '{' expressions $@14 '}' expression_block_finally

  249 expr_call_pipe: expr_call expr_full_block_assumed_piped

  250 expression_any: SEMICOLON
  251               | expr_assign SEMICOLON
  252               | expression_delete SEMICOLON
  253               | expression_let
  254               | expression_while_loop
  255               | expression_unsafe
  256               | expression_with
  257               | expression_with_alias SEMICOLON
  258               | expression_for_loop
  259               | expression_break SEMICOLON
  260               | expression_continue SEMICOLON
  261               | expression_return SEMICOLON
  262               | expression_yield SEMICOLON
  263               | expression_if_then_else
  264               | expression_if_then_else_oneliner
  265               | expression_try_catch
  266               | expression_label SEMICOLON
  267               | expression_goto SEMICOLON
  268               | "pass" SEMICOLON

  269 expressions: %empty
  270            | expressions expression_any
  271            | expressions error

  272 optional_expr_list: %empty
  273                   | expr_list optional_comma

  274 optional_expr_map_tuple_list: %empty
  275                             | expr_map_tuple_list optional_comma

  276 type_declaration_no_options_list: type_declaration
  277                                 | type_declaration_no_options_list c_or_s type_declaration

  278 name_in_namespace: "name"
  279                  | "name" "::" "name"
  280                  | "::" "name"

  281 expression_delete: "delete" expr
  282                  | "delete" "explicit" expr

  283 $@15: %empty

  284 $@16: %empty

  285 new_type_declaration: '<' $@15 type_declaration '>' $@16
  286                     | structure_type_declaration

  287 expr_new: "new" new_type_declaration
  288         | "new" new_type_declaration '(' use_initializer ')'
  289         | "new" new_type_declaration '(' expr_list ')'
  290         | "new" new_type_declaration '(' make_struct_single ')'
  291         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  292         | "new" make_decl

  293 expression_break: "break"

  294 expression_continue: "continue"

  295 expression_return: "return"
  296                  | "return" expr
  297                  | "return" "<-" expr

  298 expression_yield: "yield" expr
  299                 | "yield" "<-" expr

  300 expression_try_catch: "try" expression_block "recover" expression_block

  301 kwd_let_var_or_nothing: "let"
  302                       | "var"
  303                       | %empty

  304 kwd_let: "let"
  305        | "var"

  306 optional_in_scope: "inscope"
  307                  | %empty

  308 tuple_expansion: "name"
  309                | tuple_expansion ',' "name"

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  311                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

  312 expression_let: kwd_let optional_in_scope let_variable_declaration
  313               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  314               | kwd_let optional_in_scope '{' variable_declaration_list '}'

  315 $@17: %empty

  316 $@18: %empty

  317 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' $@18 expr

  318 $@19: %empty

  319 $@20: %empty

  320 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' $@20 expr

  321 $@21: %empty

  322 $@22: %empty

  323 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' $@22 expr

  324 $@23: %empty

  325 $@24: %empty

  326 expr_type_decl: "type" '<' $@23 type_declaration '>' $@24

  327 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  328               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  329               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  330 expr_list: expr
  331          | expr_list ',' expr

  332 block_or_simple_block: expression_block
  333                      | "=>" expr
  334                      | "=>" "<-" expr

  335 block_or_lambda: '$'
  336                | '@'
  337                | '@' '@'

  338 capture_entry: '&' "name"
  339              | '=' "name"
  340              | "<-" "name"
  341              | ":=" "name"
  342              | "name" '(' "name" ')'

  343 capture_list: capture_entry
  344             | capture_list ',' capture_entry

  345 optional_capture_list: %empty
  346                      | "capture" '(' capture_list ')'

  347 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

  348 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block
  349                              | '{' expressions '}'

  350 expr_numeric_const: "integer constant"
  351                   | "unsigned integer constant"
  352                   | "long integer constant"
  353                   | "unsigned long integer constant"
  354                   | "unsigned int8 constant"
  355                   | "floating point constant"
  356                   | "double constant"

  357 expr_assign: expr
  358            | expr '=' expr
  359            | expr "<-" expr
  360            | expr ":=" expr
  361            | expr "&=" expr
  362            | expr "|=" expr
  363            | expr "^=" expr
  364            | expr "&&=" expr
  365            | expr "||=" expr
  366            | expr "^^=" expr
  367            | expr "+=" expr
  368            | expr "-=" expr
  369            | expr "*=" expr
  370            | expr "/=" expr
  371            | expr "%=" expr
  372            | expr "<<=" expr
  373            | expr ">>=" expr
  374            | expr "<<<=" expr
  375            | expr ">>>=" expr

  376 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  377                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  378 expr_method_call: expr "->" "name" '(' ')'
  379                 | expr "->" "name" '(' expr_list ')'

  380 func_addr_name: name_in_namespace
  381               | "$i" '(' expr ')'

  382 func_addr_expr: '@' '@' func_addr_name

  383 $@25: %empty

  384 $@26: %empty

  385 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options '>' $@26 func_addr_name

  386 $@27: %empty

  387 $@28: %empty

  388 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name

  389 expr_field: expr '.' "name"
  390           | expr '.' '.' "name"
  391           | expr '.' "name" '(' ')'
  392           | expr '.' "name" '(' expr_list ')'
  393           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr '.' basic_type_declaration '(' ')'
  395           | expr '.' basic_type_declaration '(' expr_list ')'

  396 $@29: %empty

  397 $@30: %empty

  398 expr_field: expr '.' $@29 error $@30

  399 expr_call: name_in_namespace '(' ')'
  400          | name_in_namespace '(' "uninitialized" ')'
  401          | name_in_namespace '(' make_struct_single ')'
  402          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  403          | name_in_namespace '(' expr_list ')'
  404          | basic_type_declaration '(' ')'
  405          | basic_type_declaration '(' expr_list ')'

  406 expr: "null"
  407     | name_in_namespace
  408     | expr_numeric_const
  409     | expr_reader
  410     | string_builder
  411     | make_decl
  412     | "true"
  413     | "false"
  414     | expr_field
  415     | expr_mtag
  416     | '!' expr
  417     | '~' expr
  418     | '+' expr
  419     | '-' expr
  420     | expr "<<" expr
  421     | expr ">>" expr
  422     | expr "<<<" expr
  423     | expr ">>>" expr
  424     | expr '+' expr
  425     | expr '-' expr
  426     | expr '*' expr
  427     | expr '/' expr
  428     | expr '%' expr
  429     | expr '<' expr
  430     | expr '>' expr
  431     | expr "==" expr
  432     | expr "!=" expr
  433     | expr "<=" expr
  434     | expr ">=" expr
  435     | expr '&' expr
  436     | expr '|' expr
  437     | expr '^' expr
  438     | expr "&&" expr
  439     | expr "||" expr
  440     | expr "^^" expr
  441     | expr ".." expr
  442     | "++" expr
  443     | "--" expr
  444     | expr "++"
  445     | expr "--"
  446     | '(' expr_list optional_comma ')'
  447     | '(' make_struct_single ')'
  448     | expr '[' expr ']'
  449     | expr '.' '[' expr ']'
  450     | expr "?[" expr ']'
  451     | expr '.' "?[" expr ']'
  452     | expr "?." "name"
  453     | expr '.' "?." "name"
  454     | func_addr_expr
  455     | expr_call
  456     | '*' expr
  457     | "deref" '(' expr ')'
  458     | "addr" '(' expr ')'
  459     | expr_generator
  460     | expr "??" expr
  461     | expr '?' expr ':' expr

  462 $@31: %empty

  463 $@32: %empty

  464 expr: expr "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr "is" basic_type_declaration
  466     | expr "is" "name"
  467     | expr "as" "name"

  468 $@33: %empty

  469 $@34: %empty

  470 expr: expr "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr "as" basic_type_declaration
  472     | expr '?' "as" "name"

  473 $@35: %empty

  474 $@36: %empty

  475 expr: expr '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr '?' "as" basic_type_declaration
  477     | expr_type_info
  478     | expr_type_decl
  479     | expr_cast
  480     | expr_new
  481     | expr_method_call
  482     | expr_named_call
  483     | expr_full_block
  484     | expr "<|" expr
  485     | expr "|>" expr
  486     | expr "|>" basic_type_declaration
  487     | expr_call_pipe
  488     | "unsafe" '(' expr ')'

  489 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  490               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  491               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

  492 expr_mtag: "$$" '(' expr ')'
  493          | "$i" '(' expr ')'
  494          | "$v" '(' expr ')'
  495          | "$b" '(' expr ')'
  496          | "$a" '(' expr ')'
  497          | "..."
  498          | "$c" '(' expr ')' '(' ')'
  499          | "$c" '(' expr ')' '(' expr_list ')'
  500          | expr '.' "$f" '(' expr ')'
  501          | expr "?." "$f" '(' expr ')'
  502          | expr '.' '.' "$f" '(' expr ')'
  503          | expr '.' "?." "$f" '(' expr ')'
  504          | expr "as" "$f" '(' expr ')'
  505          | expr '?' "as" "$f" '(' expr ')'
  506          | expr "is" "$f" '(' expr ')'
  507          | '@' '@' "$c" '(' expr ')'

  508 optional_field_annotation: %empty
  509                          | metadata_argument_list

  510 optional_override: %empty
  511                  | "override"
  512                  | "sealed"

  513 optional_constant: %empty
  514                  | "const"

  515 optional_public_or_private_member_variable: %empty
  516                                           | "public"
  517                                           | "private"

  518 optional_static_member_variable: %empty
  519                                | "static"

  520 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  521 struct_variable_declaration_list: %empty
  522                                 | struct_variable_declaration_list "new line, semicolon"

  523 $@37: %empty

  524 struct_variable_declaration_list: struct_variable_declaration_list $@37 structure_variable_declaration SEMICOLON

  525 $@38: %empty

  526 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON

  527 $@39: %empty

  528 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

  529 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  530                              | "$a" '(' expr ')'

  531 function_argument_list: function_argument_declaration
  532                       | function_argument_list ';' function_argument_declaration

  533 tuple_type: type_declaration
  534           | "name" ':' type_declaration

  535 tuple_type_list: tuple_type
  536                | tuple_type_list c_or_s tuple_type

  537 tuple_alias_type_list: %empty
  538                      | tuple_type
  539                      | tuple_alias_type_list semis tuple_type

  540 variant_type: "name" ':' type_declaration

  541 variant_type_list: variant_type
  542                  | variant_type_list c_or_s variant_type

  543 variant_alias_type_list: %empty
  544                        | variant_type
  545                        | variant_alias_type_list semis variant_type

  546 copy_or_move: '='
  547             | "<-"

  548 variable_declaration: variable_name_with_pos_list
  549                     | variable_name_with_pos_list '&'
  550                     | variable_name_with_pos_list ':' type_declaration
  551                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  552                     | variable_name_with_pos_list copy_or_move expr

  553 copy_or_move_or_clone: '='
  554                      | "<-"
  555                      | ":="

  556 optional_ref: %empty
  557             | '&'

  558 let_variable_name_with_pos_list: "name"
  559                                | "$i" '(' expr ')'
  560                                | "name" "aka" "name"
  561                                | let_variable_name_with_pos_list ',' "name"
  562                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  563 global_let_variable_name_with_pos_list: "name"
  564                                       | global_let_variable_name_with_pos_list ',' "name"

  565 variable_declaration_list: %empty
  566                          | variable_declaration_list SEMICOLON
  567                          | variable_declaration_list let_variable_declaration

  568 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  569                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  570                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  571 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  572                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  573                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  574 optional_shared: %empty
  575                | "shared"

  576 optional_public_or_private_variable: %empty
  577                                    | "private"
  578                                    | "public"

  579 global_variable_declaration_list: %empty
  580                                 | global_variable_declaration_list SEMICOLON

  581 $@40: %empty

  582 global_variable_declaration_list: global_variable_declaration_list $@40 optional_field_annotation let_variable_declaration

  583 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  584 $@41: %empty

  585 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 optional_field_annotation global_let_variable_declaration

  586 enum_expression: "name"
  587                | "name" '=' expr

  588 commas: COMMA
  589       | commas COMMA

  590 enum_list: %empty
  591          | enum_expression
  592          | enum_list commas enum_expression

  593 optional_public_or_private_alias: %empty
  594                                 | "private"
  595                                 | "public"

  596 $@42: %empty

  597 single_alias: optional_public_or_private_alias "name" $@42 '=' type_declaration

  598 alias_declaration: "typedef" single_alias SEMICOLON

  599 optional_public_or_private_enum: %empty
  600                                | "private"
  601                                | "public"

  602 enum_name: "name"

  603 optional_enum_basic_type_declaration: %empty
  604                                     | ':' enum_basic_type_declaration

  605 optional_commas: %empty
  606                | commas

  607 emit_commas: "new line, comma"
  608            | emit_commas "new line, comma"

  609 optional_emit_commas: %empty
  610                     | emit_commas

  611 $@43: %empty

  612 $@44: %empty

  613 $@45: %empty

  614 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

  615 optional_structure_parent: %empty
  616                          | ':' name_in_namespace

  617 optional_sealed: %empty
  618                | "sealed"

  619 structure_name: optional_sealed "name" optional_structure_parent

  620 class_or_struct: "class"
  621                | "struct"
  622                | "template" "class"
  623                | "template" "struct"

  624 optional_public_or_private_structure: %empty
  625                                     | "private"
  626                                     | "public"

  627 optional_struct_variable_declaration_list: ';'
  628                                          | '{' struct_variable_declaration_list '}'

  629 $@46: %empty

  630 $@47: %empty

  631 $@48: %empty

  632 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

  633 variable_name_with_pos_list: "name"
  634                            | "$i" '(' expr ')'
  635                            | "name" "aka" "name"
  636                            | variable_name_with_pos_list ',' "name"
  637                            | variable_name_with_pos_list ',' "name" "aka" "name"

  638 basic_type_declaration: "bool"
  639                       | "string"
  640                       | "int"
  641                       | "int8"
  642                       | "int16"
  643                       | "int64"
  644                       | "int2"
  645                       | "int3"
  646                       | "int4"
  647                       | "uint"
  648                       | "uint8"
  649                       | "uint16"
  650                       | "uint64"
  651                       | "uint2"
  652                       | "uint3"
  653                       | "uint4"
  654                       | "float"
  655                       | "float2"
  656                       | "float3"
  657                       | "float4"
  658                       | "void"
  659                       | "range"
  660                       | "urange"
  661                       | "range64"
  662                       | "urange64"
  663                       | "double"
  664                       | "bitfield"

  665 enum_basic_type_declaration: "int"
  666                            | "int8"
  667                            | "int16"
  668                            | "uint"
  669                            | "uint8"
  670                            | "uint16"
  671                            | "int64"
  672                            | "uint64"

  673 structure_type_declaration: name_in_namespace

  674 auto_type_declaration: "auto"
  675                      | "auto" '(' "name" ')'
  676                      | "$t" '(' expr ')'

  677 bitfield_bits: "name"
  678              | bitfield_bits ';' "name"

  679 bitfield_alias_bits: %empty
  680                    | "name"
  681                    | bitfield_alias_bits commas "name"

  682 $@49: %empty

  683 $@50: %empty

  684 bitfield_type_declaration: "bitfield" '<' $@49 bitfield_bits '>' $@50

  685 c_or_s: COMMA
  686       | SEMICOLON

  687 table_type_pair: type_declaration
  688                | type_declaration c_or_s type_declaration

  689 dim_list: '[' expr ']'
  690         | '[' ']'
  691         | dim_list '[' expr ']'
  692         | dim_list '[' ']'

  693 type_declaration_no_options: type_declaration_no_options_no_dim
  694                            | type_declaration_no_options_no_dim dim_list

  695 type_declaration_no_options_no_dim: basic_type_declaration
  696                                   | auto_type_declaration
  697                                   | bitfield_type_declaration
  698                                   | structure_type_declaration

  699 $@51: %empty

  700 $@52: %empty

  701 type_declaration_no_options_no_dim: "type" '<' $@51 type_declaration '>' $@52
  702                                   | "typedecl" '(' expr ')'
  703                                   | '$' name_in_namespace '(' optional_expr_list ')'

  704 $@53: %empty

  705 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  706                                   | type_declaration_no_options '-' '[' ']'
  707                                   | type_declaration_no_options "explicit"
  708                                   | type_declaration_no_options "const"
  709                                   | type_declaration_no_options '-' "const"
  710                                   | type_declaration_no_options '&'
  711                                   | type_declaration_no_options '-' '&'
  712                                   | type_declaration_no_options '#'
  713                                   | type_declaration_no_options "implicit"
  714                                   | type_declaration_no_options '-' '#'
  715                                   | type_declaration_no_options "==" "const"
  716                                   | type_declaration_no_options "==" '&'
  717                                   | type_declaration_no_options '?'

  718 $@54: %empty

  719 $@55: %empty

  720 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 type_declaration '>' $@55
  721                                   | type_declaration_no_options "??"

  722 $@56: %empty

  723 $@57: %empty

  724 type_declaration_no_options_no_dim: "array" '<' $@56 type_declaration '>' $@57

  725 $@58: %empty

  726 $@59: %empty

  727 type_declaration_no_options_no_dim: "table" '<' $@58 table_type_pair '>' $@59

  728 $@60: %empty

  729 $@61: %empty

  730 type_declaration_no_options_no_dim: "iterator" '<' $@60 type_declaration '>' $@61
  731                                   | "block"

  732 $@62: %empty

  733 $@63: %empty

  734 type_declaration_no_options_no_dim: "block" '<' $@62 type_declaration '>' $@63

  735 $@64: %empty

  736 $@65: %empty

  737 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list optional_function_type '>' $@65
  738                                   | "function"

  739 $@66: %empty

  740 $@67: %empty

  741 type_declaration_no_options_no_dim: "function" '<' $@66 type_declaration '>' $@67

  742 $@68: %empty

  743 $@69: %empty

  744 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list optional_function_type '>' $@69
  745                                   | "lambda"

  746 $@70: %empty

  747 $@71: %empty

  748 type_declaration_no_options_no_dim: "lambda" '<' $@70 type_declaration '>' $@71

  749 $@72: %empty

  750 $@73: %empty

  751 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list optional_function_type '>' $@73

  752 $@74: %empty

  753 $@75: %empty

  754 type_declaration_no_options_no_dim: "tuple" '<' $@74 tuple_type_list '>' $@75

  755 $@76: %empty

  756 $@77: %empty

  757 type_declaration_no_options_no_dim: "variant" '<' $@76 variant_type_list '>' $@77

  758 type_declaration: type_declaration_no_options
  759                 | type_declaration '|' type_declaration_no_options
  760                 | type_declaration '|' '#'

  761 $@78: %empty

  762 $@79: %empty

  763 $@80: %empty

  764 $@81: %empty

  765 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

  766 $@82: %empty

  767 $@83: %empty

  768 $@84: %empty

  769 $@85: %empty

  770 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

  771 $@86: %empty

  772 $@87: %empty

  773 $@88: %empty

  774 $@89: %empty

  775 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

  776 make_decl: make_struct_decl
  777          | make_dim_decl
  778          | make_table_decl
  779          | array_comprehension
  780          | make_tuple_call

  781 make_struct_fields: "name" copy_or_move expr
  782                   | "name" ":=" expr
  783                   | make_struct_fields ',' "name" copy_or_move expr
  784                   | make_struct_fields ',' "name" ":=" expr
  785                   | "$f" '(' expr ')' copy_or_move expr
  786                   | "$f" '(' expr ')' ":=" expr
  787                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  789 make_variant_dim: %empty
  790                 | make_struct_fields

  791 make_struct_single: make_struct_fields

  792 make_struct_dim_list: '(' make_struct_fields ')'
  793                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  794 make_struct_dim_decl: make_struct_fields
  795                     | make_struct_dim_list optional_comma

  796 optional_make_struct_dim_decl: make_struct_dim_decl
  797                              | %empty

  798 use_initializer: %empty
  799                | "uninitialized"

  800 $@90: %empty

  801 $@91: %empty

  802 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

  803 $@92: %empty

  804 $@93: %empty

  805 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

  806 $@94: %empty

  807 $@95: %empty

  808 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')'

  809 $@96: %empty

  810 $@97: %empty

  811 make_struct_decl: "default" '<' $@96 type_declaration_no_options '>' $@97 use_initializer

  812 make_map_tuple: expr "=>" expr
  813               | expr

  814 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  815 $@98: %empty

  816 $@99: %empty

  817 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

  818 make_dim_decl: '[' optional_expr_list ']'

  819 $@100: %empty

  820 $@101: %empty

  821 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

  822 $@102: %empty

  823 $@103: %empty

  824 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

  825 $@104: %empty

  826 $@105: %empty

  827 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim ')'
  828              | "array" '(' expr_list optional_comma ')'

  829 $@106: %empty

  830 $@107: %empty

  831 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list ')'
  832              | "fixed_array" '(' expr_list optional_comma ')'

  833 $@108: %empty

  834 $@109: %empty

  835 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')'

  836 expr_map_tuple_list: make_map_tuple
  837                    | expr_map_tuple_list ',' make_map_tuple

  838 $@110: %empty

  839 make_table_decl: '{' $@110 optional_emit_semis optional_expr_map_tuple_list '}'
  840                | "table" '(' expr_map_tuple_list optional_comma ')'
  841                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  842                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  843 array_comprehension_where: %empty
  844                          | ';' "where" expr

  845 optional_comma: %empty
  846               | ','

  847 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  848                    | '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  849                    | '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 132 151 416
    '#' (35) 712 714 760
    '$' (36) 24 335 703 705
    '%' (37) 45 49 171 428
    '&' (38) 179 338 435 549 557 710 711 716
    '(' (40) 72 92 93 95 98 100 120 130 136 145 146 149 288 289 290 291 310 311 327 328 329 342 346 376 377 378 379 381 391 392 393 394 395 399 400 401 402 403 404 405 446 447 457 458 488 489 490 492 493 494 495 496 498 499 500 501 502 503 504 505 506 507 530 559 634 675 676 702 703 705 785 786 787 788 792 793 802 805 808 814 817 821 824 827 828 831 832 835 840 841 842 847 848 849
    ')' (41) 72 92 93 95 98 100 120 130 136 145 146 149 288 289 290 291 310 311 327 328 329 342 346 376 377 378 379 381 391 392 393 394 395 399 400 401 402 403 404 405 446 447 457 458 488 489 490 492 493 494 495 496 498 499 500 501 502 503 504 505 506 507 530 559 634 675 676 702 703 705 785 786 787 788 792 793 802 805 808 814 817 821 824 827 828 831 832 835 840 841 842 847 848 849
    '*' (42) 169 426 456
    '+' (43) 167 418 424
    ',' (44) 16 58 109 122 139 309 331 344 377 561 562 564 636 637 783 784 787 788 793 837 846
    '-' (45) 168 419 425 706 709 711 714
    '.' (46) 50 196 198 199 389 390 391 392 393 394 395 398 449 451 453 500 502 503
    '/' (47) 51 170 427
    ':' (58) 37 60 61 148 149 310 461 534 540 550 551 568 569 571 572 604 616
    ';' (59) 18 532 627 678 844 847 848 849
    '<' (60) 172 285 317 320 323 326 328 329 385 388 429 464 470 475 489 490 491 684 701 705 720 724 727 730 734 737 741 744 748 751 754 757 802 805 808 811 817 821 824 827 831 835 841 842
    '=' (61) 101 113 114 115 116 117 118 120 339 358 546 553 587 597
    '>' (62) 173 285 317 320 323 326 328 329 385 388 430 464 470 475 489 490 491 684 701 705 720 724 727 730 734 737 741 744 748 751 754 757 802 805 808 811 817 821 824 827 831 835 841 842
    '?' (63) 208 209 461 472 475 476 505 717
    '@' (64) 123 124 336 337 382 385 388 507
    '[' (91) 141 143 194 376 377 393 448 449 689 690 691 692 706 818 847 848
    ']' (93) 141 143 194 195 376 377 393 448 449 450 451 689 690 691 692 706 818 847 848
    '^' (94) 181 437
    '{' (123) 88 245 248 314 349 583 614 628 765 770 775 839 849
    '|' (124) 180 436 759 760
    '}' (125) 88 245 248 314 349 583 614 628 765 770 775 839 849
    '~' (126) 152 417
    error (256) 271 398
    "lexer error" (258)
    "capture" (259) 346
    "struct" (260) 621 623 802 821
    "class" (261) 620 622 805
    "let" (262) 301 304
    "def" (263) 235 526 528
    "while" (264) 98
    "if" (265) 73 93
    "static_if" (266) 74
    "else" (267) 71 76
    "for" (268) 95 847 848 849
    "recover" (269) 300
    "true" (270) 106 117 412
    "false" (271) 107 118 413
    "new" (272) 287 288 289 290 291 292
    "typeinfo" (273) 327 328 329
    "type" (274) 111 326 464 470 475 701
    "in" (275) 95 112 847 848 849
    "is" (276) 204 206 464 465 466 506
    "as" (277) 53 205 207 208 209 467 470 471 472 475 476 504 505
    "elif" (278) 64
    "static_elif" (279) 65
    "array" (280) 724 821 824 827 828 831
    "return" (281) 295 296 297
    "null" (282) 406
    "break" (283) 293
    "try" (284) 300
    "options" (285) 46
    "table" (286) 727 840 841 842
    "expect" (287) 56
    "const" (288) 514 708 709 715
    "require" (289) 47 126
    "operator" (290) 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209
    "enum" (291) 614
    "finally" (292) 245
    "delete" (293) 202 281 282
    "deref" (294) 457
    "typedef" (295) 598
    "typedecl" (296) 702
    "with" (297) 100
    "aka" (298) 560 562 635 637
    "assume" (299) 101
    "cast" (300) 317
    "override" (301) 511
    "abstract" (302) 526
    "upcast" (303) 320
    "iterator" (304) 730 848
    "var" (305) 302 305
    "addr" (306) 458
    "continue" (307) 294
    "where" (308) 844
    "pass" (309) 268
    "reinterpret" (310) 323
    "module" (311) 26
    "public" (312) 22 55 238 516 578 595 601 626
    "label" (313) 61 62
    "goto" (314) 62 63
    "implicit" (315) 713
    "explicit" (316) 282 707
    "shared" (317) 575
    "private" (318) 23 127 237 517 577 594 600 625
    "smart_ptr" (319) 720
    "unsafe" (320) 96 488
    "inscope" (321) 306
    "static" (322) 519
    "fixed_array" (323) 832 835
    "default" (324) 811
    "uninitialized" (325) 291 400 402 799
    "bool" (326) 210 638
    "void" (327) 658
    "string" (328) 211 639
    "auto" (329) 674 675
    "int" (330) 212 640 665
    "int2" (331) 213 644
    "int3" (332) 214 645
    "int4" (333) 215 646
    "uint" (334) 216 647 668
    "bitfield" (335) 664 684 775
    "uint2" (336) 217 651
    "uint3" (337) 218 652
    "uint4" (338) 219 653
    "float" (339) 220 654
    "float2" (340) 221 655
    "float3" (341) 222 656
    "float4" (342) 223 657
    "range" (343) 224 659
    "urange" (344) 225 660
    "range64" (345) 226 661
    "urange64" (346) 227 662
    "block" (347) 731 734 737
    "int64" (348) 228 643 671
    "uint64" (349) 229 650 672
    "double" (350) 230 663
    "function" (351) 738 741 744
    "lambda" (352) 745 748 751
    "int8" (353) 231 641 666
    "uint8" (354) 232 648 669
    "int16" (355) 233 642 667
    "uint16" (356) 234 649 670
    "tuple" (357) 754 765 814 817 824
    "variant" (358) 757 770 808 827
    "generator" (359) 489 490 491
    "yield" (360) 298 299
    "sealed" (361) 512 618
    "template" (362) 128 622 623
    "+=" (363) 153 367
    "-=" (364) 154 368
    "/=" (365) 156 370
    "*=" (366) 155 369
    "%=" (367) 157 371
    "&=" (368) 158 361
    "|=" (369) 159 362
    "^=" (370) 160 363
    "<<" (371) 186 420
    ">>" (372) 187 421
    "++" (373) 182 184 442 444
    "--" (374) 183 185 443 445
    "<=" (375) 177 433
    "<<=" (376) 188 372
    ">>=" (377) 189 373
    ">=" (378) 178 434
    "==" (379) 175 431 715 716
    "!=" (380) 176 432
    "->" (381) 378 379
    "<-" (382) 297 299 334 340 359 547 554
    "??" (383) 203 460 721
    "?." (384) 197 200 452 453 501 503
    "?[" (385) 195 450 451
    "<|" (386) 484
    "|>" (387) 137 485 486
    ":=" (388) 199 201 341 360 555 782 784 786 788
    "<<<" (389) 190 422
    ">>>" (390) 191 423
    "<<<=" (391) 192 374
    ">>>=" (392) 193 375
    "=>" (393) 333 334 812
    "::" (394) 279 280
    "&&" (395) 133 164 438
    "||" (396) 134 165 439
    "^^" (397) 135 166 440
    "&&=" (398) 161 364
    "||=" (399) 162 365
    "^^=" (400) 163 366
    ".." (401) 174 441
    "$$" (402) 492
    "$i" (403) 381 493 559 634
    "$v" (404) 494
    "$b" (405) 495
    "$a" (406) 496 530
    "$t" (407) 676
    "$c" (408) 498 499 507
    "$f" (409) 500 501 502 503 504 505 506 785 786 787 788
    "..." (410) 497
    "integer constant" <i> (411) 59 60 61 62 104 115 350
    "long integer constant" <i64> (412) 352
    "unsigned integer constant" <ui> (413) 351
    "unsigned long integer constant" <ui64> (414) 353
    "unsigned int8 constant" <ui> (415) 354
    "floating point constant" <fd> (416) 105 116 355
    "double constant" <d> (417) 356
    "name" <s> (418) 25 48 50 51 53 101 103 110 114 150 198 199 200 206 207 209 278 279 280 308 309 328 329 338 339 340 341 342 378 379 389 390 391 392 393 452 453 466 467 472 534 540 558 560 561 562 563 564 586 587 597 602 619 633 635 636 637 675 677 678 680 681 765 770 775 781 782 783 784
    "new line, comma" (419) 17 607 608
    "new line, semicolon" (420) 19 66 67 522
    "start of the string" (421) 31 32 41
    STRING_CHARACTER <ch> (422) 27 29 34 42 43
    STRING_CHARACTER_ESC (423) 28 30
    "end of the string" (424) 31 32 41
    "{" (425) 40
    "}" (426) 40
    "end of failed eader macro" (427)
    UNARY_MINUS (428)
    UNARY_PLUS (429)
    PRE_INC (430)
    PRE_DEC (431)
    LLPIPE (432)
    POST_INC (433)
    POST_DEC (434)
    DEREF (435)


Nonterminals, with rules where they appear

    $accept (208)
        on left: 0
    program (209)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    COMMA (210)
        on left: 16 17
        on right: 588 589 685
    SEMICOLON (211)
        on left: 18 19
        on right: 8 9 15 20 82 83 90 93 250 251 252 257 259 260 261 262 266 267 268 310 311 524 526 566 568 569 570 571 572 573 580 598 686
    top_level_reader_macro (212)
        on left: 20
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 21 22 23
        on right: 26
    module_name <s> (214)
        on left: 24 25
        on right: 26
    module_declaration (215)
        on left: 26
        on right: 2
    character_sequence <s> (216)
        on left: 27 28 29 30
        on right: 29 30 31 39
    string_constant <s> (217)
        on left: 31 32
        on right: 102 113
    format_string <s> (218)
        on left: 33 34
        on right: 34 37
    optional_format_string <s> (219)
        on left: 35 37
        on right: 40
    $@1 (220)
        on left: 36
        on right: 37
    string_builder_body <pExpression> (221)
        on left: 38 39 40
        on right: 39 40 41
    string_builder <pExpression> (222)
        on left: 41
        on right: 410
    reader_character_sequence (223)
        on left: 42 43
        on right: 43 45
    expr_reader <pExpression> (224)
        on left: 45
        on right: 20 409
    $@2 (225)
        on left: 44
        on right: 45
    options_declaration (226)
        on left: 46
        on right: 9
    require_declaration (227)
        on left: 47
        on right: 8
    require_module_name <s> (228)
        on left: 48 49 50 51
        on right: 49 50 51 52 53
    require_module (229)
        on left: 52 53
        on right: 47
    is_public_module <b> (230)
        on left: 54 55
        on right: 52 53
    expect_declaration (231)
        on left: 56
        on right: 7
    expect_list (232)
        on left: 57 58
        on right: 56 58
    expect_error (233)
        on left: 59 60
        on right: 57 58
    expression_label <pExpression> (234)
        on left: 61
        on right: 266
    expression_goto <pExpression> (235)
        on left: 62 63
        on right: 267
    elif_or_static_elif <b> (236)
        on left: 64 65
        on right: 72
    emit_semis (237)
        on left: 66 67
        on right: 67 69
    optional_emit_semis (238)
        on left: 68 69
        on right: 71 72 92 95 96 98 100 123 124 143 241 347 348 491 528 632 765 770 839
    expression_else <pExpression> (239)
        on left: 70 71 72
        on right: 72 92
    if_or_static_if <b> (240)
        on left: 73 74
        on right: 92
    expression_else_one_liner <pExpression> (241)
        on left: 75 76
        on right: 93
    expression_if_one_liner <pExpression> (242)
        on left: 77 78 79 80 81
        on right: 76 90 93
    semis (243)
        on left: 82 83
        on right: 83 85 539 545
    optional_semis (244)
        on left: 84 85
        on right: 765 770
    expression_if_block <pExpression> (245)
        on left: 88 90
        on right: 92
    $@3 (246)
        on left: 86
        on right: 88
    $@4 (247)
        on left: 87
        on right: 88
    $@5 (248)
        on left: 89
        on right: 90
    expression_if_then_else <pExpression> (249)
        on left: 92
        on right: 263
    $@6 (250)
        on left: 91
        on right: 92
    expression_if_then_else_oneliner <pExpression> (251)
        on left: 93
        on right: 264
    expression_for_loop <pExpression> (252)
        on left: 95
        on right: 258
    $@7 (253)
        on left: 94
        on right: 95
    expression_unsafe <pExpression> (254)
        on left: 96
        on right: 255
    expression_while_loop <pExpression> (255)
        on left: 98
        on right: 254
    $@8 (256)
        on left: 97
        on right: 98
    expression_with <pExpression> (257)
        on left: 100
        on right: 256
    $@9 (258)
        on left: 99
        on right: 100
    expression_with_alias <pExpression> (259)
        on left: 101
        on right: 257
    annotation_argument_value <aa> (260)
        on left: 102 103 104 105 106 107
        on right: 108 109
    annotation_argument_value_list <aaList> (261)
        on left: 108 109
        on right: 109 120
    annotation_argument_name <s> (262)
        on left: 110 111 112
        on right: 113 114 115 116 117 118 119 120
    annotation_argument <aa> (263)
        on left: 113 114 115 116 117 118 119 120
        on right: 121 122 123 124
    annotation_argument_list <aaList> (264)
        on left: 121 122
        on right: 46 122 130
    metadata_argument_list <aaList> (265)
        on left: 123 124
        on right: 124 509
    annotation_declaration_name <s> (266)
        on left: 125 126 127 128
        on right: 129 130
    annotation_declaration_basic <fa> (267)
        on left: 129 130
        on right: 131
    annotation_declaration <fa> (268)
        on left: 131 132 133 134 135 136 137
        on right: 132 133 134 135 136 137 138 139
    annotation_list <faList> (269)
        on left: 138 139
        on right: 139 141 143
    optional_annotation_list <faList> (270)
        on left: 140 141
        on right: 347 348
    optional_annotation_list_with_emit_semis <faList> (271)
        on left: 142 143
        on right: 235 526 528 614 632
    optional_function_argument_list <pVarDeclList> (272)
        on left: 144 145 146
        on right: 239 347 348 388 737 744 751
    optional_function_type <pTypeDecl> (273)
        on left: 147 148 149
        on right: 239 347 348 388 737 744 751
    function_name <s> (274)
        on left: 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234
        on right: 239
    global_function_declaration (275)
        on left: 235
        on right: 6
    optional_public_or_private_function <b> (276)
        on left: 236 237 238
        on right: 241
    function_declaration_header <pFuncDecl> (277)
        on left: 239
        on right: 241 526 528
    function_declaration <pFuncDecl> (278)
        on left: 241
        on right: 235
    $@10 (279)
        on left: 240
        on right: 241
    expression_block_finally <pExpression> (280)
        on left: 242 245
        on right: 88 248
    $@11 (281)
        on left: 243
        on right: 245
    $@12 (282)
        on left: 244
        on right: 245
    expression_block <pExpression> (283)
        on left: 248
        on right: 71 72 95 96 98 100 241 300 332 348 491 528
    $@13 (284)
        on left: 246
        on right: 248
    $@14 (285)
        on left: 247
        on right: 248
    expr_call_pipe <pExpression> (286)
        on left: 249
        on right: 487
    expression_any <pExpression> (287)
        on left: 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268
        on right: 270
    expressions <pExpression> (288)
        on left: 269 270 271
        on right: 88 245 248 270 271 349
    optional_expr_list <pExpression> (289)
        on left: 272 273
        on right: 703 705 818 831
    optional_expr_map_tuple_list <pExpression> (290)
        on left: 274 275
        on right: 839 841 842
    type_declaration_no_options_list <pTypeDeclList> (291)
        on left: 276 277
        on right: 277 705
    name_in_namespace <s> (292)
        on left: 278 279 280
        on right: 45 125 327 328 329 376 377 380 399 400 401 402 403 407 616 673 703 705
    expression_delete <pExpression> (293)
        on left: 281 282
        on right: 252
    new_type_declaration <pTypeDecl> (294)
        on left: 285 286
        on right: 287 288 289 290 291
    $@15 (295)
        on left: 283
        on right: 285
    $@16 (296)
        on left: 284
        on right: 285
    expr_new <pExpression> (297)
        on left: 287 288 289 290 291 292
        on right: 480
    expression_break <pExpression> (298)
        on left: 293
        on right: 80 259
    expression_continue <pExpression> (299)
        on left: 294
        on right: 81 260
    expression_return <pExpression> (300)
        on left: 295 296 297
        on right: 78 261
    expression_yield <pExpression> (301)
        on left: 298 299
        on right: 79 262
    expression_try_catch <pExpression> (302)
        on left: 300
        on right: 265
    kwd_let_var_or_nothing <b> (303)
        on left: 301 302 303
        on right: 529
    kwd_let <b> (304)
        on left: 304 305
        on right: 312 313 314 583 585
    optional_in_scope <b> (305)
        on left: 306 307
        on right: 312 313 314
    tuple_expansion <pNameList> (306)
        on left: 308 309
        on right: 309 310 311
    tuple_expansion_variable_declaration <pVarDecl> (307)
        on left: 310 311
        on right: 313
    expression_let <pExpression> (308)
        on left: 312 313 314
        on right: 253
    expr_cast <pExpression> (309)
        on left: 317 320 323
        on right: 479
    $@17 (310)
        on left: 315
        on right: 317
    $@18 (311)
        on left: 316
        on right: 317
    $@19 (312)
        on left: 318
        on right: 320
    $@20 (313)
        on left: 319
        on right: 320
    $@21 (314)
        on left: 321
        on right: 323
    $@22 (315)
        on left: 322
        on right: 323
    expr_type_decl <pExpression> (316)
        on left: 326
        on right: 478
    $@23 (317)
        on left: 324
        on right: 326
    $@24 (318)
        on left: 325
        on right: 326
    expr_type_info <pExpression> (319)
        on left: 327 328 329
        on right: 477
    expr_list <pExpression> (320)
        on left: 330 331
        on right: 95 273 289 331 377 379 392 395 403 405 446 499 814 828 832 835 847 848 849
    block_or_simple_block <pExpression> (321)
        on left: 332 333 334
        on right: 347
    block_or_lambda <i> (322)
        on left: 335 336 337
        on right: 347 348
    capture_entry <pCapt> (323)
        on left: 338 339 340 341 342
        on right: 343 344
    capture_list <pCaptList> (324)
        on left: 343 344
        on right: 344 346
    optional_capture_list <pCaptList> (325)
        on left: 345 346
        on right: 347 348 489 490 491
    expr_full_block <pExpression> (326)
        on left: 347
        on right: 483
    expr_full_block_assumed_piped <pExpression> (327)
        on left: 348 349
        on right: 249
    expr_numeric_const <pExpression> (328)
        on left: 350 351 352 353 354 355 356
        on right: 408
    expr_assign <pExpression> (329)
        on left: 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375
        on right: 251
    expr_named_call <pExpression> (330)
        on left: 376 377
        on right: 482
    expr_method_call <pExpression> (331)
        on left: 378 379
        on right: 481
    func_addr_name <pExpression> (332)
        on left: 380 381
        on right: 382 385 388
    func_addr_expr <pExpression> (333)
        on left: 382 385 388
        on right: 454
    $@25 (334)
        on left: 383
        on right: 385
    $@26 (335)
        on left: 384
        on right: 385
    $@27 (336)
        on left: 386
        on right: 388
    $@28 (337)
        on left: 387
        on right: 388
    expr_field <pExpression> (338)
        on left: 389 390 391 392 393 394 395 398
        on right: 414
    $@29 (339)
        on left: 396
        on right: 398
    $@30 (340)
        on left: 397
        on right: 398
    expr_call <pExpression> (341)
        on left: 399 400 401 402 403 404 405
        on right: 249 455
    expr <pExpression> (342)
        on left: 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 464 465 466 467 470 471 472 475 476 477 478 479 480 481 482 483 484 485 486 487 488
        on right
    $@31 (343)
        on left: 462
        on right: 464
    $@32 (344)
        on left: 463
        on right: 464
    $@33 (345)
        on left: 468
        on right: 470
    $@34 (346)
        on left: 469
        on right: 470
    $@35 (347)
        on left: 473
        on right: 475
    $@36 (348)
        on left: 474
        on right: 475
    expr_generator <pExpression> (349)
        on left: 489 490 491
        on right: 459
    expr_mtag <pExpression> (350)
        on left: 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507
        on right: 415
    optional_field_annotation <aaList> (351)
        on left: 508 509
        on right: 520 529 582 585
    optional_override <i> (352)
        on left: 510 511 512
        on right: 520 528
    optional_constant <b> (353)
        on left: 513 514
        on right: 526 528
    optional_public_or_private_member_variable <b> (354)
        on left: 515 516 517
        on right: 520 526 528
    optional_static_member_variable <b> (355)
        on left: 518 519
        on right: 520 528
    structure_variable_declaration <pVarDecl> (356)
        on left: 520
        on right: 524
    struct_variable_declaration_list <pVarDeclList> (357)
        on left: 521 522 524 526 528
        on right: 522 524 526 528 628
    $@37 (358)
        on left: 523
        on right: 524
    $@38 (359)
        on left: 525
        on right: 526
    $@39 (360)
        on left: 527
        on right: 528
    function_argument_declaration <pVarDecl> (361)
        on left: 529 530
        on right: 531 532
    function_argument_list <pVarDeclList> (362)
        on left: 531 532
        on right: 146 532
    tuple_type <pVarDecl> (363)
        on left: 533 534
        on right: 535 536 538 539
    tuple_type_list <pVarDeclList> (364)
        on left: 535 536
        on right: 149 536 754 817 824
    tuple_alias_type_list <pVarDeclList> (365)
        on left: 537 538 539
        on right: 539 765
    variant_type <pVarDecl> (366)
        on left: 540
        on right: 541 542 544 545
    variant_type_list <pVarDeclList> (367)
        on left: 541 542
        on right: 542 757 808 827
    variant_alias_type_list <pVarDeclList> (368)
        on left: 543 544 545
        on right: 545 770
    copy_or_move <b> (369)
        on left: 546 547
        on right: 551 552 781 783 785 787
    variable_declaration <pVarDecl> (370)
        on left: 548 549 550 551 552
        on right: 520 529
    copy_or_move_or_clone <i> (371)
        on left: 553 554 555
        on right: 310 311 569 570 572 573
    optional_ref <b> (372)
        on left: 556 557
        on right: 311 570 573
    let_variable_name_with_pos_list <pNameWithPosList> (373)
        on left: 558 559 560 561 562
        on right: 561 562 568 569 570
    global_let_variable_name_with_pos_list <pNameWithPosList> (374)
        on left: 563 564
        on right: 564 571 572 573
    variable_declaration_list <pVarDeclList> (375)
        on left: 565 566 567
        on right: 314 566 567
    let_variable_declaration <pVarDecl> (376)
        on left: 568 569 570
        on right: 312 567 582
    global_let_variable_declaration <pVarDecl> (377)
        on left: 571 572 573
        on right: 585
    optional_shared <b> (378)
        on left: 574 575
        on right: 26 583 585
    optional_public_or_private_variable <b> (379)
        on left: 576 577 578
        on right: 583 585
    global_variable_declaration_list <pVarDeclList> (380)
        on left: 579 580 582
        on right: 580 582 583
    $@40 (381)
        on left: 581
        on right: 582
    global_let (382)
        on left: 583 585
        on right: 5
    $@41 (383)
        on left: 584
        on right: 585
    enum_expression <pEnumPair> (384)
        on left: 586 587
        on right: 591 592
    commas (385)
        on left: 588 589
        on right: 589 592 606 681
    enum_list <pEnum> (386)
        on left: 590 591 592
        on right: 592 614
    optional_public_or_private_alias <b> (387)
        on left: 593 594 595
        on right: 597 765 770 775
    single_alias (388)
        on left: 597
        on right: 598
    $@42 (389)
        on left: 596
        on right: 597
    alias_declaration (390)
        on left: 598
        on right: 10
    optional_public_or_private_enum <b> (391)
        on left: 599 600 601
        on right: 614
    enum_name <pEnum> (392)
        on left: 602
        on right: 614
    optional_enum_basic_type_declaration <type> (393)
        on left: 603 604
        on right: 614
    optional_commas (394)
        on left: 605 606
        on right: 614 775
    emit_commas (395)
        on left: 607 608
        on right: 608 610
    optional_emit_commas (396)
        on left: 609 610
        on right: 614 775
    enum_declaration (397)
        on left: 614
        on right: 4
    $@43 (398)
        on left: 611
        on right: 614
    $@44 (399)
        on left: 612
        on right: 614
    $@45 (400)
        on left: 613
        on right: 614
    optional_structure_parent <s> (401)
        on left: 615 616
        on right: 619
    optional_sealed <b> (402)
        on left: 617 618
        on right: 619
    structure_name <pStructure> (403)
        on left: 619
        on right: 632
    class_or_struct <i> (404)
        on left: 620 621 622 623
        on right: 632
    optional_public_or_private_structure <b> (405)
        on left: 624 625 626
        on right: 632
    optional_struct_variable_declaration_list <pVarDeclList> (406)
        on left: 627 628
        on right: 632
    structure_declaration (407)
        on left: 632
        on right: 3
    $@46 (408)
        on left: 629
        on right: 632
    $@47 (409)
        on left: 630
        on right: 632
    $@48 (410)
        on left: 631
        on right: 632
    variable_name_with_pos_list <pNameWithPosList> (411)
        on left: 633 634 635 636 637
        on right: 95 548 549 550 551 552 636 637 847 848 849
    basic_type_declaration <type> (412)
        on left: 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664
        on right: 394 395 404 405 465 471 476 486 695
    enum_basic_type_declaration <type> (413)
        on left: 665 666 667 668 669 670 671 672
        on right: 604
    structure_type_declaration <pTypeDecl> (414)
        on left: 673
        on right: 286 698
    auto_type_declaration <pTypeDecl> (415)
        on left: 674 675 676
        on right: 696
    bitfield_bits <pNameList> (416)
        on left: 677 678
        on right: 678 684
    bitfield_alias_bits <pNameList> (417)
        on left: 679 680 681
        on right: 681 775
    bitfield_type_declaration <pTypeDecl> (418)
        on left: 684
        on right: 697
    $@49 (419)
        on left: 682
        on right: 684
    $@50 (420)
        on left: 683
        on right: 684
    c_or_s (421)
        on left: 685 686
        on right: 277 329 536 542 688 842
    table_type_pair <aTypePair> (422)
        on left: 687 688
        on right: 727
    dim_list <pTypeDecl> (423)
        on left: 689 690 691 692
        on right: 691 692 694
    type_declaration_no_options <pTypeDecl> (424)
        on left: 693 694
        on right: 310 317 320 323 385 464 489 490 491 568 569 571 572 706 707 708 709 710 711 712 713 714 715 716 717 721 758 759 802 805 811 821 831 835 841 842
    type_declaration_no_options_no_dim <pTypeDecl> (425)
        on left: 695 696 697 698 701 702 703 705 706 707 708 709 710 711 712 713 714 715 716 717 720 721 724 727 730 731 734 737 738 741 744 745 748 751 754 757
        on right: 693 694
    $@51 (426)
        on left: 699
        on right: 701
    $@52 (427)
        on left: 700
        on right: 701
    $@53 (428)
        on left: 704
        on right: 705
    $@54 (429)
        on left: 718
        on right: 720
    $@55 (430)
        on left: 719
        on right: 720
    $@56 (431)
        on left: 722
        on right: 724
    $@57 (432)
        on left: 723
        on right: 724
    $@58 (433)
        on left: 725
        on right: 727
    $@59 (434)
        on left: 726
        on right: 727
    $@60 (435)
        on left: 728
        on right: 730
    $@61 (436)
        on left: 729
        on right: 730
    $@62 (437)
        on left: 732
        on right: 734
    $@63 (438)
        on left: 733
        on right: 734
    $@64 (439)
        on left: 735
        on right: 737
    $@65 (440)
        on left: 736
        on right: 737
    $@66 (441)
        on left: 739
        on right: 741
    $@67 (442)
        on left: 740
        on right: 741
    $@68 (443)
        on left: 742
        on right: 744
    $@69 (444)
        on left: 743
        on right: 744
    $@70 (445)
        on left: 746
        on right: 748
    $@71 (446)
        on left: 747
        on right: 748
    $@72 (447)
        on left: 749
        on right: 751
    $@73 (448)
        on left: 750
        on right: 751
    $@74 (449)
        on left: 752
        on right: 754
    $@75 (450)
        on left: 753
        on right: 754
    $@76 (451)
        on left: 755
        on right: 757
    $@77 (452)
        on left: 756
        on right: 757
    type_declaration <pTypeDecl> (453)
        on left: 758 759 760
        on right: 148 276 277 285 326 470 475 533 534 540 550 551 597 687 688 701 720 724 730 734 741 748 759 760
    tuple_alias_declaration (454)
        on left: 765
        on right: 12
    $@78 (455)
        on left: 761
        on right: 765
    $@79 (456)
        on left: 762
        on right: 765
    $@80 (457)
        on left: 763
        on right: 765
    $@81 (458)
        on left: 764
        on right: 765
    variant_alias_declaration (459)
        on left: 770
        on right: 11
    $@82 (460)
        on left: 766
        on right: 770
    $@83 (461)
        on left: 767
        on right: 770
    $@84 (462)
        on left: 768
        on right: 770
    $@85 (463)
        on left: 769
        on right: 770
    bitfield_alias_declaration (464)
        on left: 775
        on right: 13
    $@86 (465)
        on left: 771
        on right: 775
    $@87 (466)
        on left: 772
        on right: 775
    $@88 (467)
        on left: 773
        on right: 775
    $@89 (468)
        on left: 774
        on right: 775
    make_decl <pExpression> (469)
        on left: 776 777 778 779 780
        on right: 292 411
    make_struct_fields <pMakeStruct> (470)
        on left: 781 782 783 784 785 786 787 788
        on right: 376 377 393 783 784 787 788 790 791 792 793 794
    make_variant_dim <pExpression> (471)
        on left: 789 790
        on right: 808 827
    make_struct_single <pExpression> (472)
        on left: 791
        on right: 290 291 401 402 447
    make_struct_dim_list <pExpression> (473)
        on left: 792 793
        on right: 793 795
    make_struct_dim_decl <pExpression> (474)
        on left: 794 795
        on right: 796
    optional_make_struct_dim_decl <pExpression> (475)
        on left: 796 797
        on right: 802 805 817 821 824
    use_initializer <b> (476)
        on left: 798 799
        on right: 288 802 805 808 811 817 821 824
    make_struct_decl <pExpression> (477)
        on left: 802 805 808 811
        on right: 776
    $@90 (478)
        on left: 800
        on right: 802
    $@91 (479)
        on left: 801
        on right: 802
    $@92 (480)
        on left: 803
        on right: 805
    $@93 (481)
        on left: 804
        on right: 805
    $@94 (482)
        on left: 806
        on right: 808
    $@95 (483)
        on left: 807
        on right: 808
    $@96 (484)
        on left: 809
        on right: 811
    $@97 (485)
        on left: 810
        on right: 811
    make_map_tuple <pExpression> (486)
        on left: 812 813
        on right: 836 837 849
    make_tuple_call <pExpression> (487)
        on left: 814 817
        on right: 780
    $@98 (488)
        on left: 815
        on right: 817
    $@99 (489)
        on left: 816
        on right: 817
    make_dim_decl <pExpression> (490)
        on left: 818 821 824 827 828 831 832 835
        on right: 777
    $@100 (491)
        on left: 819
        on right: 821
    $@101 (492)
        on left: 820
        on right: 821
    $@102 (493)
        on left: 822
        on right: 824
    $@103 (494)
        on left: 823
        on right: 824
    $@104 (495)
        on left: 825
        on right: 827
    $@105 (496)
        on left: 826
        on right: 827
    $@106 (497)
        on left: 829
        on right: 831
    $@107 (498)
        on left: 830
        on right: 831
    $@108 (499)
        on left: 833
        on right: 835
    $@109 (500)
        on left: 834
        on right: 835
    expr_map_tuple_list <pExpression> (501)
        on left: 836 837
        on right: 275 837 840
    make_table_decl <pExpression> (502)
        on left: 839 840 841 842
        on right: 778
    $@110 (503)
        on left: 838
        on right: 839
    array_comprehension_where <pExpression> (504)
        on left: 843 844
        on right: 847 848 849
    optional_comma <b> (505)
        on left: 845 846
        on right: 273 275 446 795 814 828 832 835 840
    array_comprehension <pExpression> (506)
        on left: 847 848 849
        on right: 779


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration SEMICOLON
    9        | program . options_declaration SEMICOLON
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . SEMICOLON

    $end                   shift, and go to state 2
    "let"                  shift, and go to state 3
    "options"              shift, and go to state 4
    "expect"               shift, and go to state 5
    "require"              shift, and go to state 6
    "typedef"              shift, and go to state 7
    "var"                  shift, and go to state 8
    "module"               shift, and go to state 9
    "bitfield"             shift, and go to state 10
    "tuple"                shift, and go to state 11
    "variant"              shift, and go to state 12
    "new line, semicolon"  shift, and go to state 13
    '%'                    shift, and go to state 14
    '['                    shift, and go to state 15
    ';'                    shift, and go to state 16

    $default  reduce using rule 142 (optional_annotation_list_with_emit_semis)

    SEMICOLON                                 go to state 17
    top_level_reader_macro                    go to state 18
    module_declaration                        go to state 19
    expr_reader                               go to state 20
    options_declaration                       go to state 21
    require_declaration                       go to state 22
    expect_declaration                        go to state 23
    optional_annotation_list_with_emit_semis  go to state 24
    global_function_declaration               go to state 25
    kwd_let                                   go to state 26
    global_let                                go to state 27
    alias_declaration                         go to state 28
    enum_declaration                          go to state 29
    structure_declaration                     go to state 30
    tuple_alias_declaration                   go to state 31
    variant_alias_declaration                 go to state 32
    bitfield_alias_declaration                go to state 33


State 2

    0 $accept: program $end .

    $default  accept


State 3

  304 kwd_let: "let" .

    $default  reduce using rule 304 (kwd_let)


State 4

   46 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 39


State 5

   56 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 40

    expect_list   go to state 41
    expect_error  go to state 42


State 6

   47 require_declaration: "require" . require_module

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 45
    require_module       go to state 46


State 7

  598 alias_declaration: "typedef" . single_alias SEMICOLON

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 593 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 49
    single_alias                      go to state 50


State 8

  305 kwd_let: "var" .

    $default  reduce using rule 305 (kwd_let)


State 9

   26 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 51
    '$'     shift, and go to state 52

    module_name  go to state 53


State 10

  775 bitfield_alias_declaration: "bitfield" . $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    $default  reduce using rule 771 ($@86)

    $@86  go to state 54


State 11

  765 tuple_alias_declaration: "tuple" . $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    $default  reduce using rule 761 ($@78)

    $@78  go to state 55


State 12

  770 variant_alias_declaration: "variant" . $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    $default  reduce using rule 766 ($@82)

    $@82  go to state 56


State 13

   19 SEMICOLON: "new line, semicolon" .

    $default  reduce using rule 19 (SEMICOLON)


State 14

   45 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 59


State 15

  143 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   18 SEMICOLON: ';' .

    $default  reduce using rule 18 (SEMICOLON)


State 17

   15 program: program SEMICOLON .

    $default  reduce using rule 15 (program)


State 18

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 19

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 20

   20 top_level_reader_macro: expr_reader . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 71


State 21

    9 program: program options_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 72


State 22

    8 program: program require_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 73


State 23

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 24

  235 global_function_declaration: optional_annotation_list_with_emit_semis . "def" function_declaration
  614 enum_declaration: optional_annotation_list_with_emit_semis . "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'
  632 structure_declaration: optional_annotation_list_with_emit_semis . $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    "def"   shift, and go to state 74
    "enum"  shift, and go to state 75

    $default  reduce using rule 629 ($@46)

    $@46  go to state 76


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  583 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  585           | kwd_let . optional_shared optional_public_or_private_variable $@41 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 574 (optional_shared)

    optional_shared  go to state 78


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 32

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 33

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 34

  111 annotation_argument_name: "type" .

    $default  reduce using rule 111 (annotation_argument_name)


State 35

  112 annotation_argument_name: "in" .

    $default  reduce using rule 112 (annotation_argument_name)


State 36

  110 annotation_argument_name: "name" .

    $default  reduce using rule 110 (annotation_argument_name)


State 37

  113 annotation_argument: annotation_argument_name . '=' string_constant
  114                    | annotation_argument_name . '=' "name"
  115                    | annotation_argument_name . '=' "integer constant"
  116                    | annotation_argument_name . '=' "floating point constant"
  117                    | annotation_argument_name . '=' "true"
  118                    | annotation_argument_name . '=' "false"
  119                    | annotation_argument_name .
  120                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 119 (annotation_argument)


State 38

  121 annotation_argument_list: annotation_argument .

    $default  reduce using rule 121 (annotation_argument_list)


State 39

   46 options_declaration: "options" annotation_argument_list .
  122 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 46 (options_declaration)


State 40

   59 expect_error: "integer constant" .
   60             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 59 (expect_error)


State 41

   56 expect_declaration: "expect" expect_list .
   58 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 56 (expect_declaration)


State 42

   57 expect_list: expect_error .

    $default  reduce using rule 57 (expect_list)


State 43

   48 require_module_name: "name" .

    $default  reduce using rule 48 (require_module_name)


State 44

   49 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 83


State 45

   50 require_module_name: require_module_name . '.' "name"
   51                    | require_module_name . '/' "name"
   52 require_module: require_module_name . is_public_module
   53               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 54 (is_public_module)

    is_public_module  go to state 88


State 46

   47 require_declaration: "require" require_module .

    $default  reduce using rule 47 (require_declaration)


State 47

  595 optional_public_or_private_alias: "public" .

    $default  reduce using rule 595 (optional_public_or_private_alias)


State 48

  594 optional_public_or_private_alias: "private" .

    $default  reduce using rule 594 (optional_public_or_private_alias)


State 49

  597 single_alias: optional_public_or_private_alias . "name" $@42 '=' type_declaration

    "name"  shift, and go to state 89


State 50

  598 alias_declaration: "typedef" single_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 90


State 51

   25 module_name: "name" .

    $default  reduce using rule 25 (module_name)


State 52

   24 module_name: '$' .

    $default  reduce using rule 24 (module_name)


State 53

   26 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 574 (optional_shared)

    optional_shared  go to state 91


State 54

  775 bitfield_alias_declaration: "bitfield" $@86 . optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 593 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 92


State 55

  765 tuple_alias_declaration: "tuple" $@78 . optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 593 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 93


State 56

  770 variant_alias_declaration: "variant" $@82 . optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 593 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 94


State 57

  280 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 95


State 58

  278 name_in_namespace: "name" .
  279                  | "name" . "::" "name"

    "::"  shift, and go to state 96

    $default  reduce using rule 278 (name_in_namespace)


State 59

   45 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 44 ($@2)

    $@2  go to state 97


State 60

  126 annotation_declaration_name: "require" .

    $default  reduce using rule 126 (annotation_declaration_name)


State 61

  127 annotation_declaration_name: "private" .

    $default  reduce using rule 127 (annotation_declaration_name)


State 62

  128 annotation_declaration_name: "template" .

    $default  reduce using rule 128 (annotation_declaration_name)


State 63

  137 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 98
    name_in_namespace             go to state 70


State 64

  132 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 99
    name_in_namespace             go to state 70


State 65

  136 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 66

  129 annotation_declaration_basic: annotation_declaration_name .
  130                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 101

    $default  reduce using rule 129 (annotation_declaration_basic)


State 67

  131 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 131 (annotation_declaration)


State 68

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration
  138 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 138 (annotation_list)


State 69

  139 annotation_list: annotation_list . ',' annotation_declaration
  143 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 105
    ']'  shift, and go to state 106


State 70

  125 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 125 (annotation_declaration_name)


State 71

   20 top_level_reader_macro: expr_reader SEMICOLON .

    $default  reduce using rule 20 (top_level_reader_macro)


State 72

    9 program: program options_declaration SEMICOLON .

    $default  reduce using rule 9 (program)


State 73

    8 program: program require_declaration SEMICOLON .

    $default  reduce using rule 8 (program)


State 74

  235 global_function_declaration: optional_annotation_list_with_emit_semis "def" . function_declaration

    "public"   shift, and go to state 107
    "private"  shift, and go to state 108

    $default  reduce using rule 236 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 109
    function_declaration                 go to state 110


State 75

  614 enum_declaration: optional_annotation_list_with_emit_semis "enum" . $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    $default  reduce using rule 611 ($@43)

    $@43  go to state 111


State 76

  632 structure_declaration: optional_annotation_list_with_emit_semis $@46 . class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 112
    "class"     shift, and go to state 113
    "template"  shift, and go to state 114

    class_or_struct  go to state 115


State 77

  575 optional_shared: "shared" .

    $default  reduce using rule 575 (optional_shared)


State 78

  583 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  585           | kwd_let optional_shared . optional_public_or_private_variable $@41 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 576 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 118


State 79

  113 annotation_argument: annotation_argument_name '=' . string_constant
  114                    | annotation_argument_name '=' . "name"
  115                    | annotation_argument_name '=' . "integer constant"
  116                    | annotation_argument_name '=' . "floating point constant"
  117                    | annotation_argument_name '=' . "true"
  118                    | annotation_argument_name '=' . "false"
  120                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 119
    "false"                    shift, and go to state 120
    "integer constant"         shift, and go to state 121
    "floating point constant"  shift, and go to state 122
    "name"                     shift, and go to state 123
    "start of the string"      shift, and go to state 124
    '('                        shift, and go to state 125

    string_constant  go to state 126


State 80

  122 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 127


State 81

   60 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 128


State 82

   58 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 40

    expect_error  go to state 129


State 83

   49 require_module_name: '%' require_module_name .
   50                    | require_module_name . '.' "name"
   51                    | require_module_name . '/' "name"

    '.'  shift, and go to state 87

    $default  reduce using rule 49 (require_module_name)


State 84

   53 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 130


State 85

   55 is_public_module: "public" .

    $default  reduce using rule 55 (is_public_module)


State 86

   51 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 131


State 87

   50 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 132


State 88

   52 require_module: require_module_name is_public_module .

    $default  reduce using rule 52 (require_module)


State 89

  597 single_alias: optional_public_or_private_alias "name" . $@42 '=' type_declaration

    $default  reduce using rule 596 ($@42)

    $@42  go to state 133


State 90

  598 alias_declaration: "typedef" single_alias SEMICOLON .

    $default  reduce using rule 598 (alias_declaration)


State 91

   26 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 134
    "private"  shift, and go to state 135

    $default  reduce using rule 21 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 136


State 92

  775 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias . "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    "name"  shift, and go to state 137


State 93

  765 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias . "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    "name"  shift, and go to state 138


State 94

  770 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias . "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    "name"  shift, and go to state 139


State 95

  280 name_in_namespace: "::" "name" .

    $default  reduce using rule 280 (name_in_namespace)


State 96

  279 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 140


State 97

   45 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 141

    reader_character_sequence  go to state 142


State 98

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration
  137                       | "|>" annotation_declaration .

    $default  reduce using rule 137 (annotation_declaration)


State 99

  132 annotation_declaration: '!' annotation_declaration .
  133                       | annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 132 (annotation_declaration)


State 100

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration
  136                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104
    ')'   shift, and go to state 143


State 101

  130 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 144


State 102

  133 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 145
    name_in_namespace             go to state 70


State 103

  134 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 146
    name_in_namespace             go to state 70


State 104

  135 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 147
    name_in_namespace             go to state 70


State 105

  139 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 148
    name_in_namespace             go to state 70


State 106

  143 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 151


State 107

  238 optional_public_or_private_function: "public" .

    $default  reduce using rule 238 (optional_public_or_private_function)


State 108

  237 optional_public_or_private_function: "private" .

    $default  reduce using rule 237 (optional_public_or_private_function)


State 109

  241 function_declaration: optional_public_or_private_function . $@10 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 240 ($@10)

    $@10  go to state 152


State 110

  235 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration .

    $default  reduce using rule 235 (global_function_declaration)


State 111

  614 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    "public"   shift, and go to state 153
    "private"  shift, and go to state 154

    $default  reduce using rule 599 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 155


State 112

  621 class_or_struct: "struct" .

    $default  reduce using rule 621 (class_or_struct)


State 113

  620 class_or_struct: "class" .

    $default  reduce using rule 620 (class_or_struct)


State 114

  622 class_or_struct: "template" . "class"
  623                | "template" . "struct"

    "struct"  shift, and go to state 156
    "class"   shift, and go to state 157


State 115

  632 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct . optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    "public"   shift, and go to state 158
    "private"  shift, and go to state 159

    $default  reduce using rule 624 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 160


State 116

  578 optional_public_or_private_variable: "public" .

    $default  reduce using rule 578 (optional_public_or_private_variable)


State 117

  577 optional_public_or_private_variable: "private" .

    $default  reduce using rule 577 (optional_public_or_private_variable)


State 118

  583 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  585           | kwd_let optional_shared optional_public_or_private_variable . $@41 optional_field_annotation global_let_variable_declaration

    '{'  shift, and go to state 161

    $default  reduce using rule 584 ($@41)

    $@41  go to state 162


State 119

  117 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 117 (annotation_argument)


State 120

  118 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 118 (annotation_argument)


State 121

  115 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 115 (annotation_argument)


State 122

  116 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 116 (annotation_argument)


State 123

  114 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 114 (annotation_argument)


State 124

   31 string_constant: "start of the string" . character_sequence "end of the string"
   32                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 165

    character_sequence  go to state 166


State 125

  120 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant                 go to state 172
    annotation_argument_value       go to state 173
    annotation_argument_value_list  go to state 174


State 126

  113 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 113 (annotation_argument)


State 127

  122 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 122 (annotation_argument_list)


State 128

   60 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 60 (expect_error)


State 129

   58 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 58 (expect_list)


State 130

   53 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 54 (is_public_module)

    is_public_module  go to state 175


State 131

   51 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 51 (require_module_name)


State 132

   50 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 50 (require_module_name)


State 133

  597 single_alias: optional_public_or_private_alias "name" $@42 . '=' type_declaration

    '='  shift, and go to state 176


State 134

   22 optional_public_or_private_module: "public" .

    $default  reduce using rule 22 (optional_public_or_private_module)


State 135

   23 optional_public_or_private_module: "private" .

    $default  reduce using rule 23 (optional_public_or_private_module)


State 136

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 26 (module_declaration)


State 137

  775 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" . optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    "new line, comma"  shift, and go to state 177

    $default  reduce using rule 609 (optional_emit_commas)

    emit_commas           go to state 178
    optional_emit_commas  go to state 179


State 138

  765 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" . optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 180


State 139

  770 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" . optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 181


State 140

  279 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 279 (name_in_namespace)


State 141

   42 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 42 (reader_character_sequence)


State 142

   43 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   45 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 182

    $default  reduce using rule 45 (expr_reader)


State 143

  136 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 136 (annotation_declaration)


State 144

  122 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  130 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 183


State 145

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  133                       | annotation_declaration "&&" annotation_declaration .
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 133 (annotation_declaration)


State 146

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  134                       | annotation_declaration "||" annotation_declaration .
  135                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 102
    "^^"  shift, and go to state 104

    $default  reduce using rule 134 (annotation_declaration)


State 147

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration
  135                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 102

    $default  reduce using rule 135 (annotation_declaration)


State 148

  133 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  134                       | annotation_declaration . "||" annotation_declaration
  135                       | annotation_declaration . "^^" annotation_declaration
  139 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 139 (annotation_list)


State 149

   66 emit_semis: "new line, semicolon" .

    $default  reduce using rule 66 (emit_semis)


State 150

   67 emit_semis: emit_semis . "new line, semicolon"
   69 optional_emit_semis: emit_semis .

    "new line, semicolon"  shift, and go to state 184

    $default  reduce using rule 69 (optional_emit_semis)


State 151

  143 optional_annotation_list_with_emit_semis: '[' annotation_list ']' optional_emit_semis .

    $default  reduce using rule 143 (optional_annotation_list_with_emit_semis)


State 152

  241 function_declaration: optional_public_or_private_function $@10 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 215


State 153

  601 optional_public_or_private_enum: "public" .

    $default  reduce using rule 601 (optional_public_or_private_enum)


State 154

  600 optional_public_or_private_enum: "private" .

    $default  reduce using rule 600 (optional_public_or_private_enum)


State 155

  614 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    "name"  shift, and go to state 216

    enum_name  go to state 217


State 156

  623 class_or_struct: "template" "struct" .

    $default  reduce using rule 623 (class_or_struct)


State 157

  622 class_or_struct: "template" "class" .

    $default  reduce using rule 622 (class_or_struct)


State 158

  626 optional_public_or_private_structure: "public" .

    $default  reduce using rule 626 (optional_public_or_private_structure)


State 159

  625 optional_public_or_private_structure: "private" .

    $default  reduce using rule 625 (optional_public_or_private_structure)


State 160

  632 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure . $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    $default  reduce using rule 630 ($@47)

    $@47  go to state 218


State 161

  583 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 579 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 219


State 162

  585 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 220

    $default  reduce using rule 508 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 222


State 163

   27 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 27 (character_sequence)


State 164

   28 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 28 (character_sequence)


State 165

   32 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 32 (string_constant)


State 166

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   31 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224
    "end of the string"   shift, and go to state 225


State 167

  106 annotation_argument_value: "true" .

    $default  reduce using rule 106 (annotation_argument_value)


State 168

  107 annotation_argument_value: "false" .

    $default  reduce using rule 107 (annotation_argument_value)


State 169

  104 annotation_argument_value: "integer constant" .

    $default  reduce using rule 104 (annotation_argument_value)


State 170

  105 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 105 (annotation_argument_value)


State 171

  103 annotation_argument_value: "name" .

    $default  reduce using rule 103 (annotation_argument_value)


State 172

  102 annotation_argument_value: string_constant .

    $default  reduce using rule 102 (annotation_argument_value)


State 173

  108 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 108 (annotation_argument_value_list)


State 174

  109 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  120 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 226
    ')'  shift, and go to state 227


State 175

   53 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 53 (require_module)


State 176

  597 single_alias: optional_public_or_private_alias "name" $@42 '=' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 276


State 177

  607 emit_commas: "new line, comma" .

    $default  reduce using rule 607 (emit_commas)


State 178

  608 emit_commas: emit_commas . "new line, comma"
  610 optional_emit_commas: emit_commas .

    "new line, comma"  shift, and go to state 277

    $default  reduce using rule 610 (optional_emit_commas)


State 179

  775 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas . $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    $default  reduce using rule 772 ($@87)

    $@87  go to state 278


State 180

  765 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis . $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    $default  reduce using rule 762 ($@79)

    $@79  go to state 279


State 181

  770 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis . $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    $default  reduce using rule 767 ($@83)

    $@83  go to state 280


State 182

   43 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 43 (reader_character_sequence)


State 183

  130 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 130 (annotation_declaration_basic)


State 184

   67 emit_semis: emit_semis "new line, semicolon" .

    $default  reduce using rule 67 (emit_semis)


State 185

  151 function_name: "operator" . '!'
  152              | "operator" . '~'
  153              | "operator" . "+="
  154              | "operator" . "-="
  155              | "operator" . "*="
  156              | "operator" . "/="
  157              | "operator" . "%="
  158              | "operator" . "&="
  159              | "operator" . "|="
  160              | "operator" . "^="
  161              | "operator" . "&&="
  162              | "operator" . "||="
  163              | "operator" . "^^="
  164              | "operator" . "&&"
  165              | "operator" . "||"
  166              | "operator" . "^^"
  167              | "operator" . '+'
  168              | "operator" . '-'
  169              | "operator" . '*'
  170              | "operator" . '/'
  171              | "operator" . '%'
  172              | "operator" . '<'
  173              | "operator" . '>'
  174              | "operator" . ".."
  175              | "operator" . "=="
  176              | "operator" . "!="
  177              | "operator" . "<="
  178              | "operator" . ">="
  179              | "operator" . '&'
  180              | "operator" . '|'
  181              | "operator" . '^'
  184              | "operator" . "++"
  185              | "operator" . "--"
  186              | "operator" . "<<"
  187              | "operator" . ">>"
  188              | "operator" . "<<="
  189              | "operator" . ">>="
  190              | "operator" . "<<<"
  191              | "operator" . ">>>"
  192              | "operator" . "<<<="
  193              | "operator" . ">>>="
  194              | "operator" . '[' ']'
  195              | "operator" . "?[" ']'
  196              | "operator" . '.'
  197              | "operator" . "?."
  198              | "operator" . '.' "name"
  199              | "operator" . '.' "name" ":="
  200              | "operator" . "?." "name"
  201              | "operator" . ":="
  202              | "operator" . "delete"
  203              | "operator" . "??"
  204              | "operator" . "is"
  205              | "operator" . "as"
  206              | "operator" . "is" "name"
  207              | "operator" . "as" "name"
  208              | "operator" . '?' "as"
  209              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 281
    "as"      shift, and go to state 282
    "delete"  shift, and go to state 283
    "+="      shift, and go to state 284
    "-="      shift, and go to state 285
    "/="      shift, and go to state 286
    "*="      shift, and go to state 287
    "%="      shift, and go to state 288
    "&="      shift, and go to state 289
    "|="      shift, and go to state 290
    "^="      shift, and go to state 291
    "<<"      shift, and go to state 292
    ">>"      shift, and go to state 293
    "++"      shift, and go to state 294
    "--"      shift, and go to state 295
    "<="      shift, and go to state 296
    "<<="     shift, and go to state 297
    ">>="     shift, and go to state 298
    ">="      shift, and go to state 299
    "=="      shift, and go to state 300
    "!="      shift, and go to state 301
    "??"      shift, and go to state 302
    "?."      shift, and go to state 303
    "?["      shift, and go to state 304
    ":="      shift, and go to state 305
    "<<<"     shift, and go to state 306
    ">>>"     shift, and go to state 307
    "<<<="    shift, and go to state 308
    ">>>="    shift, and go to state 309
    "&&"      shift, and go to state 310
    "||"      shift, and go to state 311
    "^^"      shift, and go to state 312
    "&&="     shift, and go to state 313
    "||="     shift, and go to state 314
    "^^="     shift, and go to state 315
    ".."      shift, and go to state 316
    '?'       shift, and go to state 317
    '|'       shift, and go to state 318
    '^'       shift, and go to state 319
    '&'       shift, and go to state 320
    '<'       shift, and go to state 321
    '>'       shift, and go to state 322
    '-'       shift, and go to state 323
    '+'       shift, and go to state 324
    '*'       shift, and go to state 325
    '/'       shift, and go to state 326
    '%'       shift, and go to state 327
    '~'       shift, and go to state 328
    '!'       shift, and go to state 329
    '.'       shift, and go to state 330
    '['       shift, and go to state 331


State 186

  210 function_name: "bool" .

    $default  reduce using rule 210 (function_name)


State 187

  211 function_name: "string" .

    $default  reduce using rule 211 (function_name)


State 188

  212 function_name: "int" .

    $default  reduce using rule 212 (function_name)


State 189

  213 function_name: "int2" .

    $default  reduce using rule 213 (function_name)


State 190

  214 function_name: "int3" .

    $default  reduce using rule 214 (function_name)


State 191

  215 function_name: "int4" .

    $default  reduce using rule 215 (function_name)


State 192

  216 function_name: "uint" .

    $default  reduce using rule 216 (function_name)


State 193

  217 function_name: "uint2" .

    $default  reduce using rule 217 (function_name)


State 194

  218 function_name: "uint3" .

    $default  reduce using rule 218 (function_name)


State 195

  219 function_name: "uint4" .

    $default  reduce using rule 219 (function_name)


State 196

  220 function_name: "float" .

    $default  reduce using rule 220 (function_name)


State 197

  221 function_name: "float2" .

    $default  reduce using rule 221 (function_name)


State 198

  222 function_name: "float3" .

    $default  reduce using rule 222 (function_name)


State 199

  223 function_name: "float4" .

    $default  reduce using rule 223 (function_name)


State 200

  224 function_name: "range" .

    $default  reduce using rule 224 (function_name)


State 201

  225 function_name: "urange" .

    $default  reduce using rule 225 (function_name)


State 202

  226 function_name: "range64" .

    $default  reduce using rule 226 (function_name)


State 203

  227 function_name: "urange64" .

    $default  reduce using rule 227 (function_name)


State 204

  228 function_name: "int64" .

    $default  reduce using rule 228 (function_name)


State 205

  229 function_name: "uint64" .

    $default  reduce using rule 229 (function_name)


State 206

  230 function_name: "double" .

    $default  reduce using rule 230 (function_name)


State 207

  231 function_name: "int8" .

    $default  reduce using rule 231 (function_name)


State 208

  232 function_name: "uint8" .

    $default  reduce using rule 232 (function_name)


State 209

  233 function_name: "int16" .

    $default  reduce using rule 233 (function_name)


State 210

  234 function_name: "uint16" .

    $default  reduce using rule 234 (function_name)


State 211

  182 function_name: "++" . "operator"

    "operator"  shift, and go to state 332


State 212

  183 function_name: "--" . "operator"

    "operator"  shift, and go to state 333


State 213

  150 function_name: "name" .

    $default  reduce using rule 150 (function_name)


State 214

  239 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 335


State 215

  241 function_declaration: optional_public_or_private_function $@10 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 336


State 216

  602 enum_name: "name" .

    $default  reduce using rule 602 (enum_name)


State 217

  614 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    ':'  shift, and go to state 337

    $default  reduce using rule 603 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 338


State 218

  632 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 . structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 339

    $default  reduce using rule 617 (optional_sealed)

    optional_sealed  go to state 340
    structure_name   go to state 341


State 219

  580 global_variable_declaration_list: global_variable_declaration_list . SEMICOLON
  582                                 | global_variable_declaration_list . $@40 optional_field_annotation let_variable_declaration
  583 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 342

    $default  reduce using rule 581 ($@40)

    SEMICOLON  go to state 343
    $@40       go to state 344


State 220

  123 metadata_argument_list: '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 345


State 221

  124 metadata_argument_list: metadata_argument_list . '@' annotation_argument optional_emit_semis
  509 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 346

    $default  reduce using rule 509 (optional_field_annotation)


State 222

  585 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 347

    global_let_variable_name_with_pos_list  go to state 348
    global_let_variable_declaration         go to state 349


State 223

   29 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 29 (character_sequence)


State 224

   30 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 30 (character_sequence)


State 225

   31 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 31 (string_constant)


State 226

  109 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant            go to state 172
    annotation_argument_value  go to state 350


State 227

  120 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 120 (annotation_argument)


State 228

  701 type_declaration_no_options_no_dim: "type" . '<' $@51 type_declaration '>' $@52

    '<'  shift, and go to state 351


State 229

  724 type_declaration_no_options_no_dim: "array" . '<' $@56 type_declaration '>' $@57

    '<'  shift, and go to state 352


State 230

  727 type_declaration_no_options_no_dim: "table" . '<' $@58 table_type_pair '>' $@59

    '<'  shift, and go to state 353


State 231

  702 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 354


State 232

  730 type_declaration_no_options_no_dim: "iterator" . '<' $@60 type_declaration '>' $@61

    '<'  shift, and go to state 355


State 233

  720 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 356


State 234

  638 basic_type_declaration: "bool" .

    $default  reduce using rule 638 (basic_type_declaration)


State 235

  658 basic_type_declaration: "void" .

    $default  reduce using rule 658 (basic_type_declaration)


State 236

  639 basic_type_declaration: "string" .

    $default  reduce using rule 639 (basic_type_declaration)


State 237

  674 auto_type_declaration: "auto" .
  675                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 357

    $default  reduce using rule 674 (auto_type_declaration)


State 238

  640 basic_type_declaration: "int" .

    $default  reduce using rule 640 (basic_type_declaration)


State 239

  644 basic_type_declaration: "int2" .

    $default  reduce using rule 644 (basic_type_declaration)


State 240

  645 basic_type_declaration: "int3" .

    $default  reduce using rule 645 (basic_type_declaration)


State 241

  646 basic_type_declaration: "int4" .

    $default  reduce using rule 646 (basic_type_declaration)


State 242

  647 basic_type_declaration: "uint" .

    $default  reduce using rule 647 (basic_type_declaration)


State 243

  664 basic_type_declaration: "bitfield" .
  684 bitfield_type_declaration: "bitfield" . '<' $@49 bitfield_bits '>' $@50

    '<'  shift, and go to state 358

    $default  reduce using rule 664 (basic_type_declaration)


State 244

  651 basic_type_declaration: "uint2" .

    $default  reduce using rule 651 (basic_type_declaration)


State 245

  652 basic_type_declaration: "uint3" .

    $default  reduce using rule 652 (basic_type_declaration)


State 246

  653 basic_type_declaration: "uint4" .

    $default  reduce using rule 653 (basic_type_declaration)


State 247

  654 basic_type_declaration: "float" .

    $default  reduce using rule 654 (basic_type_declaration)


State 248

  655 basic_type_declaration: "float2" .

    $default  reduce using rule 655 (basic_type_declaration)


State 249

  656 basic_type_declaration: "float3" .

    $default  reduce using rule 656 (basic_type_declaration)


State 250

  657 basic_type_declaration: "float4" .

    $default  reduce using rule 657 (basic_type_declaration)


State 251

  659 basic_type_declaration: "range" .

    $default  reduce using rule 659 (basic_type_declaration)


State 252

  660 basic_type_declaration: "urange" .

    $default  reduce using rule 660 (basic_type_declaration)


State 253

  661 basic_type_declaration: "range64" .

    $default  reduce using rule 661 (basic_type_declaration)


State 254

  662 basic_type_declaration: "urange64" .

    $default  reduce using rule 662 (basic_type_declaration)


State 255

  731 type_declaration_no_options_no_dim: "block" .
  734                                   | "block" . '<' $@62 type_declaration '>' $@63
  737                                   | "block" . '<' $@64 optional_function_argument_list optional_function_type '>' $@65

    '<'  shift, and go to state 359

    $default  reduce using rule 731 (type_declaration_no_options_no_dim)


State 256

  643 basic_type_declaration: "int64" .

    $default  reduce using rule 643 (basic_type_declaration)


State 257

  650 basic_type_declaration: "uint64" .

    $default  reduce using rule 650 (basic_type_declaration)


State 258

  663 basic_type_declaration: "double" .

    $default  reduce using rule 663 (basic_type_declaration)


State 259

  738 type_declaration_no_options_no_dim: "function" .
  741                                   | "function" . '<' $@66 type_declaration '>' $@67
  744                                   | "function" . '<' $@68 optional_function_argument_list optional_function_type '>' $@69

    '<'  shift, and go to state 360

    $default  reduce using rule 738 (type_declaration_no_options_no_dim)


State 260

  745 type_declaration_no_options_no_dim: "lambda" .
  748                                   | "lambda" . '<' $@70 type_declaration '>' $@71
  751                                   | "lambda" . '<' $@72 optional_function_argument_list optional_function_type '>' $@73

    '<'  shift, and go to state 361

    $default  reduce using rule 745 (type_declaration_no_options_no_dim)


State 261

  641 basic_type_declaration: "int8" .

    $default  reduce using rule 641 (basic_type_declaration)


State 262

  648 basic_type_declaration: "uint8" .

    $default  reduce using rule 648 (basic_type_declaration)


State 263

  642 basic_type_declaration: "int16" .

    $default  reduce using rule 642 (basic_type_declaration)


State 264

  649 basic_type_declaration: "uint16" .

    $default  reduce using rule 649 (basic_type_declaration)


State 265

  754 type_declaration_no_options_no_dim: "tuple" . '<' $@74 tuple_type_list '>' $@75

    '<'  shift, and go to state 362


State 266

  757 type_declaration_no_options_no_dim: "variant" . '<' $@76 variant_type_list '>' $@77

    '<'  shift, and go to state 363


State 267

  676 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 364


State 268

  703 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  705                                   | '$' . name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 365


State 269

  673 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 673 (structure_type_declaration)


State 270

  695 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 695 (type_declaration_no_options_no_dim)


State 271

  698 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 698 (type_declaration_no_options_no_dim)


State 272

  696 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 696 (type_declaration_no_options_no_dim)


State 273

  697 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 697 (type_declaration_no_options_no_dim)


State 274

  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"
  758 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    $default  reduce using rule 758 (type_declaration)


State 275

  693 type_declaration_no_options: type_declaration_no_options_no_dim .
  694                            | type_declaration_no_options_no_dim . dim_list

    '['  shift, and go to state 375

    $default  reduce using rule 693 (type_declaration_no_options)

    dim_list  go to state 376


State 276

  597 single_alias: optional_public_or_private_alias "name" $@42 '=' type_declaration .
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 597 (single_alias)


State 277

  608 emit_commas: emit_commas "new line, comma" .

    $default  reduce using rule 608 (emit_commas)


State 278

  775 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 . '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    '{'  shift, and go to state 378


State 279

  765 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 . '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    '{'  shift, and go to state 379


State 280

  770 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 . '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    '{'  shift, and go to state 380


State 281

  204 function_name: "operator" "is" .
  206              | "operator" "is" . "name"

    "name"  shift, and go to state 381

    $default  reduce using rule 204 (function_name)


State 282

  205 function_name: "operator" "as" .
  207              | "operator" "as" . "name"

    "name"  shift, and go to state 382

    $default  reduce using rule 205 (function_name)


State 283

  202 function_name: "operator" "delete" .

    $default  reduce using rule 202 (function_name)


State 284

  153 function_name: "operator" "+=" .

    $default  reduce using rule 153 (function_name)


State 285

  154 function_name: "operator" "-=" .

    $default  reduce using rule 154 (function_name)


State 286

  156 function_name: "operator" "/=" .

    $default  reduce using rule 156 (function_name)


State 287

  155 function_name: "operator" "*=" .

    $default  reduce using rule 155 (function_name)


State 288

  157 function_name: "operator" "%=" .

    $default  reduce using rule 157 (function_name)


State 289

  158 function_name: "operator" "&=" .

    $default  reduce using rule 158 (function_name)


State 290

  159 function_name: "operator" "|=" .

    $default  reduce using rule 159 (function_name)


State 291

  160 function_name: "operator" "^=" .

    $default  reduce using rule 160 (function_name)


State 292

  186 function_name: "operator" "<<" .

    $default  reduce using rule 186 (function_name)


State 293

  187 function_name: "operator" ">>" .

    $default  reduce using rule 187 (function_name)


State 294

  184 function_name: "operator" "++" .

    $default  reduce using rule 184 (function_name)


State 295

  185 function_name: "operator" "--" .

    $default  reduce using rule 185 (function_name)


State 296

  177 function_name: "operator" "<=" .

    $default  reduce using rule 177 (function_name)


State 297

  188 function_name: "operator" "<<=" .

    $default  reduce using rule 188 (function_name)


State 298

  189 function_name: "operator" ">>=" .

    $default  reduce using rule 189 (function_name)


State 299

  178 function_name: "operator" ">=" .

    $default  reduce using rule 178 (function_name)


State 300

  175 function_name: "operator" "==" .

    $default  reduce using rule 175 (function_name)


State 301

  176 function_name: "operator" "!=" .

    $default  reduce using rule 176 (function_name)


State 302

  203 function_name: "operator" "??" .

    $default  reduce using rule 203 (function_name)


State 303

  197 function_name: "operator" "?." .
  200              | "operator" "?." . "name"

    "name"  shift, and go to state 383

    $default  reduce using rule 197 (function_name)


State 304

  195 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 384


State 305

  201 function_name: "operator" ":=" .

    $default  reduce using rule 201 (function_name)


State 306

  190 function_name: "operator" "<<<" .

    $default  reduce using rule 190 (function_name)


State 307

  191 function_name: "operator" ">>>" .

    $default  reduce using rule 191 (function_name)


State 308

  192 function_name: "operator" "<<<=" .

    $default  reduce using rule 192 (function_name)


State 309

  193 function_name: "operator" ">>>=" .

    $default  reduce using rule 193 (function_name)


State 310

  164 function_name: "operator" "&&" .

    $default  reduce using rule 164 (function_name)


State 311

  165 function_name: "operator" "||" .

    $default  reduce using rule 165 (function_name)


State 312

  166 function_name: "operator" "^^" .

    $default  reduce using rule 166 (function_name)


State 313

  161 function_name: "operator" "&&=" .

    $default  reduce using rule 161 (function_name)


State 314

  162 function_name: "operator" "||=" .

    $default  reduce using rule 162 (function_name)


State 315

  163 function_name: "operator" "^^=" .

    $default  reduce using rule 163 (function_name)


State 316

  174 function_name: "operator" ".." .

    $default  reduce using rule 174 (function_name)


State 317

  208 function_name: "operator" '?' . "as"
  209              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 385


State 318

  180 function_name: "operator" '|' .

    $default  reduce using rule 180 (function_name)


State 319

  181 function_name: "operator" '^' .

    $default  reduce using rule 181 (function_name)


State 320

  179 function_name: "operator" '&' .

    $default  reduce using rule 179 (function_name)


State 321

  172 function_name: "operator" '<' .

    $default  reduce using rule 172 (function_name)


State 322

  173 function_name: "operator" '>' .

    $default  reduce using rule 173 (function_name)


State 323

  168 function_name: "operator" '-' .

    $default  reduce using rule 168 (function_name)


State 324

  167 function_name: "operator" '+' .

    $default  reduce using rule 167 (function_name)


State 325

  169 function_name: "operator" '*' .

    $default  reduce using rule 169 (function_name)


State 326

  170 function_name: "operator" '/' .

    $default  reduce using rule 170 (function_name)


State 327

  171 function_name: "operator" '%' .

    $default  reduce using rule 171 (function_name)


State 328

  152 function_name: "operator" '~' .

    $default  reduce using rule 152 (function_name)


State 329

  151 function_name: "operator" '!' .

    $default  reduce using rule 151 (function_name)


State 330

  196 function_name: "operator" '.' .
  198              | "operator" '.' . "name"
  199              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 386

    $default  reduce using rule 196 (function_name)


State 331

  194 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 387


State 332

  182 function_name: "++" "operator" .

    $default  reduce using rule 182 (function_name)


State 333

  183 function_name: "--" "operator" .

    $default  reduce using rule 183 (function_name)


State 334

  145 optional_function_argument_list: '(' . ')'
  146                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 388
    ')'   shift, and go to state 389
    '@'   shift, and go to state 220

    $default  reduce using rule 508 (optional_field_annotation)

    metadata_argument_list         go to state 221
    optional_field_annotation      go to state 390
    function_argument_declaration  go to state 391
    function_argument_list         go to state 392


State 335

  239 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 393

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 394


State 336

  241 function_declaration: optional_public_or_private_function $@10 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 246 ($@13)

    expression_block  go to state 395
    $@13              go to state 396


State 337

  604 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 397
    "uint"    shift, and go to state 398
    "int64"   shift, and go to state 399
    "uint64"  shift, and go to state 400
    "int8"    shift, and go to state 401
    "uint8"   shift, and go to state 402
    "int16"   shift, and go to state 403
    "uint16"  shift, and go to state 404

    enum_basic_type_declaration  go to state 405


State 338

  614 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    "new line, comma"  shift, and go to state 177

    $default  reduce using rule 609 (optional_emit_commas)

    emit_commas           go to state 178
    optional_emit_commas  go to state 406


State 339

  618 optional_sealed: "sealed" .

    $default  reduce using rule 618 (optional_sealed)


State 340

  619 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 407


State 341

  632 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name . optional_emit_semis $@48 optional_struct_variable_declaration_list

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 408


State 342

  583 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 583 (global_let)


State 343

  580 global_variable_declaration_list: global_variable_declaration_list SEMICOLON .

    $default  reduce using rule 580 (global_variable_declaration_list)


State 344

  582 global_variable_declaration_list: global_variable_declaration_list $@40 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 220

    $default  reduce using rule 508 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 409


State 345

  123 metadata_argument_list: '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 410


State 346

  124 metadata_argument_list: metadata_argument_list '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 411


State 347

  563 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 563 (global_let_variable_name_with_pos_list)


State 348

  564 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  571 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  572                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  573                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 412
    ':'  shift, and go to state 413
    '&'  shift, and go to state 414

    $default  reduce using rule 556 (optional_ref)

    optional_ref  go to state 415


State 349

  585 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 585 (global_let)


State 350

  109 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 109 (annotation_argument_value_list)


State 351

  701 type_declaration_no_options_no_dim: "type" '<' . $@51 type_declaration '>' $@52

    $default  reduce using rule 699 ($@51)

    $@51  go to state 416


State 352

  724 type_declaration_no_options_no_dim: "array" '<' . $@56 type_declaration '>' $@57

    $default  reduce using rule 722 ($@56)

    $@56  go to state 417


State 353

  727 type_declaration_no_options_no_dim: "table" '<' . $@58 table_type_pair '>' $@59

    $default  reduce using rule 725 ($@58)

    $@58  go to state 418


State 354

  702 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 484
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 355

  730 type_declaration_no_options_no_dim: "iterator" '<' . $@60 type_declaration '>' $@61

    $default  reduce using rule 728 ($@60)

    $@60  go to state 494


State 356

  720 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 718 ($@54)

    $@54  go to state 495


State 357

  675 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 496


State 358

  684 bitfield_type_declaration: "bitfield" '<' . $@49 bitfield_bits '>' $@50

    $default  reduce using rule 682 ($@49)

    $@49  go to state 497


State 359

  734 type_declaration_no_options_no_dim: "block" '<' . $@62 type_declaration '>' $@63
  737                                   | "block" '<' . $@64 optional_function_argument_list optional_function_type '>' $@65

    ':'       reduce using rule 735 ($@64)
    '>'       reduce using rule 735 ($@64)
    '('       reduce using rule 735 ($@64)
    $default  reduce using rule 732 ($@62)

    $@62  go to state 498
    $@64  go to state 499


State 360

  741 type_declaration_no_options_no_dim: "function" '<' . $@66 type_declaration '>' $@67
  744                                   | "function" '<' . $@68 optional_function_argument_list optional_function_type '>' $@69

    ':'       reduce using rule 742 ($@68)
    '>'       reduce using rule 742 ($@68)
    '('       reduce using rule 742 ($@68)
    $default  reduce using rule 739 ($@66)

    $@66  go to state 500
    $@68  go to state 501


State 361

  748 type_declaration_no_options_no_dim: "lambda" '<' . $@70 type_declaration '>' $@71
  751                                   | "lambda" '<' . $@72 optional_function_argument_list optional_function_type '>' $@73

    ':'       reduce using rule 749 ($@72)
    '>'       reduce using rule 749 ($@72)
    '('       reduce using rule 749 ($@72)
    $default  reduce using rule 746 ($@70)

    $@70  go to state 502
    $@72  go to state 503


State 362

  754 type_declaration_no_options_no_dim: "tuple" '<' . $@74 tuple_type_list '>' $@75

    $default  reduce using rule 752 ($@74)

    $@74  go to state 504


State 363

  757 type_declaration_no_options_no_dim: "variant" '<' . $@76 variant_type_list '>' $@77

    $default  reduce using rule 755 ($@76)

    $@76  go to state 505


State 364

  676 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 506
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 365

  703 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  705                                   | '$' name_in_namespace . '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 507
    '('  shift, and go to state 508


State 366

  708 type_declaration_no_options_no_dim: type_declaration_no_options "const" .

    $default  reduce using rule 708 (type_declaration_no_options_no_dim)


State 367

  713 type_declaration_no_options_no_dim: type_declaration_no_options "implicit" .

    $default  reduce using rule 713 (type_declaration_no_options_no_dim)


State 368

  707 type_declaration_no_options_no_dim: type_declaration_no_options "explicit" .

    $default  reduce using rule 707 (type_declaration_no_options_no_dim)


State 369

  715 type_declaration_no_options_no_dim: type_declaration_no_options "==" . "const"
  716                                   | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 509
    '&'      shift, and go to state 510


State 370

  721 type_declaration_no_options_no_dim: type_declaration_no_options "??" .

    $default  reduce using rule 721 (type_declaration_no_options_no_dim)


State 371

  717 type_declaration_no_options_no_dim: type_declaration_no_options '?' .

    $default  reduce using rule 717 (type_declaration_no_options_no_dim)


State 372

  710 type_declaration_no_options_no_dim: type_declaration_no_options '&' .

    $default  reduce using rule 710 (type_declaration_no_options_no_dim)


State 373

  706 type_declaration_no_options_no_dim: type_declaration_no_options '-' . '[' ']'
  709                                   | type_declaration_no_options '-' . "const"
  711                                   | type_declaration_no_options '-' . '&'
  714                                   | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 511
    '&'      shift, and go to state 512
    '['      shift, and go to state 513
    '#'      shift, and go to state 514


State 374

  712 type_declaration_no_options_no_dim: type_declaration_no_options '#' .

    $default  reduce using rule 712 (type_declaration_no_options_no_dim)


State 375

  689 dim_list: '[' . expr ']'
  690         | '[' . ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    ']'                               shift, and go to state 515
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 516
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 376

  691 dim_list: dim_list . '[' expr ']'
  692         | dim_list . '[' ']'
  694 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 517

    $default  reduce using rule 694 (type_declaration_no_options)


State 377

  759 type_declaration: type_declaration '|' . type_declaration_no_options
  760                 | type_declaration '|' . '#'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268
    '#'          shift, and go to state 518

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 519
    type_declaration_no_options_no_dim  go to state 275


State 378

  775 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' . $@88 bitfield_alias_bits optional_commas $@89 '}'

    $default  reduce using rule 773 ($@88)

    $@88  go to state 520


State 379

  765 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' . $@80 tuple_alias_type_list optional_semis $@81 '}'

    $default  reduce using rule 763 ($@80)

    $@80  go to state 521


State 380

  770 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' . $@84 variant_alias_type_list optional_semis $@85 '}'

    $default  reduce using rule 768 ($@84)

    $@84  go to state 522


State 381

  206 function_name: "operator" "is" "name" .

    $default  reduce using rule 206 (function_name)


State 382

  207 function_name: "operator" "as" "name" .

    $default  reduce using rule 207 (function_name)


State 383

  200 function_name: "operator" "?." "name" .

    $default  reduce using rule 200 (function_name)


State 384

  195 function_name: "operator" "?[" ']' .

    $default  reduce using rule 195 (function_name)


State 385

  208 function_name: "operator" '?' "as" .
  209              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 523

    $default  reduce using rule 208 (function_name)


State 386

  198 function_name: "operator" '.' "name" .
  199              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 524

    $default  reduce using rule 198 (function_name)


State 387

  194 function_name: "operator" '[' ']' .

    $default  reduce using rule 194 (function_name)


State 388

  530 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 525


State 389

  145 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 145 (optional_function_argument_list)


State 390

  529 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 526
    "var"  shift, and go to state 527

    $default  reduce using rule 303 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 528


State 391

  531 function_argument_list: function_argument_declaration .

    $default  reduce using rule 531 (function_argument_list)


State 392

  146 optional_function_argument_list: '(' function_argument_list . ')'
  532 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 529
    ';'  shift, and go to state 530


State 393

  148 optional_function_type: ':' . type_declaration
  149                       | ':' . '(' tuple_type_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '('          shift, and go to state 531
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 532


State 394

  239 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 239 (function_declaration_header)


State 395

  241 function_declaration: optional_public_or_private_function $@10 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 241 (function_declaration)


State 396

  248 expression_block: $@13 . '{' expressions $@14 '}' expression_block_finally

    '{'  shift, and go to state 533


State 397

  665 enum_basic_type_declaration: "int" .

    $default  reduce using rule 665 (enum_basic_type_declaration)


State 398

  668 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 668 (enum_basic_type_declaration)


State 399

  671 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 671 (enum_basic_type_declaration)


State 400

  672 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 672 (enum_basic_type_declaration)


State 401

  666 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 666 (enum_basic_type_declaration)


State 402

  669 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 669 (enum_basic_type_declaration)


State 403

  667 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 667 (enum_basic_type_declaration)


State 404

  670 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 670 (enum_basic_type_declaration)


State 405

  604 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 604 (optional_enum_basic_type_declaration)


State 406

  614 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas . '{' $@44 enum_list optional_commas $@45 '}'

    '{'  shift, and go to state 534


State 407

  619 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 535

    $default  reduce using rule 615 (optional_structure_parent)

    optional_structure_parent  go to state 536


State 408

  632 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis . $@48 optional_struct_variable_declaration_list

    $default  reduce using rule 631 ($@48)

    $@48  go to state 537


State 409

  582 global_variable_declaration_list: global_variable_declaration_list $@40 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 538
    "name"  shift, and go to state 539

    let_variable_name_with_pos_list  go to state 540
    let_variable_declaration         go to state 541


State 410

  123 metadata_argument_list: '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 123 (metadata_argument_list)


State 411

  124 metadata_argument_list: metadata_argument_list '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 542


State 412

  564 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 543


State 413

  571 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  572                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 544
    type_declaration_no_options_no_dim  go to state 275


State 414

  557 optional_ref: '&' .

    $default  reduce using rule 557 (optional_ref)


State 415

  573 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 545
    ":="  shift, and go to state 546
    '='   shift, and go to state 547

    copy_or_move_or_clone  go to state 548


State 416

  701 type_declaration_no_options_no_dim: "type" '<' $@51 . type_declaration '>' $@52

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 549


State 417

  724 type_declaration_no_options_no_dim: "array" '<' $@56 . type_declaration '>' $@57

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 550


State 418

  727 type_declaration_no_options_no_dim: "table" '<' $@58 . table_type_pair '>' $@59

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    table_type_pair                     go to state 551
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 552


State 419

  802 make_struct_decl: "struct" . '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 553


State 420

  805 make_struct_decl: "class" . '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 554


State 421

  412 expr: "true" .

    $default  reduce using rule 412 (expr)


State 422

  413 expr: "false" .

    $default  reduce using rule 413 (expr)


State 423

  287 expr_new: "new" . new_type_declaration
  288         | "new" . new_type_declaration '(' use_initializer ')'
  289         | "new" . new_type_declaration '(' expr_list ')'
  290         | "new" . new_type_declaration '(' make_struct_single ')'
  291         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  292         | "new" . make_decl

    "struct"       shift, and go to state 419
    "class"        shift, and go to state 420
    "array"        shift, and go to state 426
    "table"        shift, and go to state 428
    "fixed_array"  shift, and go to state 435
    "default"      shift, and go to state 436
    "tuple"        shift, and go to state 438
    "variant"      shift, and go to state 439
    "::"           shift, and go to state 57
    "name"         shift, and go to state 58
    '<'            shift, and go to state 555
    '['            shift, and go to state 463
    '{'            shift, and go to state 467

    name_in_namespace           go to state 269
    new_type_declaration        go to state 556
    structure_type_declaration  go to state 557
    make_decl                   go to state 558
    make_struct_decl            go to state 489
    make_tuple_call             go to state 490
    make_dim_decl               go to state 491
    make_table_decl             go to state 492
    array_comprehension         go to state 493


State 424

  327 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  328               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  329               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 559


State 425

  326 expr_type_decl: "type" . '<' $@23 type_declaration '>' $@24

    '<'  shift, and go to state 560


State 426

  821 make_dim_decl: "array" . "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'
  824              | "array" . "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'
  827              | "array" . "variant" '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim ')'
  828              | "array" . '(' expr_list optional_comma ')'
  831              | "array" . '<' $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list ')'

    "struct"   shift, and go to state 561
    "tuple"    shift, and go to state 562
    "variant"  shift, and go to state 563
    '<'        shift, and go to state 564
    '('        shift, and go to state 565


State 427

  406 expr: "null" .

    $default  reduce using rule 406 (expr)


State 428

  840 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  841                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  842                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 566
    '('  shift, and go to state 567


State 429

  457 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 568


State 430

  317 expr_cast: "cast" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 569


State 431

  320 expr_cast: "upcast" . '<' $@19 type_declaration_no_options '>' $@20 expr

    '<'  shift, and go to state 570


State 432

  458 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 571


State 433

  323 expr_cast: "reinterpret" . '<' $@21 type_declaration_no_options '>' $@22 expr

    '<'  shift, and go to state 572


State 434

  488 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 573


State 435

  832 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  835              | "fixed_array" . '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 574
    '('  shift, and go to state 575


State 436

  811 make_struct_decl: "default" . '<' $@96 type_declaration_no_options '>' $@97 use_initializer

    '<'  shift, and go to state 576


State 437

  664 basic_type_declaration: "bitfield" .

    $default  reduce using rule 664 (basic_type_declaration)


State 438

  814 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  817                | "tuple" . '<' $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 577
    '('  shift, and go to state 578


State 439

  808 make_struct_decl: "variant" . '<' $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 579


State 440

  489 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  490               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  491               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    '<'  shift, and go to state 580


State 441

  442 expr: "++" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 581
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 442

  443 expr: "--" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 582
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 443

  492 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 583


State 444

  493 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 584


State 445

  494 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 585


State 446

  495 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 586


State 447

  496 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 587


State 448

  498 expr_mtag: "$c" . '(' expr ')' '(' ')'
  499          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 588


State 449

  497 expr_mtag: "..." .

    $default  reduce using rule 497 (expr_mtag)


State 450

  350 expr_numeric_const: "integer constant" .

    $default  reduce using rule 350 (expr_numeric_const)


State 451

  352 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 352 (expr_numeric_const)


State 452

  351 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 351 (expr_numeric_const)


State 453

  353 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 353 (expr_numeric_const)


State 454

  354 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 354 (expr_numeric_const)


State 455

  355 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 355 (expr_numeric_const)


State 456

  356 expr_numeric_const: "double constant" .

    $default  reduce using rule 356 (expr_numeric_const)


State 457

   41 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 38 (string_builder_body)

    string_builder_body  go to state 589


State 458

  419 expr: '-' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 590
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 459

  418 expr: '+' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 591
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 460

  456 expr: '*' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 592
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 461

  417 expr: '~' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 593
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 462

  416 expr: '!' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 594
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 463

  818 make_dim_decl: '[' . optional_expr_list ']'
  847 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  848                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "for"                             shift, and go to state 595
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "iterator"                        shift, and go to state 596
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 272 (optional_expr_list)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    optional_expr_list      go to state 597
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 598
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 464

  446 expr: '(' . expr_list optional_comma ')'
  447     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "$f"                              shift, and go to state 600
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 601
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 602
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_fields      go to state 603
    make_struct_single      go to state 604
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 465

  335 block_or_lambda: '$' .

    $default  reduce using rule 335 (block_or_lambda)


State 466

  336 block_or_lambda: '@' .
  337                | '@' . '@'
  382 func_addr_expr: '@' . '@' func_addr_name
  385               | '@' . '@' '<' $@25 type_declaration_no_options '>' $@26 func_addr_name
  388               | '@' . '@' '<' $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name
  507 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 605

    $default  reduce using rule 336 (block_or_lambda)


State 467

  839 make_table_decl: '{' . $@110 optional_emit_semis optional_expr_map_tuple_list '}'
  849 array_comprehension: '{' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "for"  shift, and go to state 606

    $default  reduce using rule 838 ($@110)

    $@110  go to state 607


State 468

  410 expr: string_builder .

    $default  reduce using rule 410 (expr)


State 469

  409 expr: expr_reader .

    $default  reduce using rule 409 (expr)


State 470

  487 expr: expr_call_pipe .

    $default  reduce using rule 487 (expr)


State 471

  376 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  377                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  399 expr_call: name_in_namespace . '(' ')'
  400          | name_in_namespace . '(' "uninitialized" ')'
  401          | name_in_namespace . '(' make_struct_single ')'
  402          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  403          | name_in_namespace . '(' expr_list ')'
  407 expr: name_in_namespace .

    '('  shift, and go to state 608

    $default  reduce using rule 407 (expr)


State 472

  480 expr: expr_new .

    $default  reduce using rule 480 (expr)


State 473

  479 expr: expr_cast .

    $default  reduce using rule 479 (expr)


State 474

  478 expr: expr_type_decl .

    $default  reduce using rule 478 (expr)


State 475

  477 expr: expr_type_info .

    $default  reduce using rule 477 (expr)


State 476

  347 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '['  shift, and go to state 609

    $default  reduce using rule 140 (optional_annotation_list)

    optional_annotation_list  go to state 610


State 477

  483 expr: expr_full_block .

    $default  reduce using rule 483 (expr)


State 478

  408 expr: expr_numeric_const .

    $default  reduce using rule 408 (expr)


State 479

  482 expr: expr_named_call .

    $default  reduce using rule 482 (expr)


State 480

  481 expr: expr_method_call .

    $default  reduce using rule 481 (expr)


State 481

  454 expr: func_addr_expr .

    $default  reduce using rule 454 (expr)


State 482

  414 expr: expr_field .

    $default  reduce using rule 414 (expr)


State 483

  249 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  455 expr: expr_call .

    '$'  shift, and go to state 465
    '@'  shift, and go to state 611
    '{'  shift, and go to state 612

    $default  reduce using rule 455 (expr)

    block_or_lambda                go to state 613
    expr_full_block_assumed_piped  go to state 614


State 484

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  702 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 650


State 485

  459 expr: expr_generator .

    $default  reduce using rule 459 (expr)


State 486

  415 expr: expr_mtag .

    $default  reduce using rule 415 (expr)


State 487

  404 expr_call: basic_type_declaration . '(' ')'
  405          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 651


State 488

  411 expr: make_decl .

    $default  reduce using rule 411 (expr)


State 489

  776 make_decl: make_struct_decl .

    $default  reduce using rule 776 (make_decl)


State 490

  780 make_decl: make_tuple_call .

    $default  reduce using rule 780 (make_decl)


State 491

  777 make_decl: make_dim_decl .

    $default  reduce using rule 777 (make_decl)


State 492

  778 make_decl: make_table_decl .

    $default  reduce using rule 778 (make_decl)


State 493

  779 make_decl: array_comprehension .

    $default  reduce using rule 779 (make_decl)


State 494

  730 type_declaration_no_options_no_dim: "iterator" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 652


State 495

  720 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 653


State 496

  675 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 654


State 497

  684 bitfield_type_declaration: "bitfield" '<' $@49 . bitfield_bits '>' $@50

    "name"  shift, and go to state 655

    bitfield_bits  go to state 656


State 498

  734 type_declaration_no_options_no_dim: "block" '<' $@62 . type_declaration '>' $@63

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 657


State 499

  737 type_declaration_no_options_no_dim: "block" '<' $@64 . optional_function_argument_list optional_function_type '>' $@65

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 658


State 500

  741 type_declaration_no_options_no_dim: "function" '<' $@66 . type_declaration '>' $@67

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 659


State 501

  744 type_declaration_no_options_no_dim: "function" '<' $@68 . optional_function_argument_list optional_function_type '>' $@69

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 660


State 502

  748 type_declaration_no_options_no_dim: "lambda" '<' $@70 . type_declaration '>' $@71

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 661


State 503

  751 type_declaration_no_options_no_dim: "lambda" '<' $@72 . optional_function_argument_list optional_function_type '>' $@73

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 662


State 504

  754 type_declaration_no_options_no_dim: "tuple" '<' $@74 . tuple_type_list '>' $@75

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 663
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 664
    tuple_type_list                     go to state 665
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 666


State 505

  757 type_declaration_no_options_no_dim: "variant" '<' $@76 . variant_type_list '>' $@77

    "name"  shift, and go to state 667

    variant_type       go to state 668
    variant_type_list  go to state 669


State 506

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  676 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 670


State 507

  705 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 704 ($@53)

    $@53  go to state 671


State 508

  703 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 272 (optional_expr_list)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    optional_expr_list      go to state 672
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 598
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 509

  715 type_declaration_no_options_no_dim: type_declaration_no_options "==" "const" .

    $default  reduce using rule 715 (type_declaration_no_options_no_dim)


State 510

  716 type_declaration_no_options_no_dim: type_declaration_no_options "==" '&' .

    $default  reduce using rule 716 (type_declaration_no_options_no_dim)


State 511

  709 type_declaration_no_options_no_dim: type_declaration_no_options '-' "const" .

    $default  reduce using rule 709 (type_declaration_no_options_no_dim)


State 512

  711 type_declaration_no_options_no_dim: type_declaration_no_options '-' '&' .

    $default  reduce using rule 711 (type_declaration_no_options_no_dim)


State 513

  706 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 673


State 514

  714 type_declaration_no_options_no_dim: type_declaration_no_options '-' '#' .

    $default  reduce using rule 714 (type_declaration_no_options_no_dim)


State 515

  690 dim_list: '[' ']' .

    $default  reduce using rule 690 (dim_list)


State 516

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  689 dim_list: '[' expr . ']'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ']'    shift, and go to state 674


State 517

  691 dim_list: dim_list '[' . expr ']'
  692         | dim_list '[' . ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    ']'                               shift, and go to state 675
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 676
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 518

  760 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 760 (type_declaration)


State 519

  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"
  759 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    $default  reduce using rule 759 (type_declaration)


State 520

  775 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 . bitfield_alias_bits optional_commas $@89 '}'

    "name"  shift, and go to state 677

    $default  reduce using rule 679 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 678


State 521

  765 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 . tuple_alias_type_list optional_semis $@81 '}'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 663
    '$'          shift, and go to state 268

    $default  reduce using rule 537 (tuple_alias_type_list)

    name_in_namespace                   go to state 269
    tuple_type                          go to state 679
    tuple_alias_type_list               go to state 680
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 666


State 522

  770 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 . variant_alias_type_list optional_semis $@85 '}'

    "name"  shift, and go to state 667

    $default  reduce using rule 543 (variant_alias_type_list)

    variant_type             go to state 681
    variant_alias_type_list  go to state 682


State 523

  209 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 209 (function_name)


State 524

  199 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 199 (function_name)


State 525

  530 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 683
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 526

  301 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 301 (kwd_let_var_or_nothing)


State 527

  302 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 302 (kwd_let_var_or_nothing)


State 528

  529 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 684
    "name"  shift, and go to state 685

    variable_declaration         go to state 686
    variable_name_with_pos_list  go to state 687


State 529

  146 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 146 (optional_function_argument_list)


State 530

  532 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 388
    '@'   shift, and go to state 220

    $default  reduce using rule 508 (optional_field_annotation)

    metadata_argument_list         go to state 221
    optional_field_annotation      go to state 390
    function_argument_declaration  go to state 688


State 531

  149 optional_function_type: ':' '(' . tuple_type_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 663
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 664
    tuple_type_list                     go to state 689
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 666


State 532

  148 optional_function_type: ':' type_declaration .
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 148 (optional_function_type)


State 533

  248 expression_block: $@13 '{' . expressions $@14 '}' expression_block_finally

    $default  reduce using rule 269 (expressions)

    expressions  go to state 690


State 534

  614 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' . $@44 enum_list optional_commas $@45 '}'

    $default  reduce using rule 612 ($@44)

    $@44  go to state 691


State 535

  616 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 692


State 536

  619 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 619 (structure_name)


State 537

  632 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 . optional_struct_variable_declaration_list

    ';'  shift, and go to state 693
    '{'  shift, and go to state 694

    optional_struct_variable_declaration_list  go to state 695


State 538

  559 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 696


State 539

  558 let_variable_name_with_pos_list: "name" .
  560                                | "name" . "aka" "name"

    "aka"  shift, and go to state 697

    $default  reduce using rule 558 (let_variable_name_with_pos_list)


State 540

  561 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  562                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  568 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  569                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  570                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 698
    ':'  shift, and go to state 699
    '&'  shift, and go to state 414

    $default  reduce using rule 556 (optional_ref)

    optional_ref  go to state 700


State 541

  582 global_variable_declaration_list: global_variable_declaration_list $@40 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 582 (global_variable_declaration_list)


State 542

  124 metadata_argument_list: metadata_argument_list '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 124 (metadata_argument_list)


State 543

  564 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 564 (global_let_variable_name_with_pos_list)


State 544

  571 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  572                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "<-"                   shift, and go to state 545
    "??"                   shift, and go to state 370
    ":="                   shift, and go to state 546
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 547
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    SEMICOLON              go to state 701
    copy_or_move_or_clone  go to state 702


State 545

  554 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 554 (copy_or_move_or_clone)


State 546

  555 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 555 (copy_or_move_or_clone)


State 547

  553 copy_or_move_or_clone: '=' .

    $default  reduce using rule 553 (copy_or_move_or_clone)


State 548

  573 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 703
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 549

  701 type_declaration_no_options_no_dim: "type" '<' $@51 type_declaration . '>' $@52
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 704


State 550

  724 type_declaration_no_options_no_dim: "array" '<' $@56 type_declaration . '>' $@57
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 705


State 551

  727 type_declaration_no_options_no_dim: "table" '<' $@58 table_type_pair . '>' $@59

    '>'  shift, and go to state 706


State 552

  687 table_type_pair: type_declaration .
  688                | type_declaration . c_or_s type_declaration
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    "new line, comma"      shift, and go to state 707
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 708
    '|'                    shift, and go to state 377
    ';'                    shift, and go to state 16

    $default  reduce using rule 687 (table_type_pair)

    COMMA      go to state 709
    SEMICOLON  go to state 710
    c_or_s     go to state 711


State 553

  802 make_struct_decl: "struct" '<' . $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 800 ($@90)

    $@90  go to state 712


State 554

  805 make_struct_decl: "class" '<' . $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 803 ($@92)

    $@92  go to state 713


State 555

  285 new_type_declaration: '<' . $@15 type_declaration '>' $@16

    $default  reduce using rule 283 ($@15)

    $@15  go to state 714


State 556

  287 expr_new: "new" new_type_declaration .
  288         | "new" new_type_declaration . '(' use_initializer ')'
  289         | "new" new_type_declaration . '(' expr_list ')'
  290         | "new" new_type_declaration . '(' make_struct_single ')'
  291         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 715

    $default  reduce using rule 287 (expr_new)


State 557

  286 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 286 (new_type_declaration)


State 558

  292 expr_new: "new" make_decl .

    $default  reduce using rule 292 (expr_new)


State 559

  327 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  328               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  329               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 716
    '('  shift, and go to state 717


State 560

  326 expr_type_decl: "type" '<' . $@23 type_declaration '>' $@24

    $default  reduce using rule 324 ($@23)

    $@23  go to state 718


State 561

  821 make_dim_decl: "array" "struct" . '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 719


State 562

  824 make_dim_decl: "array" "tuple" . '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 720


State 563

  827 make_dim_decl: "array" "variant" . '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim ')'

    '<'  shift, and go to state 721


State 564

  831 make_dim_decl: "array" '<' . $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list ')'

    $default  reduce using rule 829 ($@106)

    $@106  go to state 722


State 565

  828 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 723
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 566

  841 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  842                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 724
    type_declaration_no_options_no_dim  go to state 275


State 567

  840 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 725
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_map_tuple          go to state 726
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    expr_map_tuple_list     go to state 727
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 568

  457 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 728
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 569

  317 expr_cast: "cast" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 315 ($@17)

    $@17  go to state 729


State 570

  320 expr_cast: "upcast" '<' . $@19 type_declaration_no_options '>' $@20 expr

    $default  reduce using rule 318 ($@19)

    $@19  go to state 730


State 571

  458 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 731
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 572

  323 expr_cast: "reinterpret" '<' . $@21 type_declaration_no_options '>' $@22 expr

    $default  reduce using rule 321 ($@21)

    $@21  go to state 732


State 573

  488 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 733
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 574

  835 make_dim_decl: "fixed_array" '<' . $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')'

    $default  reduce using rule 833 ($@108)

    $@108  go to state 734


State 575

  832 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 735
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 576

  811 make_struct_decl: "default" '<' . $@96 type_declaration_no_options '>' $@97 use_initializer

    $default  reduce using rule 809 ($@96)

    $@96  go to state 736


State 577

  817 make_tuple_call: "tuple" '<' . $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 815 ($@98)

    $@98  go to state 737


State 578

  814 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 738
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 579

  808 make_struct_decl: "variant" '<' . $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 806 ($@94)

    $@94  go to state 739


State 580

  489 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  490               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  491               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 740
    type_declaration_no_options_no_dim  go to state 275


State 581

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  442     | "++" expr .
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 615
    "as"  shift, and go to state 616
    "++"  shift, and go to state 619
    "--"  shift, and go to state 620
    "->"  shift, and go to state 625
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    "<|"  shift, and go to state 629
    "|>"  shift, and go to state 630
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 442 (expr)


State 582

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  443     | "--" expr .
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 615
    "as"  shift, and go to state 616
    "++"  shift, and go to state 619
    "--"  shift, and go to state 620
    "->"  shift, and go to state 625
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    "<|"  shift, and go to state 629
    "|>"  shift, and go to state 630
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 443 (expr)


State 583

  492 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 741
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 584

  493 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 742
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 585

  494 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 743
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 586

  495 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 744
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 587

  496 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 745
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 588

  498 expr_mtag: "$c" '(' . expr ')' '(' ')'
  499          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 746
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 589

   39 string_builder_body: string_builder_body . character_sequence
   40                    | string_builder_body . "{" expr optional_format_string "}"
   41 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 747
    "{"                   shift, and go to state 748

    character_sequence  go to state 749


State 590

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  419 expr: '-' expr .
  420     | expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 615
    "as"  shift, and go to state 616
    "++"  shift, and go to state 619
    "--"  shift, and go to state 620
    "->"  shift, and go to state 625
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    "<|"  shift, and go to state 629
    "|>"  shift, and go to state 630
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 419 (expr)


State 591

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  418 expr: '+' expr .
  420     | expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 615
    "as"  shift, and go to state 616
    "++"  shift, and go to state 619
    "--"  shift, and go to state 620
    "->"  shift, and go to state 625
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    "<|"  shift, and go to state 629
    "|>"  shift, and go to state 630
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 418 (expr)


State 592

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  456     | '*' expr .
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 456 (expr)


State 593

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  417 expr: '~' expr .
  420     | expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 615
    "as"  shift, and go to state 616
    "++"  shift, and go to state 619
    "--"  shift, and go to state 620
    "->"  shift, and go to state 625
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    "<|"  shift, and go to state 629
    "|>"  shift, and go to state 630
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 417 (expr)


State 594

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  416 expr: '!' expr .
  420     | expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 615
    "as"  shift, and go to state 616
    "++"  shift, and go to state 619
    "--"  shift, and go to state 620
    "->"  shift, and go to state 625
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    "<|"  shift, and go to state 629
    "|>"  shift, and go to state 630
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 416 (expr)


State 595

  847 array_comprehension: '[' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 750


State 596

  848 array_comprehension: '[' "iterator" . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "for"  shift, and go to state 751


State 597

  818 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 752


State 598

  273 optional_expr_list: expr_list . optional_comma
  331 expr_list: expr_list . ',' expr

    ','  shift, and go to state 753

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 754


State 599

  330 expr_list: expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 330 (expr_list)


State 600

  785 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  786                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 755


State 601

  278 name_in_namespace: "name" .
  279                  | "name" . "::" "name"
  781 make_struct_fields: "name" . copy_or_move expr
  782                   | "name" . ":=" expr

    "<-"  shift, and go to state 756
    ":="  shift, and go to state 757
    "::"  shift, and go to state 96
    '='   shift, and go to state 758

    $default  reduce using rule 278 (name_in_namespace)

    copy_or_move  go to state 759


State 602

  331 expr_list: expr_list . ',' expr
  446 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 753

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 760


State 603

  783 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  784                   | make_struct_fields . ',' "name" ":=" expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  791 make_struct_single: make_struct_fields .

    ','  shift, and go to state 761

    $default  reduce using rule 791 (make_struct_single)


State 604

  447 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 762


State 605

  337 block_or_lambda: '@' '@' .
  382 func_addr_expr: '@' '@' . func_addr_name
  385               | '@' '@' . '<' $@25 type_declaration_no_options '>' $@26 func_addr_name
  388               | '@' '@' . '<' $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name
  507 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 763
    "$c"    shift, and go to state 764
    "name"  shift, and go to state 58
    '<'     shift, and go to state 765

    $default  reduce using rule 337 (block_or_lambda)

    name_in_namespace  go to state 766
    func_addr_name     go to state 767


State 606

  849 array_comprehension: '{' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    '('  shift, and go to state 768


State 607

  839 make_table_decl: '{' $@110 . optional_emit_semis optional_expr_map_tuple_list '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 769


State 608

  376 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  377                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  399 expr_call: name_in_namespace '(' . ')'
  400          | name_in_namespace '(' . "uninitialized" ')'
  401          | name_in_namespace '(' . make_struct_single ')'
  402          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  403          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "uninitialized"                   shift, and go to state 770
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "$f"                              shift, and go to state 600
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 601
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 771
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 772
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 773
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_fields      go to state 603
    make_struct_single      go to state 774
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 609

  141 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 775
    name_in_namespace             go to state 70


State 610

  347 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    "capture"  shift, and go to state 776

    $default  reduce using rule 345 (optional_capture_list)

    optional_capture_list  go to state 777


State 611

  336 block_or_lambda: '@' .
  337                | '@' . '@'

    '@'  shift, and go to state 778

    $default  reduce using rule 336 (block_or_lambda)


State 612

  349 expr_full_block_assumed_piped: '{' . expressions '}'

    $default  reduce using rule 269 (expressions)

    expressions  go to state 779


State 613

  348 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '['  shift, and go to state 609

    $default  reduce using rule 140 (optional_annotation_list)

    optional_annotation_list  go to state 780


State 614

  249 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 249 (expr_call_pipe)


State 615

  464 expr: expr "is" . "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr "is" . basic_type_declaration
  466     | expr "is" . "name"
  506 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 781
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 437
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 782
    "name"      shift, and go to state 783

    basic_type_declaration  go to state 784


State 616

  467 expr: expr "as" . "name"
  470     | expr "as" . "type" '<' $@33 type_declaration '>' $@34
  471     | expr "as" . basic_type_declaration
  504 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 785
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 437
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 786
    "name"      shift, and go to state 787

    basic_type_declaration  go to state 788


State 617

  420 expr: expr "<<" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 789
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 618

  421 expr: expr ">>" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 790
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 619

  444 expr: expr "++" .

    $default  reduce using rule 444 (expr)


State 620

  445 expr: expr "--" .

    $default  reduce using rule 445 (expr)


State 621

  433 expr: expr "<=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 791
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 622

  434 expr: expr ">=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 792
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 623

  431 expr: expr "==" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 793
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 624

  432 expr: expr "!=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 794
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 625

  378 expr_method_call: expr "->" . "name" '(' ')'
  379                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 795


State 626

  460 expr: expr "??" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 796
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 627

  452 expr: expr "?." . "name"
  501 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 797
    "name"  shift, and go to state 798


State 628

  450 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 799
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 629

  484 expr: expr "<|" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 800
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 630

  485 expr: expr "|>" . expr
  486     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 801
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 802
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 631

  422 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 803
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 632

  423 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 804
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 633

  438 expr: expr "&&" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 805
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 634

  439 expr: expr "||" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 806
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 635

  440 expr: expr "^^" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 807
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 636

  441 expr: expr ".." . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 808
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 637

  461 expr: expr '?' . expr ':' expr
  472     | expr '?' . "as" "name"
  475     | expr '?' . "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr '?' . "as" basic_type_declaration
  505 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "as"                              shift, and go to state 809
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 810
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 638

  436 expr: expr '|' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 811
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 639

  437 expr: expr '^' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 812
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 640

  435 expr: expr '&' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 813
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 641

  429 expr: expr '<' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 814
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 642

  430 expr: expr '>' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 815
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 643

  425 expr: expr '-' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 816
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 644

  424 expr: expr '+' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 817
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 645

  426 expr: expr '*' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 818
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 646

  427 expr: expr '/' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 819
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 647

  428 expr: expr '%' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 820
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 648

  389 expr_field: expr '.' . "name"
  390           | expr '.' . '.' "name"
  391           | expr '.' . "name" '(' ')'
  392           | expr '.' . "name" '(' expr_list ')'
  393           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  394           | expr '.' . basic_type_declaration '(' ')'
  395           | expr '.' . basic_type_declaration '(' expr_list ')'
  398           | expr '.' . $@29 error $@30
  449 expr: expr '.' . '[' expr ']'
  451     | expr '.' . "?[" expr ']'
  453     | expr '.' . "?." "name"
  500 expr_mtag: expr '.' . "$f" '(' expr ')'
  502          | expr '.' . '.' "$f" '(' expr ')'
  503          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 437
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "?."        shift, and go to state 821
    "?["        shift, and go to state 822
    "$f"        shift, and go to state 823
    "name"      shift, and go to state 824
    '.'         shift, and go to state 825
    '['         shift, and go to state 826

    $default  reduce using rule 396 ($@29)

    $@29                    go to state 827
    basic_type_declaration  go to state 828


State 649

  448 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 829
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 650

  702 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 702 (type_declaration_no_options_no_dim)


State 651

  404 expr_call: basic_type_declaration '(' . ')'
  405          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 830
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 831
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 652

  730 type_declaration_no_options_no_dim: "iterator" '<' $@60 type_declaration . '>' $@61
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 832


State 653

  720 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 type_declaration . '>' $@55
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 833


State 654

  675 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 675 (auto_type_declaration)


State 655

  677 bitfield_bits: "name" .

    $default  reduce using rule 677 (bitfield_bits)


State 656

  678 bitfield_bits: bitfield_bits . ';' "name"
  684 bitfield_type_declaration: "bitfield" '<' $@49 bitfield_bits . '>' $@50

    '>'  shift, and go to state 834
    ';'  shift, and go to state 835


State 657

  734 type_declaration_no_options_no_dim: "block" '<' $@62 type_declaration . '>' $@63
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 836


State 658

  737 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list . optional_function_type '>' $@65

    ':'  shift, and go to state 393

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 837


State 659

  741 type_declaration_no_options_no_dim: "function" '<' $@66 type_declaration . '>' $@67
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 838


State 660

  744 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list . optional_function_type '>' $@69

    ':'  shift, and go to state 393

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 839


State 661

  748 type_declaration_no_options_no_dim: "lambda" '<' $@70 type_declaration . '>' $@71
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 840


State 662

  751 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list . optional_function_type '>' $@73

    ':'  shift, and go to state 393

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 841


State 663

  278 name_in_namespace: "name" .
  279                  | "name" . "::" "name"
  534 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 96
    ':'   shift, and go to state 842

    $default  reduce using rule 278 (name_in_namespace)


State 664

  535 tuple_type_list: tuple_type .

    $default  reduce using rule 535 (tuple_type_list)


State 665

  536 tuple_type_list: tuple_type_list . c_or_s tuple_type
  754 type_declaration_no_options_no_dim: "tuple" '<' $@74 tuple_type_list . '>' $@75

    "new line, comma"      shift, and go to state 707
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 708
    '>'                    shift, and go to state 843
    ';'                    shift, and go to state 16

    COMMA      go to state 709
    SEMICOLON  go to state 710
    c_or_s     go to state 844


State 666

  533 tuple_type: type_declaration .
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 533 (tuple_type)


State 667

  540 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 845


State 668

  541 variant_type_list: variant_type .

    $default  reduce using rule 541 (variant_type_list)


State 669

  542 variant_type_list: variant_type_list . c_or_s variant_type
  757 type_declaration_no_options_no_dim: "variant" '<' $@76 variant_type_list . '>' $@77

    "new line, comma"      shift, and go to state 707
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 708
    '>'                    shift, and go to state 846
    ';'                    shift, and go to state 16

    COMMA      go to state 709
    SEMICOLON  go to state 710
    c_or_s     go to state 847


State 670

  676 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 676 (auto_type_declaration)


State 671

  705 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    type_declaration_no_options_list    go to state 848
    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 849


State 672

  703 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 850


State 673

  706 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 706 (type_declaration_no_options_no_dim)


State 674

  689 dim_list: '[' expr ']' .

    $default  reduce using rule 689 (dim_list)


State 675

  692 dim_list: dim_list '[' ']' .

    $default  reduce using rule 692 (dim_list)


State 676

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  691 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ']'    shift, and go to state 851


State 677

  680 bitfield_alias_bits: "name" .

    $default  reduce using rule 680 (bitfield_alias_bits)


State 678

  681 bitfield_alias_bits: bitfield_alias_bits . commas "name"
  775 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits . optional_commas $@89 '}'

    "new line, comma"  shift, and go to state 707
    ','                shift, and go to state 708

    $default  reduce using rule 605 (optional_commas)

    COMMA            go to state 852
    commas           go to state 853
    optional_commas  go to state 854


State 679

  538 tuple_alias_type_list: tuple_type .

    $default  reduce using rule 538 (tuple_alias_type_list)


State 680

  539 tuple_alias_type_list: tuple_alias_type_list . semis tuple_type
  765 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list . optional_semis $@81 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 84 (optional_semis)

    SEMICOLON       go to state 855
    semis           go to state 856
    optional_semis  go to state 857


State 681

  544 variant_alias_type_list: variant_type .

    $default  reduce using rule 544 (variant_alias_type_list)


State 682

  545 variant_alias_type_list: variant_alias_type_list . semis variant_type
  770 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list . optional_semis $@85 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 84 (optional_semis)

    SEMICOLON       go to state 855
    semis           go to state 858
    optional_semis  go to state 859


State 683

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  530 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 860


State 684

  634 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 861


State 685

  633 variable_name_with_pos_list: "name" .
  635                            | "name" . "aka" "name"

    "aka"  shift, and go to state 862

    $default  reduce using rule 633 (variable_name_with_pos_list)


State 686

  529 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 529 (function_argument_declaration)


State 687

  548 variable_declaration: variable_name_with_pos_list .
  549                     | variable_name_with_pos_list . '&'
  550                     | variable_name_with_pos_list . ':' type_declaration
  551                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  552                     | variable_name_with_pos_list . copy_or_move expr
  636 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  637                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 756
    ','   shift, and go to state 863
    '='   shift, and go to state 758
    ':'   shift, and go to state 864
    '&'   shift, and go to state 865

    $default  reduce using rule 548 (variable_declaration)

    copy_or_move  go to state 866


State 688

  532 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 532 (function_argument_list)


State 689

  149 optional_function_type: ':' '(' tuple_type_list . ')'
  536 tuple_type_list: tuple_type_list . c_or_s tuple_type

    "new line, comma"      shift, and go to state 707
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 708
    ')'                    shift, and go to state 867
    ';'                    shift, and go to state 16

    COMMA      go to state 709
    SEMICOLON  go to state 710
    c_or_s     go to state 844


State 690

  248 expression_block: $@13 '{' expressions . $@14 '}' expression_block_finally
  270 expressions: expressions . expression_any
  271            | expressions . error

    error                             shift, and go to state 868
    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 869
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 870
    "try"                             shift, and go to state 871
    "table"                           shift, and go to state 428
    "delete"                          shift, and go to state 872
    "deref"                           shift, and go to state 429
    "assume"                          shift, and go to state 873
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 874
    "pass"                            shift, and go to state 875
    "reinterpret"                     shift, and go to state 433
    "label"                           shift, and go to state 876
    "goto"                            shift, and go to state 877
    "unsafe"                          shift, and go to state 878
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 879
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 467

    "while"      reduce using rule 97 ($@8)
    "if"         reduce using rule 91 ($@6)
    "static_if"  reduce using rule 91 ($@6)
    "for"        reduce using rule 94 ($@7)
    "with"       reduce using rule 99 ($@9)
    '}'          reduce using rule 247 ($@14)

    SEMICOLON                         go to state 880
    string_builder                    go to state 468
    expr_reader                       go to state 469
    expression_label                  go to state 881
    expression_goto                   go to state 882
    expression_if_one_liner           go to state 883
    expression_if_then_else           go to state 884
    $@6                               go to state 885
    expression_if_then_else_oneliner  go to state 886
    expression_for_loop               go to state 887
    $@7                               go to state 888
    expression_unsafe                 go to state 889
    expression_while_loop             go to state 890
    $@8                               go to state 891
    expression_with                   go to state 892
    $@9                               go to state 893
    expression_with_alias             go to state 894
    $@14                              go to state 895
    expr_call_pipe                    go to state 470
    expression_any                    go to state 896
    name_in_namespace                 go to state 471
    expression_delete                 go to state 897
    expr_new                          go to state 472
    expression_break                  go to state 898
    expression_continue               go to state 899
    expression_return                 go to state 900
    expression_yield                  go to state 901
    expression_try_catch              go to state 902
    kwd_let                           go to state 903
    expression_let                    go to state 904
    expr_cast                         go to state 473
    expr_type_decl                    go to state 474
    expr_type_info                    go to state 475
    block_or_lambda                   go to state 476
    expr_full_block                   go to state 477
    expr_numeric_const                go to state 478
    expr_assign                       go to state 905
    expr_named_call                   go to state 479
    expr_method_call                  go to state 480
    func_addr_expr                    go to state 481
    expr_field                        go to state 482
    expr_call                         go to state 483
    expr                              go to state 906
    expr_generator                    go to state 485
    expr_mtag                         go to state 486
    basic_type_declaration            go to state 487
    make_decl                         go to state 488
    make_struct_decl                  go to state 489
    make_tuple_call                   go to state 490
    make_dim_decl                     go to state 491
    make_table_decl                   go to state 492
    array_comprehension               go to state 493


State 691

  614 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 . enum_list optional_commas $@45 '}'

    "name"  shift, and go to state 907

    $default  reduce using rule 590 (enum_list)

    enum_expression  go to state 908
    enum_list        go to state 909


State 692

  616 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 616 (optional_structure_parent)


State 693

  627 optional_struct_variable_declaration_list: ';' .

    $default  reduce using rule 627 (optional_struct_variable_declaration_list)


State 694

  628 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 521 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 910


State 695

  632 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list .

    $default  reduce using rule 632 (structure_declaration)


State 696

  559 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 911
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 697

  560 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 912


State 698

  561 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  562                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 913


State 699

  568 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  569                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 914
    type_declaration_no_options_no_dim  go to state 275


State 700

  570 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 545
    ":="  shift, and go to state 546
    '='   shift, and go to state 547

    copy_or_move_or_clone  go to state 915


State 701

  571 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 571 (global_let_variable_declaration)


State 702

  572 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 916
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 703

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  573 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 615
    "as"                   shift, and go to state 616
    "<<"                   shift, and go to state 617
    ">>"                   shift, and go to state 618
    "++"                   shift, and go to state 619
    "--"                   shift, and go to state 620
    "<="                   shift, and go to state 621
    ">="                   shift, and go to state 622
    "=="                   shift, and go to state 623
    "!="                   shift, and go to state 624
    "->"                   shift, and go to state 625
    "??"                   shift, and go to state 626
    "?."                   shift, and go to state 627
    "?["                   shift, and go to state 628
    "<|"                   shift, and go to state 629
    "|>"                   shift, and go to state 630
    "<<<"                  shift, and go to state 631
    ">>>"                  shift, and go to state 632
    "&&"                   shift, and go to state 633
    "||"                   shift, and go to state 634
    "^^"                   shift, and go to state 635
    ".."                   shift, and go to state 636
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 637
    '|'                    shift, and go to state 638
    '^'                    shift, and go to state 639
    '&'                    shift, and go to state 640
    '<'                    shift, and go to state 641
    '>'                    shift, and go to state 642
    '-'                    shift, and go to state 643
    '+'                    shift, and go to state 644
    '*'                    shift, and go to state 645
    '/'                    shift, and go to state 646
    '%'                    shift, and go to state 647
    '.'                    shift, and go to state 648
    '['                    shift, and go to state 649
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 917


State 704

  701 type_declaration_no_options_no_dim: "type" '<' $@51 type_declaration '>' . $@52

    $default  reduce using rule 700 ($@52)

    $@52  go to state 918


State 705

  724 type_declaration_no_options_no_dim: "array" '<' $@56 type_declaration '>' . $@57

    $default  reduce using rule 723 ($@57)

    $@57  go to state 919


State 706

  727 type_declaration_no_options_no_dim: "table" '<' $@58 table_type_pair '>' . $@59

    $default  reduce using rule 726 ($@59)

    $@59  go to state 920


State 707

   17 COMMA: "new line, comma" .

    $default  reduce using rule 17 (COMMA)


State 708

   16 COMMA: ',' .

    $default  reduce using rule 16 (COMMA)


State 709

  685 c_or_s: COMMA .

    $default  reduce using rule 685 (c_or_s)


State 710

  686 c_or_s: SEMICOLON .

    $default  reduce using rule 686 (c_or_s)


State 711

  688 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 921


State 712

  802 make_struct_decl: "struct" '<' $@90 . type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 922
    type_declaration_no_options_no_dim  go to state 275


State 713

  805 make_struct_decl: "class" '<' $@92 . type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 923
    type_declaration_no_options_no_dim  go to state 275


State 714

  285 new_type_declaration: '<' $@15 . type_declaration '>' $@16

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 924


State 715

  288 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  289         | "new" new_type_declaration '(' . expr_list ')'
  290         | "new" new_type_declaration '(' . make_struct_single ')'
  291         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "uninitialized"                   shift, and go to state 925
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "$f"                              shift, and go to state 600
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 601
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 798 (use_initializer)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 926
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_fields      go to state 603
    make_struct_single      go to state 927
    use_initializer         go to state 928
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 716

  328 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  329               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 929


State 717

  327 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 930
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 718

  326 expr_type_decl: "type" '<' $@23 . type_declaration '>' $@24

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 931


State 719

  821 make_dim_decl: "array" "struct" '<' . $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 819 ($@100)

    $@100  go to state 932


State 720

  824 make_dim_decl: "array" "tuple" '<' . $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 822 ($@102)

    $@102  go to state 933


State 721

  827 make_dim_decl: "array" "variant" '<' . $@104 variant_type_list '>' $@105 '(' make_variant_dim ')'

    $default  reduce using rule 825 ($@104)

    $@104  go to state 934


State 722

  831 make_dim_decl: "array" '<' $@106 . type_declaration_no_options '>' $@107 '(' optional_expr_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 935
    type_declaration_no_options_no_dim  go to state 275


State 723

  331 expr_list: expr_list . ',' expr
  828 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 753

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 936


State 724

  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"
  841 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  842                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "??"                   shift, and go to state 370
    "new line, comma"      shift, and go to state 707
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 708
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '>'                    shift, and go to state 937
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    COMMA      go to state 709
    SEMICOLON  go to state 710
    c_or_s     go to state 938


State 725

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  812 make_map_tuple: expr . "=>" expr
  813               | expr .

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "=>"   shift, and go to state 939
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 813 (make_map_tuple)


State 726

  836 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 836 (expr_map_tuple_list)


State 727

  837 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  840 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 940

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 941


State 728

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  457     | "deref" '(' expr . ')'
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 942


State 729

  317 expr_cast: "cast" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 943
    type_declaration_no_options_no_dim  go to state 275


State 730

  320 expr_cast: "upcast" '<' $@19 . type_declaration_no_options '>' $@20 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 944
    type_declaration_no_options_no_dim  go to state 275


State 731

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  458     | "addr" '(' expr . ')'
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 945


State 732

  323 expr_cast: "reinterpret" '<' $@21 . type_declaration_no_options '>' $@22 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 946
    type_declaration_no_options_no_dim  go to state 275


State 733

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  488     | "unsafe" '(' expr . ')'
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 947


State 734

  835 make_dim_decl: "fixed_array" '<' $@108 . type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 948
    type_declaration_no_options_no_dim  go to state 275


State 735

  331 expr_list: expr_list . ',' expr
  832 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 753

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 949


State 736

  811 make_struct_decl: "default" '<' $@96 . type_declaration_no_options '>' $@97 use_initializer

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 950
    type_declaration_no_options_no_dim  go to state 275


State 737

  817 make_tuple_call: "tuple" '<' $@98 . tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 663
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 664
    tuple_type_list                     go to state 951
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 666


State 738

  331 expr_list: expr_list . ',' expr
  814 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 753

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 952


State 739

  808 make_struct_decl: "variant" '<' $@94 . variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 667

    variant_type       go to state 668
    variant_type_list  go to state 953


State 740

  489 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  490               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  491               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_emit_semis expression_block
  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 954
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 741

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  492 expr_mtag: "$$" '(' expr . ')'
  500          | expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 955


State 742

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  493 expr_mtag: "$i" '(' expr . ')'
  500          | expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 956


State 743

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  494 expr_mtag: "$v" '(' expr . ')'
  500          | expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 957


State 744

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  495 expr_mtag: "$b" '(' expr . ')'
  500          | expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 958


State 745

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  496 expr_mtag: "$a" '(' expr . ')'
  500          | expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 959


State 746

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  498 expr_mtag: "$c" '(' expr . ')' '(' ')'
  499          | "$c" '(' expr . ')' '(' expr_list ')'
  500          | expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 960


State 747

   41 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 41 (string_builder)


State 748

   40 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 961
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 749

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   39 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224

    $default  reduce using rule 39 (string_builder_body)


State 750

  847 array_comprehension: '[' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 684
    "name"  shift, and go to state 685

    variable_name_with_pos_list  go to state 962


State 751

  848 array_comprehension: '[' "iterator" "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 963


State 752

  818 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 818 (make_dim_decl)


State 753

  331 expr_list: expr_list ',' . expr
  846 optional_comma: ',' .

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 846 (optional_comma)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 964
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 754

  273 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 273 (optional_expr_list)


State 755

  785 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  786                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 965
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 756

  547 copy_or_move: "<-" .

    $default  reduce using rule 547 (copy_or_move)


State 757

  782 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 966
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 758

  546 copy_or_move: '=' .

    $default  reduce using rule 546 (copy_or_move)


State 759

  781 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 967
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 760

  446 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 968


State 761

  783 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  784                   | make_struct_fields ',' . "name" ":=" expr
  787                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 969
    "name"  shift, and go to state 970


State 762

  447 expr: '(' make_struct_single ')' .

    $default  reduce using rule 447 (expr)


State 763

  381 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 971


State 764

  507 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 972


State 765

  385 func_addr_expr: '@' '@' '<' . $@25 type_declaration_no_options '>' $@26 func_addr_name
  388               | '@' '@' '<' . $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name

    ':'       reduce using rule 386 ($@27)
    '>'       reduce using rule 386 ($@27)
    '('       reduce using rule 386 ($@27)
    $default  reduce using rule 383 ($@25)

    $@25  go to state 973
    $@27  go to state 974


State 766

  380 func_addr_name: name_in_namespace .

    $default  reduce using rule 380 (func_addr_name)


State 767

  382 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 382 (func_addr_expr)


State 768

  849 array_comprehension: '{' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 684
    "name"  shift, and go to state 685

    variable_name_with_pos_list  go to state 975


State 769

  839 make_table_decl: '{' $@110 optional_emit_semis . optional_expr_map_tuple_list '}'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 274 (optional_expr_map_tuple_list)

    string_builder                go to state 468
    expr_reader                   go to state 469
    expr_call_pipe                go to state 470
    optional_expr_map_tuple_list  go to state 976
    name_in_namespace             go to state 471
    expr_new                      go to state 472
    expr_cast                     go to state 473
    expr_type_decl                go to state 474
    expr_type_info                go to state 475
    block_or_lambda               go to state 476
    expr_full_block               go to state 477
    expr_numeric_const            go to state 478
    expr_named_call               go to state 479
    expr_method_call              go to state 480
    func_addr_expr                go to state 481
    expr_field                    go to state 482
    expr_call                     go to state 483
    expr                          go to state 725
    expr_generator                go to state 485
    expr_mtag                     go to state 486
    basic_type_declaration        go to state 487
    make_decl                     go to state 488
    make_struct_decl              go to state 489
    make_map_tuple                go to state 726
    make_tuple_call               go to state 490
    make_dim_decl                 go to state 491
    expr_map_tuple_list           go to state 977
    make_table_decl               go to state 492
    array_comprehension           go to state 493


State 770

  400 expr_call: name_in_namespace '(' "uninitialized" . ')'
  402          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 600
    "name"  shift, and go to state 978
    ')'     shift, and go to state 979

    make_struct_fields  go to state 603
    make_struct_single  go to state 980


State 771

  376 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  818 make_dim_decl: '[' . optional_expr_list ']'
  847 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  848                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "for"                             shift, and go to state 595
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "iterator"                        shift, and go to state 596
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "$f"                              shift, and go to state 600
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 601
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 272 (optional_expr_list)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    optional_expr_list      go to state 597
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 598
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_fields      go to state 981
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 772

  399 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 399 (expr_call)


State 773

  331 expr_list: expr_list . ',' expr
  377 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  403 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 982
    ')'  shift, and go to state 983


State 774

  401 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 984


State 775

  139 annotation_list: annotation_list . ',' annotation_declaration
  141 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 105
    ']'  shift, and go to state 985


State 776

  346 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 986


State 777

  347 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 987


State 778

  337 block_or_lambda: '@' '@' .

    $default  reduce using rule 337 (block_or_lambda)


State 779

  270 expressions: expressions . expression_any
  271            | expressions . error
  349 expr_full_block_assumed_piped: '{' expressions . '}'

    error                             shift, and go to state 868
    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 869
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 870
    "try"                             shift, and go to state 871
    "table"                           shift, and go to state 428
    "delete"                          shift, and go to state 872
    "deref"                           shift, and go to state 429
    "assume"                          shift, and go to state 873
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 874
    "pass"                            shift, and go to state 875
    "reinterpret"                     shift, and go to state 433
    "label"                           shift, and go to state 876
    "goto"                            shift, and go to state 877
    "unsafe"                          shift, and go to state 878
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 879
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 467
    '}'                               shift, and go to state 988

    "while"      reduce using rule 97 ($@8)
    "if"         reduce using rule 91 ($@6)
    "static_if"  reduce using rule 91 ($@6)
    "for"        reduce using rule 94 ($@7)
    "with"       reduce using rule 99 ($@9)

    SEMICOLON                         go to state 880
    string_builder                    go to state 468
    expr_reader                       go to state 469
    expression_label                  go to state 881
    expression_goto                   go to state 882
    expression_if_one_liner           go to state 883
    expression_if_then_else           go to state 884
    $@6                               go to state 885
    expression_if_then_else_oneliner  go to state 886
    expression_for_loop               go to state 887
    $@7                               go to state 888
    expression_unsafe                 go to state 889
    expression_while_loop             go to state 890
    $@8                               go to state 891
    expression_with                   go to state 892
    $@9                               go to state 893
    expression_with_alias             go to state 894
    expr_call_pipe                    go to state 470
    expression_any                    go to state 896
    name_in_namespace                 go to state 471
    expression_delete                 go to state 897
    expr_new                          go to state 472
    expression_break                  go to state 898
    expression_continue               go to state 899
    expression_return                 go to state 900
    expression_yield                  go to state 901
    expression_try_catch              go to state 902
    kwd_let                           go to state 903
    expression_let                    go to state 904
    expr_cast                         go to state 473
    expr_type_decl                    go to state 474
    expr_type_info                    go to state 475
    block_or_lambda                   go to state 476
    expr_full_block                   go to state 477
    expr_numeric_const                go to state 478
    expr_assign                       go to state 905
    expr_named_call                   go to state 479
    expr_method_call                  go to state 480
    func_addr_expr                    go to state 481
    expr_field                        go to state 482
    expr_call                         go to state 483
    expr                              go to state 906
    expr_generator                    go to state 485
    expr_mtag                         go to state 486
    basic_type_declaration            go to state 487
    make_decl                         go to state 488
    make_struct_decl                  go to state 489
    make_tuple_call                   go to state 490
    make_dim_decl                     go to state 491
    make_table_decl                   go to state 492
    array_comprehension               go to state 493


State 780

  348 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    "capture"  shift, and go to state 776

    $default  reduce using rule 345 (optional_capture_list)

    optional_capture_list  go to state 989


State 781

  464 expr: expr "is" "type" . '<' $@31 type_declaration_no_options '>' $@32

    '<'  shift, and go to state 990


State 782

  506 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 991


State 783

  466 expr: expr "is" "name" .

    $default  reduce using rule 466 (expr)


State 784

  465 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 465 (expr)


State 785

  470 expr: expr "as" "type" . '<' $@33 type_declaration '>' $@34

    '<'  shift, and go to state 992


State 786

  504 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 993


State 787

  467 expr: expr "as" "name" .

    $default  reduce using rule 467 (expr)


State 788

  471 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 471 (expr)


State 789

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  420     | expr "<<" expr .
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 615
    "as"  shift, and go to state 616
    "++"  shift, and go to state 619
    "--"  shift, and go to state 620
    "->"  shift, and go to state 625
    "??"  shift, and go to state 626
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    "<|"  shift, and go to state 629
    "|>"  shift, and go to state 630
    '-'   shift, and go to state 643
    '+'   shift, and go to state 644
    '*'   shift, and go to state 645
    '/'   shift, and go to state 646
    '%'   shift, and go to state 647
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 420 (expr)


State 790

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  421     | expr ">>" expr .
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 615
    "as"  shift, and go to state 616
    "++"  shift, and go to state 619
    "--"  shift, and go to state 620
    "->"  shift, and go to state 625
    "??"  shift, and go to state 626
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    "<|"  shift, and go to state 629
    "|>"  shift, and go to state 630
    '-'   shift, and go to state 643
    '+'   shift, and go to state 644
    '*'   shift, and go to state 645
    '/'   shift, and go to state 646
    '%'   shift, and go to state 647
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 421 (expr)


State 791

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  433     | expr "<=" expr .
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 433 (expr)


State 792

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  434     | expr ">=" expr .
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 434 (expr)


State 793

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  431     | expr "==" expr .
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 431 (expr)


State 794

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  432     | expr "!=" expr .
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 432 (expr)


State 795

  378 expr_method_call: expr "->" "name" . '(' ')'
  379                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 994


State 796

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  460     | expr "??" expr .
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 615
    "as"  shift, and go to state 616
    "++"  shift, and go to state 619
    "--"  shift, and go to state 620
    "->"  shift, and go to state 625
    "??"  shift, and go to state 626
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    "<|"  shift, and go to state 629
    "|>"  shift, and go to state 630
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 460 (expr)


State 797

  501 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 995


State 798

  452 expr: expr "?." "name" .

    $default  reduce using rule 452 (expr)


State 799

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  450     | expr "?[" expr . ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ']'    shift, and go to state 996


State 800

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  484     | expr "<|" expr .
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 625
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 484 (expr)


State 801

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  485     | expr "|>" expr .
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 625
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 485 (expr)


State 802

  404 expr_call: basic_type_declaration . '(' ')'
  405          | basic_type_declaration . '(' expr_list ')'
  486 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 651

    $default  reduce using rule 486 (expr)


State 803

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  422     | expr "<<<" expr .
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 615
    "as"  shift, and go to state 616
    "++"  shift, and go to state 619
    "--"  shift, and go to state 620
    "->"  shift, and go to state 625
    "??"  shift, and go to state 626
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    "<|"  shift, and go to state 629
    "|>"  shift, and go to state 630
    '-'   shift, and go to state 643
    '+'   shift, and go to state 644
    '*'   shift, and go to state 645
    '/'   shift, and go to state 646
    '%'   shift, and go to state 647
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 422 (expr)


State 804

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  423     | expr ">>>" expr .
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 615
    "as"  shift, and go to state 616
    "++"  shift, and go to state 619
    "--"  shift, and go to state 620
    "->"  shift, and go to state 625
    "??"  shift, and go to state 626
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    "<|"  shift, and go to state 629
    "|>"  shift, and go to state 630
    '-'   shift, and go to state 643
    '+'   shift, and go to state 644
    '*'   shift, and go to state 645
    '/'   shift, and go to state 646
    '%'   shift, and go to state 647
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 423 (expr)


State 805

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  438     | expr "&&" expr .
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 438 (expr)


State 806

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  439     | expr "||" expr .
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "^^"   shift, and go to state 635
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 439 (expr)


State 807

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  440     | expr "^^" expr .
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 440 (expr)


State 808

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  441     | expr ".." expr .
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    ".."  error (nonassociative)

    $default  reduce using rule 441 (expr)


State 809

  472 expr: expr '?' "as" . "name"
  475     | expr '?' "as" . "type" '<' $@35 type_declaration '>' $@36
  476     | expr '?' "as" . basic_type_declaration
  505 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 997
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 437
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 998
    "name"      shift, and go to state 999

    basic_type_declaration  go to state 1000


State 810

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  461     | expr '?' expr . ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    ':'    shift, and go to state 1001
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649


State 811

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  436     | expr '|' expr .
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 436 (expr)


State 812

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  437     | expr '^' expr .
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 437 (expr)


State 813

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  435     | expr '&' expr .
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 435 (expr)


State 814

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  429     | expr '<' expr .
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 429 (expr)


State 815

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  430     | expr '>' expr .
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 430 (expr)


State 816

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  425     | expr '-' expr .
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 615
    "as"  shift, and go to state 616
    "++"  shift, and go to state 619
    "--"  shift, and go to state 620
    "->"  shift, and go to state 625
    "??"  shift, and go to state 626
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    "<|"  shift, and go to state 629
    "|>"  shift, and go to state 630
    '*'   shift, and go to state 645
    '/'   shift, and go to state 646
    '%'   shift, and go to state 647
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 425 (expr)


State 817

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  424     | expr '+' expr .
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 615
    "as"  shift, and go to state 616
    "++"  shift, and go to state 619
    "--"  shift, and go to state 620
    "->"  shift, and go to state 625
    "??"  shift, and go to state 626
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    "<|"  shift, and go to state 629
    "|>"  shift, and go to state 630
    '*'   shift, and go to state 645
    '/'   shift, and go to state 646
    '%'   shift, and go to state 647
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 424 (expr)


State 818

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  426     | expr '*' expr .
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 615
    "as"  shift, and go to state 616
    "++"  shift, and go to state 619
    "--"  shift, and go to state 620
    "->"  shift, and go to state 625
    "??"  shift, and go to state 626
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    "<|"  shift, and go to state 629
    "|>"  shift, and go to state 630
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 426 (expr)


State 819

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  427     | expr '/' expr .
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 615
    "as"  shift, and go to state 616
    "++"  shift, and go to state 619
    "--"  shift, and go to state 620
    "->"  shift, and go to state 625
    "??"  shift, and go to state 626
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    "<|"  shift, and go to state 629
    "|>"  shift, and go to state 630
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 427 (expr)


State 820

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  428     | expr '%' expr .
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 615
    "as"  shift, and go to state 616
    "++"  shift, and go to state 619
    "--"  shift, and go to state 620
    "->"  shift, and go to state 625
    "??"  shift, and go to state 626
    "?."  shift, and go to state 627
    "?["  shift, and go to state 628
    "<|"  shift, and go to state 629
    "|>"  shift, and go to state 630
    '.'   shift, and go to state 648
    '['   shift, and go to state 649

    $default  reduce using rule 428 (expr)


State 821

  453 expr: expr '.' "?." . "name"
  503 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1002
    "name"  shift, and go to state 1003


State 822

  451 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1004
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 823

  500 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1005


State 824

  389 expr_field: expr '.' "name" .
  391           | expr '.' "name" . '(' ')'
  392           | expr '.' "name" . '(' expr_list ')'
  393           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1006

    $default  reduce using rule 389 (expr_field)


State 825

  390 expr_field: expr '.' '.' . "name"
  502 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1007
    "name"  shift, and go to state 1008


State 826

  449 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1009
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 827

  398 expr_field: expr '.' $@29 . error $@30

    error  shift, and go to state 1010


State 828

  394 expr_field: expr '.' basic_type_declaration . '(' ')'
  395           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1011


State 829

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  448     | expr '[' expr . ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ']'    shift, and go to state 1012


State 830

  404 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 404 (expr_call)


State 831

  331 expr_list: expr_list . ',' expr
  405 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1013
    ')'  shift, and go to state 1014


State 832

  730 type_declaration_no_options_no_dim: "iterator" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 729 ($@61)

    $@61  go to state 1015


State 833

  720 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 719 ($@55)

    $@55  go to state 1016


State 834

  684 bitfield_type_declaration: "bitfield" '<' $@49 bitfield_bits '>' . $@50

    $default  reduce using rule 683 ($@50)

    $@50  go to state 1017


State 835

  678 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1018


State 836

  734 type_declaration_no_options_no_dim: "block" '<' $@62 type_declaration '>' . $@63

    $default  reduce using rule 733 ($@63)

    $@63  go to state 1019


State 837

  737 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list optional_function_type . '>' $@65

    '>'  shift, and go to state 1020


State 838

  741 type_declaration_no_options_no_dim: "function" '<' $@66 type_declaration '>' . $@67

    $default  reduce using rule 740 ($@67)

    $@67  go to state 1021


State 839

  744 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list optional_function_type . '>' $@69

    '>'  shift, and go to state 1022


State 840

  748 type_declaration_no_options_no_dim: "lambda" '<' $@70 type_declaration '>' . $@71

    $default  reduce using rule 747 ($@71)

    $@71  go to state 1023


State 841

  751 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list optional_function_type . '>' $@73

    '>'  shift, and go to state 1024


State 842

  534 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1025


State 843

  754 type_declaration_no_options_no_dim: "tuple" '<' $@74 tuple_type_list '>' . $@75

    $default  reduce using rule 753 ($@75)

    $@75  go to state 1026


State 844

  536 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 663
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 1027
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 666


State 845

  540 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1028


State 846

  757 type_declaration_no_options_no_dim: "variant" '<' $@76 variant_type_list '>' . $@77

    $default  reduce using rule 756 ($@77)

    $@77  go to state 1029


State 847

  542 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 667

    variant_type  go to state 1030


State 848

  277 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  705 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "new line, comma"      shift, and go to state 707
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 708
    '>'                    shift, and go to state 1031
    ';'                    shift, and go to state 16

    COMMA      go to state 709
    SEMICOLON  go to state 710
    c_or_s     go to state 1032


State 849

  276 type_declaration_no_options_list: type_declaration .
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 276 (type_declaration_no_options_list)


State 850

  703 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 703 (type_declaration_no_options_no_dim)


State 851

  691 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 691 (dim_list)


State 852

  588 commas: COMMA .

    $default  reduce using rule 588 (commas)


State 853

  589 commas: commas . COMMA
  606 optional_commas: commas .
  681 bitfield_alias_bits: bitfield_alias_bits commas . "name"

    "name"             shift, and go to state 1033
    "new line, comma"  shift, and go to state 707
    ','                shift, and go to state 708

    $default  reduce using rule 606 (optional_commas)

    COMMA  go to state 1034


State 854

  775 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas . $@89 '}'

    $default  reduce using rule 774 ($@89)

    $@89  go to state 1035


State 855

   82 semis: SEMICOLON .

    $default  reduce using rule 82 (semis)


State 856

   83 semis: semis . SEMICOLON
   85 optional_semis: semis .
  539 tuple_alias_type_list: tuple_alias_type_list semis . tuple_type

    "type"                 shift, and go to state 228
    "array"                shift, and go to state 229
    "table"                shift, and go to state 230
    "typedecl"             shift, and go to state 231
    "iterator"             shift, and go to state 232
    "smart_ptr"            shift, and go to state 233
    "bool"                 shift, and go to state 234
    "void"                 shift, and go to state 235
    "string"               shift, and go to state 236
    "auto"                 shift, and go to state 237
    "int"                  shift, and go to state 238
    "int2"                 shift, and go to state 239
    "int3"                 shift, and go to state 240
    "int4"                 shift, and go to state 241
    "uint"                 shift, and go to state 242
    "bitfield"             shift, and go to state 243
    "uint2"                shift, and go to state 244
    "uint3"                shift, and go to state 245
    "uint4"                shift, and go to state 246
    "float"                shift, and go to state 247
    "float2"               shift, and go to state 248
    "float3"               shift, and go to state 249
    "float4"               shift, and go to state 250
    "range"                shift, and go to state 251
    "urange"               shift, and go to state 252
    "range64"              shift, and go to state 253
    "urange64"             shift, and go to state 254
    "block"                shift, and go to state 255
    "int64"                shift, and go to state 256
    "uint64"               shift, and go to state 257
    "double"               shift, and go to state 258
    "function"             shift, and go to state 259
    "lambda"               shift, and go to state 260
    "int8"                 shift, and go to state 261
    "uint8"                shift, and go to state 262
    "int16"                shift, and go to state 263
    "uint16"               shift, and go to state 264
    "tuple"                shift, and go to state 265
    "variant"              shift, and go to state 266
    "::"                   shift, and go to state 57
    "$t"                   shift, and go to state 267
    "name"                 shift, and go to state 663
    "new line, semicolon"  shift, and go to state 13
    '$'                    shift, and go to state 268
    ';'                    shift, and go to state 16

    $default  reduce using rule 85 (optional_semis)

    SEMICOLON                           go to state 1036
    name_in_namespace                   go to state 269
    tuple_type                          go to state 1037
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 666


State 857

  765 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis . $@81 '}'

    $default  reduce using rule 764 ($@81)

    $@81  go to state 1038


State 858

   83 semis: semis . SEMICOLON
   85 optional_semis: semis .
  545 variant_alias_type_list: variant_alias_type_list semis . variant_type

    "name"                 shift, and go to state 667
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 85 (optional_semis)

    SEMICOLON     go to state 1036
    variant_type  go to state 1039


State 859

  770 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis . $@85 '}'

    $default  reduce using rule 769 ($@85)

    $@85  go to state 1040


State 860

  530 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 530 (function_argument_declaration)


State 861

  634 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1041
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 862

  635 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1042


State 863

  636 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  637                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1043


State 864

  550 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  551                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1044


State 865

  549 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 549 (variable_declaration)


State 866

  552 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1045
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 867

  149 optional_function_type: ':' '(' tuple_type_list ')' .

    $default  reduce using rule 149 (optional_function_type)


State 868

  271 expressions: expressions error .

    $default  reduce using rule 271 (expressions)


State 869

  295 expression_return: "return" .
  296                  | "return" . expr
  297                  | "return" . "<-" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "<-"                              shift, and go to state 1046
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 295 (expression_return)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1047
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 870

  293 expression_break: "break" .

    $default  reduce using rule 293 (expression_break)


State 871

  300 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 246 ($@13)

    expression_block  go to state 1048
    $@13              go to state 396


State 872

  281 expression_delete: "delete" . expr
  282                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "explicit"                        shift, and go to state 1049
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1050
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 873

  101 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 1051


State 874

  294 expression_continue: "continue" .

    $default  reduce using rule 294 (expression_continue)


State 875

  268 expression_any: "pass" . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1052


State 876

   61 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 1053


State 877

   62 expression_goto: "goto" . "label" "integer constant"
   63                | "goto" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "label"                           shift, and go to state 1054
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1055
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 878

   96 expression_unsafe: "unsafe" . optional_emit_semis expression_block
  488 expr: "unsafe" . '(' expr ')'

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 573

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1056


State 879

  298 expression_yield: "yield" . expr
  299                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "<-"                              shift, and go to state 1057
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1058
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 880

  250 expression_any: SEMICOLON .

    $default  reduce using rule 250 (expression_any)


State 881

  266 expression_any: expression_label . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1059


State 882

  267 expression_any: expression_goto . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1060


State 883

   93 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner SEMICOLON

    "if"  shift, and go to state 1061


State 884

  263 expression_any: expression_if_then_else .

    $default  reduce using rule 263 (expression_any)


State 885

   92 expression_if_then_else: $@6 . if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

    "if"         shift, and go to state 1062
    "static_if"  shift, and go to state 1063

    if_or_static_if  go to state 1064


State 886

  264 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 264 (expression_any)


State 887

  258 expression_any: expression_for_loop .

    $default  reduce using rule 258 (expression_any)


State 888

   95 expression_for_loop: $@7 . "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "for"  shift, and go to state 1065


State 889

  255 expression_any: expression_unsafe .

    $default  reduce using rule 255 (expression_any)


State 890

  254 expression_any: expression_while_loop .

    $default  reduce using rule 254 (expression_any)


State 891

   98 expression_while_loop: $@8 . "while" '(' expr ')' optional_emit_semis expression_block

    "while"  shift, and go to state 1066


State 892

  256 expression_any: expression_with .

    $default  reduce using rule 256 (expression_any)


State 893

  100 expression_with: $@9 . "with" '(' expr ')' optional_emit_semis expression_block

    "with"  shift, and go to state 1067


State 894

  257 expression_any: expression_with_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1068


State 895

  248 expression_block: $@13 '{' expressions $@14 . '}' expression_block_finally

    '}'  shift, and go to state 1069


State 896

  270 expressions: expressions expression_any .

    $default  reduce using rule 270 (expressions)


State 897

  252 expression_any: expression_delete . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1070


State 898

   80 expression_if_one_liner: expression_break .
  259 expression_any: expression_break . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 80 (expression_if_one_liner)

    SEMICOLON  go to state 1071


State 899

   81 expression_if_one_liner: expression_continue .
  260 expression_any: expression_continue . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 81 (expression_if_one_liner)

    SEMICOLON  go to state 1072


State 900

   78 expression_if_one_liner: expression_return .
  261 expression_any: expression_return . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 78 (expression_if_one_liner)

    SEMICOLON  go to state 1073


State 901

   79 expression_if_one_liner: expression_yield .
  262 expression_any: expression_yield . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 79 (expression_if_one_liner)

    SEMICOLON  go to state 1074


State 902

  265 expression_any: expression_try_catch .

    $default  reduce using rule 265 (expression_any)


State 903

  312 expression_let: kwd_let . optional_in_scope let_variable_declaration
  313               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  314               | kwd_let . optional_in_scope '{' variable_declaration_list '}'

    "inscope"  shift, and go to state 1075

    $default  reduce using rule 307 (optional_in_scope)

    optional_in_scope  go to state 1076


State 904

  253 expression_any: expression_let .

    $default  reduce using rule 253 (expression_any)


State 905

  251 expression_any: expr_assign . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1077


State 906

   77 expression_if_one_liner: expr .
  357 expr_assign: expr .
  358            | expr . '=' expr
  359            | expr . "<-" expr
  360            | expr . ":=" expr
  361            | expr . "&=" expr
  362            | expr . "|=" expr
  363            | expr . "^=" expr
  364            | expr . "&&=" expr
  365            | expr . "||=" expr
  366            | expr . "^^=" expr
  367            | expr . "+=" expr
  368            | expr . "-=" expr
  369            | expr . "*=" expr
  370            | expr . "/=" expr
  371            | expr . "%=" expr
  372            | expr . "<<=" expr
  373            | expr . ">>=" expr
  374            | expr . "<<<=" expr
  375            | expr . ">>>=" expr
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 615
    "as"    shift, and go to state 616
    "+="    shift, and go to state 1078
    "-="    shift, and go to state 1079
    "/="    shift, and go to state 1080
    "*="    shift, and go to state 1081
    "%="    shift, and go to state 1082
    "&="    shift, and go to state 1083
    "|="    shift, and go to state 1084
    "^="    shift, and go to state 1085
    "<<"    shift, and go to state 617
    ">>"    shift, and go to state 618
    "++"    shift, and go to state 619
    "--"    shift, and go to state 620
    "<="    shift, and go to state 621
    "<<="   shift, and go to state 1086
    ">>="   shift, and go to state 1087
    ">="    shift, and go to state 622
    "=="    shift, and go to state 623
    "!="    shift, and go to state 624
    "->"    shift, and go to state 625
    "<-"    shift, and go to state 1088
    "??"    shift, and go to state 626
    "?."    shift, and go to state 627
    "?["    shift, and go to state 628
    "<|"    shift, and go to state 629
    "|>"    shift, and go to state 630
    ":="    shift, and go to state 1089
    "<<<"   shift, and go to state 631
    ">>>"   shift, and go to state 632
    "<<<="  shift, and go to state 1090
    ">>>="  shift, and go to state 1091
    "&&"    shift, and go to state 633
    "||"    shift, and go to state 634
    "^^"    shift, and go to state 635
    "&&="   shift, and go to state 1092
    "||="   shift, and go to state 1093
    "^^="   shift, and go to state 1094
    ".."    shift, and go to state 636
    '='     shift, and go to state 1095
    '?'     shift, and go to state 637
    '|'     shift, and go to state 638
    '^'     shift, and go to state 639
    '&'     shift, and go to state 640
    '<'     shift, and go to state 641
    '>'     shift, and go to state 642
    '-'     shift, and go to state 643
    '+'     shift, and go to state 644
    '*'     shift, and go to state 645
    '/'     shift, and go to state 646
    '%'     shift, and go to state 647
    '.'     shift, and go to state 648
    '['     shift, and go to state 649

    "if"      reduce using rule 77 (expression_if_one_liner)
    $default  reduce using rule 357 (expr_assign)


State 907

  586 enum_expression: "name" .
  587                | "name" . '=' expr

    '='  shift, and go to state 1096

    $default  reduce using rule 586 (enum_expression)


State 908

  591 enum_list: enum_expression .

    $default  reduce using rule 591 (enum_list)


State 909

  592 enum_list: enum_list . commas enum_expression
  614 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list . optional_commas $@45 '}'

    "new line, comma"  shift, and go to state 707
    ','                shift, and go to state 708

    $default  reduce using rule 605 (optional_commas)

    COMMA            go to state 852
    commas           go to state 1097
    optional_commas  go to state 1098


State 910

  522 struct_variable_declaration_list: struct_variable_declaration_list . "new line, semicolon"
  524                                 | struct_variable_declaration_list . $@37 structure_variable_declaration SEMICOLON
  526                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON
  528                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block
  628 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 1099
    '['                    shift, and go to state 15
    '}'                    shift, and go to state 1100

    "def"     reduce using rule 142 (optional_annotation_list_with_emit_semis)
    $default  reduce using rule 523 ($@37)

    optional_annotation_list_with_emit_semis  go to state 1101
    $@37                                      go to state 1102


State 911

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  559 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1103


State 912

  560 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 560 (let_variable_name_with_pos_list)


State 913

  561 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  562                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1104

    $default  reduce using rule 561 (let_variable_name_with_pos_list)


State 914

  568 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  569                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "<-"                   shift, and go to state 545
    "??"                   shift, and go to state 370
    ":="                   shift, and go to state 546
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 547
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    SEMICOLON              go to state 1105
    copy_or_move_or_clone  go to state 1106


State 915

  570 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1107
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 916

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  572 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 615
    "as"                   shift, and go to state 616
    "<<"                   shift, and go to state 617
    ">>"                   shift, and go to state 618
    "++"                   shift, and go to state 619
    "--"                   shift, and go to state 620
    "<="                   shift, and go to state 621
    ">="                   shift, and go to state 622
    "=="                   shift, and go to state 623
    "!="                   shift, and go to state 624
    "->"                   shift, and go to state 625
    "??"                   shift, and go to state 626
    "?."                   shift, and go to state 627
    "?["                   shift, and go to state 628
    "<|"                   shift, and go to state 629
    "|>"                   shift, and go to state 630
    "<<<"                  shift, and go to state 631
    ">>>"                  shift, and go to state 632
    "&&"                   shift, and go to state 633
    "||"                   shift, and go to state 634
    "^^"                   shift, and go to state 635
    ".."                   shift, and go to state 636
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 637
    '|'                    shift, and go to state 638
    '^'                    shift, and go to state 639
    '&'                    shift, and go to state 640
    '<'                    shift, and go to state 641
    '>'                    shift, and go to state 642
    '-'                    shift, and go to state 643
    '+'                    shift, and go to state 644
    '*'                    shift, and go to state 645
    '/'                    shift, and go to state 646
    '%'                    shift, and go to state 647
    '.'                    shift, and go to state 648
    '['                    shift, and go to state 649
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1108


State 917

  573 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 573 (global_let_variable_declaration)


State 918

  701 type_declaration_no_options_no_dim: "type" '<' $@51 type_declaration '>' $@52 .

    $default  reduce using rule 701 (type_declaration_no_options_no_dim)


State 919

  724 type_declaration_no_options_no_dim: "array" '<' $@56 type_declaration '>' $@57 .

    $default  reduce using rule 724 (type_declaration_no_options_no_dim)


State 920

  727 type_declaration_no_options_no_dim: "table" '<' $@58 table_type_pair '>' $@59 .

    $default  reduce using rule 727 (type_declaration_no_options_no_dim)


State 921

  688 table_type_pair: type_declaration c_or_s type_declaration .
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 688 (table_type_pair)


State 922

  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"
  802 make_struct_decl: "struct" '<' $@90 type_declaration_no_options . '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1109
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 923

  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"
  805 make_struct_decl: "class" '<' $@92 type_declaration_no_options . '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1110
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 924

  285 new_type_declaration: '<' $@15 type_declaration . '>' $@16
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1111


State 925

  291 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  799 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 600
    "name"  shift, and go to state 978

    $default  reduce using rule 799 (use_initializer)

    make_struct_fields  go to state 603
    make_struct_single  go to state 1112


State 926

  289 expr_new: "new" new_type_declaration '(' expr_list . ')'
  331 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1013
    ')'  shift, and go to state 1113


State 927

  290 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1114


State 928

  288 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1115


State 929

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  329               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "new line, comma"      shift, and go to state 707
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 708
    '>'                    shift, and go to state 1116
    ';'                    shift, and go to state 16

    COMMA      go to state 709
    SEMICOLON  go to state 710
    c_or_s     go to state 1117


State 930

  327 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1118


State 931

  326 expr_type_decl: "type" '<' $@23 type_declaration . '>' $@24
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1119


State 932

  821 make_dim_decl: "array" "struct" '<' $@100 . type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1120
    type_declaration_no_options_no_dim  go to state 275


State 933

  824 make_dim_decl: "array" "tuple" '<' $@102 . tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 663
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 664
    tuple_type_list                     go to state 1121
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 666


State 934

  827 make_dim_decl: "array" "variant" '<' $@104 . variant_type_list '>' $@105 '(' make_variant_dim ')'

    "name"  shift, and go to state 667

    variant_type       go to state 668
    variant_type_list  go to state 1122


State 935

  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"
  831 make_dim_decl: "array" '<' $@106 type_declaration_no_options . '>' $@107 '(' optional_expr_list ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1123
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 936

  828 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1124


State 937

  841 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1125


State 938

  842 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1126
    type_declaration_no_options_no_dim  go to state 275


State 939

  812 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1127
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 940

  837 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  846 optional_comma: ',' .

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 846 (optional_comma)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 725
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_map_tuple          go to state 1128
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 941

  840 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1129


State 942

  457 expr: "deref" '(' expr ')' .

    $default  reduce using rule 457 (expr)


State 943

  317 expr_cast: "cast" '<' $@17 type_declaration_no_options . '>' $@18 expr
  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1130
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 944

  320 expr_cast: "upcast" '<' $@19 type_declaration_no_options . '>' $@20 expr
  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1131
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 945

  458 expr: "addr" '(' expr ')' .

    $default  reduce using rule 458 (expr)


State 946

  323 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options . '>' $@22 expr
  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1132
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 947

  488 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 488 (expr)


State 948

  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"
  835 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options . '>' $@109 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1133
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 949

  832 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1134


State 950

  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"
  811 make_struct_decl: "default" '<' $@96 type_declaration_no_options . '>' $@97 use_initializer

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1135
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 951

  536 tuple_type_list: tuple_type_list . c_or_s tuple_type
  817 make_tuple_call: "tuple" '<' $@98 tuple_type_list . '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 707
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 708
    '>'                    shift, and go to state 1136
    ';'                    shift, and go to state 16

    COMMA      go to state 709
    SEMICOLON  go to state 710
    c_or_s     go to state 844


State 952

  814 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1137


State 953

  542 variant_type_list: variant_type_list . c_or_s variant_type
  808 make_struct_decl: "variant" '<' $@94 variant_type_list . '>' $@95 '(' use_initializer make_variant_dim ')'

    "new line, comma"      shift, and go to state 707
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 708
    '>'                    shift, and go to state 1138
    ';'                    shift, and go to state 16

    COMMA      go to state 709
    SEMICOLON  go to state 710
    c_or_s     go to state 847


State 954

  489 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  490               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  491               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_emit_semis expression_block

    "capture"  shift, and go to state 776

    $default  reduce using rule 345 (optional_capture_list)

    optional_capture_list  go to state 1139


State 955

  492 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 492 (expr_mtag)


State 956

  493 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 493 (expr_mtag)


State 957

  494 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 494 (expr_mtag)


State 958

  495 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 495 (expr_mtag)


State 959

  496 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 496 (expr_mtag)


State 960

  498 expr_mtag: "$c" '(' expr ')' . '(' ')'
  499          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1140


State 961

   40 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    ':'    shift, and go to state 1141
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 35 (optional_format_string)

    optional_format_string  go to state 1142


State 962

  636 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  637                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  847 array_comprehension: '[' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1143
    ','   shift, and go to state 863


State 963

  848 array_comprehension: '[' "iterator" "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 684
    "name"  shift, and go to state 685

    variable_name_with_pos_list  go to state 1144


State 964

  331 expr_list: expr_list ',' expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 331 (expr_list)


State 965

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  785 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  786                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1145


State 966

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  782 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 782 (make_struct_fields)


State 967

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  781 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 781 (make_struct_fields)


State 968

  446 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 446 (expr)


State 969

  787 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  788                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1146


State 970

  783 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  784                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 756
    ":="  shift, and go to state 1147
    '='   shift, and go to state 758

    copy_or_move  go to state 1148


State 971

  381 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1149
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 972

  507 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1150
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 973

  385 func_addr_expr: '@' '@' '<' $@25 . type_declaration_no_options '>' $@26 func_addr_name

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1151
    type_declaration_no_options_no_dim  go to state 275


State 974

  388 func_addr_expr: '@' '@' '<' $@27 . optional_function_argument_list optional_function_type '>' $@28 func_addr_name

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 1152


State 975

  636 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  637                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  849 array_comprehension: '{' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1153
    ','   shift, and go to state 863


State 976

  839 make_table_decl: '{' $@110 optional_emit_semis optional_expr_map_tuple_list . '}'

    '}'  shift, and go to state 1154


State 977

  275 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  837 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 940

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 1155


State 978

  781 make_struct_fields: "name" . copy_or_move expr
  782                   | "name" . ":=" expr

    "<-"  shift, and go to state 756
    ":="  shift, and go to state 757
    '='   shift, and go to state 758

    copy_or_move  go to state 759


State 979

  400 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 400 (expr_call)


State 980

  402 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1156


State 981

  376 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  783 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  784                   | make_struct_fields . ',' "name" ":=" expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 761
    ']'  shift, and go to state 1157


State 982

  331 expr_list: expr_list ',' . expr
  377 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 1158
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 964
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 983

  403 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 403 (expr_call)


State 984

  401 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 401 (expr_call)


State 985

  141 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 141 (optional_annotation_list)


State 986

  346 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1159
    ":="    shift, and go to state 1160
    "name"  shift, and go to state 1161
    '='     shift, and go to state 1162
    '&'     shift, and go to state 1163

    capture_entry  go to state 1164
    capture_list   go to state 1165


State 987

  347 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis block_or_simple_block

    ':'  shift, and go to state 393

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 1166


State 988

  349 expr_full_block_assumed_piped: '{' expressions '}' .

    $default  reduce using rule 349 (expr_full_block_assumed_piped)


State 989

  348 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '('  shift, and go to state 334

    $default  reduce using rule 144 (optional_function_argument_list)

    optional_function_argument_list  go to state 1167


State 990

  464 expr: expr "is" "type" '<' . $@31 type_declaration_no_options '>' $@32

    $default  reduce using rule 462 ($@31)

    $@31  go to state 1168


State 991

  506 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1169
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 992

  470 expr: expr "as" "type" '<' . $@33 type_declaration '>' $@34

    $default  reduce using rule 468 ($@33)

    $@33  go to state 1170


State 993

  504 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1171
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 994

  378 expr_method_call: expr "->" "name" '(' . ')'
  379                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1172
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1173
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 995

  501 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1174
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 996

  450 expr: expr "?[" expr ']' .

    $default  reduce using rule 450 (expr)


State 997

  475 expr: expr '?' "as" "type" . '<' $@35 type_declaration '>' $@36

    '<'  shift, and go to state 1175


State 998

  505 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1176


State 999

  472 expr: expr '?' "as" "name" .

    $default  reduce using rule 472 (expr)


State 1000

  476 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 476 (expr)


State 1001

  461 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1177
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1002

  503 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1178


State 1003

  453 expr: expr '.' "?." "name" .

    $default  reduce using rule 453 (expr)


State 1004

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  451     | expr '.' "?[" expr . ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ']'    shift, and go to state 1179


State 1005

  500 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1180
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1006

  391 expr_field: expr '.' "name" '(' . ')'
  392           | expr '.' "name" '(' . expr_list ')'
  393           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 1181
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1182
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1183
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1007

  502 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1184


State 1008

  390 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 390 (expr_field)


State 1009

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  449     | expr '.' '[' expr . ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ']'    shift, and go to state 1185


State 1010

  398 expr_field: expr '.' $@29 error . $@30

    $default  reduce using rule 397 ($@30)

    $@30  go to state 1186


State 1011

  394 expr_field: expr '.' basic_type_declaration '(' . ')'
  395           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1187
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1188
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1012

  448 expr: expr '[' expr ']' .

    $default  reduce using rule 448 (expr)


State 1013

  331 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 964
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1014

  405 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 405 (expr_call)


State 1015

  730 type_declaration_no_options_no_dim: "iterator" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 730 (type_declaration_no_options_no_dim)


State 1016

  720 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 720 (type_declaration_no_options_no_dim)


State 1017

  684 bitfield_type_declaration: "bitfield" '<' $@49 bitfield_bits '>' $@50 .

    $default  reduce using rule 684 (bitfield_type_declaration)


State 1018

  678 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 678 (bitfield_bits)


State 1019

  734 type_declaration_no_options_no_dim: "block" '<' $@62 type_declaration '>' $@63 .

    $default  reduce using rule 734 (type_declaration_no_options_no_dim)


State 1020

  737 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list optional_function_type '>' . $@65

    $default  reduce using rule 736 ($@65)

    $@65  go to state 1189


State 1021

  741 type_declaration_no_options_no_dim: "function" '<' $@66 type_declaration '>' $@67 .

    $default  reduce using rule 741 (type_declaration_no_options_no_dim)


State 1022

  744 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list optional_function_type '>' . $@69

    $default  reduce using rule 743 ($@69)

    $@69  go to state 1190


State 1023

  748 type_declaration_no_options_no_dim: "lambda" '<' $@70 type_declaration '>' $@71 .

    $default  reduce using rule 748 (type_declaration_no_options_no_dim)


State 1024

  751 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list optional_function_type '>' . $@73

    $default  reduce using rule 750 ($@73)

    $@73  go to state 1191


State 1025

  534 tuple_type: "name" ':' type_declaration .
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 534 (tuple_type)


State 1026

  754 type_declaration_no_options_no_dim: "tuple" '<' $@74 tuple_type_list '>' $@75 .

    $default  reduce using rule 754 (type_declaration_no_options_no_dim)


State 1027

  536 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 536 (tuple_type_list)


State 1028

  540 variant_type: "name" ':' type_declaration .
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 540 (variant_type)


State 1029

  757 type_declaration_no_options_no_dim: "variant" '<' $@76 variant_type_list '>' $@77 .

    $default  reduce using rule 757 (type_declaration_no_options_no_dim)


State 1030

  542 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 542 (variant_type_list)


State 1031

  705 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1192


State 1032

  277 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1193


State 1033

  681 bitfield_alias_bits: bitfield_alias_bits commas "name" .

    $default  reduce using rule 681 (bitfield_alias_bits)


State 1034

  589 commas: commas COMMA .

    $default  reduce using rule 589 (commas)


State 1035

  775 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 . '}'

    '}'  shift, and go to state 1194


State 1036

   83 semis: semis SEMICOLON .

    $default  reduce using rule 83 (semis)


State 1037

  539 tuple_alias_type_list: tuple_alias_type_list semis tuple_type .

    $default  reduce using rule 539 (tuple_alias_type_list)


State 1038

  765 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 . '}'

    '}'  shift, and go to state 1195


State 1039

  545 variant_alias_type_list: variant_alias_type_list semis variant_type .

    $default  reduce using rule 545 (variant_alias_type_list)


State 1040

  770 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 . '}'

    '}'  shift, and go to state 1196


State 1041

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  634 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1197


State 1042

  635 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 635 (variable_name_with_pos_list)


State 1043

  636 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  637                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1198

    $default  reduce using rule 636 (variable_name_with_pos_list)


State 1044

  550 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  551                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 756
    '='   shift, and go to state 758
    '|'   shift, and go to state 377

    $default  reduce using rule 550 (variable_declaration)

    copy_or_move  go to state 1199


State 1045

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  552 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 552 (variable_declaration)


State 1046

  297 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1200
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1047

  296 expression_return: "return" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 296 (expression_return)


State 1048

  300 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1201


State 1049

  282 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1202
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1050

  281 expression_delete: "delete" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 281 (expression_delete)


State 1051

  101 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1203


State 1052

  268 expression_any: "pass" SEMICOLON .

    $default  reduce using rule 268 (expression_any)


State 1053

   61 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1204


State 1054

   62 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1205


State 1055

   63 expression_goto: "goto" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 63 (expression_goto)


State 1056

   96 expression_unsafe: "unsafe" optional_emit_semis . expression_block

    $default  reduce using rule 246 ($@13)

    expression_block  go to state 1206
    $@13              go to state 396


State 1057

  299 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1207
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1058

  298 expression_yield: "yield" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 298 (expression_yield)


State 1059

  266 expression_any: expression_label SEMICOLON .

    $default  reduce using rule 266 (expression_any)


State 1060

  267 expression_any: expression_goto SEMICOLON .

    $default  reduce using rule 267 (expression_any)


State 1061

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner SEMICOLON

    '('  shift, and go to state 1208


State 1062

   73 if_or_static_if: "if" .

    $default  reduce using rule 73 (if_or_static_if)


State 1063

   74 if_or_static_if: "static_if" .

    $default  reduce using rule 74 (if_or_static_if)


State 1064

   92 expression_if_then_else: $@6 if_or_static_if . '(' expr ')' optional_emit_semis expression_if_block expression_else

    '('  shift, and go to state 1209


State 1065

   95 expression_for_loop: $@7 "for" . '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    '('  shift, and go to state 1210


State 1066

   98 expression_while_loop: $@8 "while" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1211


State 1067

  100 expression_with: $@9 "with" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1212


State 1068

  257 expression_any: expression_with_alias SEMICOLON .

    $default  reduce using rule 257 (expression_any)


State 1069

  248 expression_block: $@13 '{' expressions $@14 '}' . expression_block_finally

    "finally"  shift, and go to state 1213

    $default  reduce using rule 242 (expression_block_finally)

    expression_block_finally  go to state 1214


State 1070

  252 expression_any: expression_delete SEMICOLON .

    $default  reduce using rule 252 (expression_any)


State 1071

  259 expression_any: expression_break SEMICOLON .

    $default  reduce using rule 259 (expression_any)


State 1072

  260 expression_any: expression_continue SEMICOLON .

    $default  reduce using rule 260 (expression_any)


State 1073

  261 expression_any: expression_return SEMICOLON .

    $default  reduce using rule 261 (expression_any)


State 1074

  262 expression_any: expression_yield SEMICOLON .

    $default  reduce using rule 262 (expression_any)


State 1075

  306 optional_in_scope: "inscope" .

    $default  reduce using rule 306 (optional_in_scope)


State 1076

  312 expression_let: kwd_let optional_in_scope . let_variable_declaration
  313               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  314               | kwd_let optional_in_scope . '{' variable_declaration_list '}'

    "$i"    shift, and go to state 538
    "name"  shift, and go to state 539
    '('     shift, and go to state 1215
    '{'     shift, and go to state 1216

    tuple_expansion_variable_declaration  go to state 1217
    let_variable_name_with_pos_list       go to state 540
    let_variable_declaration              go to state 1218


State 1077

  251 expression_any: expr_assign SEMICOLON .

    $default  reduce using rule 251 (expression_any)


State 1078

  367 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1219
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1079

  368 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1220
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1080

  370 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1221
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1081

  369 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1222
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1082

  371 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1223
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1083

  361 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1224
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1084

  362 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1225
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1085

  363 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1226
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1086

  372 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1227
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1087

  373 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1228
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1088

  359 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1229
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1089

  360 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1230
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1090

  374 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1231
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1091

  375 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1232
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1092

  364 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1233
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1093

  365 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1234
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1094

  366 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1235
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1095

  358 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1236
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1096

  587 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1237
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1097

  589 commas: commas . COMMA
  592 enum_list: enum_list commas . enum_expression
  606 optional_commas: commas .

    "name"             shift, and go to state 907
    "new line, comma"  shift, and go to state 707
    ','                shift, and go to state 708

    $default  reduce using rule 606 (optional_commas)

    COMMA            go to state 1034
    enum_expression  go to state 1238


State 1098

  614 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas . $@45 '}'

    $default  reduce using rule 613 ($@45)

    $@45  go to state 1239


State 1099

  522 struct_variable_declaration_list: struct_variable_declaration_list "new line, semicolon" .

    $default  reduce using rule 522 (struct_variable_declaration_list)


State 1100

  628 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 628 (optional_struct_variable_declaration_list)


State 1101

  526 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON
  528                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "def"  shift, and go to state 1240


State 1102

  524 struct_variable_declaration_list: struct_variable_declaration_list $@37 . structure_variable_declaration SEMICOLON

    '@'  shift, and go to state 220

    $default  reduce using rule 508 (optional_field_annotation)

    metadata_argument_list          go to state 221
    optional_field_annotation       go to state 1241
    structure_variable_declaration  go to state 1242


State 1103

  559 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 559 (let_variable_name_with_pos_list)


State 1104

  562 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1243


State 1105

  568 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 568 (let_variable_declaration)


State 1106

  569 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1244
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1107

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  570 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 615
    "as"                   shift, and go to state 616
    "<<"                   shift, and go to state 617
    ">>"                   shift, and go to state 618
    "++"                   shift, and go to state 619
    "--"                   shift, and go to state 620
    "<="                   shift, and go to state 621
    ">="                   shift, and go to state 622
    "=="                   shift, and go to state 623
    "!="                   shift, and go to state 624
    "->"                   shift, and go to state 625
    "??"                   shift, and go to state 626
    "?."                   shift, and go to state 627
    "?["                   shift, and go to state 628
    "<|"                   shift, and go to state 629
    "|>"                   shift, and go to state 630
    "<<<"                  shift, and go to state 631
    ">>>"                  shift, and go to state 632
    "&&"                   shift, and go to state 633
    "||"                   shift, and go to state 634
    "^^"                   shift, and go to state 635
    ".."                   shift, and go to state 636
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 637
    '|'                    shift, and go to state 638
    '^'                    shift, and go to state 639
    '&'                    shift, and go to state 640
    '<'                    shift, and go to state 641
    '>'                    shift, and go to state 642
    '-'                    shift, and go to state 643
    '+'                    shift, and go to state 644
    '*'                    shift, and go to state 645
    '/'                    shift, and go to state 646
    '%'                    shift, and go to state 647
    '.'                    shift, and go to state 648
    '['                    shift, and go to state 649
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1245


State 1108

  572 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 572 (global_let_variable_declaration)


State 1109

  802 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' . $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 801 ($@91)

    $@91  go to state 1246


State 1110

  805 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' . $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 804 ($@93)

    $@93  go to state 1247


State 1111

  285 new_type_declaration: '<' $@15 type_declaration '>' . $@16

    $default  reduce using rule 284 ($@16)

    $@16  go to state 1248


State 1112

  291 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1249


State 1113

  289 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 289 (expr_new)


State 1114

  290 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 290 (expr_new)


State 1115

  288 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 288 (expr_new)


State 1116

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1250


State 1117

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1251


State 1118

  327 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 327 (expr_type_info)


State 1119

  326 expr_type_decl: "type" '<' $@23 type_declaration '>' . $@24

    $default  reduce using rule 325 ($@24)

    $@24  go to state 1252


State 1120

  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"
  821 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options . '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1253
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1121

  536 tuple_type_list: tuple_type_list . c_or_s tuple_type
  824 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list . '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 707
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 708
    '>'                    shift, and go to state 1254
    ';'                    shift, and go to state 16

    COMMA      go to state 709
    SEMICOLON  go to state 710
    c_or_s     go to state 844


State 1122

  542 variant_type_list: variant_type_list . c_or_s variant_type
  827 make_dim_decl: "array" "variant" '<' $@104 variant_type_list . '>' $@105 '(' make_variant_dim ')'

    "new line, comma"      shift, and go to state 707
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 708
    '>'                    shift, and go to state 1255
    ';'                    shift, and go to state 16

    COMMA      go to state 709
    SEMICOLON  go to state 710
    c_or_s     go to state 847


State 1123

  831 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' . $@107 '(' optional_expr_list ')'

    $default  reduce using rule 830 ($@107)

    $@107  go to state 1256


State 1124

  828 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 828 (make_dim_decl)


State 1125

  841 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 274 (optional_expr_map_tuple_list)

    string_builder                go to state 468
    expr_reader                   go to state 469
    expr_call_pipe                go to state 470
    optional_expr_map_tuple_list  go to state 1257
    name_in_namespace             go to state 471
    expr_new                      go to state 472
    expr_cast                     go to state 473
    expr_type_decl                go to state 474
    expr_type_info                go to state 475
    block_or_lambda               go to state 476
    expr_full_block               go to state 477
    expr_numeric_const            go to state 478
    expr_named_call               go to state 479
    expr_method_call              go to state 480
    func_addr_expr                go to state 481
    expr_field                    go to state 482
    expr_call                     go to state 483
    expr                          go to state 725
    expr_generator                go to state 485
    expr_mtag                     go to state 486
    basic_type_declaration        go to state 487
    make_decl                     go to state 488
    make_struct_decl              go to state 489
    make_map_tuple                go to state 726
    make_tuple_call               go to state 490
    make_dim_decl                 go to state 491
    expr_map_tuple_list           go to state 977
    make_table_decl               go to state 492
    array_comprehension           go to state 493


State 1126

  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"
  842 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1258
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1127

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  812 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 812 (make_map_tuple)


State 1128

  837 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 837 (expr_map_tuple_list)


State 1129

  840 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 840 (make_table_decl)


State 1130

  317 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 316 ($@18)

    $@18  go to state 1259


State 1131

  320 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' . $@20 expr

    $default  reduce using rule 319 ($@20)

    $@20  go to state 1260


State 1132

  323 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' . $@22 expr

    $default  reduce using rule 322 ($@22)

    $@22  go to state 1261


State 1133

  835 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' . $@109 '(' expr_list optional_comma ')'

    $default  reduce using rule 834 ($@109)

    $@109  go to state 1262


State 1134

  832 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 832 (make_dim_decl)


State 1135

  811 make_struct_decl: "default" '<' $@96 type_declaration_no_options '>' . $@97 use_initializer

    $default  reduce using rule 810 ($@97)

    $@97  go to state 1263


State 1136

  817 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' . $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 816 ($@99)

    $@99  go to state 1264


State 1137

  814 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 814 (make_tuple_call)


State 1138

  808 make_struct_decl: "variant" '<' $@94 variant_type_list '>' . $@95 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 807 ($@95)

    $@95  go to state 1265


State 1139

  489 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  490               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  491               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 1266

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1267


State 1140

  498 expr_mtag: "$c" '(' expr ')' '(' . ')'
  499          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1268
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1269
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1141

   37 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 36 ($@1)

    $@1  go to state 1270


State 1142

   40 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1271


State 1143

  847 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1272
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1144

  636 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  637                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  848 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1273
    ','   shift, and go to state 863


State 1145

  785 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  786                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 756
    ":="  shift, and go to state 1274
    '='   shift, and go to state 758

    copy_or_move  go to state 1275


State 1146

  787 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  788                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1276
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1147

  784 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1277
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1148

  783 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1278
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1149

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  381 func_addr_name: "$i" '(' expr . ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1279


State 1150

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  507          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1280


State 1151

  385 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options . '>' $@26 func_addr_name
  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1281
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1152

  388 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list . optional_function_type '>' $@28 func_addr_name

    ':'  shift, and go to state 393

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 1282


State 1153

  849 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1283
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1154

  839 make_table_decl: '{' $@110 optional_emit_semis optional_expr_map_tuple_list '}' .

    $default  reduce using rule 839 (make_table_decl)


State 1155

  275 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 275 (optional_expr_map_tuple_list)


State 1156

  402 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 402 (expr_call)


State 1157

  376 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1284


State 1158

  377 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  818 make_dim_decl: '[' . optional_expr_list ']'
  847 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  848                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "for"                             shift, and go to state 595
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "iterator"                        shift, and go to state 596
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "$f"                              shift, and go to state 600
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 601
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 272 (optional_expr_list)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    optional_expr_list      go to state 597
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 598
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_fields      go to state 1285
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1159

  340 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1286


State 1160

  341 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1287


State 1161

  342 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1288


State 1162

  339 capture_entry: '=' . "name"

    "name"  shift, and go to state 1289


State 1163

  338 capture_entry: '&' . "name"

    "name"  shift, and go to state 1290


State 1164

  343 capture_list: capture_entry .

    $default  reduce using rule 343 (capture_list)


State 1165

  344 capture_list: capture_list . ',' capture_entry
  346 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1291
    ')'  shift, and go to state 1292


State 1166

  347 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis block_or_simple_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1293


State 1167

  348 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis expression_block

    ':'  shift, and go to state 393

    $default  reduce using rule 147 (optional_function_type)

    optional_function_type  go to state 1294


State 1168

  464 expr: expr "is" "type" '<' $@31 . type_declaration_no_options '>' $@32

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1295
    type_declaration_no_options_no_dim  go to state 275


State 1169

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  506          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1296


State 1170

  470 expr: expr "as" "type" '<' $@33 . type_declaration '>' $@34

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1297


State 1171

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  504          | expr "as" "$f" '(' expr . ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1298


State 1172

  378 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 378 (expr_method_call)


State 1173

  331 expr_list: expr_list . ',' expr
  379 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1013
    ')'  shift, and go to state 1299


State 1174

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  501          | expr "?." "$f" '(' expr . ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1300


State 1175

  475 expr: expr '?' "as" "type" '<' . $@35 type_declaration '>' $@36

    $default  reduce using rule 473 ($@35)

    $@35  go to state 1301


State 1176

  505 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1302
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1177

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  461     | expr '?' expr ':' expr .
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 461 (expr)


State 1178

  503 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1303
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1179

  451 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 451 (expr)


State 1180

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  500          | expr '.' "$f" '(' expr . ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1304


State 1181

  393 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  818 make_dim_decl: '[' . optional_expr_list ']'
  847 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  848                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "for"                             shift, and go to state 595
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "iterator"                        shift, and go to state 596
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "$f"                              shift, and go to state 600
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 601
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 272 (optional_expr_list)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    optional_expr_list      go to state 597
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 598
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_fields      go to state 1305
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1182

  391 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 391 (expr_field)


State 1183

  331 expr_list: expr_list . ',' expr
  392 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1013
    ')'  shift, and go to state 1306


State 1184

  502 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1307
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1185

  449 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 449 (expr)


State 1186

  398 expr_field: expr '.' $@29 error $@30 .

    $default  reduce using rule 398 (expr_field)


State 1187

  394 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 394 (expr_field)


State 1188

  331 expr_list: expr_list . ',' expr
  395 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1013
    ')'  shift, and go to state 1308


State 1189

  737 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list optional_function_type '>' $@65 .

    $default  reduce using rule 737 (type_declaration_no_options_no_dim)


State 1190

  744 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list optional_function_type '>' $@69 .

    $default  reduce using rule 744 (type_declaration_no_options_no_dim)


State 1191

  751 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list optional_function_type '>' $@73 .

    $default  reduce using rule 751 (type_declaration_no_options_no_dim)


State 1192

  705 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 272 (optional_expr_list)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    optional_expr_list      go to state 1309
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 598
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1193

  277 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 277 (type_declaration_no_options_list)


State 1194

  775 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}' .

    $default  reduce using rule 775 (bitfield_alias_declaration)


State 1195

  765 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}' .

    $default  reduce using rule 765 (tuple_alias_declaration)


State 1196

  770 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}' .

    $default  reduce using rule 770 (variant_alias_declaration)


State 1197

  634 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 634 (variable_name_with_pos_list)


State 1198

  637 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1310


State 1199

  551 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1311
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1200

  297 expression_return: "return" "<-" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 297 (expression_return)


State 1201

  300 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 246 ($@13)

    expression_block  go to state 1312
    $@13              go to state 396


State 1202

  282 expression_delete: "delete" "explicit" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 282 (expression_delete)


State 1203

  101 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1313
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1204

   61 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 61 (expression_label)


State 1205

   62 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 62 (expression_goto)


State 1206

   96 expression_unsafe: "unsafe" optional_emit_semis expression_block .

    $default  reduce using rule 96 (expression_unsafe)


State 1207

  299 expression_yield: "yield" "<-" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 299 (expression_yield)


State 1208

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1314
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1209

   92 expression_if_then_else: $@6 if_or_static_if '(' . expr ')' optional_emit_semis expression_if_block expression_else

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1315
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1210

   95 expression_for_loop: $@7 "for" '(' . variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "$i"    shift, and go to state 684
    "name"  shift, and go to state 685

    variable_name_with_pos_list  go to state 1316


State 1211

   98 expression_while_loop: $@8 "while" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1317
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1212

  100 expression_with: $@9 "with" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1318
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1213

  245 expression_block_finally: "finally" . $@11 '{' expressions $@12 '}'

    $default  reduce using rule 243 ($@11)

    $@11  go to state 1319


State 1214

  248 expression_block: $@13 '{' expressions $@14 '}' expression_block_finally .

    $default  reduce using rule 248 (expression_block)


State 1215

  310 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  311                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    "name"  shift, and go to state 1320

    tuple_expansion  go to state 1321


State 1216

  314 expression_let: kwd_let optional_in_scope '{' . variable_declaration_list '}'

    $default  reduce using rule 565 (variable_declaration_list)

    variable_declaration_list  go to state 1322


State 1217

  313 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 313 (expression_let)


State 1218

  312 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 312 (expression_let)


State 1219

  367 expr_assign: expr "+=" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 367 (expr_assign)


State 1220

  368 expr_assign: expr "-=" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 368 (expr_assign)


State 1221

  370 expr_assign: expr "/=" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 370 (expr_assign)


State 1222

  369 expr_assign: expr "*=" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 369 (expr_assign)


State 1223

  371 expr_assign: expr "%=" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 371 (expr_assign)


State 1224

  361 expr_assign: expr "&=" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 361 (expr_assign)


State 1225

  362 expr_assign: expr "|=" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 362 (expr_assign)


State 1226

  363 expr_assign: expr "^=" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 363 (expr_assign)


State 1227

  372 expr_assign: expr "<<=" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 372 (expr_assign)


State 1228

  373 expr_assign: expr ">>=" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 373 (expr_assign)


State 1229

  359 expr_assign: expr "<-" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 359 (expr_assign)


State 1230

  360 expr_assign: expr ":=" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 360 (expr_assign)


State 1231

  374 expr_assign: expr "<<<=" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 374 (expr_assign)


State 1232

  375 expr_assign: expr ">>>=" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 375 (expr_assign)


State 1233

  364 expr_assign: expr "&&=" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 364 (expr_assign)


State 1234

  365 expr_assign: expr "||=" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 365 (expr_assign)


State 1235

  366 expr_assign: expr "^^=" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 366 (expr_assign)


State 1236

  358 expr_assign: expr '=' expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 358 (expr_assign)


State 1237

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  587 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 587 (enum_expression)


State 1238

  592 enum_list: enum_list commas enum_expression .

    $default  reduce using rule 592 (enum_list)


State 1239

  614 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 . '}'

    '}'  shift, and go to state 1323


State 1240

  526 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON
  528                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "public"   shift, and go to state 1324
    "private"  shift, and go to state 1325

    $default  reduce using rule 515 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1326


State 1241

  520 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1327

    $default  reduce using rule 518 (optional_static_member_variable)

    optional_static_member_variable  go to state 1328


State 1242

  524 struct_variable_declaration_list: struct_variable_declaration_list $@37 structure_variable_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1329


State 1243

  562 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 562 (let_variable_name_with_pos_list)


State 1244

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  569 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 615
    "as"                   shift, and go to state 616
    "<<"                   shift, and go to state 617
    ">>"                   shift, and go to state 618
    "++"                   shift, and go to state 619
    "--"                   shift, and go to state 620
    "<="                   shift, and go to state 621
    ">="                   shift, and go to state 622
    "=="                   shift, and go to state 623
    "!="                   shift, and go to state 624
    "->"                   shift, and go to state 625
    "??"                   shift, and go to state 626
    "?."                   shift, and go to state 627
    "?["                   shift, and go to state 628
    "<|"                   shift, and go to state 629
    "|>"                   shift, and go to state 630
    "<<<"                  shift, and go to state 631
    ">>>"                  shift, and go to state 632
    "&&"                   shift, and go to state 633
    "||"                   shift, and go to state 634
    "^^"                   shift, and go to state 635
    ".."                   shift, and go to state 636
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 637
    '|'                    shift, and go to state 638
    '^'                    shift, and go to state 639
    '&'                    shift, and go to state 640
    '<'                    shift, and go to state 641
    '>'                    shift, and go to state 642
    '-'                    shift, and go to state 643
    '+'                    shift, and go to state 644
    '*'                    shift, and go to state 645
    '/'                    shift, and go to state 646
    '%'                    shift, and go to state 647
    '.'                    shift, and go to state 648
    '['                    shift, and go to state 649
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1330


State 1245

  570 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 570 (let_variable_declaration)


State 1246

  802 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1331


State 1247

  805 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1332


State 1248

  285 new_type_declaration: '<' $@15 type_declaration '>' $@16 .

    $default  reduce using rule 285 (new_type_declaration)


State 1249

  291 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 291 (expr_new)


State 1250

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1333
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1251

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1334


State 1252

  326 expr_type_decl: "type" '<' $@23 type_declaration '>' $@24 .

    $default  reduce using rule 326 (expr_type_decl)


State 1253

  821 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' . $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 820 ($@101)

    $@101  go to state 1335


State 1254

  824 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' . $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 823 ($@103)

    $@103  go to state 1336


State 1255

  827 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' . $@105 '(' make_variant_dim ')'

    $default  reduce using rule 826 ($@105)

    $@105  go to state 1337


State 1256

  831 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 . '(' optional_expr_list ')'

    '('  shift, and go to state 1338


State 1257

  841 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1339


State 1258

  842 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1340


State 1259

  317 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1341
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1260

  320 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' $@20 . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1342
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1261

  323 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' $@22 . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1343
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1262

  835 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1344


State 1263

  811 make_struct_decl: "default" '<' $@96 type_declaration_no_options '>' $@97 . use_initializer

    "uninitialized"  shift, and go to state 1345

    $default  reduce using rule 798 (use_initializer)

    use_initializer  go to state 1346


State 1264

  817 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1347


State 1265

  808 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1348


State 1266

  489 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  490               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    ')'                               shift, and go to state 1349
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1350
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1267

  491 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis . expression_block

    $default  reduce using rule 246 ($@13)

    expression_block  go to state 1351
    $@13              go to state 396


State 1268

  498 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 498 (expr_mtag)


State 1269

  331 expr_list: expr_list . ',' expr
  499 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1013
    ')'  shift, and go to state 1352


State 1270

   37 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 33 (format_string)

    format_string  go to state 1353


State 1271

   40 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 40 (string_builder_body)


State 1272

  331 expr_list: expr_list . ',' expr
  847 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1013
    ')'  shift, and go to state 1354


State 1273

  848 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1355
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1274

  786 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1356
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1275

  785 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1357
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1276

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  787 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  788                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1358


State 1277

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  784 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 784 (make_struct_fields)


State 1278

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  783 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 783 (make_struct_fields)


State 1279

  381 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 381 (func_addr_name)


State 1280

  507 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 507 (expr_mtag)


State 1281

  385 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options '>' . $@26 func_addr_name

    $default  reduce using rule 384 ($@26)

    $@26  go to state 1359


State 1282

  388 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type . '>' $@28 func_addr_name

    '>'  shift, and go to state 1360


State 1283

  331 expr_list: expr_list . ',' expr
  849 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 1013
    ')'  shift, and go to state 1361


State 1284

  376 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 376 (expr_named_call)


State 1285

  377 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  783 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  784                   | make_struct_fields . ',' "name" ":=" expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 761
    ']'  shift, and go to state 1362


State 1286

  340 capture_entry: "<-" "name" .

    $default  reduce using rule 340 (capture_entry)


State 1287

  341 capture_entry: ":=" "name" .

    $default  reduce using rule 341 (capture_entry)


State 1288

  342 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1363


State 1289

  339 capture_entry: '=' "name" .

    $default  reduce using rule 339 (capture_entry)


State 1290

  338 capture_entry: '&' "name" .

    $default  reduce using rule 338 (capture_entry)


State 1291

  344 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1159
    ":="    shift, and go to state 1160
    "name"  shift, and go to state 1161
    '='     shift, and go to state 1162
    '&'     shift, and go to state 1163

    capture_entry  go to state 1364


State 1292

  346 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 346 (optional_capture_list)


State 1293

  347 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . block_or_simple_block

    "=>"  shift, and go to state 1365

    $default  reduce using rule 246 ($@13)

    expression_block       go to state 1366
    $@13                   go to state 396
    block_or_simple_block  go to state 1367


State 1294

  348 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1368


State 1295

  464 expr: expr "is" "type" '<' $@31 type_declaration_no_options . '>' $@32
  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1369
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1296

  506 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 506 (expr_mtag)


State 1297

  470 expr: expr "as" "type" '<' $@33 type_declaration . '>' $@34
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1370


State 1298

  504 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 504 (expr_mtag)


State 1299

  379 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 379 (expr_method_call)


State 1300

  501 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 501 (expr_mtag)


State 1301

  475 expr: expr '?' "as" "type" '<' $@35 . type_declaration '>' $@36

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1371


State 1302

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  505          | expr '?' "as" "$f" '(' expr . ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1372


State 1303

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  503          | expr '.' "?." "$f" '(' expr . ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1373


State 1304

  500 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 500 (expr_mtag)


State 1305

  393 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  783 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  784                   | make_struct_fields . ',' "name" ":=" expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 761
    ']'  shift, and go to state 1374


State 1306

  392 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 392 (expr_field)


State 1307

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  502          | expr '.' '.' "$f" '(' expr . ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1375


State 1308

  395 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 395 (expr_field)


State 1309

  705 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1376


State 1310

  637 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 637 (variable_name_with_pos_list)


State 1311

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  551 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 551 (variable_declaration)


State 1312

  300 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 300 (expression_try_catch)


State 1313

  101 expression_with_alias: "assume" "name" '=' expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 101 (expression_with_alias)


State 1314

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner SEMICOLON
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1377


State 1315

   92 expression_if_then_else: $@6 if_or_static_if '(' expr . ')' optional_emit_semis expression_if_block expression_else
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1378


State 1316

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list . "in" expr_list ')' optional_emit_semis expression_block
  636 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  637                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1379
    ','   shift, and go to state 863


State 1317

   98 expression_while_loop: $@8 "while" '(' expr . ')' optional_emit_semis expression_block
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1380


State 1318

  100 expression_with: $@9 "with" '(' expr . ')' optional_emit_semis expression_block
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1381


State 1319

  245 expression_block_finally: "finally" $@11 . '{' expressions $@12 '}'

    '{'  shift, and go to state 1382


State 1320

  308 tuple_expansion: "name" .

    $default  reduce using rule 308 (tuple_expansion)


State 1321

  309 tuple_expansion: tuple_expansion . ',' "name"
  310 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  311                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 1383
    ')'  shift, and go to state 1384


State 1322

  314 expression_let: kwd_let optional_in_scope '{' variable_declaration_list . '}'
  566 variable_declaration_list: variable_declaration_list . SEMICOLON
  567                          | variable_declaration_list . let_variable_declaration

    "$i"                   shift, and go to state 538
    "name"                 shift, and go to state 539
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 1385

    SEMICOLON                        go to state 1386
    let_variable_name_with_pos_list  go to state 540
    let_variable_declaration         go to state 1387


State 1323

  614 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}' .

    $default  reduce using rule 614 (enum_declaration)


State 1324

  516 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 516 (optional_public_or_private_member_variable)


State 1325

  517 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 517 (optional_public_or_private_member_variable)


State 1326

  526 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . "abstract" optional_constant $@38 function_declaration_header SEMICOLON
  528                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "abstract"  shift, and go to state 1388
    "static"    shift, and go to state 1327

    $default  reduce using rule 518 (optional_static_member_variable)

    optional_static_member_variable  go to state 1389


State 1327

  519 optional_static_member_variable: "static" .

    $default  reduce using rule 519 (optional_static_member_variable)


State 1328

  520 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1390
    "sealed"    shift, and go to state 1391

    $default  reduce using rule 510 (optional_override)

    optional_override  go to state 1392


State 1329

  524 struct_variable_declaration_list: struct_variable_declaration_list $@37 structure_variable_declaration SEMICOLON .

    $default  reduce using rule 524 (struct_variable_declaration_list)


State 1330

  569 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 569 (let_variable_declaration)


State 1331

  802 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1345

    $default  reduce using rule 798 (use_initializer)

    use_initializer  go to state 1393


State 1332

  805 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1345

    $default  reduce using rule 798 (use_initializer)

    use_initializer  go to state 1394


State 1333

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1395


State 1334

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1396


State 1335

  821 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1397


State 1336

  824 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1398


State 1337

  827 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 . '(' make_variant_dim ')'

    '('  shift, and go to state 1399


State 1338

  831 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 272 (optional_expr_list)

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    optional_expr_list      go to state 1400
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 598
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1339

  841 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 841 (make_table_decl)


State 1340

  842 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    $default  reduce using rule 274 (optional_expr_map_tuple_list)

    string_builder                go to state 468
    expr_reader                   go to state 469
    expr_call_pipe                go to state 470
    optional_expr_map_tuple_list  go to state 1401
    name_in_namespace             go to state 471
    expr_new                      go to state 472
    expr_cast                     go to state 473
    expr_type_decl                go to state 474
    expr_type_info                go to state 475
    block_or_lambda               go to state 476
    expr_full_block               go to state 477
    expr_numeric_const            go to state 478
    expr_named_call               go to state 479
    expr_method_call              go to state 480
    func_addr_expr                go to state 481
    expr_field                    go to state 482
    expr_call                     go to state 483
    expr                          go to state 725
    expr_generator                go to state 485
    expr_mtag                     go to state 486
    basic_type_declaration        go to state 487
    make_decl                     go to state 488
    make_struct_decl              go to state 489
    make_map_tuple                go to state 726
    make_tuple_call               go to state 490
    make_dim_decl                 go to state 491
    expr_map_tuple_list           go to state 977
    make_table_decl               go to state 492
    array_comprehension           go to state 493


State 1341

  317 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' $@18 expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 317 (expr_cast)


State 1342

  320 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' $@20 expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 320 (expr_cast)


State 1343

  323 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' $@22 expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 323 (expr_cast)


State 1344

  835 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1402
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1345

  799 use_initializer: "uninitialized" .

    $default  reduce using rule 799 (use_initializer)


State 1346

  811 make_struct_decl: "default" '<' $@96 type_declaration_no_options '>' $@97 use_initializer .

    $default  reduce using rule 811 (make_struct_decl)


State 1347

  817 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1345

    $default  reduce using rule 798 (use_initializer)

    use_initializer  go to state 1403


State 1348

  808 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1345

    $default  reduce using rule 798 (use_initializer)

    use_initializer  go to state 1404


State 1349

  489 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 489 (expr_generator)


State 1350

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  490 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1405


State 1351

  491 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block .

    $default  reduce using rule 491 (expr_generator)


State 1352

  499 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 499 (expr_mtag)


State 1353

   34 format_string: format_string . STRING_CHARACTER
   37 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1406

    $default  reduce using rule 37 (optional_format_string)


State 1354

  847 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1407


State 1355

  331 expr_list: expr_list . ',' expr
  848 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1013
    ')'  shift, and go to state 1408


State 1356

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  786 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 786 (make_struct_fields)


State 1357

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  785 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 785 (make_struct_fields)


State 1358

  787 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  788                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 756
    ":="  shift, and go to state 1409
    '='   shift, and go to state 758

    copy_or_move  go to state 1410


State 1359

  385 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options '>' $@26 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 763
    "name"  shift, and go to state 58

    name_in_namespace  go to state 766
    func_addr_name     go to state 1411


State 1360

  388 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type '>' . $@28 func_addr_name

    $default  reduce using rule 387 ($@28)

    $@28  go to state 1412


State 1361

  849 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' make_map_tuple array_comprehension_where '}'

    ';'  shift, and go to state 1413


State 1362

  377 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1414


State 1363

  342 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1415


State 1364

  344 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 344 (capture_list)


State 1365

  333 block_or_simple_block: "=>" . expr
  334                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "<-"                              shift, and go to state 1416
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1417
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1366

  332 block_or_simple_block: expression_block .

    $default  reduce using rule 332 (block_or_simple_block)


State 1367

  347 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block .

    $default  reduce using rule 347 (expr_full_block)


State 1368

  348 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . expression_block

    $default  reduce using rule 246 ($@13)

    expression_block  go to state 1418
    $@13              go to state 396


State 1369

  464 expr: expr "is" "type" '<' $@31 type_declaration_no_options '>' . $@32

    $default  reduce using rule 463 ($@32)

    $@32  go to state 1419


State 1370

  470 expr: expr "as" "type" '<' $@33 type_declaration '>' . $@34

    $default  reduce using rule 469 ($@34)

    $@34  go to state 1420


State 1371

  475 expr: expr '?' "as" "type" '<' $@35 type_declaration . '>' $@36
  759 type_declaration: type_declaration . '|' type_declaration_no_options
  760                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1421


State 1372

  505 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 505 (expr_mtag)


State 1373

  503 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 503 (expr_mtag)


State 1374

  393 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1422


State 1375

  502 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 502 (expr_mtag)


State 1376

  705 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 705 (type_declaration_no_options_no_dim)


State 1377

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner SEMICOLON

    "else"  shift, and go to state 1423

    $default  reduce using rule 75 (expression_else_one_liner)

    expression_else_one_liner  go to state 1424


State 1378

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' . optional_emit_semis expression_if_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1425


State 1379

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" . expr_list ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    expr_list               go to state 1426
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 599
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1380

   98 expression_while_loop: $@8 "while" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1427


State 1381

  100 expression_with: $@9 "with" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1428


State 1382

  245 expression_block_finally: "finally" $@11 '{' . expressions $@12 '}'

    $default  reduce using rule 269 (expressions)

    expressions  go to state 1429


State 1383

  309 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1430


State 1384

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  311                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr SEMICOLON

    ':'  shift, and go to state 1431
    '&'  shift, and go to state 414

    $default  reduce using rule 556 (optional_ref)

    optional_ref  go to state 1432


State 1385

  314 expression_let: kwd_let optional_in_scope '{' variable_declaration_list '}' .

    $default  reduce using rule 314 (expression_let)


State 1386

  566 variable_declaration_list: variable_declaration_list SEMICOLON .

    $default  reduce using rule 566 (variable_declaration_list)


State 1387

  567 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 567 (variable_declaration_list)


State 1388

  526 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" . optional_constant $@38 function_declaration_header SEMICOLON

    "const"  shift, and go to state 1433

    $default  reduce using rule 513 (optional_constant)

    optional_constant  go to state 1434


State 1389

  528 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "override"  shift, and go to state 1390
    "sealed"    shift, and go to state 1391

    $default  reduce using rule 510 (optional_override)

    optional_override  go to state 1435


State 1390

  511 optional_override: "override" .

    $default  reduce using rule 511 (optional_override)


State 1391

  512 optional_override: "sealed" .

    $default  reduce using rule 512 (optional_override)


State 1392

  520 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1324
    "private"  shift, and go to state 1325

    $default  reduce using rule 515 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1436


State 1393

  802 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 600
    "name"  shift, and go to state 978
    '('     shift, and go to state 1437

    $default  reduce using rule 797 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1438
    make_struct_dim_list           go to state 1439
    make_struct_dim_decl           go to state 1440
    optional_make_struct_dim_decl  go to state 1441


State 1394

  805 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 600
    "name"  shift, and go to state 978
    '('     shift, and go to state 1437

    $default  reduce using rule 797 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1438
    make_struct_dim_list           go to state 1439
    make_struct_dim_decl           go to state 1440
    optional_make_struct_dim_decl  go to state 1442


State 1395

  328 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 328 (expr_type_info)


State 1396

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1443
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1397

  821 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1345

    $default  reduce using rule 798 (use_initializer)

    use_initializer  go to state 1444


State 1398

  824 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1345

    $default  reduce using rule 798 (use_initializer)

    use_initializer  go to state 1445


State 1399

  827 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 600
    "name"  shift, and go to state 978

    $default  reduce using rule 789 (make_variant_dim)

    make_struct_fields  go to state 1446
    make_variant_dim    go to state 1447


State 1400

  831 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1448


State 1401

  842 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1449


State 1402

  331 expr_list: expr_list . ',' expr
  835 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 753

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 1450


State 1403

  817 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 600
    "name"  shift, and go to state 978
    '('     shift, and go to state 1437

    $default  reduce using rule 797 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1438
    make_struct_dim_list           go to state 1439
    make_struct_dim_decl           go to state 1440
    optional_make_struct_dim_decl  go to state 1451


State 1404

  808 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 600
    "name"  shift, and go to state 978

    $default  reduce using rule 789 (make_variant_dim)

    make_struct_fields  go to state 1446
    make_variant_dim    go to state 1452


State 1405

  490 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 490 (expr_generator)


State 1406

   34 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 34 (format_string)


State 1407

  847 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1453
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1408

  848 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1454


State 1409

  788 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1455
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1410

  787 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1456
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1411

  385 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options '>' $@26 func_addr_name .

    $default  reduce using rule 385 (func_addr_expr)


State 1412

  388 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type '>' $@28 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 763
    "name"  shift, and go to state 58

    name_in_namespace  go to state 766
    func_addr_name     go to state 1457


State 1413

  849 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 725
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_map_tuple          go to state 1458
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1414

  377 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 377 (expr_named_call)


State 1415

  342 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 342 (capture_entry)


State 1416

  334 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1459
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1417

  333 block_or_simple_block: "=>" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    ".."  error (nonassociative)

    $default  reduce using rule 333 (block_or_simple_block)


State 1418

  348 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block .

    $default  reduce using rule 348 (expr_full_block_assumed_piped)


State 1419

  464 expr: expr "is" "type" '<' $@31 type_declaration_no_options '>' $@32 .

    $default  reduce using rule 464 (expr)


State 1420

  470 expr: expr "as" "type" '<' $@33 type_declaration '>' $@34 .

    $default  reduce using rule 470 (expr)


State 1421

  475 expr: expr '?' "as" "type" '<' $@35 type_declaration '>' . $@36

    $default  reduce using rule 474 ($@36)

    $@36  go to state 1460


State 1422

  393 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 393 (expr_field)


State 1423

   76 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 869
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 870
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 874
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 879
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder           go to state 468
    expr_reader              go to state 469
    expression_if_one_liner  go to state 1461
    expr_call_pipe           go to state 470
    name_in_namespace        go to state 471
    expr_new                 go to state 472
    expression_break         go to state 1462
    expression_continue      go to state 1463
    expression_return        go to state 1464
    expression_yield         go to state 1465
    expr_cast                go to state 473
    expr_type_decl           go to state 474
    expr_type_info           go to state 475
    block_or_lambda          go to state 476
    expr_full_block          go to state 477
    expr_numeric_const       go to state 478
    expr_named_call          go to state 479
    expr_method_call         go to state 480
    func_addr_expr           go to state 481
    expr_field               go to state 482
    expr_call                go to state 483
    expr                     go to state 1466
    expr_generator           go to state 485
    expr_mtag                go to state 486
    basic_type_declaration   go to state 487
    make_decl                go to state 488
    make_struct_decl         go to state 489
    make_tuple_call          go to state 490
    make_dim_decl            go to state 491
    make_table_decl          go to state 492
    array_comprehension      go to state 493


State 1424

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1467


State 1425

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' optional_emit_semis . expression_if_block expression_else

    '{'       reduce using rule 86 ($@3)
    '{'       [reduce using rule 89 ($@5)]
    $default  reduce using rule 89 ($@5)

    expression_if_block  go to state 1468
    $@3                  go to state 1469
    $@5                  go to state 1470


State 1426

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" expr_list . ')' optional_emit_semis expression_block
  331 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1013
    ')'  shift, and go to state 1471


State 1427

   98 expression_while_loop: $@8 "while" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 246 ($@13)

    expression_block  go to state 1472
    $@13              go to state 396


State 1428

  100 expression_with: $@9 "with" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 246 ($@13)

    expression_block  go to state 1473
    $@13              go to state 396


State 1429

  245 expression_block_finally: "finally" $@11 '{' expressions . $@12 '}'
  270 expressions: expressions . expression_any
  271            | expressions . error

    error                             shift, and go to state 868
    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 869
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 870
    "try"                             shift, and go to state 871
    "table"                           shift, and go to state 428
    "delete"                          shift, and go to state 872
    "deref"                           shift, and go to state 429
    "assume"                          shift, and go to state 873
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 874
    "pass"                            shift, and go to state 875
    "reinterpret"                     shift, and go to state 433
    "label"                           shift, and go to state 876
    "goto"                            shift, and go to state 877
    "unsafe"                          shift, and go to state 878
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 879
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 467

    "while"      reduce using rule 97 ($@8)
    "if"         reduce using rule 91 ($@6)
    "static_if"  reduce using rule 91 ($@6)
    "for"        reduce using rule 94 ($@7)
    "with"       reduce using rule 99 ($@9)
    '}'          reduce using rule 244 ($@12)

    SEMICOLON                         go to state 880
    string_builder                    go to state 468
    expr_reader                       go to state 469
    expression_label                  go to state 881
    expression_goto                   go to state 882
    expression_if_one_liner           go to state 883
    expression_if_then_else           go to state 884
    $@6                               go to state 885
    expression_if_then_else_oneliner  go to state 886
    expression_for_loop               go to state 887
    $@7                               go to state 888
    expression_unsafe                 go to state 889
    expression_while_loop             go to state 890
    $@8                               go to state 891
    expression_with                   go to state 892
    $@9                               go to state 893
    expression_with_alias             go to state 894
    $@12                              go to state 1474
    expr_call_pipe                    go to state 470
    expression_any                    go to state 896
    name_in_namespace                 go to state 471
    expression_delete                 go to state 897
    expr_new                          go to state 472
    expression_break                  go to state 898
    expression_continue               go to state 899
    expression_return                 go to state 900
    expression_yield                  go to state 901
    expression_try_catch              go to state 902
    kwd_let                           go to state 903
    expression_let                    go to state 904
    expr_cast                         go to state 473
    expr_type_decl                    go to state 474
    expr_type_info                    go to state 475
    block_or_lambda                   go to state 476
    expr_full_block                   go to state 477
    expr_numeric_const                go to state 478
    expr_assign                       go to state 905
    expr_named_call                   go to state 479
    expr_method_call                  go to state 480
    func_addr_expr                    go to state 481
    expr_field                        go to state 482
    expr_call                         go to state 483
    expr                              go to state 906
    expr_generator                    go to state 485
    expr_mtag                         go to state 486
    basic_type_declaration            go to state 487
    make_decl                         go to state 488
    make_struct_decl                  go to state 489
    make_tuple_call                   go to state 490
    make_dim_decl                     go to state 491
    make_table_decl                   go to state 492
    array_comprehension               go to state 493


State 1430

  309 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 309 (tuple_expansion)


State 1431

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1475
    type_declaration_no_options_no_dim  go to state 275


State 1432

  311 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 545
    ":="  shift, and go to state 546
    '='   shift, and go to state 547

    copy_or_move_or_clone  go to state 1476


State 1433

  514 optional_constant: "const" .

    $default  reduce using rule 514 (optional_constant)


State 1434

  526 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant . $@38 function_declaration_header SEMICOLON

    $default  reduce using rule 525 ($@38)

    $@38  go to state 1477


State 1435

  528 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "const"  shift, and go to state 1433

    $default  reduce using rule 513 (optional_constant)

    optional_constant  go to state 1478


State 1436

  520 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 684
    "name"  shift, and go to state 685

    variable_declaration         go to state 1479
    variable_name_with_pos_list  go to state 687


State 1437

  792 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 600
    "name"  shift, and go to state 978

    make_struct_fields  go to state 1480


State 1438

  783 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  784                   | make_struct_fields . ',' "name" ":=" expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  794 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 761

    $default  reduce using rule 794 (make_struct_dim_decl)


State 1439

  793 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  795 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1481

    $default  reduce using rule 845 (optional_comma)

    optional_comma  go to state 1482


State 1440

  796 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 796 (optional_make_struct_dim_decl)


State 1441

  802 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1483


State 1442

  805 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1484


State 1443

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1485


State 1444

  821 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 600
    "name"  shift, and go to state 978
    '('     shift, and go to state 1437

    $default  reduce using rule 797 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1438
    make_struct_dim_list           go to state 1439
    make_struct_dim_decl           go to state 1440
    optional_make_struct_dim_decl  go to state 1486


State 1445

  824 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 600
    "name"  shift, and go to state 978
    '('     shift, and go to state 1437

    $default  reduce using rule 797 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1438
    make_struct_dim_list           go to state 1439
    make_struct_dim_decl           go to state 1440
    optional_make_struct_dim_decl  go to state 1487


State 1446

  783 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  784                   | make_struct_fields . ',' "name" ":=" expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  790 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 761

    $default  reduce using rule 790 (make_variant_dim)


State 1447

  827 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1488


State 1448

  831 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list ')' .

    $default  reduce using rule 831 (make_dim_decl)


State 1449

  842 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 842 (make_table_decl)


State 1450

  835 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1489


State 1451

  817 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1490


State 1452

  808 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1491


State 1453

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  847 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ';'    shift, and go to state 1492

    $default  reduce using rule 843 (array_comprehension_where)

    array_comprehension_where  go to state 1493


State 1454

  848 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1494
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1455

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  788 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 788 (make_struct_fields)


State 1456

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  787 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 787 (make_struct_fields)


State 1457

  388 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name .

    $default  reduce using rule 388 (func_addr_expr)


State 1458

  849 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1492

    $default  reduce using rule 843 (array_comprehension_where)

    array_comprehension_where  go to state 1495


State 1459

  334 block_or_simple_block: "=>" "<-" expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 334 (block_or_simple_block)


State 1460

  475 expr: expr '?' "as" "type" '<' $@35 type_declaration '>' $@36 .

    $default  reduce using rule 475 (expr)


State 1461

   76 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 76 (expression_else_one_liner)


State 1462

   80 expression_if_one_liner: expression_break .

    $default  reduce using rule 80 (expression_if_one_liner)


State 1463

   81 expression_if_one_liner: expression_continue .

    $default  reduce using rule 81 (expression_if_one_liner)


State 1464

   78 expression_if_one_liner: expression_return .

    $default  reduce using rule 78 (expression_if_one_liner)


State 1465

   79 expression_if_one_liner: expression_yield .

    $default  reduce using rule 79 (expression_if_one_liner)


State 1466

   77 expression_if_one_liner: expr .
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 77 (expression_if_one_liner)


State 1467

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON .

    $default  reduce using rule 93 (expression_if_then_else_oneliner)


State 1468

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block . expression_else

    "else"         shift, and go to state 1496
    "elif"         shift, and go to state 1497
    "static_elif"  shift, and go to state 1498

    $default  reduce using rule 70 (expression_else)

    elif_or_static_elif  go to state 1499
    expression_else      go to state 1500


State 1469

   88 expression_if_block: $@3 . '{' expressions $@4 '}' expression_block_finally

    '{'  shift, and go to state 1501


State 1470

   90 expression_if_block: $@5 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 869
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 870
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 874
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 879
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder           go to state 468
    expr_reader              go to state 469
    expression_if_one_liner  go to state 1502
    expr_call_pipe           go to state 470
    name_in_namespace        go to state 471
    expr_new                 go to state 472
    expression_break         go to state 1462
    expression_continue      go to state 1463
    expression_return        go to state 1464
    expression_yield         go to state 1465
    expr_cast                go to state 473
    expr_type_decl           go to state 474
    expr_type_info           go to state 475
    block_or_lambda          go to state 476
    expr_full_block          go to state 477
    expr_numeric_const       go to state 478
    expr_named_call          go to state 479
    expr_method_call         go to state 480
    func_addr_expr           go to state 481
    expr_field               go to state 482
    expr_call                go to state 483
    expr                     go to state 1466
    expr_generator           go to state 485
    expr_mtag                go to state 486
    basic_type_declaration   go to state 487
    make_decl                go to state 488
    make_struct_decl         go to state 489
    make_tuple_call          go to state 490
    make_dim_decl            go to state 491
    make_table_decl          go to state 492
    array_comprehension      go to state 493


State 1471

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" expr_list ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1503


State 1472

   98 expression_while_loop: $@8 "while" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 98 (expression_while_loop)


State 1473

  100 expression_with: $@9 "with" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 100 (expression_with)


State 1474

  245 expression_block_finally: "finally" $@11 '{' expressions $@12 . '}'

    '}'  shift, and go to state 1504


State 1475

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  706 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  707                                   | type_declaration_no_options . "explicit"
  708                                   | type_declaration_no_options . "const"
  709                                   | type_declaration_no_options . '-' "const"
  710                                   | type_declaration_no_options . '&'
  711                                   | type_declaration_no_options . '-' '&'
  712                                   | type_declaration_no_options . '#'
  713                                   | type_declaration_no_options . "implicit"
  714                                   | type_declaration_no_options . '-' '#'
  715                                   | type_declaration_no_options . "==" "const"
  716                                   | type_declaration_no_options . "==" '&'
  717                                   | type_declaration_no_options . '?'
  721                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "<-"        shift, and go to state 545
    "??"        shift, and go to state 370
    ":="        shift, and go to state 546
    '='         shift, and go to state 547
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    copy_or_move_or_clone  go to state 1505


State 1476

  311 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1506
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1477

  526 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 . function_declaration_header SEMICOLON

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 1507


State 1478

  528 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@39 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 527 ($@39)

    $@39  go to state 1508


State 1479

  520 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 520 (structure_variable_declaration)


State 1480

  783 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  784                   | make_struct_fields . ',' "name" ":=" expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  792 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 761
    ')'  shift, and go to state 1509


State 1481

  793 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  846 optional_comma: ',' .

    '('  shift, and go to state 1510

    $default  reduce using rule 846 (optional_comma)


State 1482

  795 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 795 (make_struct_dim_decl)


State 1483

  802 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 802 (make_struct_decl)


State 1484

  805 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 805 (make_struct_decl)


State 1485

  329 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 329 (expr_type_info)


State 1486

  821 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1511


State 1487

  824 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1512


State 1488

  827 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim ')' .

    $default  reduce using rule 827 (make_dim_decl)


State 1489

  835 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')' .

    $default  reduce using rule 835 (make_dim_decl)


State 1490

  817 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 817 (make_tuple_call)


State 1491

  808 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 808 (make_struct_decl)


State 1492

  844 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1513


State 1493

  847 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1514


State 1494

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  848 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ';'    shift, and go to state 1492

    $default  reduce using rule 843 (array_comprehension_where)

    array_comprehension_where  go to state 1515


State 1495

  849 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1516


State 1496

   71 expression_else: "else" . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1517


State 1497

   64 elif_or_static_elif: "elif" .

    $default  reduce using rule 64 (elif_or_static_elif)


State 1498

   65 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 65 (elif_or_static_elif)


State 1499

   72 expression_else: elif_or_static_elif . '(' expr ')' optional_emit_semis expression_block expression_else

    '('  shift, and go to state 1518


State 1500

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else .

    $default  reduce using rule 92 (expression_if_then_else)


State 1501

   88 expression_if_block: $@3 '{' . expressions $@4 '}' expression_block_finally

    $default  reduce using rule 269 (expressions)

    expressions  go to state 1519


State 1502

   90 expression_if_block: $@5 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1520


State 1503

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis . expression_block

    $default  reduce using rule 246 ($@13)

    expression_block  go to state 1521
    $@13              go to state 396


State 1504

  245 expression_block_finally: "finally" $@11 '{' expressions $@12 '}' .

    $default  reduce using rule 245 (expression_block_finally)


State 1505

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1522
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1506

  311 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . SEMICOLON
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 615
    "as"                   shift, and go to state 616
    "<<"                   shift, and go to state 617
    ">>"                   shift, and go to state 618
    "++"                   shift, and go to state 619
    "--"                   shift, and go to state 620
    "<="                   shift, and go to state 621
    ">="                   shift, and go to state 622
    "=="                   shift, and go to state 623
    "!="                   shift, and go to state 624
    "->"                   shift, and go to state 625
    "??"                   shift, and go to state 626
    "?."                   shift, and go to state 627
    "?["                   shift, and go to state 628
    "<|"                   shift, and go to state 629
    "|>"                   shift, and go to state 630
    "<<<"                  shift, and go to state 631
    ">>>"                  shift, and go to state 632
    "&&"                   shift, and go to state 633
    "||"                   shift, and go to state 634
    "^^"                   shift, and go to state 635
    ".."                   shift, and go to state 636
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 637
    '|'                    shift, and go to state 638
    '^'                    shift, and go to state 639
    '&'                    shift, and go to state 640
    '<'                    shift, and go to state 641
    '>'                    shift, and go to state 642
    '-'                    shift, and go to state 643
    '+'                    shift, and go to state 644
    '*'                    shift, and go to state 645
    '/'                    shift, and go to state 646
    '%'                    shift, and go to state 647
    '.'                    shift, and go to state 648
    '['                    shift, and go to state 649
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1523


State 1507

  526 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1524


State 1508

  528 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 1525


State 1509

  792 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 792 (make_struct_dim_list)


State 1510

  793 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 600
    "name"  shift, and go to state 978

    make_struct_fields  go to state 1526


State 1511

  821 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 821 (make_dim_decl)


State 1512

  824 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 824 (make_dim_decl)


State 1513

  844 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1527
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1514

  847 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 847 (array_comprehension)


State 1515

  848 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1528


State 1516

  849 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 849 (array_comprehension)


State 1517

   71 expression_else: "else" optional_emit_semis . expression_block

    $default  reduce using rule 246 ($@13)

    expression_block  go to state 1529
    $@13              go to state 396


State 1518

   72 expression_else: elif_or_static_elif '(' . expr ')' optional_emit_semis expression_block expression_else

    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "null"                            shift, and go to state 427
    "table"                           shift, and go to state 428
    "deref"                           shift, and go to state 429
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "addr"                            shift, and go to state 432
    "reinterpret"                     shift, and go to state 433
    "unsafe"                          shift, and go to state 434
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    '{'                               shift, and go to state 467

    string_builder          go to state 468
    expr_reader             go to state 469
    expr_call_pipe          go to state 470
    name_in_namespace       go to state 471
    expr_new                go to state 472
    expr_cast               go to state 473
    expr_type_decl          go to state 474
    expr_type_info          go to state 475
    block_or_lambda         go to state 476
    expr_full_block         go to state 477
    expr_numeric_const      go to state 478
    expr_named_call         go to state 479
    expr_method_call        go to state 480
    func_addr_expr          go to state 481
    expr_field              go to state 482
    expr_call               go to state 483
    expr                    go to state 1530
    expr_generator          go to state 485
    expr_mtag               go to state 486
    basic_type_declaration  go to state 487
    make_decl               go to state 488
    make_struct_decl        go to state 489
    make_tuple_call         go to state 490
    make_dim_decl           go to state 491
    make_table_decl         go to state 492
    array_comprehension     go to state 493


State 1519

   88 expression_if_block: $@3 '{' expressions . $@4 '}' expression_block_finally
  270 expressions: expressions . expression_any
  271            | expressions . error

    error                             shift, and go to state 868
    "struct"                          shift, and go to state 419
    "class"                           shift, and go to state 420
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 421
    "false"                           shift, and go to state 422
    "new"                             shift, and go to state 423
    "typeinfo"                        shift, and go to state 424
    "type"                            shift, and go to state 425
    "array"                           shift, and go to state 426
    "return"                          shift, and go to state 869
    "null"                            shift, and go to state 427
    "break"                           shift, and go to state 870
    "try"                             shift, and go to state 871
    "table"                           shift, and go to state 428
    "delete"                          shift, and go to state 872
    "deref"                           shift, and go to state 429
    "assume"                          shift, and go to state 873
    "cast"                            shift, and go to state 430
    "upcast"                          shift, and go to state 431
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 432
    "continue"                        shift, and go to state 874
    "pass"                            shift, and go to state 875
    "reinterpret"                     shift, and go to state 433
    "label"                           shift, and go to state 876
    "goto"                            shift, and go to state 877
    "unsafe"                          shift, and go to state 878
    "fixed_array"                     shift, and go to state 435
    "default"                         shift, and go to state 436
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 437
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 438
    "variant"                         shift, and go to state 439
    "generator"                       shift, and go to state 440
    "yield"                           shift, and go to state 879
    "++"                              shift, and go to state 441
    "--"                              shift, and go to state 442
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 443
    "$i"                              shift, and go to state 444
    "$v"                              shift, and go to state 445
    "$b"                              shift, and go to state 446
    "$a"                              shift, and go to state 447
    "$c"                              shift, and go to state 448
    "..."                             shift, and go to state 449
    "integer constant"                shift, and go to state 450
    "long integer constant"           shift, and go to state 451
    "unsigned integer constant"       shift, and go to state 452
    "unsigned long integer constant"  shift, and go to state 453
    "unsigned int8 constant"          shift, and go to state 454
    "floating point constant"         shift, and go to state 455
    "double constant"                 shift, and go to state 456
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 457
    '-'                               shift, and go to state 458
    '+'                               shift, and go to state 459
    '*'                               shift, and go to state 460
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 461
    '!'                               shift, and go to state 462
    '['                               shift, and go to state 463
    '('                               shift, and go to state 464
    '$'                               shift, and go to state 465
    '@'                               shift, and go to state 466
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 467

    "while"      reduce using rule 97 ($@8)
    "if"         reduce using rule 91 ($@6)
    "static_if"  reduce using rule 91 ($@6)
    "for"        reduce using rule 94 ($@7)
    "with"       reduce using rule 99 ($@9)
    '}'          reduce using rule 87 ($@4)

    SEMICOLON                         go to state 880
    string_builder                    go to state 468
    expr_reader                       go to state 469
    expression_label                  go to state 881
    expression_goto                   go to state 882
    expression_if_one_liner           go to state 883
    $@4                               go to state 1531
    expression_if_then_else           go to state 884
    $@6                               go to state 885
    expression_if_then_else_oneliner  go to state 886
    expression_for_loop               go to state 887
    $@7                               go to state 888
    expression_unsafe                 go to state 889
    expression_while_loop             go to state 890
    $@8                               go to state 891
    expression_with                   go to state 892
    $@9                               go to state 893
    expression_with_alias             go to state 894
    expr_call_pipe                    go to state 470
    expression_any                    go to state 896
    name_in_namespace                 go to state 471
    expression_delete                 go to state 897
    expr_new                          go to state 472
    expression_break                  go to state 898
    expression_continue               go to state 899
    expression_return                 go to state 900
    expression_yield                  go to state 901
    expression_try_catch              go to state 902
    kwd_let                           go to state 903
    expression_let                    go to state 904
    expr_cast                         go to state 473
    expr_type_decl                    go to state 474
    expr_type_info                    go to state 475
    block_or_lambda                   go to state 476
    expr_full_block                   go to state 477
    expr_numeric_const                go to state 478
    expr_assign                       go to state 905
    expr_named_call                   go to state 479
    expr_method_call                  go to state 480
    func_addr_expr                    go to state 481
    expr_field                        go to state 482
    expr_call                         go to state 483
    expr                              go to state 906
    expr_generator                    go to state 485
    expr_mtag                         go to state 486
    basic_type_declaration            go to state 487
    make_decl                         go to state 488
    make_struct_decl                  go to state 489
    make_tuple_call                   go to state 490
    make_dim_decl                     go to state 491
    make_table_decl                   go to state 492
    array_comprehension               go to state 493


State 1520

   90 expression_if_block: $@5 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 90 (expression_if_block)


State 1521

   95 expression_for_loop: $@7 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block .

    $default  reduce using rule 95 (expression_for_loop)


State 1522

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 615
    "as"                   shift, and go to state 616
    "<<"                   shift, and go to state 617
    ">>"                   shift, and go to state 618
    "++"                   shift, and go to state 619
    "--"                   shift, and go to state 620
    "<="                   shift, and go to state 621
    ">="                   shift, and go to state 622
    "=="                   shift, and go to state 623
    "!="                   shift, and go to state 624
    "->"                   shift, and go to state 625
    "??"                   shift, and go to state 626
    "?."                   shift, and go to state 627
    "?["                   shift, and go to state 628
    "<|"                   shift, and go to state 629
    "|>"                   shift, and go to state 630
    "<<<"                  shift, and go to state 631
    ">>>"                  shift, and go to state 632
    "&&"                   shift, and go to state 633
    "||"                   shift, and go to state 634
    "^^"                   shift, and go to state 635
    ".."                   shift, and go to state 636
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 637
    '|'                    shift, and go to state 638
    '^'                    shift, and go to state 639
    '&'                    shift, and go to state 640
    '<'                    shift, and go to state 641
    '>'                    shift, and go to state 642
    '-'                    shift, and go to state 643
    '+'                    shift, and go to state 644
    '*'                    shift, and go to state 645
    '/'                    shift, and go to state 646
    '%'                    shift, and go to state 647
    '.'                    shift, and go to state 648
    '['                    shift, and go to state 649
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1532


State 1523

  311 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 311 (tuple_expansion_variable_declaration)


State 1524

  526 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON .

    $default  reduce using rule 526 (struct_variable_declaration_list)


State 1525

  528 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1533


State 1526

  783 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  784                   | make_struct_fields . ',' "name" ":=" expr
  787                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  788                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  793 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 761
    ')'  shift, and go to state 1534


State 1527

  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'
  844 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649

    $default  reduce using rule 844 (array_comprehension_where)


State 1528

  848 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 848 (array_comprehension)


State 1529

   71 expression_else: "else" optional_emit_semis expression_block .

    $default  reduce using rule 71 (expression_else)


State 1530

   72 expression_else: elif_or_static_elif '(' expr . ')' optional_emit_semis expression_block expression_else
  378 expr_method_call: expr . "->" "name" '(' ')'
  379                 | expr . "->" "name" '(' expr_list ')'
  389 expr_field: expr . '.' "name"
  390           | expr . '.' '.' "name"
  391           | expr . '.' "name" '(' ')'
  392           | expr . '.' "name" '(' expr_list ')'
  393           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  394           | expr . '.' basic_type_declaration '(' ')'
  395           | expr . '.' basic_type_declaration '(' expr_list ')'
  398           | expr . '.' $@29 error $@30
  420 expr: expr . "<<" expr
  421     | expr . ">>" expr
  422     | expr . "<<<" expr
  423     | expr . ">>>" expr
  424     | expr . '+' expr
  425     | expr . '-' expr
  426     | expr . '*' expr
  427     | expr . '/' expr
  428     | expr . '%' expr
  429     | expr . '<' expr
  430     | expr . '>' expr
  431     | expr . "==" expr
  432     | expr . "!=" expr
  433     | expr . "<=" expr
  434     | expr . ">=" expr
  435     | expr . '&' expr
  436     | expr . '|' expr
  437     | expr . '^' expr
  438     | expr . "&&" expr
  439     | expr . "||" expr
  440     | expr . "^^" expr
  441     | expr . ".." expr
  444     | expr . "++"
  445     | expr . "--"
  448     | expr . '[' expr ']'
  449     | expr . '.' '[' expr ']'
  450     | expr . "?[" expr ']'
  451     | expr . '.' "?[" expr ']'
  452     | expr . "?." "name"
  453     | expr . '.' "?." "name"
  460     | expr . "??" expr
  461     | expr . '?' expr ':' expr
  464     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  465     | expr . "is" basic_type_declaration
  466     | expr . "is" "name"
  467     | expr . "as" "name"
  470     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  471     | expr . "as" basic_type_declaration
  472     | expr . '?' "as" "name"
  475     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  476     | expr . '?' "as" basic_type_declaration
  484     | expr . "<|" expr
  485     | expr . "|>" expr
  486     | expr . "|>" basic_type_declaration
  500 expr_mtag: expr . '.' "$f" '(' expr ')'
  501          | expr . "?." "$f" '(' expr ')'
  502          | expr . '.' '.' "$f" '(' expr ')'
  503          | expr . '.' "?." "$f" '(' expr ')'
  504          | expr . "as" "$f" '(' expr ')'
  505          | expr . '?' "as" "$f" '(' expr ')'
  506          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 615
    "as"   shift, and go to state 616
    "<<"   shift, and go to state 617
    ">>"   shift, and go to state 618
    "++"   shift, and go to state 619
    "--"   shift, and go to state 620
    "<="   shift, and go to state 621
    ">="   shift, and go to state 622
    "=="   shift, and go to state 623
    "!="   shift, and go to state 624
    "->"   shift, and go to state 625
    "??"   shift, and go to state 626
    "?."   shift, and go to state 627
    "?["   shift, and go to state 628
    "<|"   shift, and go to state 629
    "|>"   shift, and go to state 630
    "<<<"  shift, and go to state 631
    ">>>"  shift, and go to state 632
    "&&"   shift, and go to state 633
    "||"   shift, and go to state 634
    "^^"   shift, and go to state 635
    ".."   shift, and go to state 636
    '?'    shift, and go to state 637
    '|'    shift, and go to state 638
    '^'    shift, and go to state 639
    '&'    shift, and go to state 640
    '<'    shift, and go to state 641
    '>'    shift, and go to state 642
    '-'    shift, and go to state 643
    '+'    shift, and go to state 644
    '*'    shift, and go to state 645
    '/'    shift, and go to state 646
    '%'    shift, and go to state 647
    '.'    shift, and go to state 648
    '['    shift, and go to state 649
    ')'    shift, and go to state 1535


State 1531

   88 expression_if_block: $@3 '{' expressions $@4 . '}' expression_block_finally

    '}'  shift, and go to state 1536


State 1532

  310 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 310 (tuple_expansion_variable_declaration)


State 1533

  528 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 246 ($@13)

    expression_block  go to state 1537
    $@13              go to state 396


State 1534

  793 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 793 (make_struct_dim_list)


State 1535

   72 expression_else: elif_or_static_elif '(' expr ')' . optional_emit_semis expression_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1538


State 1536

   88 expression_if_block: $@3 '{' expressions $@4 '}' . expression_block_finally

    "finally"  shift, and go to state 1213

    $default  reduce using rule 242 (expression_block_finally)

    expression_block_finally  go to state 1539


State 1537

  528 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 528 (struct_variable_declaration_list)


State 1538

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis . expression_block expression_else

    $default  reduce using rule 246 ($@13)

    expression_block  go to state 1540
    $@13              go to state 396


State 1539

   88 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally .

    $default  reduce using rule 88 (expression_if_block)


State 1540

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block . expression_else

    "else"         shift, and go to state 1496
    "elif"         shift, and go to state 1497
    "static_elif"  shift, and go to state 1498

    $default  reduce using rule 70 (expression_else)

    elif_or_static_elif  go to state 1499
    expression_else      go to state 1541


State 1541

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else .

    $default  reduce using rule 72 (expression_else)
