Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


State 1446 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration SEMICOLON
    9        | program options_declaration SEMICOLON
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program SEMICOLON

   16 COMMA: ','
   17      | "new line, comma"

   18 SEMICOLON: ';'
   19          | "new line, semicolon"

   20 top_level_reader_macro: expr_reader SEMICOLON

   21 optional_public_or_private_module: %empty
   22                                  | "public"
   23                                  | "private"

   24 module_name: '$'
   25            | "name"

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   27 character_sequence: STRING_CHARACTER
   28                   | STRING_CHARACTER_ESC
   29                   | character_sequence STRING_CHARACTER
   30                   | character_sequence STRING_CHARACTER_ESC

   31 string_constant: "start of the string" character_sequence "end of the string"
   32                | "start of the string" "end of the string"

   33 format_string: %empty
   34              | format_string STRING_CHARACTER

   35 optional_format_string: %empty

   36 $@1: %empty

   37 optional_format_string: ':' $@1 format_string

   38 string_builder_body: %empty
   39                    | string_builder_body character_sequence
   40                    | string_builder_body "{" expr optional_format_string "}"

   41 string_builder: "start of the string" string_builder_body "end of the string"

   42 reader_character_sequence: STRING_CHARACTER
   43                          | reader_character_sequence STRING_CHARACTER

   44 $@2: %empty

   45 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   46 options_declaration: "options" annotation_argument_list

   47 require_declaration: "require" require_module

   48 require_module_name: "name"
   49                    | '%' require_module_name
   50                    | require_module_name '.' "name"
   51                    | require_module_name '/' "name"

   52 require_module: require_module_name is_public_module
   53               | require_module_name "as" "name" is_public_module

   54 is_public_module: %empty
   55                 | "public"

   56 expect_declaration: "expect" expect_list

   57 expect_list: expect_error
   58            | expect_list ',' expect_error

   59 expect_error: "integer constant"
   60             | "integer constant" ':' "integer constant"

   61 expression_label: "label" "integer constant" ':'

   62 expression_goto: "goto" "label" "integer constant"
   63                | "goto" expr

   64 elif_or_static_elif: "elif"
   65                    | "static_elif"

   66 emit_semis: "new line, semicolon"
   67           | emit_semis "new line, semicolon"

   68 optional_emit_semis: %empty
   69                    | emit_semis

   70 expression_else: %empty
   71                | "else" optional_emit_semis expression_block
   72                | elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else

   73 if_or_static_if: "if"
   74                | "static_if"

   75 expression_else_one_liner: %empty
   76                          | "else" expression_if_one_liner

   77 expression_if_one_liner: expr
   78                        | expression_return
   79                        | expression_yield
   80                        | expression_break
   81                        | expression_continue

   82 semis: SEMICOLON
   83      | semis SEMICOLON

   84 optional_semis: %empty
   85               | semis

   86 $@3: %empty

   87 $@4: %empty

   88 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally

   89 $@5: %empty

   90 expression_if_block: $@5 expression_if_one_liner SEMICOLON

   91 $@6: %empty

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON

   94 for_variable_name_with_pos_list: "name"
   95                                | "$i" '(' expr ')'
   96                                | "name" "aka" "name"
   97                                | '(' tuple_expansion ')'
   98                                | for_variable_name_with_pos_list ',' "name"
   99                                | for_variable_name_with_pos_list ',' "name" "aka" "name"
  100                                | for_variable_name_with_pos_list ',' '(' tuple_expansion ')'

  101 $@7: %empty

  102 expression_for_loop: $@7 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

  103 expression_unsafe: "unsafe" optional_emit_semis expression_block

  104 $@8: %empty

  105 expression_while_loop: $@8 "while" '(' expr ')' optional_emit_semis expression_block

  106 $@9: %empty

  107 expression_with: $@9 "with" '(' expr ')' optional_emit_semis expression_block

  108 expression_with_alias: "assume" "name" '=' expr

  109 annotation_argument_value: string_constant
  110                          | "name"
  111                          | "integer constant"
  112                          | "floating point constant"
  113                          | "true"
  114                          | "false"

  115 annotation_argument_value_list: annotation_argument_value
  116                               | annotation_argument_value_list ',' annotation_argument_value

  117 annotation_argument_name: "name"
  118                         | "type"
  119                         | "in"

  120 annotation_argument: annotation_argument_name '=' string_constant
  121                    | annotation_argument_name '=' "name"
  122                    | annotation_argument_name '=' "integer constant"
  123                    | annotation_argument_name '=' "floating point constant"
  124                    | annotation_argument_name '=' "true"
  125                    | annotation_argument_name '=' "false"
  126                    | annotation_argument_name
  127                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  128 annotation_argument_list: annotation_argument
  129                         | annotation_argument_list ',' annotation_argument

  130 metadata_argument_list: '@' annotation_argument optional_emit_semis
  131                       | metadata_argument_list '@' annotation_argument optional_emit_semis

  132 annotation_declaration_name: name_in_namespace
  133                            | "require"
  134                            | "private"
  135                            | "template"

  136 annotation_declaration_basic: annotation_declaration_name
  137                             | annotation_declaration_name '(' annotation_argument_list ')'

  138 annotation_declaration: annotation_declaration_basic
  139                       | '!' annotation_declaration
  140                       | annotation_declaration "&&" annotation_declaration
  141                       | annotation_declaration "||" annotation_declaration
  142                       | annotation_declaration "^^" annotation_declaration
  143                       | '(' annotation_declaration ')'
  144                       | "|>" annotation_declaration

  145 annotation_list: annotation_declaration
  146                | annotation_list ',' annotation_declaration

  147 optional_annotation_list: %empty
  148                         | '[' annotation_list ']'

  149 optional_annotation_list_with_emit_semis: %empty
  150                                         | '[' annotation_list ']' optional_emit_semis

  151 optional_function_argument_list: %empty
  152                                | '(' ')'
  153                                | '(' function_argument_list ')'

  154 optional_function_type: %empty
  155                       | ':' type_declaration

  156 function_name: "name"
  157              | "operator" '!'
  158              | "operator" '~'
  159              | "operator" "+="
  160              | "operator" "-="
  161              | "operator" "*="
  162              | "operator" "/="
  163              | "operator" "%="
  164              | "operator" "&="
  165              | "operator" "|="
  166              | "operator" "^="
  167              | "operator" "&&="
  168              | "operator" "||="
  169              | "operator" "^^="
  170              | "operator" "&&"
  171              | "operator" "||"
  172              | "operator" "^^"
  173              | "operator" '+'
  174              | "operator" '-'
  175              | "operator" '*'
  176              | "operator" '/'
  177              | "operator" '%'
  178              | "operator" '<'
  179              | "operator" '>'
  180              | "operator" ".."
  181              | "operator" "=="
  182              | "operator" "!="
  183              | "operator" "<="
  184              | "operator" ">="
  185              | "operator" '&'
  186              | "operator" '|'
  187              | "operator" '^'
  188              | "++" "operator"
  189              | "--" "operator"
  190              | "operator" "++"
  191              | "operator" "--"
  192              | "operator" "<<"
  193              | "operator" ">>"
  194              | "operator" "<<="
  195              | "operator" ">>="
  196              | "operator" "<<<"
  197              | "operator" ">>>"
  198              | "operator" "<<<="
  199              | "operator" ">>>="
  200              | "operator" '[' ']'
  201              | "operator" "?[" ']'
  202              | "operator" '.'
  203              | "operator" "?."
  204              | "operator" '.' "name"
  205              | "operator" '.' "name" ":="
  206              | "operator" "?." "name"
  207              | "operator" ":="
  208              | "operator" "delete"
  209              | "operator" "??"
  210              | "operator" "is"
  211              | "operator" "as"
  212              | "operator" "is" "name"
  213              | "operator" "as" "name"
  214              | "operator" '?' "as"
  215              | "operator" '?' "as" "name"
  216              | "bool"
  217              | "string"
  218              | "int"
  219              | "int2"
  220              | "int3"
  221              | "int4"
  222              | "uint"
  223              | "uint2"
  224              | "uint3"
  225              | "uint4"
  226              | "float"
  227              | "float2"
  228              | "float3"
  229              | "float4"
  230              | "range"
  231              | "urange"
  232              | "range64"
  233              | "urange64"
  234              | "int64"
  235              | "uint64"
  236              | "double"
  237              | "int8"
  238              | "uint8"
  239              | "int16"
  240              | "uint16"

  241 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration

  242 optional_public_or_private_function: %empty
  243                                    | "private"
  244                                    | "public"

  245 function_declaration_header: function_name optional_function_argument_list optional_function_type

  246 $@10: %empty

  247 function_declaration: optional_public_or_private_function $@10 function_declaration_header optional_emit_semis expression_block

  248 expression_block_finally: %empty

  249 $@11: %empty

  250 $@12: %empty

  251 expression_block_finally: "finally" $@11 '{' expressions $@12 '}'

  252 $@13: %empty

  253 $@14: %empty

  254 expression_block: $@13 '{' expressions $@14 '}' expression_block_finally

  255 expr_call_pipe: expr_call expr_full_block_assumed_piped

  256 expression_any: SEMICOLON
  257               | expr_assign SEMICOLON
  258               | expression_delete SEMICOLON
  259               | expression_let
  260               | expression_while_loop
  261               | expression_unsafe
  262               | expression_with
  263               | expression_with_alias SEMICOLON
  264               | expression_for_loop
  265               | expression_break SEMICOLON
  266               | expression_continue SEMICOLON
  267               | expression_return SEMICOLON
  268               | expression_yield SEMICOLON
  269               | expression_if_then_else
  270               | expression_if_then_else_oneliner
  271               | expression_try_catch
  272               | expression_label SEMICOLON
  273               | expression_goto SEMICOLON
  274               | "pass" SEMICOLON

  275 expressions: %empty
  276            | expressions expression_any
  277            | expressions error

  278 optional_expr_list: %empty
  279                   | expr_list optional_comma

  280 optional_expr_map_tuple_list: %empty
  281                             | expr_map_tuple_list optional_comma

  282 type_declaration_no_options_list: type_declaration
  283                                 | type_declaration_no_options_list c_or_s type_declaration

  284 name_in_namespace: "name"
  285                  | "name" "::" "name"
  286                  | "::" "name"

  287 expression_delete: "delete" expr
  288                  | "delete" "explicit" expr

  289 $@15: %empty

  290 $@16: %empty

  291 new_type_declaration: '<' $@15 type_declaration '>' $@16
  292                     | structure_type_declaration

  293 expr_new: "new" new_type_declaration
  294         | "new" new_type_declaration '(' use_initializer ')'
  295         | "new" new_type_declaration '(' expr_list ')'
  296         | "new" new_type_declaration '(' make_struct_single ')'
  297         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  298         | "new" make_decl

  299 expression_break: "break"

  300 expression_continue: "continue"

  301 expression_return: "return"
  302                  | "return" expr
  303                  | "return" "<-" expr

  304 expression_yield: "yield" expr
  305                 | "yield" "<-" expr

  306 expression_try_catch: "try" expression_block "recover" expression_block

  307 kwd_let_var_or_nothing: "let"
  308                       | "var"
  309                       | %empty

  310 kwd_let: "let"
  311        | "var"

  312 optional_in_scope: "inscope"
  313                  | %empty

  314 tuple_expansion: "name"
  315                | tuple_expansion ',' "name"

  316 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  317                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

  318 expression_let: kwd_let optional_in_scope let_variable_declaration
  319               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  320               | kwd_let optional_in_scope '{' variable_declaration_list '}'

  321 $@17: %empty

  322 $@18: %empty

  323 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' $@18 expr

  324 $@19: %empty

  325 $@20: %empty

  326 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' $@20 expr

  327 $@21: %empty

  328 $@22: %empty

  329 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' $@22 expr

  330 $@23: %empty

  331 $@24: %empty

  332 expr_type_decl: "type" '<' $@23 type_declaration '>' $@24

  333 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  334               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  335               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  336 expr_list: expr
  337          | expr_list ',' expr

  338 block_or_simple_block: expression_block
  339                      | "=>" expr
  340                      | "=>" "<-" expr

  341 block_or_lambda: '$'
  342                | '@'
  343                | '@' '@'

  344 capture_entry: '&' "name"
  345              | '=' "name"
  346              | "<-" "name"
  347              | ":=" "name"
  348              | "name" '(' "name" ')'

  349 capture_list: capture_entry
  350             | capture_list ',' capture_entry

  351 optional_capture_list: %empty
  352                      | "capture" '(' capture_list ')'

  353 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

  354 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block
  355                              | '{' expressions '}'

  356 expr_numeric_const: "integer constant"
  357                   | "unsigned integer constant"
  358                   | "long integer constant"
  359                   | "unsigned long integer constant"
  360                   | "unsigned int8 constant"
  361                   | "floating point constant"
  362                   | "double constant"

  363 expr_assign: expr
  364            | expr '=' expr
  365            | expr "<-" expr
  366            | expr ":=" expr
  367            | expr "&=" expr
  368            | expr "|=" expr
  369            | expr "^=" expr
  370            | expr "&&=" expr
  371            | expr "||=" expr
  372            | expr "^^=" expr
  373            | expr "+=" expr
  374            | expr "-=" expr
  375            | expr "*=" expr
  376            | expr "/=" expr
  377            | expr "%=" expr
  378            | expr "<<=" expr
  379            | expr ">>=" expr
  380            | expr "<<<=" expr
  381            | expr ">>>=" expr

  382 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  383                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  384 expr_method_call: expr "->" "name" '(' ')'
  385                 | expr "->" "name" '(' expr_list ')'

  386 func_addr_name: name_in_namespace
  387               | "$i" '(' expr ')'

  388 func_addr_expr: '@' '@' func_addr_name

  389 $@25: %empty

  390 $@26: %empty

  391 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options '>' $@26 func_addr_name

  392 $@27: %empty

  393 $@28: %empty

  394 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name

  395 expr_field: expr '.' "name"
  396           | expr '.' '.' "name"
  397           | expr '.' "name" '(' ')'
  398           | expr '.' "name" '(' expr_list ')'
  399           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr '.' basic_type_declaration '(' ')'
  401           | expr '.' basic_type_declaration '(' expr_list ')'

  402 $@29: %empty

  403 $@30: %empty

  404 expr_field: expr '.' $@29 error $@30

  405 expr_call: name_in_namespace '(' ')'
  406          | name_in_namespace '(' "uninitialized" ')'
  407          | name_in_namespace '(' make_struct_single ')'
  408          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  409          | name_in_namespace '(' expr_list ')'
  410          | basic_type_declaration '(' ')'
  411          | basic_type_declaration '(' expr_list ')'

  412 expr: "null"
  413     | name_in_namespace
  414     | expr_numeric_const
  415     | expr_reader
  416     | string_builder
  417     | make_decl
  418     | "true"
  419     | "false"
  420     | expr_field
  421     | expr_mtag
  422     | '!' expr
  423     | '~' expr
  424     | '+' expr
  425     | '-' expr
  426     | expr "<<" expr
  427     | expr ">>" expr
  428     | expr "<<<" expr
  429     | expr ">>>" expr
  430     | expr '+' expr
  431     | expr '-' expr
  432     | expr '*' expr
  433     | expr '/' expr
  434     | expr '%' expr
  435     | expr '<' expr
  436     | expr '>' expr
  437     | expr "==" expr
  438     | expr "!=" expr
  439     | expr "<=" expr
  440     | expr ">=" expr
  441     | expr '&' expr
  442     | expr '|' expr
  443     | expr '^' expr
  444     | expr "&&" expr
  445     | expr "||" expr
  446     | expr "^^" expr
  447     | expr ".." expr
  448     | "++" expr
  449     | "--" expr
  450     | expr "++"
  451     | expr "--"
  452     | '(' expr_list optional_comma ')'
  453     | '(' make_struct_single ')'
  454     | expr '[' expr ']'
  455     | expr '.' '[' expr ']'
  456     | expr "?[" expr ']'
  457     | expr '.' "?[" expr ']'
  458     | expr "?." "name"
  459     | expr '.' "?." "name"
  460     | func_addr_expr
  461     | expr_call
  462     | '*' expr
  463     | "deref" '(' expr ')'
  464     | "addr" '(' expr ')'
  465     | expr_generator
  466     | expr "??" expr
  467     | expr '?' expr ':' expr

  468 $@31: %empty

  469 $@32: %empty

  470 expr: expr "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr "is" basic_type_declaration
  472     | expr "is" "name"
  473     | expr "as" "name"

  474 $@33: %empty

  475 $@34: %empty

  476 expr: expr "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr "as" basic_type_declaration
  478     | expr '?' "as" "name"

  479 $@35: %empty

  480 $@36: %empty

  481 expr: expr '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr '?' "as" basic_type_declaration
  483     | expr_type_info
  484     | expr_type_decl
  485     | expr_cast
  486     | expr_new
  487     | expr_method_call
  488     | expr_named_call
  489     | expr_full_block
  490     | expr "<|" expr
  491     | expr "|>" expr
  492     | expr "|>" basic_type_declaration
  493     | expr_call_pipe
  494     | "unsafe" '(' expr ')'

  495 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  496               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  497               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

  498 expr_mtag: "$$" '(' expr ')'
  499          | "$i" '(' expr ')'
  500          | "$v" '(' expr ')'
  501          | "$b" '(' expr ')'
  502          | "$a" '(' expr ')'
  503          | "..."
  504          | "$c" '(' expr ')' '(' ')'
  505          | "$c" '(' expr ')' '(' expr_list ')'
  506          | expr '.' "$f" '(' expr ')'
  507          | expr "?." "$f" '(' expr ')'
  508          | expr '.' '.' "$f" '(' expr ')'
  509          | expr '.' "?." "$f" '(' expr ')'
  510          | expr "as" "$f" '(' expr ')'
  511          | expr '?' "as" "$f" '(' expr ')'
  512          | expr "is" "$f" '(' expr ')'
  513          | '@' '@' "$c" '(' expr ')'

  514 optional_field_annotation: %empty
  515                          | metadata_argument_list

  516 optional_override: %empty
  517                  | "override"
  518                  | "sealed"

  519 optional_constant: %empty
  520                  | "const"

  521 optional_public_or_private_member_variable: %empty
  522                                           | "public"
  523                                           | "private"

  524 optional_static_member_variable: %empty
  525                                | "static"

  526 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  527 struct_variable_declaration_list: %empty
  528                                 | struct_variable_declaration_list "new line, semicolon"

  529 $@37: %empty

  530 struct_variable_declaration_list: struct_variable_declaration_list $@37 structure_variable_declaration SEMICOLON

  531 $@38: %empty

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON

  533 $@39: %empty

  534 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

  535 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type

  536 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type
  537                                   | "$a" '(' expr ')'

  538 function_argument_list: function_argument_declaration_no_type
  539                       | function_argument_declaration_type
  540                       | function_argument_declaration_no_type ';' function_argument_list
  541                       | function_argument_declaration_type ';' function_argument_list
  542                       | function_argument_declaration_type ',' function_argument_list

  543 tuple_type: type_declaration
  544           | "name" ':' type_declaration

  545 tuple_type_list: tuple_type
  546                | tuple_type_list c_or_s tuple_type

  547 tuple_alias_type_list: %empty
  548                      | tuple_type
  549                      | tuple_alias_type_list semis tuple_type

  550 variant_type: "name" ':' type_declaration

  551 variant_type_list: variant_type
  552                  | variant_type_list c_or_s variant_type

  553 variant_alias_type_list: %empty
  554                        | variant_type
  555                        | variant_alias_type_list semis variant_type

  556 copy_or_move: '='
  557             | "<-"

  558 variable_declaration_no_type: variable_name_with_pos_list
  559                             | variable_name_with_pos_list '&'
  560                             | variable_name_with_pos_list copy_or_move expr

  561 variable_declaration_type: variable_name_with_pos_list ':' type_declaration
  562                          | variable_name_with_pos_list ':' type_declaration copy_or_move expr

  563 variable_declaration: variable_declaration_type
  564                     | variable_declaration_no_type

  565 copy_or_move_or_clone: '='
  566                      | "<-"
  567                      | ":="

  568 optional_ref: %empty
  569             | '&'

  570 let_variable_name_with_pos_list: "name"
  571                                | "$i" '(' expr ')'
  572                                | "name" "aka" "name"
  573                                | let_variable_name_with_pos_list ',' "name"
  574                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  575 global_let_variable_name_with_pos_list: "name"
  576                                       | global_let_variable_name_with_pos_list ',' "name"

  577 variable_declaration_list: %empty
  578                          | variable_declaration_list SEMICOLON
  579                          | variable_declaration_list let_variable_declaration

  580 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  581                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  582                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  583 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  584                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  585                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  586 optional_shared: %empty
  587                | "shared"

  588 optional_public_or_private_variable: %empty
  589                                    | "private"
  590                                    | "public"

  591 global_variable_declaration_list: %empty
  592                                 | global_variable_declaration_list SEMICOLON

  593 $@40: %empty

  594 global_variable_declaration_list: global_variable_declaration_list $@40 optional_field_annotation let_variable_declaration

  595 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  596 $@41: %empty

  597 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 optional_field_annotation global_let_variable_declaration

  598 enum_expression: "name"
  599                | "name" '=' expr

  600 commas: COMMA
  601       | commas COMMA

  602 enum_list: %empty
  603          | enum_expression
  604          | enum_list commas enum_expression

  605 optional_public_or_private_alias: %empty
  606                                 | "private"
  607                                 | "public"

  608 $@42: %empty

  609 single_alias: optional_public_or_private_alias "name" $@42 '=' type_declaration

  610 alias_declaration: "typedef" single_alias SEMICOLON

  611 optional_public_or_private_enum: %empty
  612                                | "private"
  613                                | "public"

  614 enum_name: "name"

  615 optional_enum_basic_type_declaration: %empty
  616                                     | ':' enum_basic_type_declaration

  617 optional_commas: %empty
  618                | commas

  619 emit_commas: "new line, comma"
  620            | emit_commas "new line, comma"

  621 optional_emit_commas: %empty
  622                     | emit_commas

  623 $@43: %empty

  624 $@44: %empty

  625 $@45: %empty

  626 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

  627 optional_structure_parent: %empty
  628                          | ':' name_in_namespace

  629 optional_sealed: %empty
  630                | "sealed"

  631 structure_name: optional_sealed "name" optional_structure_parent

  632 class_or_struct: "class"
  633                | "struct"
  634                | "template" "class"
  635                | "template" "struct"

  636 optional_public_or_private_structure: %empty
  637                                     | "private"
  638                                     | "public"

  639 optional_struct_variable_declaration_list: ';'
  640                                          | '{' struct_variable_declaration_list '}'

  641 $@46: %empty

  642 $@47: %empty

  643 $@48: %empty

  644 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

  645 variable_name_with_pos_list: "name"
  646                            | "$i" '(' expr ')'
  647                            | "name" "aka" "name"
  648                            | variable_name_with_pos_list ',' "name"
  649                            | variable_name_with_pos_list ',' "name" "aka" "name"

  650 basic_type_declaration: "bool"
  651                       | "string"
  652                       | "int"
  653                       | "int8"
  654                       | "int16"
  655                       | "int64"
  656                       | "int2"
  657                       | "int3"
  658                       | "int4"
  659                       | "uint"
  660                       | "uint8"
  661                       | "uint16"
  662                       | "uint64"
  663                       | "uint2"
  664                       | "uint3"
  665                       | "uint4"
  666                       | "float"
  667                       | "float2"
  668                       | "float3"
  669                       | "float4"
  670                       | "void"
  671                       | "range"
  672                       | "urange"
  673                       | "range64"
  674                       | "urange64"
  675                       | "double"
  676                       | "bitfield"

  677 enum_basic_type_declaration: "int"
  678                            | "int8"
  679                            | "int16"
  680                            | "uint"
  681                            | "uint8"
  682                            | "uint16"
  683                            | "int64"
  684                            | "uint64"

  685 structure_type_declaration: name_in_namespace

  686 auto_type_declaration: "auto"
  687                      | "auto" '(' "name" ')'
  688                      | "$t" '(' expr ')'

  689 bitfield_bits: "name"
  690              | bitfield_bits ';' "name"

  691 bitfield_alias_bits: %empty
  692                    | "name"
  693                    | bitfield_alias_bits commas "name"

  694 $@49: %empty

  695 $@50: %empty

  696 bitfield_type_declaration: "bitfield" '<' $@49 bitfield_bits '>' $@50

  697 c_or_s: COMMA
  698       | SEMICOLON

  699 table_type_pair: type_declaration
  700                | type_declaration c_or_s type_declaration

  701 dim_list: '[' expr ']'
  702         | '[' ']'
  703         | dim_list '[' expr ']'
  704         | dim_list '[' ']'

  705 type_declaration_no_options: type_declaration_no_options_no_dim
  706                            | type_declaration_no_options_no_dim dim_list

  707 type_declaration_no_options_no_dim: basic_type_declaration
  708                                   | auto_type_declaration
  709                                   | bitfield_type_declaration
  710                                   | structure_type_declaration

  711 $@51: %empty

  712 $@52: %empty

  713 type_declaration_no_options_no_dim: "type" '<' $@51 type_declaration '>' $@52
  714                                   | "typedecl" '(' expr ')'
  715                                   | '$' name_in_namespace '(' optional_expr_list ')'

  716 $@53: %empty

  717 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  718                                   | type_declaration_no_options '-' '[' ']'
  719                                   | type_declaration_no_options "explicit"
  720                                   | type_declaration_no_options "const"
  721                                   | type_declaration_no_options '-' "const"
  722                                   | type_declaration_no_options '&'
  723                                   | type_declaration_no_options '-' '&'
  724                                   | type_declaration_no_options '#'
  725                                   | type_declaration_no_options "implicit"
  726                                   | type_declaration_no_options '-' '#'
  727                                   | type_declaration_no_options "==" "const"
  728                                   | type_declaration_no_options "==" '&'
  729                                   | type_declaration_no_options '?'

  730 $@54: %empty

  731 $@55: %empty

  732 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 type_declaration '>' $@55
  733                                   | type_declaration_no_options "??"

  734 $@56: %empty

  735 $@57: %empty

  736 type_declaration_no_options_no_dim: "array" '<' $@56 type_declaration '>' $@57

  737 $@58: %empty

  738 $@59: %empty

  739 type_declaration_no_options_no_dim: "table" '<' $@58 table_type_pair '>' $@59

  740 $@60: %empty

  741 $@61: %empty

  742 type_declaration_no_options_no_dim: "iterator" '<' $@60 type_declaration '>' $@61
  743                                   | "block"

  744 $@62: %empty

  745 $@63: %empty

  746 type_declaration_no_options_no_dim: "block" '<' $@62 type_declaration '>' $@63

  747 $@64: %empty

  748 $@65: %empty

  749 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list optional_function_type '>' $@65
  750                                   | "function"

  751 $@66: %empty

  752 $@67: %empty

  753 type_declaration_no_options_no_dim: "function" '<' $@66 type_declaration '>' $@67

  754 $@68: %empty

  755 $@69: %empty

  756 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list optional_function_type '>' $@69
  757                                   | "lambda"

  758 $@70: %empty

  759 $@71: %empty

  760 type_declaration_no_options_no_dim: "lambda" '<' $@70 type_declaration '>' $@71

  761 $@72: %empty

  762 $@73: %empty

  763 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list optional_function_type '>' $@73

  764 $@74: %empty

  765 $@75: %empty

  766 type_declaration_no_options_no_dim: "tuple" '<' $@74 tuple_type_list '>' $@75

  767 $@76: %empty

  768 $@77: %empty

  769 type_declaration_no_options_no_dim: "variant" '<' $@76 variant_type_list '>' $@77

  770 type_declaration: type_declaration_no_options
  771                 | type_declaration '|' type_declaration_no_options
  772                 | type_declaration '|' '#'

  773 $@78: %empty

  774 $@79: %empty

  775 $@80: %empty

  776 $@81: %empty

  777 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

  778 $@82: %empty

  779 $@83: %empty

  780 $@84: %empty

  781 $@85: %empty

  782 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

  783 $@86: %empty

  784 $@87: %empty

  785 $@88: %empty

  786 $@89: %empty

  787 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

  788 make_decl: make_struct_decl
  789          | make_dim_decl
  790          | make_table_decl
  791          | array_comprehension
  792          | make_tuple_call

  793 make_struct_fields: "name" copy_or_move expr
  794                   | "name" ":=" expr
  795                   | make_struct_fields ',' "name" copy_or_move expr
  796                   | make_struct_fields ',' "name" ":=" expr
  797                   | "$f" '(' expr ')' copy_or_move expr
  798                   | "$f" '(' expr ')' ":=" expr
  799                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  800                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  801 make_variant_dim: %empty
  802                 | make_struct_fields

  803 make_struct_single: make_struct_fields

  804 make_struct_dim_list: '(' make_struct_fields ')'
  805                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  806 make_struct_dim_decl: make_struct_fields
  807                     | make_struct_dim_list optional_comma

  808 optional_make_struct_dim_decl: make_struct_dim_decl
  809                              | %empty

  810 use_initializer: %empty
  811                | "uninitialized"

  812 $@90: %empty

  813 $@91: %empty

  814 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

  815 $@92: %empty

  816 $@93: %empty

  817 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

  818 $@94: %empty

  819 $@95: %empty

  820 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')'

  821 $@96: %empty

  822 $@97: %empty

  823 make_struct_decl: "default" '<' $@96 type_declaration_no_options '>' $@97 use_initializer

  824 make_map_tuple: expr "=>" expr
  825               | expr

  826 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  827 $@98: %empty

  828 $@99: %empty

  829 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

  830 make_dim_decl: '[' optional_expr_list ']'

  831 $@100: %empty

  832 $@101: %empty

  833 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

  834 $@102: %empty

  835 $@103: %empty

  836 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

  837 $@104: %empty

  838 $@105: %empty

  839 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim ')'
  840              | "array" '(' expr_list optional_comma ')'

  841 $@106: %empty

  842 $@107: %empty

  843 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list ')'
  844              | "fixed_array" '(' expr_list optional_comma ')'

  845 $@108: %empty

  846 $@109: %empty

  847 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')'

  848 expr_map_tuple_list: make_map_tuple
  849                    | expr_map_tuple_list ',' make_map_tuple

  850 $@110: %empty

  851 make_table_decl: '{' $@110 optional_emit_semis optional_expr_map_tuple_list '}'
  852                | "table" '(' expr_map_tuple_list optional_comma ')'
  853                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  854                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  855 array_comprehension_where: %empty
  856                          | ';' "where" expr

  857 optional_comma: %empty
  858               | ','

  859 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  860                    | '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  861                    | '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 139 157 422
    '#' (35) 724 726 772
    '$' (36) 24 341 715 717
    '%' (37) 45 49 177 434
    '&' (38) 185 344 441 559 569 722 723 728
    '(' (40) 72 92 93 95 97 100 102 105 107 127 137 143 152 153 294 295 296 297 316 317 333 334 335 348 352 382 383 384 385 387 397 398 399 400 401 405 406 407 408 409 410 411 452 453 463 464 494 495 496 498 499 500 501 502 504 505 506 507 508 509 510 511 512 513 537 571 646 687 688 714 715 717 797 798 799 800 804 805 814 817 820 826 829 833 836 839 840 843 844 847 852 853 854 859 860 861
    ')' (41) 72 92 93 95 97 100 102 105 107 127 137 143 152 153 294 295 296 297 316 317 333 334 335 348 352 382 383 384 385 387 397 398 399 400 401 405 406 407 408 409 410 411 452 453 463 464 494 495 496 498 499 500 501 502 504 505 506 507 508 509 510 511 512 513 537 571 646 687 688 714 715 717 797 798 799 800 804 805 814 817 820 826 829 833 836 839 840 843 844 847 852 853 854 859 860 861
    '*' (42) 175 432 462
    '+' (43) 173 424 430
    ',' (44) 16 58 98 99 100 116 129 146 315 337 350 383 542 573 574 576 648 649 795 796 799 800 805 849 858
    '-' (45) 174 425 431 718 721 723 726
    '.' (46) 50 202 204 205 395 396 397 398 399 400 401 404 455 457 459 506 508 509
    '/' (47) 51 176 433
    ':' (58) 37 60 61 155 316 467 544 550 561 562 580 581 583 584 616 628
    ';' (59) 18 540 541 639 690 856 859 860 861
    '<' (60) 178 291 323 326 329 332 334 335 391 394 435 470 476 481 495 496 497 696 713 717 732 736 739 742 746 749 753 756 760 763 766 769 814 817 820 823 829 833 836 839 843 847 853 854
    '=' (61) 108 120 121 122 123 124 125 127 345 364 556 565 599 609
    '>' (62) 179 291 323 326 329 332 334 335 391 394 436 470 476 481 495 496 497 696 713 717 732 736 739 742 746 749 753 756 760 763 766 769 814 817 820 823 829 833 836 839 843 847 853 854
    '?' (63) 214 215 467 478 481 482 511 729
    '@' (64) 130 131 342 343 388 391 394 513
    '[' (91) 148 150 200 382 383 399 454 455 701 702 703 704 718 830 859 860
    ']' (93) 148 150 200 201 382 383 399 454 455 456 457 701 702 703 704 718 830 859 860
    '^' (94) 187 443
    '{' (123) 88 251 254 320 355 595 626 640 777 782 787 851 861
    '|' (124) 186 442 771 772
    '}' (125) 88 251 254 320 355 595 626 640 777 782 787 851 861
    '~' (126) 158 423
    error (256) 277 404
    "lexer error" (258)
    "capture" (259) 352
    "struct" (260) 633 635 814 833
    "class" (261) 632 634 817
    "let" (262) 307 310
    "def" (263) 241 532 534
    "while" (264) 105
    "if" (265) 73 93
    "static_if" (266) 74
    "else" (267) 71 76
    "for" (268) 102 859 860 861
    "recover" (269) 306
    "true" (270) 113 124 418
    "false" (271) 114 125 419
    "new" (272) 293 294 295 296 297 298
    "typeinfo" (273) 333 334 335
    "type" (274) 118 332 470 476 481 713
    "in" (275) 102 119 859 860 861
    "is" (276) 210 212 470 471 472 512
    "as" (277) 53 211 213 214 215 473 476 477 478 481 482 510 511
    "elif" (278) 64
    "static_elif" (279) 65
    "array" (280) 736 833 836 839 840 843
    "return" (281) 301 302 303
    "null" (282) 412
    "break" (283) 299
    "try" (284) 306
    "options" (285) 46
    "table" (286) 739 852 853 854
    "expect" (287) 56
    "const" (288) 520 720 721 727
    "require" (289) 47 133
    "operator" (290) 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215
    "enum" (291) 626
    "finally" (292) 251
    "delete" (293) 208 287 288
    "deref" (294) 463
    "typedef" (295) 610
    "typedecl" (296) 714
    "with" (297) 107
    "aka" (298) 96 99 572 574 647 649
    "assume" (299) 108
    "cast" (300) 323
    "override" (301) 517
    "abstract" (302) 532
    "upcast" (303) 326
    "iterator" (304) 742 860
    "var" (305) 308 311
    "addr" (306) 464
    "continue" (307) 300
    "where" (308) 856
    "pass" (309) 274
    "reinterpret" (310) 329
    "module" (311) 26
    "public" (312) 22 55 244 522 590 607 613 638
    "label" (313) 61 62
    "goto" (314) 62 63
    "implicit" (315) 725
    "explicit" (316) 288 719
    "shared" (317) 587
    "private" (318) 23 134 243 523 589 606 612 637
    "smart_ptr" (319) 732
    "unsafe" (320) 103 494
    "inscope" (321) 312
    "static" (322) 525
    "fixed_array" (323) 844 847
    "default" (324) 823
    "uninitialized" (325) 297 406 408 811
    "bool" (326) 216 650
    "void" (327) 670
    "string" (328) 217 651
    "auto" (329) 686 687
    "int" (330) 218 652 677
    "int2" (331) 219 656
    "int3" (332) 220 657
    "int4" (333) 221 658
    "uint" (334) 222 659 680
    "bitfield" (335) 676 696 787
    "uint2" (336) 223 663
    "uint3" (337) 224 664
    "uint4" (338) 225 665
    "float" (339) 226 666
    "float2" (340) 227 667
    "float3" (341) 228 668
    "float4" (342) 229 669
    "range" (343) 230 671
    "urange" (344) 231 672
    "range64" (345) 232 673
    "urange64" (346) 233 674
    "block" (347) 743 746 749
    "int64" (348) 234 655 683
    "uint64" (349) 235 662 684
    "double" (350) 236 675
    "function" (351) 750 753 756
    "lambda" (352) 757 760 763
    "int8" (353) 237 653 678
    "uint8" (354) 238 660 681
    "int16" (355) 239 654 679
    "uint16" (356) 240 661 682
    "tuple" (357) 766 777 826 829 836
    "variant" (358) 769 782 820 839
    "generator" (359) 495 496 497
    "yield" (360) 304 305
    "sealed" (361) 518 630
    "template" (362) 135 634 635
    "+=" (363) 159 373
    "-=" (364) 160 374
    "/=" (365) 162 376
    "*=" (366) 161 375
    "%=" (367) 163 377
    "&=" (368) 164 367
    "|=" (369) 165 368
    "^=" (370) 166 369
    "<<" (371) 192 426
    ">>" (372) 193 427
    "++" (373) 188 190 448 450
    "--" (374) 189 191 449 451
    "<=" (375) 183 439
    "<<=" (376) 194 378
    ">>=" (377) 195 379
    ">=" (378) 184 440
    "==" (379) 181 437 727 728
    "!=" (380) 182 438
    "->" (381) 384 385
    "<-" (382) 303 305 340 346 365 557 566
    "??" (383) 209 466 733
    "?." (384) 203 206 458 459 507 509
    "?[" (385) 201 456 457
    "<|" (386) 490
    "|>" (387) 144 491 492
    ":=" (388) 205 207 347 366 567 794 796 798 800
    "<<<" (389) 196 428
    ">>>" (390) 197 429
    "<<<=" (391) 198 380
    ">>>=" (392) 199 381
    "=>" (393) 339 340 824
    "::" (394) 285 286
    "&&" (395) 140 170 444
    "||" (396) 141 171 445
    "^^" (397) 142 172 446
    "&&=" (398) 167 370
    "||=" (399) 168 371
    "^^=" (400) 169 372
    ".." (401) 180 447
    "$$" (402) 498
    "$i" (403) 95 387 499 571 646
    "$v" (404) 500
    "$b" (405) 501
    "$a" (406) 502 537
    "$t" (407) 688
    "$c" (408) 504 505 513
    "$f" (409) 506 507 508 509 510 511 512 797 798 799 800
    "..." (410) 503
    "integer constant" <i> (411) 59 60 61 62 111 122 356
    "long integer constant" <i64> (412) 358
    "unsigned integer constant" <ui> (413) 357
    "unsigned long integer constant" <ui64> (414) 359
    "unsigned int8 constant" <ui> (415) 360
    "floating point constant" <fd> (416) 112 123 361
    "double constant" <d> (417) 362
    "name" <s> (418) 25 48 50 51 53 94 96 98 99 108 110 117 121 156 204 205 206 212 213 215 284 285 286 314 315 334 335 344 345 346 347 348 384 385 395 396 397 398 399 458 459 472 473 478 544 550 570 572 573 574 575 576 598 599 609 614 631 645 647 648 649 687 689 690 692 693 777 782 787 793 794 795 796
    "new line, comma" (419) 17 619 620
    "new line, semicolon" (420) 19 66 67 528
    "start of the string" (421) 31 32 41
    STRING_CHARACTER <ch> (422) 27 29 34 42 43
    STRING_CHARACTER_ESC (423) 28 30
    "end of the string" (424) 31 32 41
    "{" (425) 40
    "}" (426) 40
    "end of failed eader macro" (427)
    UNARY_MINUS (428)
    UNARY_PLUS (429)
    PRE_INC (430)
    PRE_DEC (431)
    LLPIPE (432)
    POST_INC (433)
    POST_DEC (434)
    DEREF (435)


Nonterminals, with rules where they appear

    $accept (208)
        on left: 0
    program (209)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    COMMA (210)
        on left: 16 17
        on right: 600 601 697
    SEMICOLON (211)
        on left: 18 19
        on right: 8 9 15 20 82 83 90 93 256 257 258 263 265 266 267 268 272 273 274 316 317 530 532 578 580 581 582 583 584 585 592 610 698
    top_level_reader_macro (212)
        on left: 20
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 21 22 23
        on right: 26
    module_name <s> (214)
        on left: 24 25
        on right: 26
    module_declaration (215)
        on left: 26
        on right: 2
    character_sequence <s> (216)
        on left: 27 28 29 30
        on right: 29 30 31 39
    string_constant <s> (217)
        on left: 31 32
        on right: 109 120
    format_string <s> (218)
        on left: 33 34
        on right: 34 37
    optional_format_string <s> (219)
        on left: 35 37
        on right: 40
    $@1 (220)
        on left: 36
        on right: 37
    string_builder_body <pExpression> (221)
        on left: 38 39 40
        on right: 39 40 41
    string_builder <pExpression> (222)
        on left: 41
        on right: 416
    reader_character_sequence (223)
        on left: 42 43
        on right: 43 45
    expr_reader <pExpression> (224)
        on left: 45
        on right: 20 415
    $@2 (225)
        on left: 44
        on right: 45
    options_declaration (226)
        on left: 46
        on right: 9
    require_declaration (227)
        on left: 47
        on right: 8
    require_module_name <s> (228)
        on left: 48 49 50 51
        on right: 49 50 51 52 53
    require_module (229)
        on left: 52 53
        on right: 47
    is_public_module <b> (230)
        on left: 54 55
        on right: 52 53
    expect_declaration (231)
        on left: 56
        on right: 7
    expect_list (232)
        on left: 57 58
        on right: 56 58
    expect_error (233)
        on left: 59 60
        on right: 57 58
    expression_label <pExpression> (234)
        on left: 61
        on right: 272
    expression_goto <pExpression> (235)
        on left: 62 63
        on right: 273
    elif_or_static_elif <b> (236)
        on left: 64 65
        on right: 72
    emit_semis (237)
        on left: 66 67
        on right: 67 69
    optional_emit_semis (238)
        on left: 68 69
        on right: 71 72 92 102 103 105 107 130 131 150 247 353 354 497 534 644 777 782 851
    expression_else <pExpression> (239)
        on left: 70 71 72
        on right: 72 92
    if_or_static_if <b> (240)
        on left: 73 74
        on right: 92
    expression_else_one_liner <pExpression> (241)
        on left: 75 76
        on right: 93
    expression_if_one_liner <pExpression> (242)
        on left: 77 78 79 80 81
        on right: 76 90 93
    semis (243)
        on left: 82 83
        on right: 83 85 549 555
    optional_semis (244)
        on left: 84 85
        on right: 777 782
    expression_if_block <pExpression> (245)
        on left: 88 90
        on right: 92
    $@3 (246)
        on left: 86
        on right: 88
    $@4 (247)
        on left: 87
        on right: 88
    $@5 (248)
        on left: 89
        on right: 90
    expression_if_then_else <pExpression> (249)
        on left: 92
        on right: 269
    $@6 (250)
        on left: 91
        on right: 92
    expression_if_then_else_oneliner <pExpression> (251)
        on left: 93
        on right: 270
    for_variable_name_with_pos_list <pNameWithPosList> (252)
        on left: 94 95 96 97 98 99 100
        on right: 98 99 100 102 859 860 861
    expression_for_loop <pExpression> (253)
        on left: 102
        on right: 264
    $@7 (254)
        on left: 101
        on right: 102
    expression_unsafe <pExpression> (255)
        on left: 103
        on right: 261
    expression_while_loop <pExpression> (256)
        on left: 105
        on right: 260
    $@8 (257)
        on left: 104
        on right: 105
    expression_with <pExpression> (258)
        on left: 107
        on right: 262
    $@9 (259)
        on left: 106
        on right: 107
    expression_with_alias <pExpression> (260)
        on left: 108
        on right: 263
    annotation_argument_value <aa> (261)
        on left: 109 110 111 112 113 114
        on right: 115 116
    annotation_argument_value_list <aaList> (262)
        on left: 115 116
        on right: 116 127
    annotation_argument_name <s> (263)
        on left: 117 118 119
        on right: 120 121 122 123 124 125 126 127
    annotation_argument <aa> (264)
        on left: 120 121 122 123 124 125 126 127
        on right: 128 129 130 131
    annotation_argument_list <aaList> (265)
        on left: 128 129
        on right: 46 129 137
    metadata_argument_list <aaList> (266)
        on left: 130 131
        on right: 131 515
    annotation_declaration_name <s> (267)
        on left: 132 133 134 135
        on right: 136 137
    annotation_declaration_basic <fa> (268)
        on left: 136 137
        on right: 138
    annotation_declaration <fa> (269)
        on left: 138 139 140 141 142 143 144
        on right: 139 140 141 142 143 144 145 146
    annotation_list <faList> (270)
        on left: 145 146
        on right: 146 148 150
    optional_annotation_list <faList> (271)
        on left: 147 148
        on right: 353 354
    optional_annotation_list_with_emit_semis <faList> (272)
        on left: 149 150
        on right: 241 532 534 626 644
    optional_function_argument_list <pVarDeclList> (273)
        on left: 151 152 153
        on right: 245 353 354 394 749 756 763
    optional_function_type <pTypeDecl> (274)
        on left: 154 155
        on right: 245 353 354 394 749 756 763
    function_name <s> (275)
        on left: 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240
        on right: 245
    global_function_declaration (276)
        on left: 241
        on right: 6
    optional_public_or_private_function <b> (277)
        on left: 242 243 244
        on right: 247
    function_declaration_header <pFuncDecl> (278)
        on left: 245
        on right: 247 532 534
    function_declaration <pFuncDecl> (279)
        on left: 247
        on right: 241
    $@10 (280)
        on left: 246
        on right: 247
    expression_block_finally <pExpression> (281)
        on left: 248 251
        on right: 88 254
    $@11 (282)
        on left: 249
        on right: 251
    $@12 (283)
        on left: 250
        on right: 251
    expression_block <pExpression> (284)
        on left: 254
        on right: 71 72 102 103 105 107 247 306 338 354 497 534
    $@13 (285)
        on left: 252
        on right: 254
    $@14 (286)
        on left: 253
        on right: 254
    expr_call_pipe <pExpression> (287)
        on left: 255
        on right: 493
    expression_any <pExpression> (288)
        on left: 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274
        on right: 276
    expressions <pExpression> (289)
        on left: 275 276 277
        on right: 88 251 254 276 277 355
    optional_expr_list <pExpression> (290)
        on left: 278 279
        on right: 715 717 830 843
    optional_expr_map_tuple_list <pExpression> (291)
        on left: 280 281
        on right: 851 853 854
    type_declaration_no_options_list <pTypeDeclList> (292)
        on left: 282 283
        on right: 283 717
    name_in_namespace <s> (293)
        on left: 284 285 286
        on right: 45 132 333 334 335 382 383 386 405 406 407 408 409 413 628 685 715 717
    expression_delete <pExpression> (294)
        on left: 287 288
        on right: 258
    new_type_declaration <pTypeDecl> (295)
        on left: 291 292
        on right: 293 294 295 296 297
    $@15 (296)
        on left: 289
        on right: 291
    $@16 (297)
        on left: 290
        on right: 291
    expr_new <pExpression> (298)
        on left: 293 294 295 296 297 298
        on right: 486
    expression_break <pExpression> (299)
        on left: 299
        on right: 80 265
    expression_continue <pExpression> (300)
        on left: 300
        on right: 81 266
    expression_return <pExpression> (301)
        on left: 301 302 303
        on right: 78 267
    expression_yield <pExpression> (302)
        on left: 304 305
        on right: 79 268
    expression_try_catch <pExpression> (303)
        on left: 306
        on right: 271
    kwd_let_var_or_nothing <b> (304)
        on left: 307 308 309
        on right: 535 536
    kwd_let <b> (305)
        on left: 310 311
        on right: 318 319 320 595 597
    optional_in_scope <b> (306)
        on left: 312 313
        on right: 318 319 320
    tuple_expansion <pNameList> (307)
        on left: 314 315
        on right: 97 100 315 316 317
    tuple_expansion_variable_declaration <pVarDecl> (308)
        on left: 316 317
        on right: 319
    expression_let <pExpression> (309)
        on left: 318 319 320
        on right: 259
    expr_cast <pExpression> (310)
        on left: 323 326 329
        on right: 485
    $@17 (311)
        on left: 321
        on right: 323
    $@18 (312)
        on left: 322
        on right: 323
    $@19 (313)
        on left: 324
        on right: 326
    $@20 (314)
        on left: 325
        on right: 326
    $@21 (315)
        on left: 327
        on right: 329
    $@22 (316)
        on left: 328
        on right: 329
    expr_type_decl <pExpression> (317)
        on left: 332
        on right: 484
    $@23 (318)
        on left: 330
        on right: 332
    $@24 (319)
        on left: 331
        on right: 332
    expr_type_info <pExpression> (320)
        on left: 333 334 335
        on right: 483
    expr_list <pExpression> (321)
        on left: 336 337
        on right: 102 279 295 337 383 385 398 401 409 411 452 505 826 840 844 847 859 860 861
    block_or_simple_block <pExpression> (322)
        on left: 338 339 340
        on right: 353
    block_or_lambda <i> (323)
        on left: 341 342 343
        on right: 353 354
    capture_entry <pCapt> (324)
        on left: 344 345 346 347 348
        on right: 349 350
    capture_list <pCaptList> (325)
        on left: 349 350
        on right: 350 352
    optional_capture_list <pCaptList> (326)
        on left: 351 352
        on right: 353 354 495 496 497
    expr_full_block <pExpression> (327)
        on left: 353
        on right: 489
    expr_full_block_assumed_piped <pExpression> (328)
        on left: 354 355
        on right: 255
    expr_numeric_const <pExpression> (329)
        on left: 356 357 358 359 360 361 362
        on right: 414
    expr_assign <pExpression> (330)
        on left: 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381
        on right: 257
    expr_named_call <pExpression> (331)
        on left: 382 383
        on right: 488
    expr_method_call <pExpression> (332)
        on left: 384 385
        on right: 487
    func_addr_name <pExpression> (333)
        on left: 386 387
        on right: 388 391 394
    func_addr_expr <pExpression> (334)
        on left: 388 391 394
        on right: 460
    $@25 (335)
        on left: 389
        on right: 391
    $@26 (336)
        on left: 390
        on right: 391
    $@27 (337)
        on left: 392
        on right: 394
    $@28 (338)
        on left: 393
        on right: 394
    expr_field <pExpression> (339)
        on left: 395 396 397 398 399 400 401 404
        on right: 420
    $@29 (340)
        on left: 402
        on right: 404
    $@30 (341)
        on left: 403
        on right: 404
    expr_call <pExpression> (342)
        on left: 405 406 407 408 409 410 411
        on right: 255 461
    expr <pExpression> (343)
        on left: 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 470 471 472 473 476 477 478 481 482 483 484 485 486 487 488 489 490 491 492 493 494
        on right
    $@31 (344)
        on left: 468
        on right: 470
    $@32 (345)
        on left: 469
        on right: 470
    $@33 (346)
        on left: 474
        on right: 476
    $@34 (347)
        on left: 475
        on right: 476
    $@35 (348)
        on left: 479
        on right: 481
    $@36 (349)
        on left: 480
        on right: 481
    expr_generator <pExpression> (350)
        on left: 495 496 497
        on right: 465
    expr_mtag <pExpression> (351)
        on left: 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513
        on right: 421
    optional_field_annotation <aaList> (352)
        on left: 514 515
        on right: 526 535 536 594 597
    optional_override <i> (353)
        on left: 516 517 518
        on right: 526 534
    optional_constant <b> (354)
        on left: 519 520
        on right: 532 534
    optional_public_or_private_member_variable <b> (355)
        on left: 521 522 523
        on right: 526 532 534
    optional_static_member_variable <b> (356)
        on left: 524 525
        on right: 526 534
    structure_variable_declaration <pVarDecl> (357)
        on left: 526
        on right: 530
    struct_variable_declaration_list <pVarDeclList> (358)
        on left: 527 528 530 532 534
        on right: 528 530 532 534 640
    $@37 (359)
        on left: 529
        on right: 530
    $@38 (360)
        on left: 531
        on right: 532
    $@39 (361)
        on left: 533
        on right: 534
    function_argument_declaration_no_type <pVarDecl> (362)
        on left: 535
        on right: 538 540
    function_argument_declaration_type <pVarDecl> (363)
        on left: 536 537
        on right: 539 541 542
    function_argument_list <pVarDeclList> (364)
        on left: 538 539 540 541 542
        on right: 153 540 541 542
    tuple_type <pVarDecl> (365)
        on left: 543 544
        on right: 545 546 548 549
    tuple_type_list <pVarDeclList> (366)
        on left: 545 546
        on right: 546 766 829 836
    tuple_alias_type_list <pVarDeclList> (367)
        on left: 547 548 549
        on right: 549 777
    variant_type <pVarDecl> (368)
        on left: 550
        on right: 551 552 554 555
    variant_type_list <pVarDeclList> (369)
        on left: 551 552
        on right: 552 769 820 839
    variant_alias_type_list <pVarDeclList> (370)
        on left: 553 554 555
        on right: 555 782
    copy_or_move <b> (371)
        on left: 556 557
        on right: 560 562 793 795 797 799
    variable_declaration_no_type <pVarDecl> (372)
        on left: 558 559 560
        on right: 535 564
    variable_declaration_type <pVarDecl> (373)
        on left: 561 562
        on right: 536 563
    variable_declaration <pVarDecl> (374)
        on left: 563 564
        on right: 526
    copy_or_move_or_clone <i> (375)
        on left: 565 566 567
        on right: 316 317 581 582 584 585
    optional_ref <b> (376)
        on left: 568 569
        on right: 317 582 585
    let_variable_name_with_pos_list <pNameWithPosList> (377)
        on left: 570 571 572 573 574
        on right: 573 574 580 581 582
    global_let_variable_name_with_pos_list <pNameWithPosList> (378)
        on left: 575 576
        on right: 576 583 584 585
    variable_declaration_list <pVarDeclList> (379)
        on left: 577 578 579
        on right: 320 578 579
    let_variable_declaration <pVarDecl> (380)
        on left: 580 581 582
        on right: 318 579 594
    global_let_variable_declaration <pVarDecl> (381)
        on left: 583 584 585
        on right: 597
    optional_shared <b> (382)
        on left: 586 587
        on right: 26 595 597
    optional_public_or_private_variable <b> (383)
        on left: 588 589 590
        on right: 595 597
    global_variable_declaration_list <pVarDeclList> (384)
        on left: 591 592 594
        on right: 592 594 595
    $@40 (385)
        on left: 593
        on right: 594
    global_let (386)
        on left: 595 597
        on right: 5
    $@41 (387)
        on left: 596
        on right: 597
    enum_expression <pEnumPair> (388)
        on left: 598 599
        on right: 603 604
    commas (389)
        on left: 600 601
        on right: 601 604 618 693
    enum_list <pEnum> (390)
        on left: 602 603 604
        on right: 604 626
    optional_public_or_private_alias <b> (391)
        on left: 605 606 607
        on right: 609 777 782 787
    single_alias (392)
        on left: 609
        on right: 610
    $@42 (393)
        on left: 608
        on right: 609
    alias_declaration (394)
        on left: 610
        on right: 10
    optional_public_or_private_enum <b> (395)
        on left: 611 612 613
        on right: 626
    enum_name <pEnum> (396)
        on left: 614
        on right: 626
    optional_enum_basic_type_declaration <type> (397)
        on left: 615 616
        on right: 626
    optional_commas (398)
        on left: 617 618
        on right: 626 787
    emit_commas (399)
        on left: 619 620
        on right: 620 622
    optional_emit_commas (400)
        on left: 621 622
        on right: 626 787
    enum_declaration (401)
        on left: 626
        on right: 4
    $@43 (402)
        on left: 623
        on right: 626
    $@44 (403)
        on left: 624
        on right: 626
    $@45 (404)
        on left: 625
        on right: 626
    optional_structure_parent <s> (405)
        on left: 627 628
        on right: 631
    optional_sealed <b> (406)
        on left: 629 630
        on right: 631
    structure_name <pStructure> (407)
        on left: 631
        on right: 644
    class_or_struct <i> (408)
        on left: 632 633 634 635
        on right: 644
    optional_public_or_private_structure <b> (409)
        on left: 636 637 638
        on right: 644
    optional_struct_variable_declaration_list <pVarDeclList> (410)
        on left: 639 640
        on right: 644
    structure_declaration (411)
        on left: 644
        on right: 3
    $@46 (412)
        on left: 641
        on right: 644
    $@47 (413)
        on left: 642
        on right: 644
    $@48 (414)
        on left: 643
        on right: 644
    variable_name_with_pos_list <pNameWithPosList> (415)
        on left: 645 646 647 648 649
        on right: 558 559 560 561 562 648 649
    basic_type_declaration <type> (416)
        on left: 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676
        on right: 400 401 410 411 471 477 482 492 707
    enum_basic_type_declaration <type> (417)
        on left: 677 678 679 680 681 682 683 684
        on right: 616
    structure_type_declaration <pTypeDecl> (418)
        on left: 685
        on right: 292 710
    auto_type_declaration <pTypeDecl> (419)
        on left: 686 687 688
        on right: 708
    bitfield_bits <pNameList> (420)
        on left: 689 690
        on right: 690 696
    bitfield_alias_bits <pNameList> (421)
        on left: 691 692 693
        on right: 693 787
    bitfield_type_declaration <pTypeDecl> (422)
        on left: 696
        on right: 709
    $@49 (423)
        on left: 694
        on right: 696
    $@50 (424)
        on left: 695
        on right: 696
    c_or_s (425)
        on left: 697 698
        on right: 283 335 546 552 700 854
    table_type_pair <aTypePair> (426)
        on left: 699 700
        on right: 739
    dim_list <pTypeDecl> (427)
        on left: 701 702 703 704
        on right: 703 704 706
    type_declaration_no_options <pTypeDecl> (428)
        on left: 705 706
        on right: 316 323 326 329 391 470 495 496 497 580 581 583 584 718 719 720 721 722 723 724 725 726 727 728 729 733 770 771 814 817 823 833 843 847 853 854
    type_declaration_no_options_no_dim <pTypeDecl> (429)
        on left: 707 708 709 710 713 714 715 717 718 719 720 721 722 723 724 725 726 727 728 729 732 733 736 739 742 743 746 749 750 753 756 757 760 763 766 769
        on right: 705 706
    $@51 (430)
        on left: 711
        on right: 713
    $@52 (431)
        on left: 712
        on right: 713
    $@53 (432)
        on left: 716
        on right: 717
    $@54 (433)
        on left: 730
        on right: 732
    $@55 (434)
        on left: 731
        on right: 732
    $@56 (435)
        on left: 734
        on right: 736
    $@57 (436)
        on left: 735
        on right: 736
    $@58 (437)
        on left: 737
        on right: 739
    $@59 (438)
        on left: 738
        on right: 739
    $@60 (439)
        on left: 740
        on right: 742
    $@61 (440)
        on left: 741
        on right: 742
    $@62 (441)
        on left: 744
        on right: 746
    $@63 (442)
        on left: 745
        on right: 746
    $@64 (443)
        on left: 747
        on right: 749
    $@65 (444)
        on left: 748
        on right: 749
    $@66 (445)
        on left: 751
        on right: 753
    $@67 (446)
        on left: 752
        on right: 753
    $@68 (447)
        on left: 754
        on right: 756
    $@69 (448)
        on left: 755
        on right: 756
    $@70 (449)
        on left: 758
        on right: 760
    $@71 (450)
        on left: 759
        on right: 760
    $@72 (451)
        on left: 761
        on right: 763
    $@73 (452)
        on left: 762
        on right: 763
    $@74 (453)
        on left: 764
        on right: 766
    $@75 (454)
        on left: 765
        on right: 766
    $@76 (455)
        on left: 767
        on right: 769
    $@77 (456)
        on left: 768
        on right: 769
    type_declaration <pTypeDecl> (457)
        on left: 770 771 772
        on right: 155 282 283 291 332 476 481 543 544 550 561 562 609 699 700 713 732 736 742 746 753 760 771 772
    tuple_alias_declaration (458)
        on left: 777
        on right: 12
    $@78 (459)
        on left: 773
        on right: 777
    $@79 (460)
        on left: 774
        on right: 777
    $@80 (461)
        on left: 775
        on right: 777
    $@81 (462)
        on left: 776
        on right: 777
    variant_alias_declaration (463)
        on left: 782
        on right: 11
    $@82 (464)
        on left: 778
        on right: 782
    $@83 (465)
        on left: 779
        on right: 782
    $@84 (466)
        on left: 780
        on right: 782
    $@85 (467)
        on left: 781
        on right: 782
    bitfield_alias_declaration (468)
        on left: 787
        on right: 13
    $@86 (469)
        on left: 783
        on right: 787
    $@87 (470)
        on left: 784
        on right: 787
    $@88 (471)
        on left: 785
        on right: 787
    $@89 (472)
        on left: 786
        on right: 787
    make_decl <pExpression> (473)
        on left: 788 789 790 791 792
        on right: 298 417
    make_struct_fields <pMakeStruct> (474)
        on left: 793 794 795 796 797 798 799 800
        on right: 382 383 399 795 796 799 800 802 803 804 805 806
    make_variant_dim <pExpression> (475)
        on left: 801 802
        on right: 820 839
    make_struct_single <pExpression> (476)
        on left: 803
        on right: 296 297 407 408 453
    make_struct_dim_list <pExpression> (477)
        on left: 804 805
        on right: 805 807
    make_struct_dim_decl <pExpression> (478)
        on left: 806 807
        on right: 808
    optional_make_struct_dim_decl <pExpression> (479)
        on left: 808 809
        on right: 814 817 829 833 836
    use_initializer <b> (480)
        on left: 810 811
        on right: 294 814 817 820 823 829 833 836
    make_struct_decl <pExpression> (481)
        on left: 814 817 820 823
        on right: 788
    $@90 (482)
        on left: 812
        on right: 814
    $@91 (483)
        on left: 813
        on right: 814
    $@92 (484)
        on left: 815
        on right: 817
    $@93 (485)
        on left: 816
        on right: 817
    $@94 (486)
        on left: 818
        on right: 820
    $@95 (487)
        on left: 819
        on right: 820
    $@96 (488)
        on left: 821
        on right: 823
    $@97 (489)
        on left: 822
        on right: 823
    make_map_tuple <pExpression> (490)
        on left: 824 825
        on right: 848 849 861
    make_tuple_call <pExpression> (491)
        on left: 826 829
        on right: 792
    $@98 (492)
        on left: 827
        on right: 829
    $@99 (493)
        on left: 828
        on right: 829
    make_dim_decl <pExpression> (494)
        on left: 830 833 836 839 840 843 844 847
        on right: 789
    $@100 (495)
        on left: 831
        on right: 833
    $@101 (496)
        on left: 832
        on right: 833
    $@102 (497)
        on left: 834
        on right: 836
    $@103 (498)
        on left: 835
        on right: 836
    $@104 (499)
        on left: 837
        on right: 839
    $@105 (500)
        on left: 838
        on right: 839
    $@106 (501)
        on left: 841
        on right: 843
    $@107 (502)
        on left: 842
        on right: 843
    $@108 (503)
        on left: 845
        on right: 847
    $@109 (504)
        on left: 846
        on right: 847
    expr_map_tuple_list <pExpression> (505)
        on left: 848 849
        on right: 281 849 852
    make_table_decl <pExpression> (506)
        on left: 851 852 853 854
        on right: 790
    $@110 (507)
        on left: 850
        on right: 851
    array_comprehension_where <pExpression> (508)
        on left: 855 856
        on right: 859 860 861
    optional_comma <b> (509)
        on left: 857 858
        on right: 279 281 452 807 826 840 844 847 852
    array_comprehension <pExpression> (510)
        on left: 859 860 861
        on right: 791


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration SEMICOLON
    9        | program . options_declaration SEMICOLON
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . SEMICOLON

    $end                   shift, and go to state 2
    "let"                  shift, and go to state 3
    "options"              shift, and go to state 4
    "expect"               shift, and go to state 5
    "require"              shift, and go to state 6
    "typedef"              shift, and go to state 7
    "var"                  shift, and go to state 8
    "module"               shift, and go to state 9
    "bitfield"             shift, and go to state 10
    "tuple"                shift, and go to state 11
    "variant"              shift, and go to state 12
    "new line, semicolon"  shift, and go to state 13
    '%'                    shift, and go to state 14
    '['                    shift, and go to state 15
    ';'                    shift, and go to state 16

    $default  reduce using rule 149 (optional_annotation_list_with_emit_semis)

    SEMICOLON                                 go to state 17
    top_level_reader_macro                    go to state 18
    module_declaration                        go to state 19
    expr_reader                               go to state 20
    options_declaration                       go to state 21
    require_declaration                       go to state 22
    expect_declaration                        go to state 23
    optional_annotation_list_with_emit_semis  go to state 24
    global_function_declaration               go to state 25
    kwd_let                                   go to state 26
    global_let                                go to state 27
    alias_declaration                         go to state 28
    enum_declaration                          go to state 29
    structure_declaration                     go to state 30
    tuple_alias_declaration                   go to state 31
    variant_alias_declaration                 go to state 32
    bitfield_alias_declaration                go to state 33


State 2

    0 $accept: program $end .

    $default  accept


State 3

  310 kwd_let: "let" .

    $default  reduce using rule 310 (kwd_let)


State 4

   46 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 39


State 5

   56 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 40

    expect_list   go to state 41
    expect_error  go to state 42


State 6

   47 require_declaration: "require" . require_module

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 45
    require_module       go to state 46


State 7

  610 alias_declaration: "typedef" . single_alias SEMICOLON

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 605 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 49
    single_alias                      go to state 50


State 8

  311 kwd_let: "var" .

    $default  reduce using rule 311 (kwd_let)


State 9

   26 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 51
    '$'     shift, and go to state 52

    module_name  go to state 53


State 10

  787 bitfield_alias_declaration: "bitfield" . $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    $default  reduce using rule 783 ($@86)

    $@86  go to state 54


State 11

  777 tuple_alias_declaration: "tuple" . $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    $default  reduce using rule 773 ($@78)

    $@78  go to state 55


State 12

  782 variant_alias_declaration: "variant" . $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    $default  reduce using rule 778 ($@82)

    $@82  go to state 56


State 13

   19 SEMICOLON: "new line, semicolon" .

    $default  reduce using rule 19 (SEMICOLON)


State 14

   45 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 59


State 15

  150 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   18 SEMICOLON: ';' .

    $default  reduce using rule 18 (SEMICOLON)


State 17

   15 program: program SEMICOLON .

    $default  reduce using rule 15 (program)


State 18

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 19

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 20

   20 top_level_reader_macro: expr_reader . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 71


State 21

    9 program: program options_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 72


State 22

    8 program: program require_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 73


State 23

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 24

  241 global_function_declaration: optional_annotation_list_with_emit_semis . "def" function_declaration
  626 enum_declaration: optional_annotation_list_with_emit_semis . "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'
  644 structure_declaration: optional_annotation_list_with_emit_semis . $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    "def"   shift, and go to state 74
    "enum"  shift, and go to state 75

    $default  reduce using rule 641 ($@46)

    $@46  go to state 76


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  595 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  597           | kwd_let . optional_shared optional_public_or_private_variable $@41 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 586 (optional_shared)

    optional_shared  go to state 78


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 32

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 33

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 34

  118 annotation_argument_name: "type" .

    $default  reduce using rule 118 (annotation_argument_name)


State 35

  119 annotation_argument_name: "in" .

    $default  reduce using rule 119 (annotation_argument_name)


State 36

  117 annotation_argument_name: "name" .

    $default  reduce using rule 117 (annotation_argument_name)


State 37

  120 annotation_argument: annotation_argument_name . '=' string_constant
  121                    | annotation_argument_name . '=' "name"
  122                    | annotation_argument_name . '=' "integer constant"
  123                    | annotation_argument_name . '=' "floating point constant"
  124                    | annotation_argument_name . '=' "true"
  125                    | annotation_argument_name . '=' "false"
  126                    | annotation_argument_name .
  127                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 126 (annotation_argument)


State 38

  128 annotation_argument_list: annotation_argument .

    $default  reduce using rule 128 (annotation_argument_list)


State 39

   46 options_declaration: "options" annotation_argument_list .
  129 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 46 (options_declaration)


State 40

   59 expect_error: "integer constant" .
   60             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 59 (expect_error)


State 41

   56 expect_declaration: "expect" expect_list .
   58 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 56 (expect_declaration)


State 42

   57 expect_list: expect_error .

    $default  reduce using rule 57 (expect_list)


State 43

   48 require_module_name: "name" .

    $default  reduce using rule 48 (require_module_name)


State 44

   49 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 83


State 45

   50 require_module_name: require_module_name . '.' "name"
   51                    | require_module_name . '/' "name"
   52 require_module: require_module_name . is_public_module
   53               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 54 (is_public_module)

    is_public_module  go to state 88


State 46

   47 require_declaration: "require" require_module .

    $default  reduce using rule 47 (require_declaration)


State 47

  607 optional_public_or_private_alias: "public" .

    $default  reduce using rule 607 (optional_public_or_private_alias)


State 48

  606 optional_public_or_private_alias: "private" .

    $default  reduce using rule 606 (optional_public_or_private_alias)


State 49

  609 single_alias: optional_public_or_private_alias . "name" $@42 '=' type_declaration

    "name"  shift, and go to state 89


State 50

  610 alias_declaration: "typedef" single_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 90


State 51

   25 module_name: "name" .

    $default  reduce using rule 25 (module_name)


State 52

   24 module_name: '$' .

    $default  reduce using rule 24 (module_name)


State 53

   26 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 586 (optional_shared)

    optional_shared  go to state 91


State 54

  787 bitfield_alias_declaration: "bitfield" $@86 . optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 605 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 92


State 55

  777 tuple_alias_declaration: "tuple" $@78 . optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 605 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 93


State 56

  782 variant_alias_declaration: "variant" $@82 . optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 605 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 94


State 57

  286 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 95


State 58

  284 name_in_namespace: "name" .
  285                  | "name" . "::" "name"

    "::"  shift, and go to state 96

    $default  reduce using rule 284 (name_in_namespace)


State 59

   45 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 44 ($@2)

    $@2  go to state 97


State 60

  133 annotation_declaration_name: "require" .

    $default  reduce using rule 133 (annotation_declaration_name)


State 61

  134 annotation_declaration_name: "private" .

    $default  reduce using rule 134 (annotation_declaration_name)


State 62

  135 annotation_declaration_name: "template" .

    $default  reduce using rule 135 (annotation_declaration_name)


State 63

  144 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 98
    name_in_namespace             go to state 70


State 64

  139 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 99
    name_in_namespace             go to state 70


State 65

  143 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 66

  136 annotation_declaration_basic: annotation_declaration_name .
  137                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 101

    $default  reduce using rule 136 (annotation_declaration_basic)


State 67

  138 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 138 (annotation_declaration)


State 68

  140 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  141                       | annotation_declaration . "||" annotation_declaration
  142                       | annotation_declaration . "^^" annotation_declaration
  145 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 145 (annotation_list)


State 69

  146 annotation_list: annotation_list . ',' annotation_declaration
  150 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 105
    ']'  shift, and go to state 106


State 70

  132 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 132 (annotation_declaration_name)


State 71

   20 top_level_reader_macro: expr_reader SEMICOLON .

    $default  reduce using rule 20 (top_level_reader_macro)


State 72

    9 program: program options_declaration SEMICOLON .

    $default  reduce using rule 9 (program)


State 73

    8 program: program require_declaration SEMICOLON .

    $default  reduce using rule 8 (program)


State 74

  241 global_function_declaration: optional_annotation_list_with_emit_semis "def" . function_declaration

    "public"   shift, and go to state 107
    "private"  shift, and go to state 108

    $default  reduce using rule 242 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 109
    function_declaration                 go to state 110


State 75

  626 enum_declaration: optional_annotation_list_with_emit_semis "enum" . $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    $default  reduce using rule 623 ($@43)

    $@43  go to state 111


State 76

  644 structure_declaration: optional_annotation_list_with_emit_semis $@46 . class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 112
    "class"     shift, and go to state 113
    "template"  shift, and go to state 114

    class_or_struct  go to state 115


State 77

  587 optional_shared: "shared" .

    $default  reduce using rule 587 (optional_shared)


State 78

  595 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  597           | kwd_let optional_shared . optional_public_or_private_variable $@41 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 588 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 118


State 79

  120 annotation_argument: annotation_argument_name '=' . string_constant
  121                    | annotation_argument_name '=' . "name"
  122                    | annotation_argument_name '=' . "integer constant"
  123                    | annotation_argument_name '=' . "floating point constant"
  124                    | annotation_argument_name '=' . "true"
  125                    | annotation_argument_name '=' . "false"
  127                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 119
    "false"                    shift, and go to state 120
    "integer constant"         shift, and go to state 121
    "floating point constant"  shift, and go to state 122
    "name"                     shift, and go to state 123
    "start of the string"      shift, and go to state 124
    '('                        shift, and go to state 125

    string_constant  go to state 126


State 80

  129 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 127


State 81

   60 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 128


State 82

   58 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 40

    expect_error  go to state 129


State 83

   49 require_module_name: '%' require_module_name .
   50                    | require_module_name . '.' "name"
   51                    | require_module_name . '/' "name"

    '.'  shift, and go to state 87

    $default  reduce using rule 49 (require_module_name)


State 84

   53 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 130


State 85

   55 is_public_module: "public" .

    $default  reduce using rule 55 (is_public_module)


State 86

   51 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 131


State 87

   50 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 132


State 88

   52 require_module: require_module_name is_public_module .

    $default  reduce using rule 52 (require_module)


State 89

  609 single_alias: optional_public_or_private_alias "name" . $@42 '=' type_declaration

    $default  reduce using rule 608 ($@42)

    $@42  go to state 133


State 90

  610 alias_declaration: "typedef" single_alias SEMICOLON .

    $default  reduce using rule 610 (alias_declaration)


State 91

   26 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 134
    "private"  shift, and go to state 135

    $default  reduce using rule 21 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 136


State 92

  787 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias . "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    "name"  shift, and go to state 137


State 93

  777 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias . "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    "name"  shift, and go to state 138


State 94

  782 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias . "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    "name"  shift, and go to state 139


State 95

  286 name_in_namespace: "::" "name" .

    $default  reduce using rule 286 (name_in_namespace)


State 96

  285 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 140


State 97

   45 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 141

    reader_character_sequence  go to state 142


State 98

  140 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  141                       | annotation_declaration . "||" annotation_declaration
  142                       | annotation_declaration . "^^" annotation_declaration
  144                       | "|>" annotation_declaration .

    $default  reduce using rule 144 (annotation_declaration)


State 99

  139 annotation_declaration: '!' annotation_declaration .
  140                       | annotation_declaration . "&&" annotation_declaration
  141                       | annotation_declaration . "||" annotation_declaration
  142                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 139 (annotation_declaration)


State 100

  140 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  141                       | annotation_declaration . "||" annotation_declaration
  142                       | annotation_declaration . "^^" annotation_declaration
  143                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104
    ')'   shift, and go to state 143


State 101

  137 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 144


State 102

  140 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 145
    name_in_namespace             go to state 70


State 103

  141 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 146
    name_in_namespace             go to state 70


State 104

  142 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 147
    name_in_namespace             go to state 70


State 105

  146 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 148
    name_in_namespace             go to state 70


State 106

  150 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 151


State 107

  244 optional_public_or_private_function: "public" .

    $default  reduce using rule 244 (optional_public_or_private_function)


State 108

  243 optional_public_or_private_function: "private" .

    $default  reduce using rule 243 (optional_public_or_private_function)


State 109

  247 function_declaration: optional_public_or_private_function . $@10 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 246 ($@10)

    $@10  go to state 152


State 110

  241 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration .

    $default  reduce using rule 241 (global_function_declaration)


State 111

  626 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    "public"   shift, and go to state 153
    "private"  shift, and go to state 154

    $default  reduce using rule 611 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 155


State 112

  633 class_or_struct: "struct" .

    $default  reduce using rule 633 (class_or_struct)


State 113

  632 class_or_struct: "class" .

    $default  reduce using rule 632 (class_or_struct)


State 114

  634 class_or_struct: "template" . "class"
  635                | "template" . "struct"

    "struct"  shift, and go to state 156
    "class"   shift, and go to state 157


State 115

  644 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct . optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    "public"   shift, and go to state 158
    "private"  shift, and go to state 159

    $default  reduce using rule 636 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 160


State 116

  590 optional_public_or_private_variable: "public" .

    $default  reduce using rule 590 (optional_public_or_private_variable)


State 117

  589 optional_public_or_private_variable: "private" .

    $default  reduce using rule 589 (optional_public_or_private_variable)


State 118

  595 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  597           | kwd_let optional_shared optional_public_or_private_variable . $@41 optional_field_annotation global_let_variable_declaration

    '{'  shift, and go to state 161

    $default  reduce using rule 596 ($@41)

    $@41  go to state 162


State 119

  124 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 124 (annotation_argument)


State 120

  125 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 125 (annotation_argument)


State 121

  122 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 122 (annotation_argument)


State 122

  123 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 123 (annotation_argument)


State 123

  121 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 121 (annotation_argument)


State 124

   31 string_constant: "start of the string" . character_sequence "end of the string"
   32                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 165

    character_sequence  go to state 166


State 125

  127 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant                 go to state 172
    annotation_argument_value       go to state 173
    annotation_argument_value_list  go to state 174


State 126

  120 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 120 (annotation_argument)


State 127

  129 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 129 (annotation_argument_list)


State 128

   60 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 60 (expect_error)


State 129

   58 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 58 (expect_list)


State 130

   53 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 54 (is_public_module)

    is_public_module  go to state 175


State 131

   51 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 51 (require_module_name)


State 132

   50 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 50 (require_module_name)


State 133

  609 single_alias: optional_public_or_private_alias "name" $@42 . '=' type_declaration

    '='  shift, and go to state 176


State 134

   22 optional_public_or_private_module: "public" .

    $default  reduce using rule 22 (optional_public_or_private_module)


State 135

   23 optional_public_or_private_module: "private" .

    $default  reduce using rule 23 (optional_public_or_private_module)


State 136

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 26 (module_declaration)


State 137

  787 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" . optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    "new line, comma"  shift, and go to state 177

    $default  reduce using rule 621 (optional_emit_commas)

    emit_commas           go to state 178
    optional_emit_commas  go to state 179


State 138

  777 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" . optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 180


State 139

  782 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" . optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 181


State 140

  285 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 285 (name_in_namespace)


State 141

   42 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 42 (reader_character_sequence)


State 142

   43 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   45 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 182

    $default  reduce using rule 45 (expr_reader)


State 143

  143 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 143 (annotation_declaration)


State 144

  129 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  137 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 183


State 145

  140 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  140                       | annotation_declaration "&&" annotation_declaration .
  141                       | annotation_declaration . "||" annotation_declaration
  142                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 140 (annotation_declaration)


State 146

  140 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  141                       | annotation_declaration . "||" annotation_declaration
  141                       | annotation_declaration "||" annotation_declaration .
  142                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 102
    "^^"  shift, and go to state 104

    $default  reduce using rule 141 (annotation_declaration)


State 147

  140 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  141                       | annotation_declaration . "||" annotation_declaration
  142                       | annotation_declaration . "^^" annotation_declaration
  142                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 102

    $default  reduce using rule 142 (annotation_declaration)


State 148

  140 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  141                       | annotation_declaration . "||" annotation_declaration
  142                       | annotation_declaration . "^^" annotation_declaration
  146 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 146 (annotation_list)


State 149

   66 emit_semis: "new line, semicolon" .

    $default  reduce using rule 66 (emit_semis)


State 150

   67 emit_semis: emit_semis . "new line, semicolon"
   69 optional_emit_semis: emit_semis .

    "new line, semicolon"  shift, and go to state 184

    $default  reduce using rule 69 (optional_emit_semis)


State 151

  150 optional_annotation_list_with_emit_semis: '[' annotation_list ']' optional_emit_semis .

    $default  reduce using rule 150 (optional_annotation_list_with_emit_semis)


State 152

  247 function_declaration: optional_public_or_private_function $@10 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 215


State 153

  613 optional_public_or_private_enum: "public" .

    $default  reduce using rule 613 (optional_public_or_private_enum)


State 154

  612 optional_public_or_private_enum: "private" .

    $default  reduce using rule 612 (optional_public_or_private_enum)


State 155

  626 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    "name"  shift, and go to state 216

    enum_name  go to state 217


State 156

  635 class_or_struct: "template" "struct" .

    $default  reduce using rule 635 (class_or_struct)


State 157

  634 class_or_struct: "template" "class" .

    $default  reduce using rule 634 (class_or_struct)


State 158

  638 optional_public_or_private_structure: "public" .

    $default  reduce using rule 638 (optional_public_or_private_structure)


State 159

  637 optional_public_or_private_structure: "private" .

    $default  reduce using rule 637 (optional_public_or_private_structure)


State 160

  644 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure . $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    $default  reduce using rule 642 ($@47)

    $@47  go to state 218


State 161

  595 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 591 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 219


State 162

  597 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 220

    $default  reduce using rule 514 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 222


State 163

   27 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 27 (character_sequence)


State 164

   28 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 28 (character_sequence)


State 165

   32 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 32 (string_constant)


State 166

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   31 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224
    "end of the string"   shift, and go to state 225


State 167

  113 annotation_argument_value: "true" .

    $default  reduce using rule 113 (annotation_argument_value)


State 168

  114 annotation_argument_value: "false" .

    $default  reduce using rule 114 (annotation_argument_value)


State 169

  111 annotation_argument_value: "integer constant" .

    $default  reduce using rule 111 (annotation_argument_value)


State 170

  112 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 112 (annotation_argument_value)


State 171

  110 annotation_argument_value: "name" .

    $default  reduce using rule 110 (annotation_argument_value)


State 172

  109 annotation_argument_value: string_constant .

    $default  reduce using rule 109 (annotation_argument_value)


State 173

  115 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 115 (annotation_argument_value_list)


State 174

  116 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  127 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 226
    ')'  shift, and go to state 227


State 175

   53 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 53 (require_module)


State 176

  609 single_alias: optional_public_or_private_alias "name" $@42 '=' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 276


State 177

  619 emit_commas: "new line, comma" .

    $default  reduce using rule 619 (emit_commas)


State 178

  620 emit_commas: emit_commas . "new line, comma"
  622 optional_emit_commas: emit_commas .

    "new line, comma"  shift, and go to state 277

    $default  reduce using rule 622 (optional_emit_commas)


State 179

  787 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas . $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    $default  reduce using rule 784 ($@87)

    $@87  go to state 278


State 180

  777 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis . $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    $default  reduce using rule 774 ($@79)

    $@79  go to state 279


State 181

  782 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis . $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    $default  reduce using rule 779 ($@83)

    $@83  go to state 280


State 182

   43 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 43 (reader_character_sequence)


State 183

  137 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 137 (annotation_declaration_basic)


State 184

   67 emit_semis: emit_semis "new line, semicolon" .

    $default  reduce using rule 67 (emit_semis)


State 185

  157 function_name: "operator" . '!'
  158              | "operator" . '~'
  159              | "operator" . "+="
  160              | "operator" . "-="
  161              | "operator" . "*="
  162              | "operator" . "/="
  163              | "operator" . "%="
  164              | "operator" . "&="
  165              | "operator" . "|="
  166              | "operator" . "^="
  167              | "operator" . "&&="
  168              | "operator" . "||="
  169              | "operator" . "^^="
  170              | "operator" . "&&"
  171              | "operator" . "||"
  172              | "operator" . "^^"
  173              | "operator" . '+'
  174              | "operator" . '-'
  175              | "operator" . '*'
  176              | "operator" . '/'
  177              | "operator" . '%'
  178              | "operator" . '<'
  179              | "operator" . '>'
  180              | "operator" . ".."
  181              | "operator" . "=="
  182              | "operator" . "!="
  183              | "operator" . "<="
  184              | "operator" . ">="
  185              | "operator" . '&'
  186              | "operator" . '|'
  187              | "operator" . '^'
  190              | "operator" . "++"
  191              | "operator" . "--"
  192              | "operator" . "<<"
  193              | "operator" . ">>"
  194              | "operator" . "<<="
  195              | "operator" . ">>="
  196              | "operator" . "<<<"
  197              | "operator" . ">>>"
  198              | "operator" . "<<<="
  199              | "operator" . ">>>="
  200              | "operator" . '[' ']'
  201              | "operator" . "?[" ']'
  202              | "operator" . '.'
  203              | "operator" . "?."
  204              | "operator" . '.' "name"
  205              | "operator" . '.' "name" ":="
  206              | "operator" . "?." "name"
  207              | "operator" . ":="
  208              | "operator" . "delete"
  209              | "operator" . "??"
  210              | "operator" . "is"
  211              | "operator" . "as"
  212              | "operator" . "is" "name"
  213              | "operator" . "as" "name"
  214              | "operator" . '?' "as"
  215              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 281
    "as"      shift, and go to state 282
    "delete"  shift, and go to state 283
    "+="      shift, and go to state 284
    "-="      shift, and go to state 285
    "/="      shift, and go to state 286
    "*="      shift, and go to state 287
    "%="      shift, and go to state 288
    "&="      shift, and go to state 289
    "|="      shift, and go to state 290
    "^="      shift, and go to state 291
    "<<"      shift, and go to state 292
    ">>"      shift, and go to state 293
    "++"      shift, and go to state 294
    "--"      shift, and go to state 295
    "<="      shift, and go to state 296
    "<<="     shift, and go to state 297
    ">>="     shift, and go to state 298
    ">="      shift, and go to state 299
    "=="      shift, and go to state 300
    "!="      shift, and go to state 301
    "??"      shift, and go to state 302
    "?."      shift, and go to state 303
    "?["      shift, and go to state 304
    ":="      shift, and go to state 305
    "<<<"     shift, and go to state 306
    ">>>"     shift, and go to state 307
    "<<<="    shift, and go to state 308
    ">>>="    shift, and go to state 309
    "&&"      shift, and go to state 310
    "||"      shift, and go to state 311
    "^^"      shift, and go to state 312
    "&&="     shift, and go to state 313
    "||="     shift, and go to state 314
    "^^="     shift, and go to state 315
    ".."      shift, and go to state 316
    '?'       shift, and go to state 317
    '|'       shift, and go to state 318
    '^'       shift, and go to state 319
    '&'       shift, and go to state 320
    '<'       shift, and go to state 321
    '>'       shift, and go to state 322
    '-'       shift, and go to state 323
    '+'       shift, and go to state 324
    '*'       shift, and go to state 325
    '/'       shift, and go to state 326
    '%'       shift, and go to state 327
    '~'       shift, and go to state 328
    '!'       shift, and go to state 329
    '.'       shift, and go to state 330
    '['       shift, and go to state 331


State 186

  216 function_name: "bool" .

    $default  reduce using rule 216 (function_name)


State 187

  217 function_name: "string" .

    $default  reduce using rule 217 (function_name)


State 188

  218 function_name: "int" .

    $default  reduce using rule 218 (function_name)


State 189

  219 function_name: "int2" .

    $default  reduce using rule 219 (function_name)


State 190

  220 function_name: "int3" .

    $default  reduce using rule 220 (function_name)


State 191

  221 function_name: "int4" .

    $default  reduce using rule 221 (function_name)


State 192

  222 function_name: "uint" .

    $default  reduce using rule 222 (function_name)


State 193

  223 function_name: "uint2" .

    $default  reduce using rule 223 (function_name)


State 194

  224 function_name: "uint3" .

    $default  reduce using rule 224 (function_name)


State 195

  225 function_name: "uint4" .

    $default  reduce using rule 225 (function_name)


State 196

  226 function_name: "float" .

    $default  reduce using rule 226 (function_name)


State 197

  227 function_name: "float2" .

    $default  reduce using rule 227 (function_name)


State 198

  228 function_name: "float3" .

    $default  reduce using rule 228 (function_name)


State 199

  229 function_name: "float4" .

    $default  reduce using rule 229 (function_name)


State 200

  230 function_name: "range" .

    $default  reduce using rule 230 (function_name)


State 201

  231 function_name: "urange" .

    $default  reduce using rule 231 (function_name)


State 202

  232 function_name: "range64" .

    $default  reduce using rule 232 (function_name)


State 203

  233 function_name: "urange64" .

    $default  reduce using rule 233 (function_name)


State 204

  234 function_name: "int64" .

    $default  reduce using rule 234 (function_name)


State 205

  235 function_name: "uint64" .

    $default  reduce using rule 235 (function_name)


State 206

  236 function_name: "double" .

    $default  reduce using rule 236 (function_name)


State 207

  237 function_name: "int8" .

    $default  reduce using rule 237 (function_name)


State 208

  238 function_name: "uint8" .

    $default  reduce using rule 238 (function_name)


State 209

  239 function_name: "int16" .

    $default  reduce using rule 239 (function_name)


State 210

  240 function_name: "uint16" .

    $default  reduce using rule 240 (function_name)


State 211

  188 function_name: "++" . "operator"

    "operator"  shift, and go to state 332


State 212

  189 function_name: "--" . "operator"

    "operator"  shift, and go to state 333


State 213

  156 function_name: "name" .

    $default  reduce using rule 156 (function_name)


State 214

  245 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 334

    $default  reduce using rule 151 (optional_function_argument_list)

    optional_function_argument_list  go to state 335


State 215

  247 function_declaration: optional_public_or_private_function $@10 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 336


State 216

  614 enum_name: "name" .

    $default  reduce using rule 614 (enum_name)


State 217

  626 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    ':'  shift, and go to state 337

    $default  reduce using rule 615 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 338


State 218

  644 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 . structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 339

    $default  reduce using rule 629 (optional_sealed)

    optional_sealed  go to state 340
    structure_name   go to state 341


State 219

  592 global_variable_declaration_list: global_variable_declaration_list . SEMICOLON
  594                                 | global_variable_declaration_list . $@40 optional_field_annotation let_variable_declaration
  595 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 342

    $default  reduce using rule 593 ($@40)

    SEMICOLON  go to state 343
    $@40       go to state 344


State 220

  130 metadata_argument_list: '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 345


State 221

  131 metadata_argument_list: metadata_argument_list . '@' annotation_argument optional_emit_semis
  515 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 346

    $default  reduce using rule 515 (optional_field_annotation)


State 222

  597 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 347

    global_let_variable_name_with_pos_list  go to state 348
    global_let_variable_declaration         go to state 349


State 223

   29 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 29 (character_sequence)


State 224

   30 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 30 (character_sequence)


State 225

   31 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 31 (string_constant)


State 226

  116 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant            go to state 172
    annotation_argument_value  go to state 350


State 227

  127 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 127 (annotation_argument)


State 228

  713 type_declaration_no_options_no_dim: "type" . '<' $@51 type_declaration '>' $@52

    '<'  shift, and go to state 351


State 229

  736 type_declaration_no_options_no_dim: "array" . '<' $@56 type_declaration '>' $@57

    '<'  shift, and go to state 352


State 230

  739 type_declaration_no_options_no_dim: "table" . '<' $@58 table_type_pair '>' $@59

    '<'  shift, and go to state 353


State 231

  714 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 354


State 232

  742 type_declaration_no_options_no_dim: "iterator" . '<' $@60 type_declaration '>' $@61

    '<'  shift, and go to state 355


State 233

  732 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 356


State 234

  650 basic_type_declaration: "bool" .

    $default  reduce using rule 650 (basic_type_declaration)


State 235

  670 basic_type_declaration: "void" .

    $default  reduce using rule 670 (basic_type_declaration)


State 236

  651 basic_type_declaration: "string" .

    $default  reduce using rule 651 (basic_type_declaration)


State 237

  686 auto_type_declaration: "auto" .
  687                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 357

    $default  reduce using rule 686 (auto_type_declaration)


State 238

  652 basic_type_declaration: "int" .

    $default  reduce using rule 652 (basic_type_declaration)


State 239

  656 basic_type_declaration: "int2" .

    $default  reduce using rule 656 (basic_type_declaration)


State 240

  657 basic_type_declaration: "int3" .

    $default  reduce using rule 657 (basic_type_declaration)


State 241

  658 basic_type_declaration: "int4" .

    $default  reduce using rule 658 (basic_type_declaration)


State 242

  659 basic_type_declaration: "uint" .

    $default  reduce using rule 659 (basic_type_declaration)


State 243

  676 basic_type_declaration: "bitfield" .
  696 bitfield_type_declaration: "bitfield" . '<' $@49 bitfield_bits '>' $@50

    '<'  shift, and go to state 358

    $default  reduce using rule 676 (basic_type_declaration)


State 244

  663 basic_type_declaration: "uint2" .

    $default  reduce using rule 663 (basic_type_declaration)


State 245

  664 basic_type_declaration: "uint3" .

    $default  reduce using rule 664 (basic_type_declaration)


State 246

  665 basic_type_declaration: "uint4" .

    $default  reduce using rule 665 (basic_type_declaration)


State 247

  666 basic_type_declaration: "float" .

    $default  reduce using rule 666 (basic_type_declaration)


State 248

  667 basic_type_declaration: "float2" .

    $default  reduce using rule 667 (basic_type_declaration)


State 249

  668 basic_type_declaration: "float3" .

    $default  reduce using rule 668 (basic_type_declaration)


State 250

  669 basic_type_declaration: "float4" .

    $default  reduce using rule 669 (basic_type_declaration)


State 251

  671 basic_type_declaration: "range" .

    $default  reduce using rule 671 (basic_type_declaration)


State 252

  672 basic_type_declaration: "urange" .

    $default  reduce using rule 672 (basic_type_declaration)


State 253

  673 basic_type_declaration: "range64" .

    $default  reduce using rule 673 (basic_type_declaration)


State 254

  674 basic_type_declaration: "urange64" .

    $default  reduce using rule 674 (basic_type_declaration)


State 255

  743 type_declaration_no_options_no_dim: "block" .
  746                                   | "block" . '<' $@62 type_declaration '>' $@63
  749                                   | "block" . '<' $@64 optional_function_argument_list optional_function_type '>' $@65

    '<'  shift, and go to state 359

    $default  reduce using rule 743 (type_declaration_no_options_no_dim)


State 256

  655 basic_type_declaration: "int64" .

    $default  reduce using rule 655 (basic_type_declaration)


State 257

  662 basic_type_declaration: "uint64" .

    $default  reduce using rule 662 (basic_type_declaration)


State 258

  675 basic_type_declaration: "double" .

    $default  reduce using rule 675 (basic_type_declaration)


State 259

  750 type_declaration_no_options_no_dim: "function" .
  753                                   | "function" . '<' $@66 type_declaration '>' $@67
  756                                   | "function" . '<' $@68 optional_function_argument_list optional_function_type '>' $@69

    '<'  shift, and go to state 360

    $default  reduce using rule 750 (type_declaration_no_options_no_dim)


State 260

  757 type_declaration_no_options_no_dim: "lambda" .
  760                                   | "lambda" . '<' $@70 type_declaration '>' $@71
  763                                   | "lambda" . '<' $@72 optional_function_argument_list optional_function_type '>' $@73

    '<'  shift, and go to state 361

    $default  reduce using rule 757 (type_declaration_no_options_no_dim)


State 261

  653 basic_type_declaration: "int8" .

    $default  reduce using rule 653 (basic_type_declaration)


State 262

  660 basic_type_declaration: "uint8" .

    $default  reduce using rule 660 (basic_type_declaration)


State 263

  654 basic_type_declaration: "int16" .

    $default  reduce using rule 654 (basic_type_declaration)


State 264

  661 basic_type_declaration: "uint16" .

    $default  reduce using rule 661 (basic_type_declaration)


State 265

  766 type_declaration_no_options_no_dim: "tuple" . '<' $@74 tuple_type_list '>' $@75

    '<'  shift, and go to state 362


State 266

  769 type_declaration_no_options_no_dim: "variant" . '<' $@76 variant_type_list '>' $@77

    '<'  shift, and go to state 363


State 267

  688 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 364


State 268

  715 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  717                                   | '$' . name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 365


State 269

  685 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 685 (structure_type_declaration)


State 270

  707 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 707 (type_declaration_no_options_no_dim)


State 271

  710 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 710 (type_declaration_no_options_no_dim)


State 272

  708 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 708 (type_declaration_no_options_no_dim)


State 273

  709 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 709 (type_declaration_no_options_no_dim)


State 274

  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"
  770 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    $default  reduce using rule 770 (type_declaration)


State 275

  705 type_declaration_no_options: type_declaration_no_options_no_dim .
  706                            | type_declaration_no_options_no_dim . dim_list

    '['  shift, and go to state 375

    $default  reduce using rule 705 (type_declaration_no_options)

    dim_list  go to state 376


State 276

  609 single_alias: optional_public_or_private_alias "name" $@42 '=' type_declaration .
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 609 (single_alias)


State 277

  620 emit_commas: emit_commas "new line, comma" .

    $default  reduce using rule 620 (emit_commas)


State 278

  787 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 . '{' $@88 bitfield_alias_bits optional_commas $@89 '}'

    '{'  shift, and go to state 378


State 279

  777 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 . '{' $@80 tuple_alias_type_list optional_semis $@81 '}'

    '{'  shift, and go to state 379


State 280

  782 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 . '{' $@84 variant_alias_type_list optional_semis $@85 '}'

    '{'  shift, and go to state 380


State 281

  210 function_name: "operator" "is" .
  212              | "operator" "is" . "name"

    "name"  shift, and go to state 381

    $default  reduce using rule 210 (function_name)


State 282

  211 function_name: "operator" "as" .
  213              | "operator" "as" . "name"

    "name"  shift, and go to state 382

    $default  reduce using rule 211 (function_name)


State 283

  208 function_name: "operator" "delete" .

    $default  reduce using rule 208 (function_name)


State 284

  159 function_name: "operator" "+=" .

    $default  reduce using rule 159 (function_name)


State 285

  160 function_name: "operator" "-=" .

    $default  reduce using rule 160 (function_name)


State 286

  162 function_name: "operator" "/=" .

    $default  reduce using rule 162 (function_name)


State 287

  161 function_name: "operator" "*=" .

    $default  reduce using rule 161 (function_name)


State 288

  163 function_name: "operator" "%=" .

    $default  reduce using rule 163 (function_name)


State 289

  164 function_name: "operator" "&=" .

    $default  reduce using rule 164 (function_name)


State 290

  165 function_name: "operator" "|=" .

    $default  reduce using rule 165 (function_name)


State 291

  166 function_name: "operator" "^=" .

    $default  reduce using rule 166 (function_name)


State 292

  192 function_name: "operator" "<<" .

    $default  reduce using rule 192 (function_name)


State 293

  193 function_name: "operator" ">>" .

    $default  reduce using rule 193 (function_name)


State 294

  190 function_name: "operator" "++" .

    $default  reduce using rule 190 (function_name)


State 295

  191 function_name: "operator" "--" .

    $default  reduce using rule 191 (function_name)


State 296

  183 function_name: "operator" "<=" .

    $default  reduce using rule 183 (function_name)


State 297

  194 function_name: "operator" "<<=" .

    $default  reduce using rule 194 (function_name)


State 298

  195 function_name: "operator" ">>=" .

    $default  reduce using rule 195 (function_name)


State 299

  184 function_name: "operator" ">=" .

    $default  reduce using rule 184 (function_name)


State 300

  181 function_name: "operator" "==" .

    $default  reduce using rule 181 (function_name)


State 301

  182 function_name: "operator" "!=" .

    $default  reduce using rule 182 (function_name)


State 302

  209 function_name: "operator" "??" .

    $default  reduce using rule 209 (function_name)


State 303

  203 function_name: "operator" "?." .
  206              | "operator" "?." . "name"

    "name"  shift, and go to state 383

    $default  reduce using rule 203 (function_name)


State 304

  201 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 384


State 305

  207 function_name: "operator" ":=" .

    $default  reduce using rule 207 (function_name)


State 306

  196 function_name: "operator" "<<<" .

    $default  reduce using rule 196 (function_name)


State 307

  197 function_name: "operator" ">>>" .

    $default  reduce using rule 197 (function_name)


State 308

  198 function_name: "operator" "<<<=" .

    $default  reduce using rule 198 (function_name)


State 309

  199 function_name: "operator" ">>>=" .

    $default  reduce using rule 199 (function_name)


State 310

  170 function_name: "operator" "&&" .

    $default  reduce using rule 170 (function_name)


State 311

  171 function_name: "operator" "||" .

    $default  reduce using rule 171 (function_name)


State 312

  172 function_name: "operator" "^^" .

    $default  reduce using rule 172 (function_name)


State 313

  167 function_name: "operator" "&&=" .

    $default  reduce using rule 167 (function_name)


State 314

  168 function_name: "operator" "||=" .

    $default  reduce using rule 168 (function_name)


State 315

  169 function_name: "operator" "^^=" .

    $default  reduce using rule 169 (function_name)


State 316

  180 function_name: "operator" ".." .

    $default  reduce using rule 180 (function_name)


State 317

  214 function_name: "operator" '?' . "as"
  215              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 385


State 318

  186 function_name: "operator" '|' .

    $default  reduce using rule 186 (function_name)


State 319

  187 function_name: "operator" '^' .

    $default  reduce using rule 187 (function_name)


State 320

  185 function_name: "operator" '&' .

    $default  reduce using rule 185 (function_name)


State 321

  178 function_name: "operator" '<' .

    $default  reduce using rule 178 (function_name)


State 322

  179 function_name: "operator" '>' .

    $default  reduce using rule 179 (function_name)


State 323

  174 function_name: "operator" '-' .

    $default  reduce using rule 174 (function_name)


State 324

  173 function_name: "operator" '+' .

    $default  reduce using rule 173 (function_name)


State 325

  175 function_name: "operator" '*' .

    $default  reduce using rule 175 (function_name)


State 326

  176 function_name: "operator" '/' .

    $default  reduce using rule 176 (function_name)


State 327

  177 function_name: "operator" '%' .

    $default  reduce using rule 177 (function_name)


State 328

  158 function_name: "operator" '~' .

    $default  reduce using rule 158 (function_name)


State 329

  157 function_name: "operator" '!' .

    $default  reduce using rule 157 (function_name)


State 330

  202 function_name: "operator" '.' .
  204              | "operator" '.' . "name"
  205              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 386

    $default  reduce using rule 202 (function_name)


State 331

  200 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 387


State 332

  188 function_name: "++" "operator" .

    $default  reduce using rule 188 (function_name)


State 333

  189 function_name: "--" "operator" .

    $default  reduce using rule 189 (function_name)


State 334

  152 optional_function_argument_list: '(' . ')'
  153                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 388
    ')'   shift, and go to state 389
    '@'   shift, and go to state 220

    $default  reduce using rule 514 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 393


State 335

  245 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 394

    $default  reduce using rule 154 (optional_function_type)

    optional_function_type  go to state 395


State 336

  247 function_declaration: optional_public_or_private_function $@10 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 252 ($@13)

    expression_block  go to state 396
    $@13              go to state 397


State 337

  616 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 398
    "uint"    shift, and go to state 399
    "int64"   shift, and go to state 400
    "uint64"  shift, and go to state 401
    "int8"    shift, and go to state 402
    "uint8"   shift, and go to state 403
    "int16"   shift, and go to state 404
    "uint16"  shift, and go to state 405

    enum_basic_type_declaration  go to state 406


State 338

  626 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}'

    "new line, comma"  shift, and go to state 177

    $default  reduce using rule 621 (optional_emit_commas)

    emit_commas           go to state 178
    optional_emit_commas  go to state 407


State 339

  630 optional_sealed: "sealed" .

    $default  reduce using rule 630 (optional_sealed)


State 340

  631 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 408


State 341

  644 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name . optional_emit_semis $@48 optional_struct_variable_declaration_list

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 409


State 342

  595 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 595 (global_let)


State 343

  592 global_variable_declaration_list: global_variable_declaration_list SEMICOLON .

    $default  reduce using rule 592 (global_variable_declaration_list)


State 344

  594 global_variable_declaration_list: global_variable_declaration_list $@40 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 220

    $default  reduce using rule 514 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 410


State 345

  130 metadata_argument_list: '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 411


State 346

  131 metadata_argument_list: metadata_argument_list '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 412


State 347

  575 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 575 (global_let_variable_name_with_pos_list)


State 348

  576 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  583 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  584                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  585                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 413
    ':'  shift, and go to state 414
    '&'  shift, and go to state 415

    $default  reduce using rule 568 (optional_ref)

    optional_ref  go to state 416


State 349

  597 global_let: kwd_let optional_shared optional_public_or_private_variable $@41 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 597 (global_let)


State 350

  116 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 116 (annotation_argument_value_list)


State 351

  713 type_declaration_no_options_no_dim: "type" '<' . $@51 type_declaration '>' $@52

    $default  reduce using rule 711 ($@51)

    $@51  go to state 417


State 352

  736 type_declaration_no_options_no_dim: "array" '<' . $@56 type_declaration '>' $@57

    $default  reduce using rule 734 ($@56)

    $@56  go to state 418


State 353

  739 type_declaration_no_options_no_dim: "table" '<' . $@58 table_type_pair '>' $@59

    $default  reduce using rule 737 ($@58)

    $@58  go to state 419


State 354

  714 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 485
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 355

  742 type_declaration_no_options_no_dim: "iterator" '<' . $@60 type_declaration '>' $@61

    $default  reduce using rule 740 ($@60)

    $@60  go to state 495


State 356

  732 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 730 ($@54)

    $@54  go to state 496


State 357

  687 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 497


State 358

  696 bitfield_type_declaration: "bitfield" '<' . $@49 bitfield_bits '>' $@50

    $default  reduce using rule 694 ($@49)

    $@49  go to state 498


State 359

  746 type_declaration_no_options_no_dim: "block" '<' . $@62 type_declaration '>' $@63
  749                                   | "block" '<' . $@64 optional_function_argument_list optional_function_type '>' $@65

    ':'       reduce using rule 747 ($@64)
    '>'       reduce using rule 747 ($@64)
    '('       reduce using rule 747 ($@64)
    $default  reduce using rule 744 ($@62)

    $@62  go to state 499
    $@64  go to state 500


State 360

  753 type_declaration_no_options_no_dim: "function" '<' . $@66 type_declaration '>' $@67
  756                                   | "function" '<' . $@68 optional_function_argument_list optional_function_type '>' $@69

    ':'       reduce using rule 754 ($@68)
    '>'       reduce using rule 754 ($@68)
    '('       reduce using rule 754 ($@68)
    $default  reduce using rule 751 ($@66)

    $@66  go to state 501
    $@68  go to state 502


State 361

  760 type_declaration_no_options_no_dim: "lambda" '<' . $@70 type_declaration '>' $@71
  763                                   | "lambda" '<' . $@72 optional_function_argument_list optional_function_type '>' $@73

    ':'       reduce using rule 761 ($@72)
    '>'       reduce using rule 761 ($@72)
    '('       reduce using rule 761 ($@72)
    $default  reduce using rule 758 ($@70)

    $@70  go to state 503
    $@72  go to state 504


State 362

  766 type_declaration_no_options_no_dim: "tuple" '<' . $@74 tuple_type_list '>' $@75

    $default  reduce using rule 764 ($@74)

    $@74  go to state 505


State 363

  769 type_declaration_no_options_no_dim: "variant" '<' . $@76 variant_type_list '>' $@77

    $default  reduce using rule 767 ($@76)

    $@76  go to state 506


State 364

  688 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 507
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 365

  715 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  717                                   | '$' name_in_namespace . '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 508
    '('  shift, and go to state 509


State 366

  720 type_declaration_no_options_no_dim: type_declaration_no_options "const" .

    $default  reduce using rule 720 (type_declaration_no_options_no_dim)


State 367

  725 type_declaration_no_options_no_dim: type_declaration_no_options "implicit" .

    $default  reduce using rule 725 (type_declaration_no_options_no_dim)


State 368

  719 type_declaration_no_options_no_dim: type_declaration_no_options "explicit" .

    $default  reduce using rule 719 (type_declaration_no_options_no_dim)


State 369

  727 type_declaration_no_options_no_dim: type_declaration_no_options "==" . "const"
  728                                   | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 510
    '&'      shift, and go to state 511


State 370

  733 type_declaration_no_options_no_dim: type_declaration_no_options "??" .

    $default  reduce using rule 733 (type_declaration_no_options_no_dim)


State 371

  729 type_declaration_no_options_no_dim: type_declaration_no_options '?' .

    $default  reduce using rule 729 (type_declaration_no_options_no_dim)


State 372

  722 type_declaration_no_options_no_dim: type_declaration_no_options '&' .

    $default  reduce using rule 722 (type_declaration_no_options_no_dim)


State 373

  718 type_declaration_no_options_no_dim: type_declaration_no_options '-' . '[' ']'
  721                                   | type_declaration_no_options '-' . "const"
  723                                   | type_declaration_no_options '-' . '&'
  726                                   | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 512
    '&'      shift, and go to state 513
    '['      shift, and go to state 514
    '#'      shift, and go to state 515


State 374

  724 type_declaration_no_options_no_dim: type_declaration_no_options '#' .

    $default  reduce using rule 724 (type_declaration_no_options_no_dim)


State 375

  701 dim_list: '[' . expr ']'
  702         | '[' . ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    ']'                               shift, and go to state 516
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 517
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 376

  703 dim_list: dim_list . '[' expr ']'
  704         | dim_list . '[' ']'
  706 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 518

    $default  reduce using rule 706 (type_declaration_no_options)


State 377

  771 type_declaration: type_declaration '|' . type_declaration_no_options
  772                 | type_declaration '|' . '#'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268
    '#'          shift, and go to state 519

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 520
    type_declaration_no_options_no_dim  go to state 275


State 378

  787 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' . $@88 bitfield_alias_bits optional_commas $@89 '}'

    $default  reduce using rule 785 ($@88)

    $@88  go to state 521


State 379

  777 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' . $@80 tuple_alias_type_list optional_semis $@81 '}'

    $default  reduce using rule 775 ($@80)

    $@80  go to state 522


State 380

  782 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' . $@84 variant_alias_type_list optional_semis $@85 '}'

    $default  reduce using rule 780 ($@84)

    $@84  go to state 523


State 381

  212 function_name: "operator" "is" "name" .

    $default  reduce using rule 212 (function_name)


State 382

  213 function_name: "operator" "as" "name" .

    $default  reduce using rule 213 (function_name)


State 383

  206 function_name: "operator" "?." "name" .

    $default  reduce using rule 206 (function_name)


State 384

  201 function_name: "operator" "?[" ']' .

    $default  reduce using rule 201 (function_name)


State 385

  214 function_name: "operator" '?' "as" .
  215              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 524

    $default  reduce using rule 214 (function_name)


State 386

  204 function_name: "operator" '.' "name" .
  205              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 525

    $default  reduce using rule 204 (function_name)


State 387

  200 function_name: "operator" '[' ']' .

    $default  reduce using rule 200 (function_name)


State 388

  537 function_argument_declaration_type: "$a" . '(' expr ')'

    '('  shift, and go to state 526


State 389

  152 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 152 (optional_function_argument_list)


State 390

  535 function_argument_declaration_no_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_no_type
  536 function_argument_declaration_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_type

    "let"  shift, and go to state 527
    "var"  shift, and go to state 528

    $default  reduce using rule 309 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 529


State 391

  538 function_argument_list: function_argument_declaration_no_type .
  540                       | function_argument_declaration_no_type . ';' function_argument_list

    ';'  shift, and go to state 530

    $default  reduce using rule 538 (function_argument_list)


State 392

  539 function_argument_list: function_argument_declaration_type .
  541                       | function_argument_declaration_type . ';' function_argument_list
  542                       | function_argument_declaration_type . ',' function_argument_list

    ','  shift, and go to state 531
    ';'  shift, and go to state 532

    $default  reduce using rule 539 (function_argument_list)


State 393

  153 optional_function_argument_list: '(' function_argument_list . ')'

    ')'  shift, and go to state 533


State 394

  155 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 534


State 395

  245 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 245 (function_declaration_header)


State 396

  247 function_declaration: optional_public_or_private_function $@10 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 247 (function_declaration)


State 397

  254 expression_block: $@13 . '{' expressions $@14 '}' expression_block_finally

    '{'  shift, and go to state 535


State 398

  677 enum_basic_type_declaration: "int" .

    $default  reduce using rule 677 (enum_basic_type_declaration)


State 399

  680 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 680 (enum_basic_type_declaration)


State 400

  683 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 683 (enum_basic_type_declaration)


State 401

  684 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 684 (enum_basic_type_declaration)


State 402

  678 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 678 (enum_basic_type_declaration)


State 403

  681 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 681 (enum_basic_type_declaration)


State 404

  679 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 679 (enum_basic_type_declaration)


State 405

  682 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 682 (enum_basic_type_declaration)


State 406

  616 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 616 (optional_enum_basic_type_declaration)


State 407

  626 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas . '{' $@44 enum_list optional_commas $@45 '}'

    '{'  shift, and go to state 536


State 408

  631 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 537

    $default  reduce using rule 627 (optional_structure_parent)

    optional_structure_parent  go to state 538


State 409

  644 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis . $@48 optional_struct_variable_declaration_list

    $default  reduce using rule 643 ($@48)

    $@48  go to state 539


State 410

  594 global_variable_declaration_list: global_variable_declaration_list $@40 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 540
    "name"  shift, and go to state 541

    let_variable_name_with_pos_list  go to state 542
    let_variable_declaration         go to state 543


State 411

  130 metadata_argument_list: '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 130 (metadata_argument_list)


State 412

  131 metadata_argument_list: metadata_argument_list '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 544


State 413

  576 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 545


State 414

  583 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  584                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 546
    type_declaration_no_options_no_dim  go to state 275


State 415

  569 optional_ref: '&' .

    $default  reduce using rule 569 (optional_ref)


State 416

  585 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 547
    ":="  shift, and go to state 548
    '='   shift, and go to state 549

    copy_or_move_or_clone  go to state 550


State 417

  713 type_declaration_no_options_no_dim: "type" '<' $@51 . type_declaration '>' $@52

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 551


State 418

  736 type_declaration_no_options_no_dim: "array" '<' $@56 . type_declaration '>' $@57

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 552


State 419

  739 type_declaration_no_options_no_dim: "table" '<' $@58 . table_type_pair '>' $@59

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    table_type_pair                     go to state 553
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 554


State 420

  814 make_struct_decl: "struct" . '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 555


State 421

  817 make_struct_decl: "class" . '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 556


State 422

  418 expr: "true" .

    $default  reduce using rule 418 (expr)


State 423

  419 expr: "false" .

    $default  reduce using rule 419 (expr)


State 424

  293 expr_new: "new" . new_type_declaration
  294         | "new" . new_type_declaration '(' use_initializer ')'
  295         | "new" . new_type_declaration '(' expr_list ')'
  296         | "new" . new_type_declaration '(' make_struct_single ')'
  297         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  298         | "new" . make_decl

    "struct"       shift, and go to state 420
    "class"        shift, and go to state 421
    "array"        shift, and go to state 427
    "table"        shift, and go to state 429
    "fixed_array"  shift, and go to state 436
    "default"      shift, and go to state 437
    "tuple"        shift, and go to state 439
    "variant"      shift, and go to state 440
    "::"           shift, and go to state 57
    "name"         shift, and go to state 58
    '<'            shift, and go to state 557
    '['            shift, and go to state 464
    '{'            shift, and go to state 468

    name_in_namespace           go to state 269
    new_type_declaration        go to state 558
    structure_type_declaration  go to state 559
    make_decl                   go to state 560
    make_struct_decl            go to state 490
    make_tuple_call             go to state 491
    make_dim_decl               go to state 492
    make_table_decl             go to state 493
    array_comprehension         go to state 494


State 425

  333 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  334               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  335               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 561


State 426

  332 expr_type_decl: "type" . '<' $@23 type_declaration '>' $@24

    '<'  shift, and go to state 562


State 427

  833 make_dim_decl: "array" . "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'
  836              | "array" . "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'
  839              | "array" . "variant" '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim ')'
  840              | "array" . '(' expr_list optional_comma ')'
  843              | "array" . '<' $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list ')'

    "struct"   shift, and go to state 563
    "tuple"    shift, and go to state 564
    "variant"  shift, and go to state 565
    '<'        shift, and go to state 566
    '('        shift, and go to state 567


State 428

  412 expr: "null" .

    $default  reduce using rule 412 (expr)


State 429

  852 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  853                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  854                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 568
    '('  shift, and go to state 569


State 430

  463 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 570


State 431

  323 expr_cast: "cast" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 571


State 432

  326 expr_cast: "upcast" . '<' $@19 type_declaration_no_options '>' $@20 expr

    '<'  shift, and go to state 572


State 433

  464 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 573


State 434

  329 expr_cast: "reinterpret" . '<' $@21 type_declaration_no_options '>' $@22 expr

    '<'  shift, and go to state 574


State 435

  494 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 575


State 436

  844 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  847              | "fixed_array" . '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 576
    '('  shift, and go to state 577


State 437

  823 make_struct_decl: "default" . '<' $@96 type_declaration_no_options '>' $@97 use_initializer

    '<'  shift, and go to state 578


State 438

  676 basic_type_declaration: "bitfield" .

    $default  reduce using rule 676 (basic_type_declaration)


State 439

  826 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  829                | "tuple" . '<' $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 579
    '('  shift, and go to state 580


State 440

  820 make_struct_decl: "variant" . '<' $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 581


State 441

  495 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  496               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  497               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    '<'  shift, and go to state 582


State 442

  448 expr: "++" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 583
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 443

  449 expr: "--" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 584
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 444

  498 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 585


State 445

  499 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 586


State 446

  500 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 587


State 447

  501 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 588


State 448

  502 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 589


State 449

  504 expr_mtag: "$c" . '(' expr ')' '(' ')'
  505          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 590


State 450

  503 expr_mtag: "..." .

    $default  reduce using rule 503 (expr_mtag)


State 451

  356 expr_numeric_const: "integer constant" .

    $default  reduce using rule 356 (expr_numeric_const)


State 452

  358 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 358 (expr_numeric_const)


State 453

  357 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 357 (expr_numeric_const)


State 454

  359 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 359 (expr_numeric_const)


State 455

  360 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 360 (expr_numeric_const)


State 456

  361 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 361 (expr_numeric_const)


State 457

  362 expr_numeric_const: "double constant" .

    $default  reduce using rule 362 (expr_numeric_const)


State 458

   41 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 38 (string_builder_body)

    string_builder_body  go to state 591


State 459

  425 expr: '-' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 592
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 460

  424 expr: '+' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 593
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 461

  462 expr: '*' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 594
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 462

  423 expr: '~' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 595
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 463

  422 expr: '!' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 596
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 464

  830 make_dim_decl: '[' . optional_expr_list ']'
  859 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  860                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 278 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 599
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 465

  452 expr: '(' . expr_list optional_comma ')'
  453     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 604
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 605
    make_struct_single      go to state 606
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 466

  341 block_or_lambda: '$' .

    $default  reduce using rule 341 (block_or_lambda)


State 467

  342 block_or_lambda: '@' .
  343                | '@' . '@'
  388 func_addr_expr: '@' . '@' func_addr_name
  391               | '@' . '@' '<' $@25 type_declaration_no_options '>' $@26 func_addr_name
  394               | '@' . '@' '<' $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name
  513 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 607

    $default  reduce using rule 342 (block_or_lambda)


State 468

  851 make_table_decl: '{' . $@110 optional_emit_semis optional_expr_map_tuple_list '}'
  861 array_comprehension: '{' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "for"  shift, and go to state 608

    $default  reduce using rule 850 ($@110)

    $@110  go to state 609


State 469

  416 expr: string_builder .

    $default  reduce using rule 416 (expr)


State 470

  415 expr: expr_reader .

    $default  reduce using rule 415 (expr)


State 471

  493 expr: expr_call_pipe .

    $default  reduce using rule 493 (expr)


State 472

  382 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  383                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  405 expr_call: name_in_namespace . '(' ')'
  406          | name_in_namespace . '(' "uninitialized" ')'
  407          | name_in_namespace . '(' make_struct_single ')'
  408          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  409          | name_in_namespace . '(' expr_list ')'
  413 expr: name_in_namespace .

    '('  shift, and go to state 610

    $default  reduce using rule 413 (expr)


State 473

  486 expr: expr_new .

    $default  reduce using rule 486 (expr)


State 474

  485 expr: expr_cast .

    $default  reduce using rule 485 (expr)


State 475

  484 expr: expr_type_decl .

    $default  reduce using rule 484 (expr)


State 476

  483 expr: expr_type_info .

    $default  reduce using rule 483 (expr)


State 477

  353 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '['  shift, and go to state 611

    $default  reduce using rule 147 (optional_annotation_list)

    optional_annotation_list  go to state 612


State 478

  489 expr: expr_full_block .

    $default  reduce using rule 489 (expr)


State 479

  414 expr: expr_numeric_const .

    $default  reduce using rule 414 (expr)


State 480

  488 expr: expr_named_call .

    $default  reduce using rule 488 (expr)


State 481

  487 expr: expr_method_call .

    $default  reduce using rule 487 (expr)


State 482

  460 expr: func_addr_expr .

    $default  reduce using rule 460 (expr)


State 483

  420 expr: expr_field .

    $default  reduce using rule 420 (expr)


State 484

  255 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  461 expr: expr_call .

    '$'  shift, and go to state 466
    '@'  shift, and go to state 613
    '{'  shift, and go to state 614

    $default  reduce using rule 461 (expr)

    block_or_lambda                go to state 615
    expr_full_block_assumed_piped  go to state 616


State 485

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  714 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 652


State 486

  465 expr: expr_generator .

    $default  reduce using rule 465 (expr)


State 487

  421 expr: expr_mtag .

    $default  reduce using rule 421 (expr)


State 488

  410 expr_call: basic_type_declaration . '(' ')'
  411          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 653


State 489

  417 expr: make_decl .

    $default  reduce using rule 417 (expr)


State 490

  788 make_decl: make_struct_decl .

    $default  reduce using rule 788 (make_decl)


State 491

  792 make_decl: make_tuple_call .

    $default  reduce using rule 792 (make_decl)


State 492

  789 make_decl: make_dim_decl .

    $default  reduce using rule 789 (make_decl)


State 493

  790 make_decl: make_table_decl .

    $default  reduce using rule 790 (make_decl)


State 494

  791 make_decl: array_comprehension .

    $default  reduce using rule 791 (make_decl)


State 495

  742 type_declaration_no_options_no_dim: "iterator" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 654


State 496

  732 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 655


State 497

  687 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 656


State 498

  696 bitfield_type_declaration: "bitfield" '<' $@49 . bitfield_bits '>' $@50

    "name"  shift, and go to state 657

    bitfield_bits  go to state 658


State 499

  746 type_declaration_no_options_no_dim: "block" '<' $@62 . type_declaration '>' $@63

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 659


State 500

  749 type_declaration_no_options_no_dim: "block" '<' $@64 . optional_function_argument_list optional_function_type '>' $@65

    '('  shift, and go to state 334

    $default  reduce using rule 151 (optional_function_argument_list)

    optional_function_argument_list  go to state 660


State 501

  753 type_declaration_no_options_no_dim: "function" '<' $@66 . type_declaration '>' $@67

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 661


State 502

  756 type_declaration_no_options_no_dim: "function" '<' $@68 . optional_function_argument_list optional_function_type '>' $@69

    '('  shift, and go to state 334

    $default  reduce using rule 151 (optional_function_argument_list)

    optional_function_argument_list  go to state 662


State 503

  760 type_declaration_no_options_no_dim: "lambda" '<' $@70 . type_declaration '>' $@71

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 663


State 504

  763 type_declaration_no_options_no_dim: "lambda" '<' $@72 . optional_function_argument_list optional_function_type '>' $@73

    '('  shift, and go to state 334

    $default  reduce using rule 151 (optional_function_argument_list)

    optional_function_argument_list  go to state 664


State 505

  766 type_declaration_no_options_no_dim: "tuple" '<' $@74 . tuple_type_list '>' $@75

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 666
    tuple_type_list                     go to state 667
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 506

  769 type_declaration_no_options_no_dim: "variant" '<' $@76 . variant_type_list '>' $@77

    "name"  shift, and go to state 669

    variant_type       go to state 670
    variant_type_list  go to state 671


State 507

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  688 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 672


State 508

  717 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 716 ($@53)

    $@53  go to state 673


State 509

  715 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 278 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 674
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 510

  727 type_declaration_no_options_no_dim: type_declaration_no_options "==" "const" .

    $default  reduce using rule 727 (type_declaration_no_options_no_dim)


State 511

  728 type_declaration_no_options_no_dim: type_declaration_no_options "==" '&' .

    $default  reduce using rule 728 (type_declaration_no_options_no_dim)


State 512

  721 type_declaration_no_options_no_dim: type_declaration_no_options '-' "const" .

    $default  reduce using rule 721 (type_declaration_no_options_no_dim)


State 513

  723 type_declaration_no_options_no_dim: type_declaration_no_options '-' '&' .

    $default  reduce using rule 723 (type_declaration_no_options_no_dim)


State 514

  718 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 675


State 515

  726 type_declaration_no_options_no_dim: type_declaration_no_options '-' '#' .

    $default  reduce using rule 726 (type_declaration_no_options_no_dim)


State 516

  702 dim_list: '[' ']' .

    $default  reduce using rule 702 (dim_list)


State 517

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  701 dim_list: '[' expr . ']'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 676


State 518

  703 dim_list: dim_list '[' . expr ']'
  704         | dim_list '[' . ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    ']'                               shift, and go to state 677
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 678
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 519

  772 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 772 (type_declaration)


State 520

  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"
  771 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    $default  reduce using rule 771 (type_declaration)


State 521

  787 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 . bitfield_alias_bits optional_commas $@89 '}'

    "name"  shift, and go to state 679

    $default  reduce using rule 691 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 680


State 522

  777 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 . tuple_alias_type_list optional_semis $@81 '}'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    $default  reduce using rule 547 (tuple_alias_type_list)

    name_in_namespace                   go to state 269
    tuple_type                          go to state 681
    tuple_alias_type_list               go to state 682
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 523

  782 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 . variant_alias_type_list optional_semis $@85 '}'

    "name"  shift, and go to state 669

    $default  reduce using rule 553 (variant_alias_type_list)

    variant_type             go to state 683
    variant_alias_type_list  go to state 684


State 524

  215 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 215 (function_name)


State 525

  205 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 205 (function_name)


State 526

  537 function_argument_declaration_type: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 685
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 527

  307 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 307 (kwd_let_var_or_nothing)


State 528

  308 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 308 (kwd_let_var_or_nothing)


State 529

  535 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_no_type
  536 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_type

    "$i"    shift, and go to state 686
    "name"  shift, and go to state 687

    variable_declaration_no_type  go to state 688
    variable_declaration_type     go to state 689
    variable_name_with_pos_list   go to state 690


State 530

  540 function_argument_list: function_argument_declaration_no_type ';' . function_argument_list

    "$a"  shift, and go to state 388
    '@'   shift, and go to state 220

    $default  reduce using rule 514 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 691


State 531

  542 function_argument_list: function_argument_declaration_type ',' . function_argument_list

    "$a"  shift, and go to state 388
    '@'   shift, and go to state 220

    $default  reduce using rule 514 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 692


State 532

  541 function_argument_list: function_argument_declaration_type ';' . function_argument_list

    "$a"  shift, and go to state 388
    '@'   shift, and go to state 220

    $default  reduce using rule 514 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 693


State 533

  153 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 153 (optional_function_argument_list)


State 534

  155 optional_function_type: ':' type_declaration .
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 155 (optional_function_type)


State 535

  254 expression_block: $@13 '{' . expressions $@14 '}' expression_block_finally

    $default  reduce using rule 275 (expressions)

    expressions  go to state 694


State 536

  626 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' . $@44 enum_list optional_commas $@45 '}'

    $default  reduce using rule 624 ($@44)

    $@44  go to state 695


State 537

  628 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 696


State 538

  631 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 631 (structure_name)


State 539

  644 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 . optional_struct_variable_declaration_list

    ';'  shift, and go to state 697
    '{'  shift, and go to state 698

    optional_struct_variable_declaration_list  go to state 699


State 540

  571 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 700


State 541

  570 let_variable_name_with_pos_list: "name" .
  572                                | "name" . "aka" "name"

    "aka"  shift, and go to state 701

    $default  reduce using rule 570 (let_variable_name_with_pos_list)


State 542

  573 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  574                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  580 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  581                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  582                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 702
    ':'  shift, and go to state 703
    '&'  shift, and go to state 415

    $default  reduce using rule 568 (optional_ref)

    optional_ref  go to state 704


State 543

  594 global_variable_declaration_list: global_variable_declaration_list $@40 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 594 (global_variable_declaration_list)


State 544

  131 metadata_argument_list: metadata_argument_list '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 131 (metadata_argument_list)


State 545

  576 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 576 (global_let_variable_name_with_pos_list)


State 546

  583 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  584                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "<-"                   shift, and go to state 547
    "??"                   shift, and go to state 370
    ":="                   shift, and go to state 548
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 549
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    SEMICOLON              go to state 705
    copy_or_move_or_clone  go to state 706


State 547

  566 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 566 (copy_or_move_or_clone)


State 548

  567 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 567 (copy_or_move_or_clone)


State 549

  565 copy_or_move_or_clone: '=' .

    $default  reduce using rule 565 (copy_or_move_or_clone)


State 550

  585 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 707
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 551

  713 type_declaration_no_options_no_dim: "type" '<' $@51 type_declaration . '>' $@52
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 708


State 552

  736 type_declaration_no_options_no_dim: "array" '<' $@56 type_declaration . '>' $@57
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 709


State 553

  739 type_declaration_no_options_no_dim: "table" '<' $@58 table_type_pair . '>' $@59

    '>'  shift, and go to state 710


State 554

  699 table_type_pair: type_declaration .
  700                | type_declaration . c_or_s type_declaration
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '|'                    shift, and go to state 377
    ';'                    shift, and go to state 16

    $default  reduce using rule 699 (table_type_pair)

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 715


State 555

  814 make_struct_decl: "struct" '<' . $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 812 ($@90)

    $@90  go to state 716


State 556

  817 make_struct_decl: "class" '<' . $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 815 ($@92)

    $@92  go to state 717


State 557

  291 new_type_declaration: '<' . $@15 type_declaration '>' $@16

    $default  reduce using rule 289 ($@15)

    $@15  go to state 718


State 558

  293 expr_new: "new" new_type_declaration .
  294         | "new" new_type_declaration . '(' use_initializer ')'
  295         | "new" new_type_declaration . '(' expr_list ')'
  296         | "new" new_type_declaration . '(' make_struct_single ')'
  297         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 719

    $default  reduce using rule 293 (expr_new)


State 559

  292 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 292 (new_type_declaration)


State 560

  298 expr_new: "new" make_decl .

    $default  reduce using rule 298 (expr_new)


State 561

  333 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  334               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  335               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 720
    '('  shift, and go to state 721


State 562

  332 expr_type_decl: "type" '<' . $@23 type_declaration '>' $@24

    $default  reduce using rule 330 ($@23)

    $@23  go to state 722


State 563

  833 make_dim_decl: "array" "struct" . '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 723


State 564

  836 make_dim_decl: "array" "tuple" . '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 724


State 565

  839 make_dim_decl: "array" "variant" . '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim ')'

    '<'  shift, and go to state 725


State 566

  843 make_dim_decl: "array" '<' . $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list ')'

    $default  reduce using rule 841 ($@106)

    $@106  go to state 726


State 567

  840 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 727
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 568

  853 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  854                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 728
    type_declaration_no_options_no_dim  go to state 275


State 569

  852 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 729
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 730
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    expr_map_tuple_list     go to state 731
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 570

  463 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 732
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 571

  323 expr_cast: "cast" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 321 ($@17)

    $@17  go to state 733


State 572

  326 expr_cast: "upcast" '<' . $@19 type_declaration_no_options '>' $@20 expr

    $default  reduce using rule 324 ($@19)

    $@19  go to state 734


State 573

  464 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 735
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 574

  329 expr_cast: "reinterpret" '<' . $@21 type_declaration_no_options '>' $@22 expr

    $default  reduce using rule 327 ($@21)

    $@21  go to state 736


State 575

  494 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 737
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 576

  847 make_dim_decl: "fixed_array" '<' . $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')'

    $default  reduce using rule 845 ($@108)

    $@108  go to state 738


State 577

  844 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 739
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 578

  823 make_struct_decl: "default" '<' . $@96 type_declaration_no_options '>' $@97 use_initializer

    $default  reduce using rule 821 ($@96)

    $@96  go to state 740


State 579

  829 make_tuple_call: "tuple" '<' . $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 827 ($@98)

    $@98  go to state 741


State 580

  826 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 742
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 581

  820 make_struct_decl: "variant" '<' . $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 818 ($@94)

    $@94  go to state 743


State 582

  495 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  496               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  497               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 744
    type_declaration_no_options_no_dim  go to state 275


State 583

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  448     | "++" expr .
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 448 (expr)


State 584

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  449     | "--" expr .
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 449 (expr)


State 585

  498 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 745
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 586

  499 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 746
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 587

  500 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 747
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 588

  501 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 748
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 589

  502 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 749
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 590

  504 expr_mtag: "$c" '(' . expr ')' '(' ')'
  505          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 750
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 591

   39 string_builder_body: string_builder_body . character_sequence
   40                    | string_builder_body . "{" expr optional_format_string "}"
   41 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 751
    "{"                   shift, and go to state 752

    character_sequence  go to state 753


State 592

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  425 expr: '-' expr .
  426     | expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 425 (expr)


State 593

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  424 expr: '+' expr .
  426     | expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 424 (expr)


State 594

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  462     | '*' expr .
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 462 (expr)


State 595

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  423 expr: '~' expr .
  426     | expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 423 (expr)


State 596

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  422 expr: '!' expr .
  426     | expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 422 (expr)


State 597

  859 array_comprehension: '[' "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 754


State 598

  860 array_comprehension: '[' "iterator" . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "for"  shift, and go to state 755


State 599

  830 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 756


State 600

  279 optional_expr_list: expr_list . optional_comma
  337 expr_list: expr_list . ',' expr

    ','  shift, and go to state 757

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 758


State 601

  336 expr_list: expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 336 (expr_list)


State 602

  797 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  798                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 759


State 603

  284 name_in_namespace: "name" .
  285                  | "name" . "::" "name"
  793 make_struct_fields: "name" . copy_or_move expr
  794                   | "name" . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 761
    "::"  shift, and go to state 96
    '='   shift, and go to state 762

    $default  reduce using rule 284 (name_in_namespace)

    copy_or_move  go to state 763


State 604

  337 expr_list: expr_list . ',' expr
  452 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 764


State 605

  795 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  796                   | make_struct_fields . ',' "name" ":=" expr
  799                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  800                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  803 make_struct_single: make_struct_fields .

    ','  shift, and go to state 765

    $default  reduce using rule 803 (make_struct_single)


State 606

  453 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 766


State 607

  343 block_or_lambda: '@' '@' .
  388 func_addr_expr: '@' '@' . func_addr_name
  391               | '@' '@' . '<' $@25 type_declaration_no_options '>' $@26 func_addr_name
  394               | '@' '@' . '<' $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name
  513 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 767
    "$c"    shift, and go to state 768
    "name"  shift, and go to state 58
    '<'     shift, and go to state 769

    $default  reduce using rule 343 (block_or_lambda)

    name_in_namespace  go to state 770
    func_addr_name     go to state 771


State 608

  861 array_comprehension: '{' "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    '('  shift, and go to state 772


State 609

  851 make_table_decl: '{' $@110 . optional_emit_semis optional_expr_map_tuple_list '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 773


State 610

  382 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  383                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  405 expr_call: name_in_namespace '(' . ')'
  406          | name_in_namespace '(' . "uninitialized" ')'
  407          | name_in_namespace '(' . make_struct_single ')'
  408          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  409          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "uninitialized"                   shift, and go to state 774
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 775
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 776
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 777
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 605
    make_struct_single      go to state 778
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 611

  148 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 779
    name_in_namespace             go to state 70


State 612

  353 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    "capture"  shift, and go to state 780

    $default  reduce using rule 351 (optional_capture_list)

    optional_capture_list  go to state 781


State 613

  342 block_or_lambda: '@' .
  343                | '@' . '@'

    '@'  shift, and go to state 782

    $default  reduce using rule 342 (block_or_lambda)


State 614

  355 expr_full_block_assumed_piped: '{' . expressions '}'

    $default  reduce using rule 275 (expressions)

    expressions  go to state 783


State 615

  354 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '['  shift, and go to state 611

    $default  reduce using rule 147 (optional_annotation_list)

    optional_annotation_list  go to state 784


State 616

  255 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 255 (expr_call_pipe)


State 617

  470 expr: expr "is" . "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr "is" . basic_type_declaration
  472     | expr "is" . "name"
  512 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 785
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 786
    "name"      shift, and go to state 787

    basic_type_declaration  go to state 788


State 618

  473 expr: expr "as" . "name"
  476     | expr "as" . "type" '<' $@33 type_declaration '>' $@34
  477     | expr "as" . basic_type_declaration
  510 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 789
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 790
    "name"      shift, and go to state 791

    basic_type_declaration  go to state 792


State 619

  426 expr: expr "<<" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 793
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 620

  427 expr: expr ">>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 794
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 621

  450 expr: expr "++" .

    $default  reduce using rule 450 (expr)


State 622

  451 expr: expr "--" .

    $default  reduce using rule 451 (expr)


State 623

  439 expr: expr "<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 795
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 624

  440 expr: expr ">=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 796
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 625

  437 expr: expr "==" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 797
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 626

  438 expr: expr "!=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 798
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 627

  384 expr_method_call: expr "->" . "name" '(' ')'
  385                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 799


State 628

  466 expr: expr "??" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 800
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 629

  458 expr: expr "?." . "name"
  507 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 801
    "name"  shift, and go to state 802


State 630

  456 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 803
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 631

  490 expr: expr "<|" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 804
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 632

  491 expr: expr "|>" . expr
  492     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 805
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 806
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 633

  428 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 807
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 634

  429 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 808
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 635

  444 expr: expr "&&" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 809
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 636

  445 expr: expr "||" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 810
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 637

  446 expr: expr "^^" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 811
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 638

  447 expr: expr ".." . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 812
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 639

  467 expr: expr '?' . expr ':' expr
  478     | expr '?' . "as" "name"
  481     | expr '?' . "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr '?' . "as" basic_type_declaration
  511 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "as"                              shift, and go to state 813
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 814
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 640

  442 expr: expr '|' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 815
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 641

  443 expr: expr '^' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 816
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 642

  441 expr: expr '&' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 817
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 643

  435 expr: expr '<' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 818
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 644

  436 expr: expr '>' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 819
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 645

  431 expr: expr '-' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 820
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 646

  430 expr: expr '+' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 821
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 647

  432 expr: expr '*' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 822
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 648

  433 expr: expr '/' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 823
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 649

  434 expr: expr '%' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 824
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 650

  395 expr_field: expr '.' . "name"
  396           | expr '.' . '.' "name"
  397           | expr '.' . "name" '(' ')'
  398           | expr '.' . "name" '(' expr_list ')'
  399           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  400           | expr '.' . basic_type_declaration '(' ')'
  401           | expr '.' . basic_type_declaration '(' expr_list ')'
  404           | expr '.' . $@29 error $@30
  455 expr: expr '.' . '[' expr ']'
  457     | expr '.' . "?[" expr ']'
  459     | expr '.' . "?." "name"
  506 expr_mtag: expr '.' . "$f" '(' expr ')'
  508          | expr '.' . '.' "$f" '(' expr ')'
  509          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "?."        shift, and go to state 825
    "?["        shift, and go to state 826
    "$f"        shift, and go to state 827
    "name"      shift, and go to state 828
    '.'         shift, and go to state 829
    '['         shift, and go to state 830

    $default  reduce using rule 402 ($@29)

    $@29                    go to state 831
    basic_type_declaration  go to state 832


State 651

  454 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 833
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 652

  714 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 714 (type_declaration_no_options_no_dim)


State 653

  410 expr_call: basic_type_declaration '(' . ')'
  411          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 834
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 835
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 654

  742 type_declaration_no_options_no_dim: "iterator" '<' $@60 type_declaration . '>' $@61
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 836


State 655

  732 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 type_declaration . '>' $@55
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 837


State 656

  687 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 687 (auto_type_declaration)


State 657

  689 bitfield_bits: "name" .

    $default  reduce using rule 689 (bitfield_bits)


State 658

  690 bitfield_bits: bitfield_bits . ';' "name"
  696 bitfield_type_declaration: "bitfield" '<' $@49 bitfield_bits . '>' $@50

    '>'  shift, and go to state 838
    ';'  shift, and go to state 839


State 659

  746 type_declaration_no_options_no_dim: "block" '<' $@62 type_declaration . '>' $@63
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 840


State 660

  749 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list . optional_function_type '>' $@65

    ':'  shift, and go to state 394

    $default  reduce using rule 154 (optional_function_type)

    optional_function_type  go to state 841


State 661

  753 type_declaration_no_options_no_dim: "function" '<' $@66 type_declaration . '>' $@67
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 842


State 662

  756 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list . optional_function_type '>' $@69

    ':'  shift, and go to state 394

    $default  reduce using rule 154 (optional_function_type)

    optional_function_type  go to state 843


State 663

  760 type_declaration_no_options_no_dim: "lambda" '<' $@70 type_declaration . '>' $@71
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 844


State 664

  763 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list . optional_function_type '>' $@73

    ':'  shift, and go to state 394

    $default  reduce using rule 154 (optional_function_type)

    optional_function_type  go to state 845


State 665

  284 name_in_namespace: "name" .
  285                  | "name" . "::" "name"
  544 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 96
    ':'   shift, and go to state 846

    $default  reduce using rule 284 (name_in_namespace)


State 666

  545 tuple_type_list: tuple_type .

    $default  reduce using rule 545 (tuple_type_list)


State 667

  546 tuple_type_list: tuple_type_list . c_or_s tuple_type
  766 type_declaration_no_options_no_dim: "tuple" '<' $@74 tuple_type_list . '>' $@75

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 847
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 848


State 668

  543 tuple_type: type_declaration .
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 543 (tuple_type)


State 669

  550 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 849


State 670

  551 variant_type_list: variant_type .

    $default  reduce using rule 551 (variant_type_list)


State 671

  552 variant_type_list: variant_type_list . c_or_s variant_type
  769 type_declaration_no_options_no_dim: "variant" '<' $@76 variant_type_list . '>' $@77

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 850
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 851


State 672

  688 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 688 (auto_type_declaration)


State 673

  717 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    type_declaration_no_options_list    go to state 852
    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 853


State 674

  715 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 854


State 675

  718 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 718 (type_declaration_no_options_no_dim)


State 676

  701 dim_list: '[' expr ']' .

    $default  reduce using rule 701 (dim_list)


State 677

  704 dim_list: dim_list '[' ']' .

    $default  reduce using rule 704 (dim_list)


State 678

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  703 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 855


State 679

  692 bitfield_alias_bits: "name" .

    $default  reduce using rule 692 (bitfield_alias_bits)


State 680

  693 bitfield_alias_bits: bitfield_alias_bits . commas "name"
  787 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits . optional_commas $@89 '}'

    "new line, comma"  shift, and go to state 711
    ','                shift, and go to state 712

    $default  reduce using rule 617 (optional_commas)

    COMMA            go to state 856
    commas           go to state 857
    optional_commas  go to state 858


State 681

  548 tuple_alias_type_list: tuple_type .

    $default  reduce using rule 548 (tuple_alias_type_list)


State 682

  549 tuple_alias_type_list: tuple_alias_type_list . semis tuple_type
  777 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list . optional_semis $@81 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 84 (optional_semis)

    SEMICOLON       go to state 859
    semis           go to state 860
    optional_semis  go to state 861


State 683

  554 variant_alias_type_list: variant_type .

    $default  reduce using rule 554 (variant_alias_type_list)


State 684

  555 variant_alias_type_list: variant_alias_type_list . semis variant_type
  782 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list . optional_semis $@85 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 84 (optional_semis)

    SEMICOLON       go to state 859
    semis           go to state 862
    optional_semis  go to state 863


State 685

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  537 function_argument_declaration_type: "$a" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 864


State 686

  646 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 865


State 687

  645 variable_name_with_pos_list: "name" .
  647                            | "name" . "aka" "name"

    "aka"  shift, and go to state 866

    $default  reduce using rule 645 (variable_name_with_pos_list)


State 688

  535 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type .

    $default  reduce using rule 535 (function_argument_declaration_no_type)


State 689

  536 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type .

    $default  reduce using rule 536 (function_argument_declaration_type)


State 690

  558 variable_declaration_no_type: variable_name_with_pos_list .
  559                             | variable_name_with_pos_list . '&'
  560                             | variable_name_with_pos_list . copy_or_move expr
  561 variable_declaration_type: variable_name_with_pos_list . ':' type_declaration
  562                          | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  648 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  649                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 760
    ','   shift, and go to state 867
    '='   shift, and go to state 762
    ':'   shift, and go to state 868
    '&'   shift, and go to state 869

    $default  reduce using rule 558 (variable_declaration_no_type)

    copy_or_move  go to state 870


State 691

  540 function_argument_list: function_argument_declaration_no_type ';' function_argument_list .

    $default  reduce using rule 540 (function_argument_list)


State 692

  542 function_argument_list: function_argument_declaration_type ',' function_argument_list .

    $default  reduce using rule 542 (function_argument_list)


State 693

  541 function_argument_list: function_argument_declaration_type ';' function_argument_list .

    $default  reduce using rule 541 (function_argument_list)


State 694

  254 expression_block: $@13 '{' expressions . $@14 '}' expression_block_finally
  276 expressions: expressions . expression_any
  277            | expressions . error

    error                             shift, and go to state 871
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "try"                             shift, and go to state 874
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 875
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 876
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "pass"                            shift, and go to state 878
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 879
    "goto"                            shift, and go to state 880
    "unsafe"                          shift, and go to state 881
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 104 ($@8)
    "if"         reduce using rule 91 ($@6)
    "static_if"  reduce using rule 91 ($@6)
    "for"        reduce using rule 101 ($@7)
    "with"       reduce using rule 106 ($@9)
    '}'          reduce using rule 253 ($@14)

    SEMICOLON                         go to state 883
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 884
    expression_goto                   go to state 885
    expression_if_one_liner           go to state 886
    expression_if_then_else           go to state 887
    $@6                               go to state 888
    expression_if_then_else_oneliner  go to state 889
    expression_for_loop               go to state 890
    $@7                               go to state 891
    expression_unsafe                 go to state 892
    expression_while_loop             go to state 893
    $@8                               go to state 894
    expression_with                   go to state 895
    $@9                               go to state 896
    expression_with_alias             go to state 897
    $@14                              go to state 898
    expr_call_pipe                    go to state 471
    expression_any                    go to state 899
    name_in_namespace                 go to state 472
    expression_delete                 go to state 900
    expr_new                          go to state 473
    expression_break                  go to state 901
    expression_continue               go to state 902
    expression_return                 go to state 903
    expression_yield                  go to state 904
    expression_try_catch              go to state 905
    kwd_let                           go to state 906
    expression_let                    go to state 907
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 908
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 909
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 695

  626 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 . enum_list optional_commas $@45 '}'

    "name"  shift, and go to state 910

    $default  reduce using rule 602 (enum_list)

    enum_expression  go to state 911
    enum_list        go to state 912


State 696

  628 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 628 (optional_structure_parent)


State 697

  639 optional_struct_variable_declaration_list: ';' .

    $default  reduce using rule 639 (optional_struct_variable_declaration_list)


State 698

  640 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 527 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 913


State 699

  644 structure_declaration: optional_annotation_list_with_emit_semis $@46 class_or_struct optional_public_or_private_structure $@47 structure_name optional_emit_semis $@48 optional_struct_variable_declaration_list .

    $default  reduce using rule 644 (structure_declaration)


State 700

  571 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 914
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 701

  572 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 915


State 702

  573 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  574                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 916


State 703

  580 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  581                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 917
    type_declaration_no_options_no_dim  go to state 275


State 704

  582 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 547
    ":="  shift, and go to state 548
    '='   shift, and go to state 549

    copy_or_move_or_clone  go to state 918


State 705

  583 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 583 (global_let_variable_declaration)


State 706

  584 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 919
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 707

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  585 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 920


State 708

  713 type_declaration_no_options_no_dim: "type" '<' $@51 type_declaration '>' . $@52

    $default  reduce using rule 712 ($@52)

    $@52  go to state 921


State 709

  736 type_declaration_no_options_no_dim: "array" '<' $@56 type_declaration '>' . $@57

    $default  reduce using rule 735 ($@57)

    $@57  go to state 922


State 710

  739 type_declaration_no_options_no_dim: "table" '<' $@58 table_type_pair '>' . $@59

    $default  reduce using rule 738 ($@59)

    $@59  go to state 923


State 711

   17 COMMA: "new line, comma" .

    $default  reduce using rule 17 (COMMA)


State 712

   16 COMMA: ',' .

    $default  reduce using rule 16 (COMMA)


State 713

  697 c_or_s: COMMA .

    $default  reduce using rule 697 (c_or_s)


State 714

  698 c_or_s: SEMICOLON .

    $default  reduce using rule 698 (c_or_s)


State 715

  700 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 924


State 716

  814 make_struct_decl: "struct" '<' $@90 . type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 925
    type_declaration_no_options_no_dim  go to state 275


State 717

  817 make_struct_decl: "class" '<' $@92 . type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 926
    type_declaration_no_options_no_dim  go to state 275


State 718

  291 new_type_declaration: '<' $@15 . type_declaration '>' $@16

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 927


State 719

  294 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  295         | "new" new_type_declaration '(' . expr_list ')'
  296         | "new" new_type_declaration '(' . make_struct_single ')'
  297         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "uninitialized"                   shift, and go to state 928
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 810 (use_initializer)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 929
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 605
    make_struct_single      go to state 930
    use_initializer         go to state 931
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 720

  334 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  335               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 932


State 721

  333 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 933
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 722

  332 expr_type_decl: "type" '<' $@23 . type_declaration '>' $@24

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 934


State 723

  833 make_dim_decl: "array" "struct" '<' . $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 831 ($@100)

    $@100  go to state 935


State 724

  836 make_dim_decl: "array" "tuple" '<' . $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 834 ($@102)

    $@102  go to state 936


State 725

  839 make_dim_decl: "array" "variant" '<' . $@104 variant_type_list '>' $@105 '(' make_variant_dim ')'

    $default  reduce using rule 837 ($@104)

    $@104  go to state 937


State 726

  843 make_dim_decl: "array" '<' $@106 . type_declaration_no_options '>' $@107 '(' optional_expr_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 938
    type_declaration_no_options_no_dim  go to state 275


State 727

  337 expr_list: expr_list . ',' expr
  840 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 939


State 728

  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"
  853 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  854                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "??"                   shift, and go to state 370
    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '>'                    shift, and go to state 940
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 941


State 729

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  824 make_map_tuple: expr . "=>" expr
  825               | expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "=>"   shift, and go to state 942
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 825 (make_map_tuple)


State 730

  848 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 848 (expr_map_tuple_list)


State 731

  849 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  852 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 943

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 944


State 732

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  463     | "deref" '(' expr . ')'
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 945


State 733

  323 expr_cast: "cast" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 946
    type_declaration_no_options_no_dim  go to state 275


State 734

  326 expr_cast: "upcast" '<' $@19 . type_declaration_no_options '>' $@20 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 947
    type_declaration_no_options_no_dim  go to state 275


State 735

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  464     | "addr" '(' expr . ')'
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 948


State 736

  329 expr_cast: "reinterpret" '<' $@21 . type_declaration_no_options '>' $@22 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 949
    type_declaration_no_options_no_dim  go to state 275


State 737

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  494     | "unsafe" '(' expr . ')'
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 950


State 738

  847 make_dim_decl: "fixed_array" '<' $@108 . type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 951
    type_declaration_no_options_no_dim  go to state 275


State 739

  337 expr_list: expr_list . ',' expr
  844 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 952


State 740

  823 make_struct_decl: "default" '<' $@96 . type_declaration_no_options '>' $@97 use_initializer

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 953
    type_declaration_no_options_no_dim  go to state 275


State 741

  829 make_tuple_call: "tuple" '<' $@98 . tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 666
    tuple_type_list                     go to state 954
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 742

  337 expr_list: expr_list . ',' expr
  826 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 955


State 743

  820 make_struct_decl: "variant" '<' $@94 . variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 669

    variant_type       go to state 670
    variant_type_list  go to state 956


State 744

  495 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  496               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  497               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_emit_semis expression_block
  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 957
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 745

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  498 expr_mtag: "$$" '(' expr . ')'
  506          | expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 958


State 746

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  499 expr_mtag: "$i" '(' expr . ')'
  506          | expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 959


State 747

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  500 expr_mtag: "$v" '(' expr . ')'
  506          | expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 960


State 748

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  501 expr_mtag: "$b" '(' expr . ')'
  506          | expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 961


State 749

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  502 expr_mtag: "$a" '(' expr . ')'
  506          | expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 962


State 750

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  504 expr_mtag: "$c" '(' expr . ')' '(' ')'
  505          | "$c" '(' expr . ')' '(' expr_list ')'
  506          | expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 963


State 751

   41 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 41 (string_builder)


State 752

   40 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 964
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 753

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   39 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224

    $default  reduce using rule 39 (string_builder_body)


State 754

  859 array_comprehension: '[' "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 965
    "name"  shift, and go to state 966
    '('     shift, and go to state 967

    for_variable_name_with_pos_list  go to state 968


State 755

  860 array_comprehension: '[' "iterator" "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 969


State 756

  830 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 830 (make_dim_decl)


State 757

  337 expr_list: expr_list ',' . expr
  858 optional_comma: ',' .

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 858 (optional_comma)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 970
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 758

  279 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 279 (optional_expr_list)


State 759

  797 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  798                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 971
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 760

  557 copy_or_move: "<-" .

    $default  reduce using rule 557 (copy_or_move)


State 761

  794 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 972
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 762

  556 copy_or_move: '=' .

    $default  reduce using rule 556 (copy_or_move)


State 763

  793 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 973
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 764

  452 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 974


State 765

  795 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  796                   | make_struct_fields ',' . "name" ":=" expr
  799                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  800                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 975
    "name"  shift, and go to state 976


State 766

  453 expr: '(' make_struct_single ')' .

    $default  reduce using rule 453 (expr)


State 767

  387 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 977


State 768

  513 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 978


State 769

  391 func_addr_expr: '@' '@' '<' . $@25 type_declaration_no_options '>' $@26 func_addr_name
  394               | '@' '@' '<' . $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name

    ':'       reduce using rule 392 ($@27)
    '>'       reduce using rule 392 ($@27)
    '('       reduce using rule 392 ($@27)
    $default  reduce using rule 389 ($@25)

    $@25  go to state 979
    $@27  go to state 980


State 770

  386 func_addr_name: name_in_namespace .

    $default  reduce using rule 386 (func_addr_name)


State 771

  388 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 388 (func_addr_expr)


State 772

  861 array_comprehension: '{' "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 965
    "name"  shift, and go to state 966
    '('     shift, and go to state 967

    for_variable_name_with_pos_list  go to state 981


State 773

  851 make_table_decl: '{' $@110 optional_emit_semis . optional_expr_map_tuple_list '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 280 (optional_expr_map_tuple_list)

    string_builder                go to state 469
    expr_reader                   go to state 470
    expr_call_pipe                go to state 471
    optional_expr_map_tuple_list  go to state 982
    name_in_namespace             go to state 472
    expr_new                      go to state 473
    expr_cast                     go to state 474
    expr_type_decl                go to state 475
    expr_type_info                go to state 476
    block_or_lambda               go to state 477
    expr_full_block               go to state 478
    expr_numeric_const            go to state 479
    expr_named_call               go to state 480
    expr_method_call              go to state 481
    func_addr_expr                go to state 482
    expr_field                    go to state 483
    expr_call                     go to state 484
    expr                          go to state 729
    expr_generator                go to state 486
    expr_mtag                     go to state 487
    basic_type_declaration        go to state 488
    make_decl                     go to state 489
    make_struct_decl              go to state 490
    make_map_tuple                go to state 730
    make_tuple_call               go to state 491
    make_dim_decl                 go to state 492
    expr_map_tuple_list           go to state 983
    make_table_decl               go to state 493
    array_comprehension           go to state 494


State 774

  406 expr_call: name_in_namespace '(' "uninitialized" . ')'
  408          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 984
    ')'     shift, and go to state 985

    make_struct_fields  go to state 605
    make_struct_single  go to state 986


State 775

  382 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  830 make_dim_decl: '[' . optional_expr_list ']'
  859 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  860                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 278 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 599
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 987
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 776

  405 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 405 (expr_call)


State 777

  337 expr_list: expr_list . ',' expr
  383 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  409 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 988
    ')'  shift, and go to state 989


State 778

  407 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 990


State 779

  146 annotation_list: annotation_list . ',' annotation_declaration
  148 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 105
    ']'  shift, and go to state 991


State 780

  352 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 992


State 781

  353 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '('  shift, and go to state 334

    $default  reduce using rule 151 (optional_function_argument_list)

    optional_function_argument_list  go to state 993


State 782

  343 block_or_lambda: '@' '@' .

    $default  reduce using rule 343 (block_or_lambda)


State 783

  276 expressions: expressions . expression_any
  277            | expressions . error
  355 expr_full_block_assumed_piped: '{' expressions . '}'

    error                             shift, and go to state 871
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "try"                             shift, and go to state 874
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 875
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 876
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "pass"                            shift, and go to state 878
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 879
    "goto"                            shift, and go to state 880
    "unsafe"                          shift, and go to state 881
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468
    '}'                               shift, and go to state 994

    "while"      reduce using rule 104 ($@8)
    "if"         reduce using rule 91 ($@6)
    "static_if"  reduce using rule 91 ($@6)
    "for"        reduce using rule 101 ($@7)
    "with"       reduce using rule 106 ($@9)

    SEMICOLON                         go to state 883
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 884
    expression_goto                   go to state 885
    expression_if_one_liner           go to state 886
    expression_if_then_else           go to state 887
    $@6                               go to state 888
    expression_if_then_else_oneliner  go to state 889
    expression_for_loop               go to state 890
    $@7                               go to state 891
    expression_unsafe                 go to state 892
    expression_while_loop             go to state 893
    $@8                               go to state 894
    expression_with                   go to state 895
    $@9                               go to state 896
    expression_with_alias             go to state 897
    expr_call_pipe                    go to state 471
    expression_any                    go to state 899
    name_in_namespace                 go to state 472
    expression_delete                 go to state 900
    expr_new                          go to state 473
    expression_break                  go to state 901
    expression_continue               go to state 902
    expression_return                 go to state 903
    expression_yield                  go to state 904
    expression_try_catch              go to state 905
    kwd_let                           go to state 906
    expression_let                    go to state 907
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 908
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 909
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 784

  354 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    "capture"  shift, and go to state 780

    $default  reduce using rule 351 (optional_capture_list)

    optional_capture_list  go to state 995


State 785

  470 expr: expr "is" "type" . '<' $@31 type_declaration_no_options '>' $@32

    '<'  shift, and go to state 996


State 786

  512 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 997


State 787

  472 expr: expr "is" "name" .

    $default  reduce using rule 472 (expr)


State 788

  471 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 471 (expr)


State 789

  476 expr: expr "as" "type" . '<' $@33 type_declaration '>' $@34

    '<'  shift, and go to state 998


State 790

  510 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 999


State 791

  473 expr: expr "as" "name" .

    $default  reduce using rule 473 (expr)


State 792

  477 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 477 (expr)


State 793

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  426     | expr "<<" expr .
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '-'   shift, and go to state 645
    '+'   shift, and go to state 646
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 426 (expr)


State 794

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  427     | expr ">>" expr .
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '-'   shift, and go to state 645
    '+'   shift, and go to state 646
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 427 (expr)


State 795

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  439     | expr "<=" expr .
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 439 (expr)


State 796

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  440     | expr ">=" expr .
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 440 (expr)


State 797

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  437     | expr "==" expr .
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 437 (expr)


State 798

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  438     | expr "!=" expr .
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 438 (expr)


State 799

  384 expr_method_call: expr "->" "name" . '(' ')'
  385                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1000


State 800

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  466     | expr "??" expr .
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 466 (expr)


State 801

  507 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1001


State 802

  458 expr: expr "?." "name" .

    $default  reduce using rule 458 (expr)


State 803

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  456     | expr "?[" expr . ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 1002


State 804

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  490     | expr "<|" expr .
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 490 (expr)


State 805

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  491     | expr "|>" expr .
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 491 (expr)


State 806

  410 expr_call: basic_type_declaration . '(' ')'
  411          | basic_type_declaration . '(' expr_list ')'
  492 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 653

    $default  reduce using rule 492 (expr)


State 807

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  428     | expr "<<<" expr .
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '-'   shift, and go to state 645
    '+'   shift, and go to state 646
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 428 (expr)


State 808

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  429     | expr ">>>" expr .
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '-'   shift, and go to state 645
    '+'   shift, and go to state 646
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 429 (expr)


State 809

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  444     | expr "&&" expr .
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 444 (expr)


State 810

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  445     | expr "||" expr .
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "^^"   shift, and go to state 637
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 445 (expr)


State 811

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  446     | expr "^^" expr .
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 446 (expr)


State 812

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  447     | expr ".." expr .
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    ".."  error (nonassociative)

    $default  reduce using rule 447 (expr)


State 813

  478 expr: expr '?' "as" . "name"
  481     | expr '?' "as" . "type" '<' $@35 type_declaration '>' $@36
  482     | expr '?' "as" . basic_type_declaration
  511 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1003
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 1004
    "name"      shift, and go to state 1005

    basic_type_declaration  go to state 1006


State 814

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  467     | expr '?' expr . ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    ':'    shift, and go to state 1007
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651


State 815

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  442     | expr '|' expr .
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 442 (expr)


State 816

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  443     | expr '^' expr .
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 443 (expr)


State 817

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  441     | expr '&' expr .
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 441 (expr)


State 818

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  435     | expr '<' expr .
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 435 (expr)


State 819

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  436     | expr '>' expr .
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 436 (expr)


State 820

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  431     | expr '-' expr .
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 431 (expr)


State 821

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  430     | expr '+' expr .
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 430 (expr)


State 822

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  432     | expr '*' expr .
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 432 (expr)


State 823

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  433     | expr '/' expr .
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 433 (expr)


State 824

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  434     | expr '%' expr .
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 434 (expr)


State 825

  459 expr: expr '.' "?." . "name"
  509 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1008
    "name"  shift, and go to state 1009


State 826

  457 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1010
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 827

  506 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1011


State 828

  395 expr_field: expr '.' "name" .
  397           | expr '.' "name" . '(' ')'
  398           | expr '.' "name" . '(' expr_list ')'
  399           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1012

    $default  reduce using rule 395 (expr_field)


State 829

  396 expr_field: expr '.' '.' . "name"
  508 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1013
    "name"  shift, and go to state 1014


State 830

  455 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1015
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 831

  404 expr_field: expr '.' $@29 . error $@30

    error  shift, and go to state 1016


State 832

  400 expr_field: expr '.' basic_type_declaration . '(' ')'
  401           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1017


State 833

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  454     | expr '[' expr . ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 1018


State 834

  410 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 410 (expr_call)


State 835

  337 expr_list: expr_list . ',' expr
  411 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1019
    ')'  shift, and go to state 1020


State 836

  742 type_declaration_no_options_no_dim: "iterator" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 741 ($@61)

    $@61  go to state 1021


State 837

  732 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 731 ($@55)

    $@55  go to state 1022


State 838

  696 bitfield_type_declaration: "bitfield" '<' $@49 bitfield_bits '>' . $@50

    $default  reduce using rule 695 ($@50)

    $@50  go to state 1023


State 839

  690 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1024


State 840

  746 type_declaration_no_options_no_dim: "block" '<' $@62 type_declaration '>' . $@63

    $default  reduce using rule 745 ($@63)

    $@63  go to state 1025


State 841

  749 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list optional_function_type . '>' $@65

    '>'  shift, and go to state 1026


State 842

  753 type_declaration_no_options_no_dim: "function" '<' $@66 type_declaration '>' . $@67

    $default  reduce using rule 752 ($@67)

    $@67  go to state 1027


State 843

  756 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list optional_function_type . '>' $@69

    '>'  shift, and go to state 1028


State 844

  760 type_declaration_no_options_no_dim: "lambda" '<' $@70 type_declaration '>' . $@71

    $default  reduce using rule 759 ($@71)

    $@71  go to state 1029


State 845

  763 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list optional_function_type . '>' $@73

    '>'  shift, and go to state 1030


State 846

  544 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1031


State 847

  766 type_declaration_no_options_no_dim: "tuple" '<' $@74 tuple_type_list '>' . $@75

    $default  reduce using rule 765 ($@75)

    $@75  go to state 1032


State 848

  546 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 1033
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 849

  550 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1034


State 850

  769 type_declaration_no_options_no_dim: "variant" '<' $@76 variant_type_list '>' . $@77

    $default  reduce using rule 768 ($@77)

    $@77  go to state 1035


State 851

  552 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 669

    variant_type  go to state 1036


State 852

  283 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  717 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1037
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 1038


State 853

  282 type_declaration_no_options_list: type_declaration .
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 282 (type_declaration_no_options_list)


State 854

  715 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 715 (type_declaration_no_options_no_dim)


State 855

  703 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 703 (dim_list)


State 856

  600 commas: COMMA .

    $default  reduce using rule 600 (commas)


State 857

  601 commas: commas . COMMA
  618 optional_commas: commas .
  693 bitfield_alias_bits: bitfield_alias_bits commas . "name"

    "name"             shift, and go to state 1039
    "new line, comma"  shift, and go to state 711
    ','                shift, and go to state 712

    $default  reduce using rule 618 (optional_commas)

    COMMA  go to state 1040


State 858

  787 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas . $@89 '}'

    $default  reduce using rule 786 ($@89)

    $@89  go to state 1041


State 859

   82 semis: SEMICOLON .

    $default  reduce using rule 82 (semis)


State 860

   83 semis: semis . SEMICOLON
   85 optional_semis: semis .
  549 tuple_alias_type_list: tuple_alias_type_list semis . tuple_type

    "type"                 shift, and go to state 228
    "array"                shift, and go to state 229
    "table"                shift, and go to state 230
    "typedecl"             shift, and go to state 231
    "iterator"             shift, and go to state 232
    "smart_ptr"            shift, and go to state 233
    "bool"                 shift, and go to state 234
    "void"                 shift, and go to state 235
    "string"               shift, and go to state 236
    "auto"                 shift, and go to state 237
    "int"                  shift, and go to state 238
    "int2"                 shift, and go to state 239
    "int3"                 shift, and go to state 240
    "int4"                 shift, and go to state 241
    "uint"                 shift, and go to state 242
    "bitfield"             shift, and go to state 243
    "uint2"                shift, and go to state 244
    "uint3"                shift, and go to state 245
    "uint4"                shift, and go to state 246
    "float"                shift, and go to state 247
    "float2"               shift, and go to state 248
    "float3"               shift, and go to state 249
    "float4"               shift, and go to state 250
    "range"                shift, and go to state 251
    "urange"               shift, and go to state 252
    "range64"              shift, and go to state 253
    "urange64"             shift, and go to state 254
    "block"                shift, and go to state 255
    "int64"                shift, and go to state 256
    "uint64"               shift, and go to state 257
    "double"               shift, and go to state 258
    "function"             shift, and go to state 259
    "lambda"               shift, and go to state 260
    "int8"                 shift, and go to state 261
    "uint8"                shift, and go to state 262
    "int16"                shift, and go to state 263
    "uint16"               shift, and go to state 264
    "tuple"                shift, and go to state 265
    "variant"              shift, and go to state 266
    "::"                   shift, and go to state 57
    "$t"                   shift, and go to state 267
    "name"                 shift, and go to state 665
    "new line, semicolon"  shift, and go to state 13
    '$'                    shift, and go to state 268
    ';'                    shift, and go to state 16

    $default  reduce using rule 85 (optional_semis)

    SEMICOLON                           go to state 1042
    name_in_namespace                   go to state 269
    tuple_type                          go to state 1043
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 861

  777 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis . $@81 '}'

    $default  reduce using rule 776 ($@81)

    $@81  go to state 1044


State 862

   83 semis: semis . SEMICOLON
   85 optional_semis: semis .
  555 variant_alias_type_list: variant_alias_type_list semis . variant_type

    "name"                 shift, and go to state 669
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 85 (optional_semis)

    SEMICOLON     go to state 1042
    variant_type  go to state 1045


State 863

  782 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis . $@85 '}'

    $default  reduce using rule 781 ($@85)

    $@85  go to state 1046


State 864

  537 function_argument_declaration_type: "$a" '(' expr ')' .

    $default  reduce using rule 537 (function_argument_declaration_type)


State 865

  646 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1047
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 866

  647 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1048


State 867

  648 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  649                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1049


State 868

  561 variable_declaration_type: variable_name_with_pos_list ':' . type_declaration
  562                          | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1050


State 869

  559 variable_declaration_no_type: variable_name_with_pos_list '&' .

    $default  reduce using rule 559 (variable_declaration_no_type)


State 870

  560 variable_declaration_no_type: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1051
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 871

  277 expressions: expressions error .

    $default  reduce using rule 277 (expressions)


State 872

  301 expression_return: "return" .
  302                  | "return" . expr
  303                  | "return" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1052
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 301 (expression_return)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1053
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 873

  299 expression_break: "break" .

    $default  reduce using rule 299 (expression_break)


State 874

  306 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 252 ($@13)

    expression_block  go to state 1054
    $@13              go to state 397


State 875

  287 expression_delete: "delete" . expr
  288                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "explicit"                        shift, and go to state 1055
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1056
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 876

  108 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 1057


State 877

  300 expression_continue: "continue" .

    $default  reduce using rule 300 (expression_continue)


State 878

  274 expression_any: "pass" . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1058


State 879

   61 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 1059


State 880

   62 expression_goto: "goto" . "label" "integer constant"
   63                | "goto" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 1060
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1061
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 881

  103 expression_unsafe: "unsafe" . optional_emit_semis expression_block
  494 expr: "unsafe" . '(' expr ')'

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 575

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1062


State 882

  304 expression_yield: "yield" . expr
  305                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1063
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1064
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 883

  256 expression_any: SEMICOLON .

    $default  reduce using rule 256 (expression_any)


State 884

  272 expression_any: expression_label . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1065


State 885

  273 expression_any: expression_goto . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1066


State 886

   93 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner SEMICOLON

    "if"  shift, and go to state 1067


State 887

  269 expression_any: expression_if_then_else .

    $default  reduce using rule 269 (expression_any)


State 888

   92 expression_if_then_else: $@6 . if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

    "if"         shift, and go to state 1068
    "static_if"  shift, and go to state 1069

    if_or_static_if  go to state 1070


State 889

  270 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 270 (expression_any)


State 890

  264 expression_any: expression_for_loop .

    $default  reduce using rule 264 (expression_any)


State 891

  102 expression_for_loop: $@7 . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "for"  shift, and go to state 1071


State 892

  261 expression_any: expression_unsafe .

    $default  reduce using rule 261 (expression_any)


State 893

  260 expression_any: expression_while_loop .

    $default  reduce using rule 260 (expression_any)


State 894

  105 expression_while_loop: $@8 . "while" '(' expr ')' optional_emit_semis expression_block

    "while"  shift, and go to state 1072


State 895

  262 expression_any: expression_with .

    $default  reduce using rule 262 (expression_any)


State 896

  107 expression_with: $@9 . "with" '(' expr ')' optional_emit_semis expression_block

    "with"  shift, and go to state 1073


State 897

  263 expression_any: expression_with_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1074


State 898

  254 expression_block: $@13 '{' expressions $@14 . '}' expression_block_finally

    '}'  shift, and go to state 1075


State 899

  276 expressions: expressions expression_any .

    $default  reduce using rule 276 (expressions)


State 900

  258 expression_any: expression_delete . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1076


State 901

   80 expression_if_one_liner: expression_break .
  265 expression_any: expression_break . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 80 (expression_if_one_liner)

    SEMICOLON  go to state 1077


State 902

   81 expression_if_one_liner: expression_continue .
  266 expression_any: expression_continue . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 81 (expression_if_one_liner)

    SEMICOLON  go to state 1078


State 903

   78 expression_if_one_liner: expression_return .
  267 expression_any: expression_return . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 78 (expression_if_one_liner)

    SEMICOLON  go to state 1079


State 904

   79 expression_if_one_liner: expression_yield .
  268 expression_any: expression_yield . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 79 (expression_if_one_liner)

    SEMICOLON  go to state 1080


State 905

  271 expression_any: expression_try_catch .

    $default  reduce using rule 271 (expression_any)


State 906

  318 expression_let: kwd_let . optional_in_scope let_variable_declaration
  319               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  320               | kwd_let . optional_in_scope '{' variable_declaration_list '}'

    "inscope"  shift, and go to state 1081

    $default  reduce using rule 313 (optional_in_scope)

    optional_in_scope  go to state 1082


State 907

  259 expression_any: expression_let .

    $default  reduce using rule 259 (expression_any)


State 908

  257 expression_any: expr_assign . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1083


State 909

   77 expression_if_one_liner: expr .
  363 expr_assign: expr .
  364            | expr . '=' expr
  365            | expr . "<-" expr
  366            | expr . ":=" expr
  367            | expr . "&=" expr
  368            | expr . "|=" expr
  369            | expr . "^=" expr
  370            | expr . "&&=" expr
  371            | expr . "||=" expr
  372            | expr . "^^=" expr
  373            | expr . "+=" expr
  374            | expr . "-=" expr
  375            | expr . "*=" expr
  376            | expr . "/=" expr
  377            | expr . "%=" expr
  378            | expr . "<<=" expr
  379            | expr . ">>=" expr
  380            | expr . "<<<=" expr
  381            | expr . ">>>=" expr
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 617
    "as"    shift, and go to state 618
    "+="    shift, and go to state 1084
    "-="    shift, and go to state 1085
    "/="    shift, and go to state 1086
    "*="    shift, and go to state 1087
    "%="    shift, and go to state 1088
    "&="    shift, and go to state 1089
    "|="    shift, and go to state 1090
    "^="    shift, and go to state 1091
    "<<"    shift, and go to state 619
    ">>"    shift, and go to state 620
    "++"    shift, and go to state 621
    "--"    shift, and go to state 622
    "<="    shift, and go to state 623
    "<<="   shift, and go to state 1092
    ">>="   shift, and go to state 1093
    ">="    shift, and go to state 624
    "=="    shift, and go to state 625
    "!="    shift, and go to state 626
    "->"    shift, and go to state 627
    "<-"    shift, and go to state 1094
    "??"    shift, and go to state 628
    "?."    shift, and go to state 629
    "?["    shift, and go to state 630
    "<|"    shift, and go to state 631
    "|>"    shift, and go to state 632
    ":="    shift, and go to state 1095
    "<<<"   shift, and go to state 633
    ">>>"   shift, and go to state 634
    "<<<="  shift, and go to state 1096
    ">>>="  shift, and go to state 1097
    "&&"    shift, and go to state 635
    "||"    shift, and go to state 636
    "^^"    shift, and go to state 637
    "&&="   shift, and go to state 1098
    "||="   shift, and go to state 1099
    "^^="   shift, and go to state 1100
    ".."    shift, and go to state 638
    '='     shift, and go to state 1101
    '?'     shift, and go to state 639
    '|'     shift, and go to state 640
    '^'     shift, and go to state 641
    '&'     shift, and go to state 642
    '<'     shift, and go to state 643
    '>'     shift, and go to state 644
    '-'     shift, and go to state 645
    '+'     shift, and go to state 646
    '*'     shift, and go to state 647
    '/'     shift, and go to state 648
    '%'     shift, and go to state 649
    '.'     shift, and go to state 650
    '['     shift, and go to state 651

    "if"      reduce using rule 77 (expression_if_one_liner)
    $default  reduce using rule 363 (expr_assign)


State 910

  598 enum_expression: "name" .
  599                | "name" . '=' expr

    '='  shift, and go to state 1102

    $default  reduce using rule 598 (enum_expression)


State 911

  603 enum_list: enum_expression .

    $default  reduce using rule 603 (enum_list)


State 912

  604 enum_list: enum_list . commas enum_expression
  626 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list . optional_commas $@45 '}'

    "new line, comma"  shift, and go to state 711
    ','                shift, and go to state 712

    $default  reduce using rule 617 (optional_commas)

    COMMA            go to state 856
    commas           go to state 1103
    optional_commas  go to state 1104


State 913

  528 struct_variable_declaration_list: struct_variable_declaration_list . "new line, semicolon"
  530                                 | struct_variable_declaration_list . $@37 structure_variable_declaration SEMICOLON
  532                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON
  534                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block
  640 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 1105
    '['                    shift, and go to state 15
    '}'                    shift, and go to state 1106

    "def"     reduce using rule 149 (optional_annotation_list_with_emit_semis)
    $default  reduce using rule 529 ($@37)

    optional_annotation_list_with_emit_semis  go to state 1107
    $@37                                      go to state 1108


State 914

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  571 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1109


State 915

  572 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 572 (let_variable_name_with_pos_list)


State 916

  573 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  574                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1110

    $default  reduce using rule 573 (let_variable_name_with_pos_list)


State 917

  580 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  581                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "<-"                   shift, and go to state 547
    "??"                   shift, and go to state 370
    ":="                   shift, and go to state 548
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 549
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    SEMICOLON              go to state 1111
    copy_or_move_or_clone  go to state 1112


State 918

  582 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1113
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 919

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  584 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1114


State 920

  585 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 585 (global_let_variable_declaration)


State 921

  713 type_declaration_no_options_no_dim: "type" '<' $@51 type_declaration '>' $@52 .

    $default  reduce using rule 713 (type_declaration_no_options_no_dim)


State 922

  736 type_declaration_no_options_no_dim: "array" '<' $@56 type_declaration '>' $@57 .

    $default  reduce using rule 736 (type_declaration_no_options_no_dim)


State 923

  739 type_declaration_no_options_no_dim: "table" '<' $@58 table_type_pair '>' $@59 .

    $default  reduce using rule 739 (type_declaration_no_options_no_dim)


State 924

  700 table_type_pair: type_declaration c_or_s type_declaration .
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 700 (table_type_pair)


State 925

  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"
  814 make_struct_decl: "struct" '<' $@90 type_declaration_no_options . '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1115
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 926

  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"
  817 make_struct_decl: "class" '<' $@92 type_declaration_no_options . '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1116
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 927

  291 new_type_declaration: '<' $@15 type_declaration . '>' $@16
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1117


State 928

  297 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  811 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 984

    $default  reduce using rule 811 (use_initializer)

    make_struct_fields  go to state 605
    make_struct_single  go to state 1118


State 929

  295 expr_new: "new" new_type_declaration '(' expr_list . ')'
  337 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1019
    ')'  shift, and go to state 1119


State 930

  296 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1120


State 931

  294 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1121


State 932

  334 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  335               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1122
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 1123


State 933

  333 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1124


State 934

  332 expr_type_decl: "type" '<' $@23 type_declaration . '>' $@24
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1125


State 935

  833 make_dim_decl: "array" "struct" '<' $@100 . type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1126
    type_declaration_no_options_no_dim  go to state 275


State 936

  836 make_dim_decl: "array" "tuple" '<' $@102 . tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 666
    tuple_type_list                     go to state 1127
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 937

  839 make_dim_decl: "array" "variant" '<' $@104 . variant_type_list '>' $@105 '(' make_variant_dim ')'

    "name"  shift, and go to state 669

    variant_type       go to state 670
    variant_type_list  go to state 1128


State 938

  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"
  843 make_dim_decl: "array" '<' $@106 type_declaration_no_options . '>' $@107 '(' optional_expr_list ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1129
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 939

  840 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1130


State 940

  853 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1131


State 941

  854 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1132
    type_declaration_no_options_no_dim  go to state 275


State 942

  824 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1133
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 943

  849 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  858 optional_comma: ',' .

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 858 (optional_comma)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 729
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 1134
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 944

  852 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1135


State 945

  463 expr: "deref" '(' expr ')' .

    $default  reduce using rule 463 (expr)


State 946

  323 expr_cast: "cast" '<' $@17 type_declaration_no_options . '>' $@18 expr
  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1136
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 947

  326 expr_cast: "upcast" '<' $@19 type_declaration_no_options . '>' $@20 expr
  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1137
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 948

  464 expr: "addr" '(' expr ')' .

    $default  reduce using rule 464 (expr)


State 949

  329 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options . '>' $@22 expr
  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1138
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 950

  494 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 494 (expr)


State 951

  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"
  847 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options . '>' $@109 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1139
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 952

  844 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1140


State 953

  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"
  823 make_struct_decl: "default" '<' $@96 type_declaration_no_options . '>' $@97 use_initializer

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1141
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 954

  546 tuple_type_list: tuple_type_list . c_or_s tuple_type
  829 make_tuple_call: "tuple" '<' $@98 tuple_type_list . '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1142
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 848


State 955

  826 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1143


State 956

  552 variant_type_list: variant_type_list . c_or_s variant_type
  820 make_struct_decl: "variant" '<' $@94 variant_type_list . '>' $@95 '(' use_initializer make_variant_dim ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1144
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 851


State 957

  495 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  496               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  497               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_emit_semis expression_block

    "capture"  shift, and go to state 780

    $default  reduce using rule 351 (optional_capture_list)

    optional_capture_list  go to state 1145


State 958

  498 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 498 (expr_mtag)


State 959

  499 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 499 (expr_mtag)


State 960

  500 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 500 (expr_mtag)


State 961

  501 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 501 (expr_mtag)


State 962

  502 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 502 (expr_mtag)


State 963

  504 expr_mtag: "$c" '(' expr ')' . '(' ')'
  505          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1146


State 964

   40 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    ':'    shift, and go to state 1147
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 35 (optional_format_string)

    optional_format_string  go to state 1148


State 965

   95 for_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 1149


State 966

   94 for_variable_name_with_pos_list: "name" .
   96                                | "name" . "aka" "name"

    "aka"  shift, and go to state 1150

    $default  reduce using rule 94 (for_variable_name_with_pos_list)


State 967

   97 for_variable_name_with_pos_list: '(' . tuple_expansion ')'

    "name"  shift, and go to state 1151

    tuple_expansion  go to state 1152


State 968

   98 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
   99                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  100                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  859 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1153
    ','   shift, and go to state 1154


State 969

  860 array_comprehension: '[' "iterator" "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 965
    "name"  shift, and go to state 966
    '('     shift, and go to state 967

    for_variable_name_with_pos_list  go to state 1155


State 970

  337 expr_list: expr_list ',' expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 337 (expr_list)


State 971

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  797 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  798                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1156


State 972

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  794 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 794 (make_struct_fields)


State 973

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  793 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 793 (make_struct_fields)


State 974

  452 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 452 (expr)


State 975

  799 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  800                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1157


State 976

  795 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  796                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 1158
    '='   shift, and go to state 762

    copy_or_move  go to state 1159


State 977

  387 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1160
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 978

  513 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1161
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 979

  391 func_addr_expr: '@' '@' '<' $@25 . type_declaration_no_options '>' $@26 func_addr_name

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1162
    type_declaration_no_options_no_dim  go to state 275


State 980

  394 func_addr_expr: '@' '@' '<' $@27 . optional_function_argument_list optional_function_type '>' $@28 func_addr_name

    '('  shift, and go to state 334

    $default  reduce using rule 151 (optional_function_argument_list)

    optional_function_argument_list  go to state 1163


State 981

   98 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
   99                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  100                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  861 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1164
    ','   shift, and go to state 1154


State 982

  851 make_table_decl: '{' $@110 optional_emit_semis optional_expr_map_tuple_list . '}'

    '}'  shift, and go to state 1165


State 983

  281 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  849 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 943

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 1166


State 984

  793 make_struct_fields: "name" . copy_or_move expr
  794                   | "name" . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 761
    '='   shift, and go to state 762

    copy_or_move  go to state 763


State 985

  406 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 406 (expr_call)


State 986

  408 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1167


State 987

  382 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  795 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  796                   | make_struct_fields . ',' "name" ":=" expr
  799                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  800                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 765
    ']'  shift, and go to state 1168


State 988

  337 expr_list: expr_list ',' . expr
  383 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 1169
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 970
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 989

  409 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 409 (expr_call)


State 990

  407 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 407 (expr_call)


State 991

  148 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 148 (optional_annotation_list)


State 992

  352 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1170
    ":="    shift, and go to state 1171
    "name"  shift, and go to state 1172
    '='     shift, and go to state 1173
    '&'     shift, and go to state 1174

    capture_entry  go to state 1175
    capture_list   go to state 1176


State 993

  353 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis block_or_simple_block

    ':'  shift, and go to state 394

    $default  reduce using rule 154 (optional_function_type)

    optional_function_type  go to state 1177


State 994

  355 expr_full_block_assumed_piped: '{' expressions '}' .

    $default  reduce using rule 355 (expr_full_block_assumed_piped)


State 995

  354 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '('  shift, and go to state 334

    $default  reduce using rule 151 (optional_function_argument_list)

    optional_function_argument_list  go to state 1178


State 996

  470 expr: expr "is" "type" '<' . $@31 type_declaration_no_options '>' $@32

    $default  reduce using rule 468 ($@31)

    $@31  go to state 1179


State 997

  512 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1180
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 998

  476 expr: expr "as" "type" '<' . $@33 type_declaration '>' $@34

    $default  reduce using rule 474 ($@33)

    $@33  go to state 1181


State 999

  510 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1182
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1000

  384 expr_method_call: expr "->" "name" '(' . ')'
  385                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1183
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1184
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1001

  507 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1185
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1002

  456 expr: expr "?[" expr ']' .

    $default  reduce using rule 456 (expr)


State 1003

  481 expr: expr '?' "as" "type" . '<' $@35 type_declaration '>' $@36

    '<'  shift, and go to state 1186


State 1004

  511 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1187


State 1005

  478 expr: expr '?' "as" "name" .

    $default  reduce using rule 478 (expr)


State 1006

  482 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 482 (expr)


State 1007

  467 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1188
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1008

  509 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1189


State 1009

  459 expr: expr '.' "?." "name" .

    $default  reduce using rule 459 (expr)


State 1010

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  457     | expr '.' "?[" expr . ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 1190


State 1011

  506 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1191
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1012

  397 expr_field: expr '.' "name" '(' . ')'
  398           | expr '.' "name" '(' . expr_list ')'
  399           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 1192
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1193
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1194
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1013

  508 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1195


State 1014

  396 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 396 (expr_field)


State 1015

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  455     | expr '.' '[' expr . ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 1196


State 1016

  404 expr_field: expr '.' $@29 error . $@30

    $default  reduce using rule 403 ($@30)

    $@30  go to state 1197


State 1017

  400 expr_field: expr '.' basic_type_declaration '(' . ')'
  401           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1198
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1199
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1018

  454 expr: expr '[' expr ']' .

    $default  reduce using rule 454 (expr)


State 1019

  337 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 970
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1020

  411 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 411 (expr_call)


State 1021

  742 type_declaration_no_options_no_dim: "iterator" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 742 (type_declaration_no_options_no_dim)


State 1022

  732 type_declaration_no_options_no_dim: "smart_ptr" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 732 (type_declaration_no_options_no_dim)


State 1023

  696 bitfield_type_declaration: "bitfield" '<' $@49 bitfield_bits '>' $@50 .

    $default  reduce using rule 696 (bitfield_type_declaration)


State 1024

  690 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 690 (bitfield_bits)


State 1025

  746 type_declaration_no_options_no_dim: "block" '<' $@62 type_declaration '>' $@63 .

    $default  reduce using rule 746 (type_declaration_no_options_no_dim)


State 1026

  749 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list optional_function_type '>' . $@65

    $default  reduce using rule 748 ($@65)

    $@65  go to state 1200


State 1027

  753 type_declaration_no_options_no_dim: "function" '<' $@66 type_declaration '>' $@67 .

    $default  reduce using rule 753 (type_declaration_no_options_no_dim)


State 1028

  756 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list optional_function_type '>' . $@69

    $default  reduce using rule 755 ($@69)

    $@69  go to state 1201


State 1029

  760 type_declaration_no_options_no_dim: "lambda" '<' $@70 type_declaration '>' $@71 .

    $default  reduce using rule 760 (type_declaration_no_options_no_dim)


State 1030

  763 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list optional_function_type '>' . $@73

    $default  reduce using rule 762 ($@73)

    $@73  go to state 1202


State 1031

  544 tuple_type: "name" ':' type_declaration .
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 544 (tuple_type)


State 1032

  766 type_declaration_no_options_no_dim: "tuple" '<' $@74 tuple_type_list '>' $@75 .

    $default  reduce using rule 766 (type_declaration_no_options_no_dim)


State 1033

  546 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 546 (tuple_type_list)


State 1034

  550 variant_type: "name" ':' type_declaration .
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 550 (variant_type)


State 1035

  769 type_declaration_no_options_no_dim: "variant" '<' $@76 variant_type_list '>' $@77 .

    $default  reduce using rule 769 (type_declaration_no_options_no_dim)


State 1036

  552 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 552 (variant_type_list)


State 1037

  717 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1203


State 1038

  283 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1204


State 1039

  693 bitfield_alias_bits: bitfield_alias_bits commas "name" .

    $default  reduce using rule 693 (bitfield_alias_bits)


State 1040

  601 commas: commas COMMA .

    $default  reduce using rule 601 (commas)


State 1041

  787 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 . '}'

    '}'  shift, and go to state 1205


State 1042

   83 semis: semis SEMICOLON .

    $default  reduce using rule 83 (semis)


State 1043

  549 tuple_alias_type_list: tuple_alias_type_list semis tuple_type .

    $default  reduce using rule 549 (tuple_alias_type_list)


State 1044

  777 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 . '}'

    '}'  shift, and go to state 1206


State 1045

  555 variant_alias_type_list: variant_alias_type_list semis variant_type .

    $default  reduce using rule 555 (variant_alias_type_list)


State 1046

  782 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 . '}'

    '}'  shift, and go to state 1207


State 1047

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  646 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1208


State 1048

  647 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 647 (variable_name_with_pos_list)


State 1049

  648 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  649                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1209

    $default  reduce using rule 648 (variable_name_with_pos_list)


State 1050

  561 variable_declaration_type: variable_name_with_pos_list ':' type_declaration .
  562                          | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 760
    '='   shift, and go to state 762
    '|'   shift, and go to state 377

    $default  reduce using rule 561 (variable_declaration_type)

    copy_or_move  go to state 1210


State 1051

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  560 variable_declaration_no_type: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 560 (variable_declaration_no_type)


State 1052

  303 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1211
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1053

  302 expression_return: "return" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 302 (expression_return)


State 1054

  306 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1212


State 1055

  288 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1213
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1056

  287 expression_delete: "delete" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 287 (expression_delete)


State 1057

  108 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1214


State 1058

  274 expression_any: "pass" SEMICOLON .

    $default  reduce using rule 274 (expression_any)


State 1059

   61 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1215


State 1060

   62 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1216


State 1061

   63 expression_goto: "goto" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 63 (expression_goto)


State 1062

  103 expression_unsafe: "unsafe" optional_emit_semis . expression_block

    $default  reduce using rule 252 ($@13)

    expression_block  go to state 1217
    $@13              go to state 397


State 1063

  305 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1218
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1064

  304 expression_yield: "yield" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 304 (expression_yield)


State 1065

  272 expression_any: expression_label SEMICOLON .

    $default  reduce using rule 272 (expression_any)


State 1066

  273 expression_any: expression_goto SEMICOLON .

    $default  reduce using rule 273 (expression_any)


State 1067

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner SEMICOLON

    '('  shift, and go to state 1219


State 1068

   73 if_or_static_if: "if" .

    $default  reduce using rule 73 (if_or_static_if)


State 1069

   74 if_or_static_if: "static_if" .

    $default  reduce using rule 74 (if_or_static_if)


State 1070

   92 expression_if_then_else: $@6 if_or_static_if . '(' expr ')' optional_emit_semis expression_if_block expression_else

    '('  shift, and go to state 1220


State 1071

  102 expression_for_loop: $@7 "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    '('  shift, and go to state 1221


State 1072

  105 expression_while_loop: $@8 "while" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1222


State 1073

  107 expression_with: $@9 "with" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1223


State 1074

  263 expression_any: expression_with_alias SEMICOLON .

    $default  reduce using rule 263 (expression_any)


State 1075

  254 expression_block: $@13 '{' expressions $@14 '}' . expression_block_finally

    "finally"  shift, and go to state 1224

    $default  reduce using rule 248 (expression_block_finally)

    expression_block_finally  go to state 1225


State 1076

  258 expression_any: expression_delete SEMICOLON .

    $default  reduce using rule 258 (expression_any)


State 1077

  265 expression_any: expression_break SEMICOLON .

    $default  reduce using rule 265 (expression_any)


State 1078

  266 expression_any: expression_continue SEMICOLON .

    $default  reduce using rule 266 (expression_any)


State 1079

  267 expression_any: expression_return SEMICOLON .

    $default  reduce using rule 267 (expression_any)


State 1080

  268 expression_any: expression_yield SEMICOLON .

    $default  reduce using rule 268 (expression_any)


State 1081

  312 optional_in_scope: "inscope" .

    $default  reduce using rule 312 (optional_in_scope)


State 1082

  318 expression_let: kwd_let optional_in_scope . let_variable_declaration
  319               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  320               | kwd_let optional_in_scope . '{' variable_declaration_list '}'

    "$i"    shift, and go to state 540
    "name"  shift, and go to state 541
    '('     shift, and go to state 1226
    '{'     shift, and go to state 1227

    tuple_expansion_variable_declaration  go to state 1228
    let_variable_name_with_pos_list       go to state 542
    let_variable_declaration              go to state 1229


State 1083

  257 expression_any: expr_assign SEMICOLON .

    $default  reduce using rule 257 (expression_any)


State 1084

  373 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1230
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1085

  374 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1231
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1086

  376 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1232
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1087

  375 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1233
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1088

  377 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1234
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1089

  367 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1235
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1090

  368 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1236
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1091

  369 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1237
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1092

  378 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1238
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1093

  379 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1239
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1094

  365 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1240
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1095

  366 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1241
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1096

  380 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1242
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1097

  381 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1243
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1098

  370 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1244
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1099

  371 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1245
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1100

  372 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1246
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1101

  364 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1247
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1102

  599 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1248
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1103

  601 commas: commas . COMMA
  604 enum_list: enum_list commas . enum_expression
  618 optional_commas: commas .

    "name"             shift, and go to state 910
    "new line, comma"  shift, and go to state 711
    ','                shift, and go to state 712

    $default  reduce using rule 618 (optional_commas)

    COMMA            go to state 1040
    enum_expression  go to state 1249


State 1104

  626 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas . $@45 '}'

    $default  reduce using rule 625 ($@45)

    $@45  go to state 1250


State 1105

  528 struct_variable_declaration_list: struct_variable_declaration_list "new line, semicolon" .

    $default  reduce using rule 528 (struct_variable_declaration_list)


State 1106

  640 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 640 (optional_struct_variable_declaration_list)


State 1107

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON
  534                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "def"  shift, and go to state 1251


State 1108

  530 struct_variable_declaration_list: struct_variable_declaration_list $@37 . structure_variable_declaration SEMICOLON

    '@'  shift, and go to state 220

    $default  reduce using rule 514 (optional_field_annotation)

    metadata_argument_list          go to state 221
    optional_field_annotation       go to state 1252
    structure_variable_declaration  go to state 1253


State 1109

  571 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 571 (let_variable_name_with_pos_list)


State 1110

  574 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1254


State 1111

  580 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 580 (let_variable_declaration)


State 1112

  581 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1255
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1113

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  582 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1256


State 1114

  584 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 584 (global_let_variable_declaration)


State 1115

  814 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' . $@91 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 813 ($@91)

    $@91  go to state 1257


State 1116

  817 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' . $@93 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 816 ($@93)

    $@93  go to state 1258


State 1117

  291 new_type_declaration: '<' $@15 type_declaration '>' . $@16

    $default  reduce using rule 290 ($@16)

    $@16  go to state 1259


State 1118

  297 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1260


State 1119

  295 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 295 (expr_new)


State 1120

  296 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 296 (expr_new)


State 1121

  294 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 294 (expr_new)


State 1122

  334 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1261


State 1123

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1262


State 1124

  333 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 333 (expr_type_info)


State 1125

  332 expr_type_decl: "type" '<' $@23 type_declaration '>' . $@24

    $default  reduce using rule 331 ($@24)

    $@24  go to state 1263


State 1126

  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"
  833 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options . '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1264
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1127

  546 tuple_type_list: tuple_type_list . c_or_s tuple_type
  836 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list . '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1265
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 848


State 1128

  552 variant_type_list: variant_type_list . c_or_s variant_type
  839 make_dim_decl: "array" "variant" '<' $@104 variant_type_list . '>' $@105 '(' make_variant_dim ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1266
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 851


State 1129

  843 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' . $@107 '(' optional_expr_list ')'

    $default  reduce using rule 842 ($@107)

    $@107  go to state 1267


State 1130

  840 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 840 (make_dim_decl)


State 1131

  853 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 280 (optional_expr_map_tuple_list)

    string_builder                go to state 469
    expr_reader                   go to state 470
    expr_call_pipe                go to state 471
    optional_expr_map_tuple_list  go to state 1268
    name_in_namespace             go to state 472
    expr_new                      go to state 473
    expr_cast                     go to state 474
    expr_type_decl                go to state 475
    expr_type_info                go to state 476
    block_or_lambda               go to state 477
    expr_full_block               go to state 478
    expr_numeric_const            go to state 479
    expr_named_call               go to state 480
    expr_method_call              go to state 481
    func_addr_expr                go to state 482
    expr_field                    go to state 483
    expr_call                     go to state 484
    expr                          go to state 729
    expr_generator                go to state 486
    expr_mtag                     go to state 487
    basic_type_declaration        go to state 488
    make_decl                     go to state 489
    make_struct_decl              go to state 490
    make_map_tuple                go to state 730
    make_tuple_call               go to state 491
    make_dim_decl                 go to state 492
    expr_map_tuple_list           go to state 983
    make_table_decl               go to state 493
    array_comprehension           go to state 494


State 1132

  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"
  854 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1269
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1133

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  824 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 824 (make_map_tuple)


State 1134

  849 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 849 (expr_map_tuple_list)


State 1135

  852 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 852 (make_table_decl)


State 1136

  323 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 322 ($@18)

    $@18  go to state 1270


State 1137

  326 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' . $@20 expr

    $default  reduce using rule 325 ($@20)

    $@20  go to state 1271


State 1138

  329 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' . $@22 expr

    $default  reduce using rule 328 ($@22)

    $@22  go to state 1272


State 1139

  847 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' . $@109 '(' expr_list optional_comma ')'

    $default  reduce using rule 846 ($@109)

    $@109  go to state 1273


State 1140

  844 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 844 (make_dim_decl)


State 1141

  823 make_struct_decl: "default" '<' $@96 type_declaration_no_options '>' . $@97 use_initializer

    $default  reduce using rule 822 ($@97)

    $@97  go to state 1274


State 1142

  829 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' . $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 828 ($@99)

    $@99  go to state 1275


State 1143

  826 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 826 (make_tuple_call)


State 1144

  820 make_struct_decl: "variant" '<' $@94 variant_type_list '>' . $@95 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 819 ($@95)

    $@95  go to state 1276


State 1145

  495 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  496               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  497               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 1277

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1278


State 1146

  504 expr_mtag: "$c" '(' expr ')' '(' . ')'
  505          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1279
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1280
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1147

   37 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 36 ($@1)

    $@1  go to state 1281


State 1148

   40 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1282


State 1149

   95 for_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1283
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1150

   96 for_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1284


State 1151

  314 tuple_expansion: "name" .

    $default  reduce using rule 314 (tuple_expansion)


State 1152

   97 for_variable_name_with_pos_list: '(' tuple_expansion . ')'
  315 tuple_expansion: tuple_expansion . ',' "name"

    ','  shift, and go to state 1285
    ')'  shift, and go to state 1286


State 1153

  859 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1287
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1154

   98 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' . "name"
   99                                | for_variable_name_with_pos_list ',' . "name" "aka" "name"
  100                                | for_variable_name_with_pos_list ',' . '(' tuple_expansion ')'

    "name"  shift, and go to state 1288
    '('     shift, and go to state 1289


State 1155

   98 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
   99                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  100                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  860 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1290
    ','   shift, and go to state 1154


State 1156

  797 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  798                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 1291
    '='   shift, and go to state 762

    copy_or_move  go to state 1292


State 1157

  799 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  800                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1293
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1158

  796 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1294
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1159

  795 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1295
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1160

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  387 func_addr_name: "$i" '(' expr . ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1296


State 1161

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  513          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1297


State 1162

  391 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options . '>' $@26 func_addr_name
  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1298
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1163

  394 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list . optional_function_type '>' $@28 func_addr_name

    ':'  shift, and go to state 394

    $default  reduce using rule 154 (optional_function_type)

    optional_function_type  go to state 1299


State 1164

  861 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1300
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1165

  851 make_table_decl: '{' $@110 optional_emit_semis optional_expr_map_tuple_list '}' .

    $default  reduce using rule 851 (make_table_decl)


State 1166

  281 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 281 (optional_expr_map_tuple_list)


State 1167

  408 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 408 (expr_call)


State 1168

  382 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1301


State 1169

  383 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  830 make_dim_decl: '[' . optional_expr_list ']'
  859 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  860                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 278 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 599
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 1302
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1170

  346 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1303


State 1171

  347 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1304


State 1172

  348 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1305


State 1173

  345 capture_entry: '=' . "name"

    "name"  shift, and go to state 1306


State 1174

  344 capture_entry: '&' . "name"

    "name"  shift, and go to state 1307


State 1175

  349 capture_list: capture_entry .

    $default  reduce using rule 349 (capture_list)


State 1176

  350 capture_list: capture_list . ',' capture_entry
  352 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1308
    ')'  shift, and go to state 1309


State 1177

  353 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis block_or_simple_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1310


State 1178

  354 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis expression_block

    ':'  shift, and go to state 394

    $default  reduce using rule 154 (optional_function_type)

    optional_function_type  go to state 1311


State 1179

  470 expr: expr "is" "type" '<' $@31 . type_declaration_no_options '>' $@32

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1312
    type_declaration_no_options_no_dim  go to state 275


State 1180

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  512          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1313


State 1181

  476 expr: expr "as" "type" '<' $@33 . type_declaration '>' $@34

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1314


State 1182

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  510          | expr "as" "$f" '(' expr . ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1315


State 1183

  384 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 384 (expr_method_call)


State 1184

  337 expr_list: expr_list . ',' expr
  385 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1019
    ')'  shift, and go to state 1316


State 1185

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  507          | expr "?." "$f" '(' expr . ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1317


State 1186

  481 expr: expr '?' "as" "type" '<' . $@35 type_declaration '>' $@36

    $default  reduce using rule 479 ($@35)

    $@35  go to state 1318


State 1187

  511 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1319
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1188

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  467     | expr '?' expr ':' expr .
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 467 (expr)


State 1189

  509 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1320
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1190

  457 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 457 (expr)


State 1191

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  506          | expr '.' "$f" '(' expr . ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1321


State 1192

  399 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  830 make_dim_decl: '[' . optional_expr_list ']'
  859 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  860                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 278 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 599
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 1322
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1193

  397 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 397 (expr_field)


State 1194

  337 expr_list: expr_list . ',' expr
  398 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1019
    ')'  shift, and go to state 1323


State 1195

  508 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1324
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1196

  455 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 455 (expr)


State 1197

  404 expr_field: expr '.' $@29 error $@30 .

    $default  reduce using rule 404 (expr_field)


State 1198

  400 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 400 (expr_field)


State 1199

  337 expr_list: expr_list . ',' expr
  401 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1019
    ')'  shift, and go to state 1325


State 1200

  749 type_declaration_no_options_no_dim: "block" '<' $@64 optional_function_argument_list optional_function_type '>' $@65 .

    $default  reduce using rule 749 (type_declaration_no_options_no_dim)


State 1201

  756 type_declaration_no_options_no_dim: "function" '<' $@68 optional_function_argument_list optional_function_type '>' $@69 .

    $default  reduce using rule 756 (type_declaration_no_options_no_dim)


State 1202

  763 type_declaration_no_options_no_dim: "lambda" '<' $@72 optional_function_argument_list optional_function_type '>' $@73 .

    $default  reduce using rule 763 (type_declaration_no_options_no_dim)


State 1203

  717 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 278 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 1326
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1204

  283 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 283 (type_declaration_no_options_list)


State 1205

  787 bitfield_alias_declaration: "bitfield" $@86 optional_public_or_private_alias "name" optional_emit_commas $@87 '{' $@88 bitfield_alias_bits optional_commas $@89 '}' .

    $default  reduce using rule 787 (bitfield_alias_declaration)


State 1206

  777 tuple_alias_declaration: "tuple" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 tuple_alias_type_list optional_semis $@81 '}' .

    $default  reduce using rule 777 (tuple_alias_declaration)


State 1207

  782 variant_alias_declaration: "variant" $@82 optional_public_or_private_alias "name" optional_emit_semis $@83 '{' $@84 variant_alias_type_list optional_semis $@85 '}' .

    $default  reduce using rule 782 (variant_alias_declaration)


State 1208

  646 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 646 (variable_name_with_pos_list)


State 1209

  649 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1327


State 1210

  562 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1328
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1211

  303 expression_return: "return" "<-" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 303 (expression_return)


State 1212

  306 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 252 ($@13)

    expression_block  go to state 1329
    $@13              go to state 397


State 1213

  288 expression_delete: "delete" "explicit" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 288 (expression_delete)


State 1214

  108 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1330
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1215

   61 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 61 (expression_label)


State 1216

   62 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 62 (expression_goto)


State 1217

  103 expression_unsafe: "unsafe" optional_emit_semis expression_block .

    $default  reduce using rule 103 (expression_unsafe)


State 1218

  305 expression_yield: "yield" "<-" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 305 (expression_yield)


State 1219

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1331
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1220

   92 expression_if_then_else: $@6 if_or_static_if '(' . expr ')' optional_emit_semis expression_if_block expression_else

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1332
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1221

  102 expression_for_loop: $@7 "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "$i"    shift, and go to state 965
    "name"  shift, and go to state 966
    '('     shift, and go to state 967

    for_variable_name_with_pos_list  go to state 1333


State 1222

  105 expression_while_loop: $@8 "while" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1334
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1223

  107 expression_with: $@9 "with" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1335
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1224

  251 expression_block_finally: "finally" . $@11 '{' expressions $@12 '}'

    $default  reduce using rule 249 ($@11)

    $@11  go to state 1336


State 1225

  254 expression_block: $@13 '{' expressions $@14 '}' expression_block_finally .

    $default  reduce using rule 254 (expression_block)


State 1226

  316 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  317                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    "name"  shift, and go to state 1151

    tuple_expansion  go to state 1337


State 1227

  320 expression_let: kwd_let optional_in_scope '{' . variable_declaration_list '}'

    $default  reduce using rule 577 (variable_declaration_list)

    variable_declaration_list  go to state 1338


State 1228

  319 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 319 (expression_let)


State 1229

  318 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 318 (expression_let)


State 1230

  373 expr_assign: expr "+=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 373 (expr_assign)


State 1231

  374 expr_assign: expr "-=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 374 (expr_assign)


State 1232

  376 expr_assign: expr "/=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 376 (expr_assign)


State 1233

  375 expr_assign: expr "*=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 375 (expr_assign)


State 1234

  377 expr_assign: expr "%=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 377 (expr_assign)


State 1235

  367 expr_assign: expr "&=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 367 (expr_assign)


State 1236

  368 expr_assign: expr "|=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 368 (expr_assign)


State 1237

  369 expr_assign: expr "^=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 369 (expr_assign)


State 1238

  378 expr_assign: expr "<<=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 378 (expr_assign)


State 1239

  379 expr_assign: expr ">>=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 379 (expr_assign)


State 1240

  365 expr_assign: expr "<-" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 365 (expr_assign)


State 1241

  366 expr_assign: expr ":=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 366 (expr_assign)


State 1242

  380 expr_assign: expr "<<<=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 380 (expr_assign)


State 1243

  381 expr_assign: expr ">>>=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 381 (expr_assign)


State 1244

  370 expr_assign: expr "&&=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 370 (expr_assign)


State 1245

  371 expr_assign: expr "||=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 371 (expr_assign)


State 1246

  372 expr_assign: expr "^^=" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 372 (expr_assign)


State 1247

  364 expr_assign: expr '=' expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 364 (expr_assign)


State 1248

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  599 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 599 (enum_expression)


State 1249

  604 enum_list: enum_list commas enum_expression .

    $default  reduce using rule 604 (enum_list)


State 1250

  626 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 . '}'

    '}'  shift, and go to state 1339


State 1251

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON
  534                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "public"   shift, and go to state 1340
    "private"  shift, and go to state 1341

    $default  reduce using rule 521 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1342


State 1252

  526 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1343

    $default  reduce using rule 524 (optional_static_member_variable)

    optional_static_member_variable  go to state 1344


State 1253

  530 struct_variable_declaration_list: struct_variable_declaration_list $@37 structure_variable_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1345


State 1254

  574 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 574 (let_variable_name_with_pos_list)


State 1255

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  581 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1346


State 1256

  582 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 582 (let_variable_declaration)


State 1257

  814 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1347


State 1258

  817 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1348


State 1259

  291 new_type_declaration: '<' $@15 type_declaration '>' $@16 .

    $default  reduce using rule 291 (new_type_declaration)


State 1260

  297 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 297 (expr_new)


State 1261

  334 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1349
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1262

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1350


State 1263

  332 expr_type_decl: "type" '<' $@23 type_declaration '>' $@24 .

    $default  reduce using rule 332 (expr_type_decl)


State 1264

  833 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' . $@101 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 832 ($@101)

    $@101  go to state 1351


State 1265

  836 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' . $@103 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 835 ($@103)

    $@103  go to state 1352


State 1266

  839 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' . $@105 '(' make_variant_dim ')'

    $default  reduce using rule 838 ($@105)

    $@105  go to state 1353


State 1267

  843 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 . '(' optional_expr_list ')'

    '('  shift, and go to state 1354


State 1268

  853 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1355


State 1269

  854 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1356


State 1270

  323 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1357
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1271

  326 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' $@20 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1358
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1272

  329 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' $@22 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1359
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1273

  847 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1360


State 1274

  823 make_struct_decl: "default" '<' $@96 type_declaration_no_options '>' $@97 . use_initializer

    "uninitialized"  shift, and go to state 1361

    $default  reduce using rule 810 (use_initializer)

    use_initializer  go to state 1362


State 1275

  829 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1363


State 1276

  820 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1364


State 1277

  495 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  496               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1365
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1366
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1278

  497 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis . expression_block

    $default  reduce using rule 252 ($@13)

    expression_block  go to state 1367
    $@13              go to state 397


State 1279

  504 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 504 (expr_mtag)


State 1280

  337 expr_list: expr_list . ',' expr
  505 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1019
    ')'  shift, and go to state 1368


State 1281

   37 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 33 (format_string)

    format_string  go to state 1369


State 1282

   40 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 40 (string_builder_body)


State 1283

   95 for_variable_name_with_pos_list: "$i" '(' expr . ')'
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1370


State 1284

   96 for_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 96 (for_variable_name_with_pos_list)


State 1285

  315 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1371


State 1286

   97 for_variable_name_with_pos_list: '(' tuple_expansion ')' .

    $default  reduce using rule 97 (for_variable_name_with_pos_list)


State 1287

  337 expr_list: expr_list . ',' expr
  859 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1019
    ')'  shift, and go to state 1372


State 1288

   98 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" .
   99                                | for_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1373

    $default  reduce using rule 98 (for_variable_name_with_pos_list)


State 1289

  100 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' . tuple_expansion ')'

    "name"  shift, and go to state 1151

    tuple_expansion  go to state 1374


State 1290

  860 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1375
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1291

  798 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1376
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1292

  797 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1377
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1293

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  799 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  800                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1378


State 1294

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  796 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 796 (make_struct_fields)


State 1295

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  795 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 795 (make_struct_fields)


State 1296

  387 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 387 (func_addr_name)


State 1297

  513 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 513 (expr_mtag)


State 1298

  391 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options '>' . $@26 func_addr_name

    $default  reduce using rule 390 ($@26)

    $@26  go to state 1379


State 1299

  394 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type . '>' $@28 func_addr_name

    '>'  shift, and go to state 1380


State 1300

  337 expr_list: expr_list . ',' expr
  861 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 1019
    ')'  shift, and go to state 1381


State 1301

  382 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 382 (expr_named_call)


State 1302

  383 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  795 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  796                   | make_struct_fields . ',' "name" ":=" expr
  799                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  800                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 765
    ']'  shift, and go to state 1382


State 1303

  346 capture_entry: "<-" "name" .

    $default  reduce using rule 346 (capture_entry)


State 1304

  347 capture_entry: ":=" "name" .

    $default  reduce using rule 347 (capture_entry)


State 1305

  348 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1383


State 1306

  345 capture_entry: '=' "name" .

    $default  reduce using rule 345 (capture_entry)


State 1307

  344 capture_entry: '&' "name" .

    $default  reduce using rule 344 (capture_entry)


State 1308

  350 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1170
    ":="    shift, and go to state 1171
    "name"  shift, and go to state 1172
    '='     shift, and go to state 1173
    '&'     shift, and go to state 1174

    capture_entry  go to state 1384


State 1309

  352 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 352 (optional_capture_list)


State 1310

  353 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . block_or_simple_block

    "=>"  shift, and go to state 1385

    $default  reduce using rule 252 ($@13)

    expression_block       go to state 1386
    $@13                   go to state 397
    block_or_simple_block  go to state 1387


State 1311

  354 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1388


State 1312

  470 expr: expr "is" "type" '<' $@31 type_declaration_no_options . '>' $@32
  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1389
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1313

  512 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 512 (expr_mtag)


State 1314

  476 expr: expr "as" "type" '<' $@33 type_declaration . '>' $@34
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1390


State 1315

  510 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 510 (expr_mtag)


State 1316

  385 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 385 (expr_method_call)


State 1317

  507 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 507 (expr_mtag)


State 1318

  481 expr: expr '?' "as" "type" '<' $@35 . type_declaration '>' $@36

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1391


State 1319

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  511          | expr '?' "as" "$f" '(' expr . ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1392


State 1320

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  509          | expr '.' "?." "$f" '(' expr . ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1393


State 1321

  506 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 506 (expr_mtag)


State 1322

  399 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  795 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  796                   | make_struct_fields . ',' "name" ":=" expr
  799                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  800                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 765
    ']'  shift, and go to state 1394


State 1323

  398 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 398 (expr_field)


State 1324

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  508          | expr '.' '.' "$f" '(' expr . ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1395


State 1325

  401 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 401 (expr_field)


State 1326

  717 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1396


State 1327

  649 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 649 (variable_name_with_pos_list)


State 1328

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  562 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 562 (variable_declaration_type)


State 1329

  306 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 306 (expression_try_catch)


State 1330

  108 expression_with_alias: "assume" "name" '=' expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 108 (expression_with_alias)


State 1331

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner SEMICOLON
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1397


State 1332

   92 expression_if_then_else: $@6 if_or_static_if '(' expr . ')' optional_emit_semis expression_if_block expression_else
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1398


State 1333

   98 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
   99                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  100                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  102 expression_for_loop: $@7 "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' optional_emit_semis expression_block

    "in"  shift, and go to state 1399
    ','   shift, and go to state 1154


State 1334

  105 expression_while_loop: $@8 "while" '(' expr . ')' optional_emit_semis expression_block
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1400


State 1335

  107 expression_with: $@9 "with" '(' expr . ')' optional_emit_semis expression_block
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1401


State 1336

  251 expression_block_finally: "finally" $@11 . '{' expressions $@12 '}'

    '{'  shift, and go to state 1402


State 1337

  315 tuple_expansion: tuple_expansion . ',' "name"
  316 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  317                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 1285
    ')'  shift, and go to state 1403


State 1338

  320 expression_let: kwd_let optional_in_scope '{' variable_declaration_list . '}'
  578 variable_declaration_list: variable_declaration_list . SEMICOLON
  579                          | variable_declaration_list . let_variable_declaration

    "$i"                   shift, and go to state 540
    "name"                 shift, and go to state 541
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 1404

    SEMICOLON                        go to state 1405
    let_variable_name_with_pos_list  go to state 542
    let_variable_declaration         go to state 1406


State 1339

  626 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@43 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@44 enum_list optional_commas $@45 '}' .

    $default  reduce using rule 626 (enum_declaration)


State 1340

  522 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 522 (optional_public_or_private_member_variable)


State 1341

  523 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 523 (optional_public_or_private_member_variable)


State 1342

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . "abstract" optional_constant $@38 function_declaration_header SEMICOLON
  534                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "abstract"  shift, and go to state 1407
    "static"    shift, and go to state 1343

    $default  reduce using rule 524 (optional_static_member_variable)

    optional_static_member_variable  go to state 1408


State 1343

  525 optional_static_member_variable: "static" .

    $default  reduce using rule 525 (optional_static_member_variable)


State 1344

  526 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1409
    "sealed"    shift, and go to state 1410

    $default  reduce using rule 516 (optional_override)

    optional_override  go to state 1411


State 1345

  530 struct_variable_declaration_list: struct_variable_declaration_list $@37 structure_variable_declaration SEMICOLON .

    $default  reduce using rule 530 (struct_variable_declaration_list)


State 1346

  581 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 581 (let_variable_declaration)


State 1347

  814 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1361

    $default  reduce using rule 810 (use_initializer)

    use_initializer  go to state 1412


State 1348

  817 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1361

    $default  reduce using rule 810 (use_initializer)

    use_initializer  go to state 1413


State 1349

  334 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1414


State 1350

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1415


State 1351

  833 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1416


State 1352

  836 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1417


State 1353

  839 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 . '(' make_variant_dim ')'

    '('  shift, and go to state 1418


State 1354

  843 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 278 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 1419
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1355

  853 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 853 (make_table_decl)


State 1356

  854 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 280 (optional_expr_map_tuple_list)

    string_builder                go to state 469
    expr_reader                   go to state 470
    expr_call_pipe                go to state 471
    optional_expr_map_tuple_list  go to state 1420
    name_in_namespace             go to state 472
    expr_new                      go to state 473
    expr_cast                     go to state 474
    expr_type_decl                go to state 475
    expr_type_info                go to state 476
    block_or_lambda               go to state 477
    expr_full_block               go to state 478
    expr_numeric_const            go to state 479
    expr_named_call               go to state 480
    expr_method_call              go to state 481
    func_addr_expr                go to state 482
    expr_field                    go to state 483
    expr_call                     go to state 484
    expr                          go to state 729
    expr_generator                go to state 486
    expr_mtag                     go to state 487
    basic_type_declaration        go to state 488
    make_decl                     go to state 489
    make_struct_decl              go to state 490
    make_map_tuple                go to state 730
    make_tuple_call               go to state 491
    make_dim_decl                 go to state 492
    expr_map_tuple_list           go to state 983
    make_table_decl               go to state 493
    array_comprehension           go to state 494


State 1357

  323 expr_cast: "cast" '<' $@17 type_declaration_no_options '>' $@18 expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 323 (expr_cast)


State 1358

  326 expr_cast: "upcast" '<' $@19 type_declaration_no_options '>' $@20 expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 326 (expr_cast)


State 1359

  329 expr_cast: "reinterpret" '<' $@21 type_declaration_no_options '>' $@22 expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 329 (expr_cast)


State 1360

  847 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1421
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1361

  811 use_initializer: "uninitialized" .

    $default  reduce using rule 811 (use_initializer)


State 1362

  823 make_struct_decl: "default" '<' $@96 type_declaration_no_options '>' $@97 use_initializer .

    $default  reduce using rule 823 (make_struct_decl)


State 1363

  829 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1361

    $default  reduce using rule 810 (use_initializer)

    use_initializer  go to state 1422


State 1364

  820 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1361

    $default  reduce using rule 810 (use_initializer)

    use_initializer  go to state 1423


State 1365

  495 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 495 (expr_generator)


State 1366

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  496 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1424


State 1367

  497 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block .

    $default  reduce using rule 497 (expr_generator)


State 1368

  505 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 505 (expr_mtag)


State 1369

   34 format_string: format_string . STRING_CHARACTER
   37 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1425

    $default  reduce using rule 37 (optional_format_string)


State 1370

   95 for_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 95 (for_variable_name_with_pos_list)


State 1371

  315 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 315 (tuple_expansion)


State 1372

  859 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1426


State 1373

   99 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1427


State 1374

  100 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' tuple_expansion . ')'
  315 tuple_expansion: tuple_expansion . ',' "name"

    ','  shift, and go to state 1285
    ')'  shift, and go to state 1428


State 1375

  337 expr_list: expr_list . ',' expr
  860 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1019
    ')'  shift, and go to state 1429


State 1376

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  798 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 798 (make_struct_fields)


State 1377

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  797 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 797 (make_struct_fields)


State 1378

  799 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  800                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 1430
    '='   shift, and go to state 762

    copy_or_move  go to state 1431


State 1379

  391 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options '>' $@26 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 767
    "name"  shift, and go to state 58

    name_in_namespace  go to state 770
    func_addr_name     go to state 1432


State 1380

  394 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type '>' . $@28 func_addr_name

    $default  reduce using rule 393 ($@28)

    $@28  go to state 1433


State 1381

  861 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' make_map_tuple array_comprehension_where '}'

    ';'  shift, and go to state 1434


State 1382

  383 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1435


State 1383

  348 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1436


State 1384

  350 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 350 (capture_list)


State 1385

  339 block_or_simple_block: "=>" . expr
  340                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1437
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1438
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1386

  338 block_or_simple_block: expression_block .

    $default  reduce using rule 338 (block_or_simple_block)


State 1387

  353 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block .

    $default  reduce using rule 353 (expr_full_block)


State 1388

  354 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . expression_block

    $default  reduce using rule 252 ($@13)

    expression_block  go to state 1439
    $@13              go to state 397


State 1389

  470 expr: expr "is" "type" '<' $@31 type_declaration_no_options '>' . $@32

    $default  reduce using rule 469 ($@32)

    $@32  go to state 1440


State 1390

  476 expr: expr "as" "type" '<' $@33 type_declaration '>' . $@34

    $default  reduce using rule 475 ($@34)

    $@34  go to state 1441


State 1391

  481 expr: expr '?' "as" "type" '<' $@35 type_declaration . '>' $@36
  771 type_declaration: type_declaration . '|' type_declaration_no_options
  772                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1442


State 1392

  511 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 511 (expr_mtag)


State 1393

  509 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 509 (expr_mtag)


State 1394

  399 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1443


State 1395

  508 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 508 (expr_mtag)


State 1396

  717 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@53 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 717 (type_declaration_no_options_no_dim)


State 1397

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner SEMICOLON

    "else"  shift, and go to state 1444

    $default  reduce using rule 75 (expression_else_one_liner)

    expression_else_one_liner  go to state 1445


State 1398

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' . optional_emit_semis expression_if_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1446


State 1399

  102 expression_for_loop: $@7 "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1447
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1400

  105 expression_while_loop: $@8 "while" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1448


State 1401

  107 expression_with: $@9 "with" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1449


State 1402

  251 expression_block_finally: "finally" $@11 '{' . expressions $@12 '}'

    $default  reduce using rule 275 (expressions)

    expressions  go to state 1450


State 1403

  316 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  317                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr SEMICOLON

    ':'  shift, and go to state 1451
    '&'  shift, and go to state 415

    $default  reduce using rule 568 (optional_ref)

    optional_ref  go to state 1452


State 1404

  320 expression_let: kwd_let optional_in_scope '{' variable_declaration_list '}' .

    $default  reduce using rule 320 (expression_let)


State 1405

  578 variable_declaration_list: variable_declaration_list SEMICOLON .

    $default  reduce using rule 578 (variable_declaration_list)


State 1406

  579 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 579 (variable_declaration_list)


State 1407

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" . optional_constant $@38 function_declaration_header SEMICOLON

    "const"  shift, and go to state 1453

    $default  reduce using rule 519 (optional_constant)

    optional_constant  go to state 1454


State 1408

  534 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "override"  shift, and go to state 1409
    "sealed"    shift, and go to state 1410

    $default  reduce using rule 516 (optional_override)

    optional_override  go to state 1455


State 1409

  517 optional_override: "override" .

    $default  reduce using rule 517 (optional_override)


State 1410

  518 optional_override: "sealed" .

    $default  reduce using rule 518 (optional_override)


State 1411

  526 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1340
    "private"  shift, and go to state 1341

    $default  reduce using rule 521 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1456


State 1412

  814 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 984
    '('     shift, and go to state 1457

    $default  reduce using rule 809 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1458
    make_struct_dim_list           go to state 1459
    make_struct_dim_decl           go to state 1460
    optional_make_struct_dim_decl  go to state 1461


State 1413

  817 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 984
    '('     shift, and go to state 1457

    $default  reduce using rule 809 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1458
    make_struct_dim_list           go to state 1459
    make_struct_dim_decl           go to state 1460
    optional_make_struct_dim_decl  go to state 1462


State 1414

  334 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 334 (expr_type_info)


State 1415

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1463
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1416

  833 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1361

    $default  reduce using rule 810 (use_initializer)

    use_initializer  go to state 1464


State 1417

  836 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1361

    $default  reduce using rule 810 (use_initializer)

    use_initializer  go to state 1465


State 1418

  839 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 984

    $default  reduce using rule 801 (make_variant_dim)

    make_struct_fields  go to state 1466
    make_variant_dim    go to state 1467


State 1419

  843 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1468


State 1420

  854 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1469


State 1421

  337 expr_list: expr_list . ',' expr
  847 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 1470


State 1422

  829 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 984
    '('     shift, and go to state 1457

    $default  reduce using rule 809 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1458
    make_struct_dim_list           go to state 1459
    make_struct_dim_decl           go to state 1460
    optional_make_struct_dim_decl  go to state 1471


State 1423

  820 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 984

    $default  reduce using rule 801 (make_variant_dim)

    make_struct_fields  go to state 1466
    make_variant_dim    go to state 1472


State 1424

  496 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 496 (expr_generator)


State 1425

   34 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 34 (format_string)


State 1426

  859 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1473
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1427

   99 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 99 (for_variable_name_with_pos_list)


State 1428

  100 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' tuple_expansion ')' .

    $default  reduce using rule 100 (for_variable_name_with_pos_list)


State 1429

  860 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1474


State 1430

  800 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1475
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1431

  799 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1476
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1432

  391 func_addr_expr: '@' '@' '<' $@25 type_declaration_no_options '>' $@26 func_addr_name .

    $default  reduce using rule 391 (func_addr_expr)


State 1433

  394 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type '>' $@28 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 767
    "name"  shift, and go to state 58

    name_in_namespace  go to state 770
    func_addr_name     go to state 1477


State 1434

  861 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 729
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 1478
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1435

  383 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 383 (expr_named_call)


State 1436

  348 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 348 (capture_entry)


State 1437

  340 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1479
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1438

  339 block_or_simple_block: "=>" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    ".."  error (nonassociative)

    $default  reduce using rule 339 (block_or_simple_block)


State 1439

  354 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block .

    $default  reduce using rule 354 (expr_full_block_assumed_piped)


State 1440

  470 expr: expr "is" "type" '<' $@31 type_declaration_no_options '>' $@32 .

    $default  reduce using rule 470 (expr)


State 1441

  476 expr: expr "as" "type" '<' $@33 type_declaration '>' $@34 .

    $default  reduce using rule 476 (expr)


State 1442

  481 expr: expr '?' "as" "type" '<' $@35 type_declaration '>' . $@36

    $default  reduce using rule 480 ($@36)

    $@36  go to state 1480


State 1443

  399 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 399 (expr_field)


State 1444

   76 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder           go to state 469
    expr_reader              go to state 470
    expression_if_one_liner  go to state 1481
    expr_call_pipe           go to state 471
    name_in_namespace        go to state 472
    expr_new                 go to state 473
    expression_break         go to state 1482
    expression_continue      go to state 1483
    expression_return        go to state 1484
    expression_yield         go to state 1485
    expr_cast                go to state 474
    expr_type_decl           go to state 475
    expr_type_info           go to state 476
    block_or_lambda          go to state 477
    expr_full_block          go to state 478
    expr_numeric_const       go to state 479
    expr_named_call          go to state 480
    expr_method_call         go to state 481
    func_addr_expr           go to state 482
    expr_field               go to state 483
    expr_call                go to state 484
    expr                     go to state 1486
    expr_generator           go to state 486
    expr_mtag                go to state 487
    basic_type_declaration   go to state 488
    make_decl                go to state 489
    make_struct_decl         go to state 490
    make_tuple_call          go to state 491
    make_dim_decl            go to state 492
    make_table_decl          go to state 493
    array_comprehension      go to state 494


State 1445

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1487


State 1446

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' optional_emit_semis . expression_if_block expression_else

    '{'       reduce using rule 86 ($@3)
    '{'       [reduce using rule 89 ($@5)]
    $default  reduce using rule 89 ($@5)

    expression_if_block  go to state 1488
    $@3                  go to state 1489
    $@5                  go to state 1490


State 1447

  102 expression_for_loop: $@7 "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' optional_emit_semis expression_block
  337 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1019
    ')'  shift, and go to state 1491


State 1448

  105 expression_while_loop: $@8 "while" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 252 ($@13)

    expression_block  go to state 1492
    $@13              go to state 397


State 1449

  107 expression_with: $@9 "with" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 252 ($@13)

    expression_block  go to state 1493
    $@13              go to state 397


State 1450

  251 expression_block_finally: "finally" $@11 '{' expressions . $@12 '}'
  276 expressions: expressions . expression_any
  277            | expressions . error

    error                             shift, and go to state 871
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "try"                             shift, and go to state 874
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 875
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 876
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "pass"                            shift, and go to state 878
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 879
    "goto"                            shift, and go to state 880
    "unsafe"                          shift, and go to state 881
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 104 ($@8)
    "if"         reduce using rule 91 ($@6)
    "static_if"  reduce using rule 91 ($@6)
    "for"        reduce using rule 101 ($@7)
    "with"       reduce using rule 106 ($@9)
    '}'          reduce using rule 250 ($@12)

    SEMICOLON                         go to state 883
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 884
    expression_goto                   go to state 885
    expression_if_one_liner           go to state 886
    expression_if_then_else           go to state 887
    $@6                               go to state 888
    expression_if_then_else_oneliner  go to state 889
    expression_for_loop               go to state 890
    $@7                               go to state 891
    expression_unsafe                 go to state 892
    expression_while_loop             go to state 893
    $@8                               go to state 894
    expression_with                   go to state 895
    $@9                               go to state 896
    expression_with_alias             go to state 897
    $@12                              go to state 1494
    expr_call_pipe                    go to state 471
    expression_any                    go to state 899
    name_in_namespace                 go to state 472
    expression_delete                 go to state 900
    expr_new                          go to state 473
    expression_break                  go to state 901
    expression_continue               go to state 902
    expression_return                 go to state 903
    expression_yield                  go to state 904
    expression_try_catch              go to state 905
    kwd_let                           go to state 906
    expression_let                    go to state 907
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 908
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 909
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 1451

  316 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1495
    type_declaration_no_options_no_dim  go to state 275


State 1452

  317 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 547
    ":="  shift, and go to state 548
    '='   shift, and go to state 549

    copy_or_move_or_clone  go to state 1496


State 1453

  520 optional_constant: "const" .

    $default  reduce using rule 520 (optional_constant)


State 1454

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant . $@38 function_declaration_header SEMICOLON

    $default  reduce using rule 531 ($@38)

    $@38  go to state 1497


State 1455

  534 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@39 function_declaration_header optional_emit_semis expression_block

    "const"  shift, and go to state 1453

    $default  reduce using rule 519 (optional_constant)

    optional_constant  go to state 1498


State 1456

  526 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 686
    "name"  shift, and go to state 687

    variable_declaration_no_type  go to state 1499
    variable_declaration_type     go to state 1500
    variable_declaration          go to state 1501
    variable_name_with_pos_list   go to state 690


State 1457

  804 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 984

    make_struct_fields  go to state 1502


State 1458

  795 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  796                   | make_struct_fields . ',' "name" ":=" expr
  799                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  800                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  806 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 765

    $default  reduce using rule 806 (make_struct_dim_decl)


State 1459

  805 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  807 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1503

    $default  reduce using rule 857 (optional_comma)

    optional_comma  go to state 1504


State 1460

  808 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 808 (optional_make_struct_dim_decl)


State 1461

  814 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1505


State 1462

  817 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1506


State 1463

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1507


State 1464

  833 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 984
    '('     shift, and go to state 1457

    $default  reduce using rule 809 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1458
    make_struct_dim_list           go to state 1459
    make_struct_dim_decl           go to state 1460
    optional_make_struct_dim_decl  go to state 1508


State 1465

  836 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 984
    '('     shift, and go to state 1457

    $default  reduce using rule 809 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1458
    make_struct_dim_list           go to state 1459
    make_struct_dim_decl           go to state 1460
    optional_make_struct_dim_decl  go to state 1509


State 1466

  795 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  796                   | make_struct_fields . ',' "name" ":=" expr
  799                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  800                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  802 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 765

    $default  reduce using rule 802 (make_variant_dim)


State 1467

  839 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1510


State 1468

  843 make_dim_decl: "array" '<' $@106 type_declaration_no_options '>' $@107 '(' optional_expr_list ')' .

    $default  reduce using rule 843 (make_dim_decl)


State 1469

  854 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 854 (make_table_decl)


State 1470

  847 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1511


State 1471

  829 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1512


State 1472

  820 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1513


State 1473

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  859 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ';'    shift, and go to state 1514

    $default  reduce using rule 855 (array_comprehension_where)

    array_comprehension_where  go to state 1515


State 1474

  860 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1516
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1475

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  800 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 800 (make_struct_fields)


State 1476

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  799 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 799 (make_struct_fields)


State 1477

  394 func_addr_expr: '@' '@' '<' $@27 optional_function_argument_list optional_function_type '>' $@28 func_addr_name .

    $default  reduce using rule 394 (func_addr_expr)


State 1478

  861 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1514

    $default  reduce using rule 855 (array_comprehension_where)

    array_comprehension_where  go to state 1517


State 1479

  340 block_or_simple_block: "=>" "<-" expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 340 (block_or_simple_block)


State 1480

  481 expr: expr '?' "as" "type" '<' $@35 type_declaration '>' $@36 .

    $default  reduce using rule 481 (expr)


State 1481

   76 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 76 (expression_else_one_liner)


State 1482

   80 expression_if_one_liner: expression_break .

    $default  reduce using rule 80 (expression_if_one_liner)


State 1483

   81 expression_if_one_liner: expression_continue .

    $default  reduce using rule 81 (expression_if_one_liner)


State 1484

   78 expression_if_one_liner: expression_return .

    $default  reduce using rule 78 (expression_if_one_liner)


State 1485

   79 expression_if_one_liner: expression_yield .

    $default  reduce using rule 79 (expression_if_one_liner)


State 1486

   77 expression_if_one_liner: expr .
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 77 (expression_if_one_liner)


State 1487

   93 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON .

    $default  reduce using rule 93 (expression_if_then_else_oneliner)


State 1488

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block . expression_else

    "else"         shift, and go to state 1518
    "elif"         shift, and go to state 1519
    "static_elif"  shift, and go to state 1520

    $default  reduce using rule 70 (expression_else)

    elif_or_static_elif  go to state 1521
    expression_else      go to state 1522


State 1489

   88 expression_if_block: $@3 . '{' expressions $@4 '}' expression_block_finally

    '{'  shift, and go to state 1523


State 1490

   90 expression_if_block: $@5 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder           go to state 469
    expr_reader              go to state 470
    expression_if_one_liner  go to state 1524
    expr_call_pipe           go to state 471
    name_in_namespace        go to state 472
    expr_new                 go to state 473
    expression_break         go to state 1482
    expression_continue      go to state 1483
    expression_return        go to state 1484
    expression_yield         go to state 1485
    expr_cast                go to state 474
    expr_type_decl           go to state 475
    expr_type_info           go to state 476
    block_or_lambda          go to state 477
    expr_full_block          go to state 478
    expr_numeric_const       go to state 479
    expr_named_call          go to state 480
    expr_method_call         go to state 481
    func_addr_expr           go to state 482
    expr_field               go to state 483
    expr_call                go to state 484
    expr                     go to state 1486
    expr_generator           go to state 486
    expr_mtag                go to state 487
    basic_type_declaration   go to state 488
    make_decl                go to state 489
    make_struct_decl         go to state 490
    make_tuple_call          go to state 491
    make_dim_decl            go to state 492
    make_table_decl          go to state 493
    array_comprehension      go to state 494


State 1491

  102 expression_for_loop: $@7 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1525


State 1492

  105 expression_while_loop: $@8 "while" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 105 (expression_while_loop)


State 1493

  107 expression_with: $@9 "with" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 107 (expression_with)


State 1494

  251 expression_block_finally: "finally" $@11 '{' expressions $@12 . '}'

    '}'  shift, and go to state 1526


State 1495

  316 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  718 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  719                                   | type_declaration_no_options . "explicit"
  720                                   | type_declaration_no_options . "const"
  721                                   | type_declaration_no_options . '-' "const"
  722                                   | type_declaration_no_options . '&'
  723                                   | type_declaration_no_options . '-' '&'
  724                                   | type_declaration_no_options . '#'
  725                                   | type_declaration_no_options . "implicit"
  726                                   | type_declaration_no_options . '-' '#'
  727                                   | type_declaration_no_options . "==" "const"
  728                                   | type_declaration_no_options . "==" '&'
  729                                   | type_declaration_no_options . '?'
  733                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "<-"        shift, and go to state 547
    "??"        shift, and go to state 370
    ":="        shift, and go to state 548
    '='         shift, and go to state 549
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    copy_or_move_or_clone  go to state 1527


State 1496

  317 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1528
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1497

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 . function_declaration_header SEMICOLON

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 1529


State 1498

  534 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@39 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 533 ($@39)

    $@39  go to state 1530


State 1499

  564 variable_declaration: variable_declaration_no_type .

    $default  reduce using rule 564 (variable_declaration)


State 1500

  563 variable_declaration: variable_declaration_type .

    $default  reduce using rule 563 (variable_declaration)


State 1501

  526 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 526 (structure_variable_declaration)


State 1502

  795 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  796                   | make_struct_fields . ',' "name" ":=" expr
  799                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  800                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  804 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 765
    ')'  shift, and go to state 1531


State 1503

  805 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  858 optional_comma: ',' .

    '('  shift, and go to state 1532

    $default  reduce using rule 858 (optional_comma)


State 1504

  807 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 807 (make_struct_dim_decl)


State 1505

  814 make_struct_decl: "struct" '<' $@90 type_declaration_no_options '>' $@91 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 814 (make_struct_decl)


State 1506

  817 make_struct_decl: "class" '<' $@92 type_declaration_no_options '>' $@93 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 817 (make_struct_decl)


State 1507

  335 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 335 (expr_type_info)


State 1508

  833 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1533


State 1509

  836 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1534


State 1510

  839 make_dim_decl: "array" "variant" '<' $@104 variant_type_list '>' $@105 '(' make_variant_dim ')' .

    $default  reduce using rule 839 (make_dim_decl)


State 1511

  847 make_dim_decl: "fixed_array" '<' $@108 type_declaration_no_options '>' $@109 '(' expr_list optional_comma ')' .

    $default  reduce using rule 847 (make_dim_decl)


State 1512

  829 make_tuple_call: "tuple" '<' $@98 tuple_type_list '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 829 (make_tuple_call)


State 1513

  820 make_struct_decl: "variant" '<' $@94 variant_type_list '>' $@95 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 820 (make_struct_decl)


State 1514

  856 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1535


State 1515

  859 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1536


State 1516

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  860 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ';'    shift, and go to state 1514

    $default  reduce using rule 855 (array_comprehension_where)

    array_comprehension_where  go to state 1537


State 1517

  861 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1538


State 1518

   71 expression_else: "else" . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1539


State 1519

   64 elif_or_static_elif: "elif" .

    $default  reduce using rule 64 (elif_or_static_elif)


State 1520

   65 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 65 (elif_or_static_elif)


State 1521

   72 expression_else: elif_or_static_elif . '(' expr ')' optional_emit_semis expression_block expression_else

    '('  shift, and go to state 1540


State 1522

   92 expression_if_then_else: $@6 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else .

    $default  reduce using rule 92 (expression_if_then_else)


State 1523

   88 expression_if_block: $@3 '{' . expressions $@4 '}' expression_block_finally

    $default  reduce using rule 275 (expressions)

    expressions  go to state 1541


State 1524

   90 expression_if_block: $@5 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1542


State 1525

  102 expression_for_loop: $@7 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis . expression_block

    $default  reduce using rule 252 ($@13)

    expression_block  go to state 1543
    $@13              go to state 397


State 1526

  251 expression_block_finally: "finally" $@11 '{' expressions $@12 '}' .

    $default  reduce using rule 251 (expression_block_finally)


State 1527

  316 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1544
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1528

  317 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . SEMICOLON
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1545


State 1529

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1546


State 1530

  534 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 1547


State 1531

  804 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 804 (make_struct_dim_list)


State 1532

  805 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 984

    make_struct_fields  go to state 1548


State 1533

  833 make_dim_decl: "array" "struct" '<' $@100 type_declaration_no_options '>' $@101 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 833 (make_dim_decl)


State 1534

  836 make_dim_decl: "array" "tuple" '<' $@102 tuple_type_list '>' $@103 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 836 (make_dim_decl)


State 1535

  856 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1549
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1536

  859 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 859 (array_comprehension)


State 1537

  860 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1550


State 1538

  861 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 861 (array_comprehension)


State 1539

   71 expression_else: "else" optional_emit_semis . expression_block

    $default  reduce using rule 252 ($@13)

    expression_block  go to state 1551
    $@13              go to state 397


State 1540

   72 expression_else: elif_or_static_elif '(' . expr ')' optional_emit_semis expression_block expression_else

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1552
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1541

   88 expression_if_block: $@3 '{' expressions . $@4 '}' expression_block_finally
  276 expressions: expressions . expression_any
  277            | expressions . error

    error                             shift, and go to state 871
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 872
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 873
    "try"                             shift, and go to state 874
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 875
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 876
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 877
    "pass"                            shift, and go to state 878
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 879
    "goto"                            shift, and go to state 880
    "unsafe"                          shift, and go to state 881
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 882
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 104 ($@8)
    "if"         reduce using rule 91 ($@6)
    "static_if"  reduce using rule 91 ($@6)
    "for"        reduce using rule 101 ($@7)
    "with"       reduce using rule 106 ($@9)
    '}'          reduce using rule 87 ($@4)

    SEMICOLON                         go to state 883
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 884
    expression_goto                   go to state 885
    expression_if_one_liner           go to state 886
    $@4                               go to state 1553
    expression_if_then_else           go to state 887
    $@6                               go to state 888
    expression_if_then_else_oneliner  go to state 889
    expression_for_loop               go to state 890
    $@7                               go to state 891
    expression_unsafe                 go to state 892
    expression_while_loop             go to state 893
    $@8                               go to state 894
    expression_with                   go to state 895
    $@9                               go to state 896
    expression_with_alias             go to state 897
    expr_call_pipe                    go to state 471
    expression_any                    go to state 899
    name_in_namespace                 go to state 472
    expression_delete                 go to state 900
    expr_new                          go to state 473
    expression_break                  go to state 901
    expression_continue               go to state 902
    expression_return                 go to state 903
    expression_yield                  go to state 904
    expression_try_catch              go to state 905
    kwd_let                           go to state 906
    expression_let                    go to state 907
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 908
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 909
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 1542

   90 expression_if_block: $@5 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 90 (expression_if_block)


State 1543

  102 expression_for_loop: $@7 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block .

    $default  reduce using rule 102 (expression_for_loop)


State 1544

  316 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1554


State 1545

  317 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 317 (tuple_expansion_variable_declaration)


State 1546

  532 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@38 function_declaration_header SEMICOLON .

    $default  reduce using rule 532 (struct_variable_declaration_list)


State 1547

  534 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1555


State 1548

  795 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  796                   | make_struct_fields . ',' "name" ":=" expr
  799                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  800                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  805 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 765
    ')'  shift, and go to state 1556


State 1549

  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'
  856 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 856 (array_comprehension_where)


State 1550

  860 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 860 (array_comprehension)


State 1551

   71 expression_else: "else" optional_emit_semis expression_block .

    $default  reduce using rule 71 (expression_else)


State 1552

   72 expression_else: elif_or_static_elif '(' expr . ')' optional_emit_semis expression_block expression_else
  384 expr_method_call: expr . "->" "name" '(' ')'
  385                 | expr . "->" "name" '(' expr_list ')'
  395 expr_field: expr . '.' "name"
  396           | expr . '.' '.' "name"
  397           | expr . '.' "name" '(' ')'
  398           | expr . '.' "name" '(' expr_list ')'
  399           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  400           | expr . '.' basic_type_declaration '(' ')'
  401           | expr . '.' basic_type_declaration '(' expr_list ')'
  404           | expr . '.' $@29 error $@30
  426 expr: expr . "<<" expr
  427     | expr . ">>" expr
  428     | expr . "<<<" expr
  429     | expr . ">>>" expr
  430     | expr . '+' expr
  431     | expr . '-' expr
  432     | expr . '*' expr
  433     | expr . '/' expr
  434     | expr . '%' expr
  435     | expr . '<' expr
  436     | expr . '>' expr
  437     | expr . "==" expr
  438     | expr . "!=" expr
  439     | expr . "<=" expr
  440     | expr . ">=" expr
  441     | expr . '&' expr
  442     | expr . '|' expr
  443     | expr . '^' expr
  444     | expr . "&&" expr
  445     | expr . "||" expr
  446     | expr . "^^" expr
  447     | expr . ".." expr
  450     | expr . "++"
  451     | expr . "--"
  454     | expr . '[' expr ']'
  455     | expr . '.' '[' expr ']'
  456     | expr . "?[" expr ']'
  457     | expr . '.' "?[" expr ']'
  458     | expr . "?." "name"
  459     | expr . '.' "?." "name"
  466     | expr . "??" expr
  467     | expr . '?' expr ':' expr
  470     | expr . "is" "type" '<' $@31 type_declaration_no_options '>' $@32
  471     | expr . "is" basic_type_declaration
  472     | expr . "is" "name"
  473     | expr . "as" "name"
  476     | expr . "as" "type" '<' $@33 type_declaration '>' $@34
  477     | expr . "as" basic_type_declaration
  478     | expr . '?' "as" "name"
  481     | expr . '?' "as" "type" '<' $@35 type_declaration '>' $@36
  482     | expr . '?' "as" basic_type_declaration
  490     | expr . "<|" expr
  491     | expr . "|>" expr
  492     | expr . "|>" basic_type_declaration
  506 expr_mtag: expr . '.' "$f" '(' expr ')'
  507          | expr . "?." "$f" '(' expr ')'
  508          | expr . '.' '.' "$f" '(' expr ')'
  509          | expr . '.' "?." "$f" '(' expr ')'
  510          | expr . "as" "$f" '(' expr ')'
  511          | expr . '?' "as" "$f" '(' expr ')'
  512          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1557


State 1553

   88 expression_if_block: $@3 '{' expressions $@4 . '}' expression_block_finally

    '}'  shift, and go to state 1558


State 1554

  316 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 316 (tuple_expansion_variable_declaration)


State 1555

  534 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 252 ($@13)

    expression_block  go to state 1559
    $@13              go to state 397


State 1556

  805 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 805 (make_struct_dim_list)


State 1557

   72 expression_else: elif_or_static_elif '(' expr ')' . optional_emit_semis expression_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1560


State 1558

   88 expression_if_block: $@3 '{' expressions $@4 '}' . expression_block_finally

    "finally"  shift, and go to state 1224

    $default  reduce using rule 248 (expression_block_finally)

    expression_block_finally  go to state 1561


State 1559

  534 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@39 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 534 (struct_variable_declaration_list)


State 1560

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis . expression_block expression_else

    $default  reduce using rule 252 ($@13)

    expression_block  go to state 1562
    $@13              go to state 397


State 1561

   88 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally .

    $default  reduce using rule 88 (expression_if_block)


State 1562

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block . expression_else

    "else"         shift, and go to state 1518
    "elif"         shift, and go to state 1519
    "static_elif"  shift, and go to state 1520

    $default  reduce using rule 70 (expression_else)

    elif_or_static_elif  go to state 1521
    expression_else      go to state 1563


State 1563

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else .

    $default  reduce using rule 72 (expression_else)
