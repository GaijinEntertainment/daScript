Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


State 1473 conflicts: 1 reduce/reduce
State 1566 conflicts: 1 reduce/reduce
State 1593 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration SEMICOLON
    9        | program options_declaration SEMICOLON
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program SEMICOLON

   16 COMMA: ','
   17      | "new line, comma"

   18 SEMICOLON: ';'
   19          | "new line, semicolon"

   20 top_level_reader_macro: expr_reader SEMICOLON

   21 optional_public_or_private_module: %empty
   22                                  | "public"
   23                                  | "private"

   24 module_name: '$'
   25            | "name"

   26 optional_not_required: %empty
   27                      | '!' "inscope"

   28 module_declaration: "module" module_name optional_shared optional_public_or_private_module optional_not_required

   29 character_sequence: STRING_CHARACTER
   30                   | STRING_CHARACTER_ESC
   31                   | character_sequence STRING_CHARACTER
   32                   | character_sequence STRING_CHARACTER_ESC

   33 string_constant: "start of the string" character_sequence "end of the string"
   34                | "start of the string" "end of the string"

   35 format_string: %empty
   36              | format_string STRING_CHARACTER

   37 optional_format_string: %empty

   38 $@1: %empty

   39 optional_format_string: ':' $@1 format_string

   40 string_builder_body: %empty
   41                    | string_builder_body character_sequence
   42                    | string_builder_body "{" expr optional_format_string "}"

   43 string_builder: "start of the string" string_builder_body "end of the string"

   44 reader_character_sequence: STRING_CHARACTER
   45                          | reader_character_sequence STRING_CHARACTER

   46 $@2: %empty

   47 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   48 options_declaration: "options" annotation_argument_list

   49 require_declaration: "require" require_module

   50 require_module_name: "name"
   51                    | '%' require_module_name
   52                    | require_module_name '.' "name"
   53                    | require_module_name '/' "name"

   54 require_module: require_module_name is_public_module
   55               | require_module_name "as" "name" is_public_module

   56 is_public_module: %empty
   57                 | "public"

   58 expect_declaration: "expect" expect_list

   59 expect_list: expect_error
   60            | expect_list ',' expect_error

   61 expect_error: "integer constant"
   62             | "integer constant" ':' "integer constant"

   63 expression_label: "label" "integer constant" ':'

   64 expression_goto: "goto" "label" "integer constant"
   65                | "goto" expr

   66 elif_or_static_elif: "elif"
   67                    | "static_elif"

   68 emit_semis: "new line, semicolon"
   69           | emit_semis "new line, semicolon"

   70 optional_emit_semis: %empty
   71                    | emit_semis

   72 expression_else: %empty
   73                | "else" optional_emit_semis expression_else_block
   74                | elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block expression_else

   75 if_or_static_if: "if"
   76                | "static_if"

   77 expression_else_one_liner: %empty
   78                          | "else" expression_if_one_liner

   79 expression_if_one_liner: expr
   80                        | expression_return
   81                        | expression_yield
   82                        | expression_break
   83                        | expression_continue

   84 semis: SEMICOLON
   85      | semis SEMICOLON

   86 optional_semis: %empty
   87               | semis

   88 $@3: %empty

   89 $@4: %empty

   90 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally

   91 $@5: %empty

   92 expression_if_block: $@5 expression_if_one_liner SEMICOLON

   93 $@6: %empty

   94 $@7: %empty

   95 expression_else_block: $@6 '{' expressions $@7 '}' expression_block_finally

   96 $@8: %empty

   97 expression_else_block: $@8 expression_if_one_liner SEMICOLON

   98 $@9: %empty

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON

  101 for_variable_name_with_pos_list: "name"
  102                                | "$i" '(' expr ')'
  103                                | "name" "aka" "name"
  104                                | '(' tuple_expansion ')'
  105                                | for_variable_name_with_pos_list ',' "name"
  106                                | for_variable_name_with_pos_list ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list ',' '(' tuple_expansion ')'

  108 $@10: %empty

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

  110 expression_unsafe: "unsafe" optional_emit_semis expression_block

  111 $@11: %empty

  112 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis expression_block

  113 $@12: %empty

  114 expression_with: $@12 "with" '(' expr ')' optional_emit_semis expression_block

  115 expression_with_alias: "assume" "name" '=' expr

  116 annotation_argument_value: string_constant
  117                          | "name"
  118                          | "integer constant"
  119                          | "floating point constant"
  120                          | "true"
  121                          | "false"

  122 annotation_argument_value_list: annotation_argument_value
  123                               | annotation_argument_value_list ',' annotation_argument_value

  124 annotation_argument_name: "name"
  125                         | "type"
  126                         | "in"

  127 annotation_argument: annotation_argument_name '=' string_constant
  128                    | annotation_argument_name '=' "name"
  129                    | annotation_argument_name '=' "integer constant"
  130                    | annotation_argument_name '=' "floating point constant"
  131                    | annotation_argument_name '=' "true"
  132                    | annotation_argument_name '=' "false"
  133                    | annotation_argument_name
  134                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  135 annotation_argument_list: annotation_argument
  136                         | annotation_argument_list ',' annotation_argument

  137 metadata_argument_list: '@' annotation_argument optional_emit_semis
  138                       | metadata_argument_list '@' annotation_argument optional_emit_semis

  139 annotation_declaration_name: name_in_namespace
  140                            | "require"
  141                            | "private"
  142                            | "template"

  143 annotation_declaration_basic: annotation_declaration_name
  144                             | annotation_declaration_name '(' annotation_argument_list ')'

  145 annotation_declaration: annotation_declaration_basic
  146                       | '!' annotation_declaration
  147                       | annotation_declaration "&&" annotation_declaration
  148                       | annotation_declaration "||" annotation_declaration
  149                       | annotation_declaration "^^" annotation_declaration
  150                       | '(' annotation_declaration ')'
  151                       | "|>" annotation_declaration

  152 annotation_list: annotation_declaration
  153                | annotation_list ',' annotation_declaration

  154 optional_annotation_list: %empty
  155                         | '[' annotation_list ']'

  156 optional_annotation_list_with_emit_semis: %empty
  157                                         | '[' annotation_list ']' optional_emit_semis

  158 optional_function_argument_list: %empty
  159                                | '(' ')'
  160                                | '(' function_argument_list ')'

  161 optional_function_type: %empty
  162                       | ':' type_declaration

  163 function_name: "name"
  164              | "operator" '!'
  165              | "operator" '~'
  166              | "operator" "+="
  167              | "operator" "-="
  168              | "operator" "*="
  169              | "operator" "/="
  170              | "operator" "%="
  171              | "operator" "&="
  172              | "operator" "|="
  173              | "operator" "^="
  174              | "operator" "&&="
  175              | "operator" "||="
  176              | "operator" "^^="
  177              | "operator" "&&"
  178              | "operator" "||"
  179              | "operator" "^^"
  180              | "operator" '+'
  181              | "operator" '-'
  182              | "operator" '*'
  183              | "operator" '/'
  184              | "operator" '%'
  185              | "operator" '<'
  186              | "operator" '>'
  187              | "operator" ".."
  188              | "operator" "=="
  189              | "operator" "!="
  190              | "operator" "<="
  191              | "operator" ">="
  192              | "operator" '&'
  193              | "operator" '|'
  194              | "operator" '^'
  195              | "++" "operator"
  196              | "--" "operator"
  197              | "operator" "++"
  198              | "operator" "--"
  199              | "operator" "<<"
  200              | "operator" ">>"
  201              | "operator" "<<="
  202              | "operator" ">>="
  203              | "operator" "<<<"
  204              | "operator" ">>>"
  205              | "operator" "<<<="
  206              | "operator" ">>>="
  207              | "operator" '[' ']'
  208              | "operator" "?[" ']'
  209              | "operator" '.'
  210              | "operator" "?."
  211              | "operator" '.' "name"
  212              | "operator" '.' "name" ":="
  213              | "operator" '.' "name" "+="
  214              | "operator" '.' "name" "-="
  215              | "operator" '.' "name" "*="
  216              | "operator" '.' "name" "/="
  217              | "operator" '.' "name" "%="
  218              | "operator" '.' "name" "&="
  219              | "operator" '.' "name" "|="
  220              | "operator" '.' "name" "^="
  221              | "operator" '.' "name" "&&="
  222              | "operator" '.' "name" "||="
  223              | "operator" '.' "name" "^^="
  224              | "operator" "?." "name"
  225              | "operator" ":="
  226              | "operator" "delete"
  227              | "operator" "??"
  228              | "operator" "is"
  229              | "operator" "as"
  230              | "operator" "is" "name"
  231              | "operator" "as" "name"
  232              | "operator" '?' "as"
  233              | "operator" '?' "as" "name"
  234              | "bool"
  235              | "string"
  236              | "int"
  237              | "int2"
  238              | "int3"
  239              | "int4"
  240              | "uint"
  241              | "uint2"
  242              | "uint3"
  243              | "uint4"
  244              | "float"
  245              | "float2"
  246              | "float3"
  247              | "float4"
  248              | "range"
  249              | "urange"
  250              | "range64"
  251              | "urange64"
  252              | "int64"
  253              | "uint64"
  254              | "double"
  255              | "int8"
  256              | "uint8"
  257              | "int16"
  258              | "uint16"

  259 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration

  260 optional_public_or_private_function: %empty
  261                                    | "private"
  262                                    | "public"

  263 function_declaration_header: function_name optional_function_argument_list optional_function_type

  264 $@13: %empty

  265 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block

  266 expression_block_finally: %empty

  267 $@14: %empty

  268 $@15: %empty

  269 expression_block_finally: "finally" $@14 '{' expressions $@15 '}'

  270 $@16: %empty

  271 $@17: %empty

  272 expression_block: $@16 '{' expressions $@17 '}' expression_block_finally

  273 expr_call_pipe: expr_call expr_full_block_assumed_piped

  274 expression_any: SEMICOLON
  275               | expr_assign SEMICOLON
  276               | expression_delete SEMICOLON
  277               | expression_let
  278               | expression_while_loop
  279               | expression_unsafe
  280               | expression_with
  281               | expression_with_alias SEMICOLON
  282               | expression_for_loop
  283               | expression_break SEMICOLON
  284               | expression_continue SEMICOLON
  285               | expression_return SEMICOLON
  286               | expression_yield SEMICOLON
  287               | expression_if_then_else
  288               | expression_if_then_else_oneliner
  289               | expression_try_catch
  290               | expression_label SEMICOLON
  291               | expression_goto SEMICOLON
  292               | "pass" SEMICOLON

  293 expressions: %empty
  294            | expressions expression_any
  295            | expressions error

  296 optional_expr_list: %empty
  297                   | expr_list optional_comma

  298 optional_expr_map_tuple_list: %empty
  299                             | expr_map_tuple_list optional_comma

  300 type_declaration_no_options_list: type_declaration
  301                                 | type_declaration_no_options_list c_or_s type_declaration

  302 name_in_namespace: "name"
  303                  | "name" "::" "name"
  304                  | "::" "name"

  305 expression_delete: "delete" expr
  306                  | "delete" "explicit" expr

  307 $@18: %empty

  308 $@19: %empty

  309 new_type_declaration: '<' $@18 type_declaration '>' $@19
  310                     | structure_type_declaration

  311 expr_new: "new" new_type_declaration
  312         | "new" new_type_declaration '(' use_initializer ')'
  313         | "new" new_type_declaration '(' expr_list ')'
  314         | "new" new_type_declaration '(' make_struct_single ')'
  315         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  316         | "new" make_decl

  317 expression_break: "break"

  318 expression_continue: "continue"

  319 expression_return: "return"
  320                  | "return" expr
  321                  | "return" "<-" expr

  322 expression_yield: "yield" expr
  323                 | "yield" "<-" expr

  324 expression_try_catch: "try" expression_block "recover" expression_block

  325 kwd_let_var_or_nothing: "let"
  326                       | "var"
  327                       | %empty

  328 kwd_let: "let"
  329        | "var"

  330 optional_in_scope: "inscope"
  331                  | %empty

  332 tuple_expansion: "name"
  333                | tuple_expansion ',' "name"

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  335                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

  336 expression_let: kwd_let optional_in_scope let_variable_declaration
  337               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  338               | kwd_let optional_in_scope '{' variable_declaration_list '}'

  339 $@20: %empty

  340 $@21: %empty

  341 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 expr

  342 $@22: %empty

  343 $@23: %empty

  344 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 expr

  345 $@24: %empty

  346 $@25: %empty

  347 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 expr

  348 $@26: %empty

  349 $@27: %empty

  350 expr_type_decl: "type" '<' $@26 type_declaration '>' $@27

  351 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  352               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  353               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  354 expr_list: expr
  355          | expr_list ',' expr

  356 block_or_simple_block: expression_block
  357                      | "=>" expr
  358                      | "=>" "<-" expr

  359 block_or_lambda: '$'
  360                | '@'
  361                | '@' '@'

  362 capture_entry: '&' "name"
  363              | '=' "name"
  364              | "<-" "name"
  365              | ":=" "name"
  366              | "name" '(' "name" ')'

  367 capture_list: capture_entry
  368             | capture_list ',' capture_entry

  369 optional_capture_list: %empty
  370                      | "capture" '(' capture_list ')'

  371 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

  372 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block
  373                              | '{' expressions '}'

  374 expr_numeric_const: "integer constant"
  375                   | "unsigned integer constant"
  376                   | "long integer constant"
  377                   | "unsigned long integer constant"
  378                   | "unsigned int8 constant"
  379                   | "floating point constant"
  380                   | "double constant"

  381 expr_assign: expr
  382            | expr '=' expr
  383            | expr "<-" expr
  384            | expr ":=" expr
  385            | expr "&=" expr
  386            | expr "|=" expr
  387            | expr "^=" expr
  388            | expr "&&=" expr
  389            | expr "||=" expr
  390            | expr "^^=" expr
  391            | expr "+=" expr
  392            | expr "-=" expr
  393            | expr "*=" expr
  394            | expr "/=" expr
  395            | expr "%=" expr
  396            | expr "<<=" expr
  397            | expr ">>=" expr
  398            | expr "<<<=" expr
  399            | expr ">>>=" expr

  400 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  401                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  402 expr_method_call: expr "->" "name" '(' ')'
  403                 | expr "->" "name" '(' expr_list ')'

  404 func_addr_name: name_in_namespace
  405               | "$i" '(' expr ')'

  406 func_addr_expr: '@' '@' func_addr_name

  407 $@28: %empty

  408 $@29: %empty

  409 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name

  410 $@30: %empty

  411 $@31: %empty

  412 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name

  413 expr_field: expr '.' "name"
  414           | expr '.' '.' "name"
  415           | expr '.' "name" '(' ')'
  416           | expr '.' "name" '(' expr_list ')'
  417           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr '.' basic_type_declaration '(' ')'
  419           | expr '.' basic_type_declaration '(' expr_list ')'

  420 $@32: %empty

  421 $@33: %empty

  422 expr_field: expr '.' $@32 error $@33

  423 expr_call: name_in_namespace '(' ')'
  424          | name_in_namespace '(' "uninitialized" ')'
  425          | name_in_namespace '(' make_struct_single ')'
  426          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  427          | name_in_namespace '(' expr_list ')'
  428          | basic_type_declaration '(' ')'
  429          | basic_type_declaration '(' expr_list ')'

  430 expr: "null"
  431     | name_in_namespace
  432     | expr_numeric_const
  433     | expr_reader
  434     | string_builder
  435     | make_decl
  436     | "true"
  437     | "false"
  438     | expr_field
  439     | expr_mtag
  440     | '!' expr
  441     | '~' expr
  442     | '+' expr
  443     | '-' expr
  444     | expr "<<" expr
  445     | expr ">>" expr
  446     | expr "<<<" expr
  447     | expr ">>>" expr
  448     | expr '+' expr
  449     | expr '-' expr
  450     | expr '*' expr
  451     | expr '/' expr
  452     | expr '%' expr
  453     | expr '<' expr
  454     | expr '>' expr
  455     | expr "==" expr
  456     | expr "!=" expr
  457     | expr "<=" expr
  458     | expr ">=" expr
  459     | expr '&' expr
  460     | expr '|' expr
  461     | expr '^' expr
  462     | expr "&&" expr
  463     | expr "||" expr
  464     | expr "^^" expr
  465     | expr ".." expr
  466     | "++" expr
  467     | "--" expr
  468     | expr "++"
  469     | expr "--"
  470     | '(' expr_list optional_comma ')'
  471     | '(' make_struct_single ')'
  472     | expr '[' expr ']'
  473     | expr '.' '[' expr ']'
  474     | expr "?[" expr ']'
  475     | expr '.' "?[" expr ']'
  476     | expr "?." "name"
  477     | expr '.' "?." "name"
  478     | func_addr_expr
  479     | expr_call
  480     | '*' expr
  481     | "deref" '(' expr ')'
  482     | "addr" '(' expr ')'
  483     | expr_generator
  484     | expr "??" expr
  485     | expr '?' expr ':' expr

  486 $@34: %empty

  487 $@35: %empty

  488 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr "is" basic_type_declaration
  490     | expr "is" "name"
  491     | expr "as" "name"

  492 $@36: %empty

  493 $@37: %empty

  494 expr: expr "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr "as" basic_type_declaration
  496     | expr '?' "as" "name"

  497 $@38: %empty

  498 $@39: %empty

  499 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr '?' "as" basic_type_declaration
  501     | expr_type_info
  502     | expr_type_decl
  503     | expr_cast
  504     | expr_new
  505     | expr_method_call
  506     | expr_named_call
  507     | expr_full_block
  508     | expr "<|" expr
  509     | expr "|>" expr
  510     | expr "|>" basic_type_declaration
  511     | expr_call_pipe
  512     | "unsafe" '(' expr ')'

  513 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  514               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  515               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

  516 expr_mtag: "$$" '(' expr ')'
  517          | "$i" '(' expr ')'
  518          | "$v" '(' expr ')'
  519          | "$b" '(' expr ')'
  520          | "$a" '(' expr ')'
  521          | "..."
  522          | "$c" '(' expr ')' '(' ')'
  523          | "$c" '(' expr ')' '(' expr_list ')'
  524          | expr '.' "$f" '(' expr ')'
  525          | expr "?." "$f" '(' expr ')'
  526          | expr '.' '.' "$f" '(' expr ')'
  527          | expr '.' "?." "$f" '(' expr ')'
  528          | expr "as" "$f" '(' expr ')'
  529          | expr '?' "as" "$f" '(' expr ')'
  530          | expr "is" "$f" '(' expr ')'
  531          | '@' '@' "$c" '(' expr ')'

  532 optional_field_annotation: %empty
  533                          | metadata_argument_list

  534 optional_override: %empty
  535                  | "override"
  536                  | "sealed"

  537 optional_constant: %empty
  538                  | "const"

  539 optional_public_or_private_member_variable: %empty
  540                                           | "public"
  541                                           | "private"

  542 optional_static_member_variable: %empty
  543                                | "static"

  544 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  545 struct_variable_declaration_list: %empty
  546                                 | struct_variable_declaration_list "new line, semicolon"

  547 $@40: %empty

  548 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration SEMICOLON

  549 $@41: %empty

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON

  551 $@42: %empty

  552 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

  553 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type

  554 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type
  555                                   | "$a" '(' expr ')'

  556 function_argument_list: function_argument_declaration_no_type
  557                       | function_argument_declaration_type
  558                       | function_argument_declaration_no_type ';' function_argument_list
  559                       | function_argument_declaration_type ';' function_argument_list
  560                       | function_argument_declaration_type ',' function_argument_list

  561 tuple_type: type_declaration
  562           | "name" ':' type_declaration

  563 tuple_type_list: tuple_type
  564                | tuple_type_list c_or_s tuple_type

  565 tuple_alias_type_list: %empty
  566                      | tuple_type
  567                      | tuple_alias_type_list semis tuple_type

  568 variant_type: "name" ':' type_declaration

  569 variant_type_list: variant_type
  570                  | variant_type_list c_or_s variant_type

  571 variant_alias_type_list: %empty
  572                        | variant_type
  573                        | variant_alias_type_list semis variant_type

  574 copy_or_move: '='
  575             | "<-"

  576 variable_declaration_no_type: variable_name_with_pos_list
  577                             | variable_name_with_pos_list '&'
  578                             | variable_name_with_pos_list copy_or_move expr

  579 variable_declaration_type: variable_name_with_pos_list ':' type_declaration
  580                          | variable_name_with_pos_list ':' type_declaration copy_or_move expr

  581 variable_declaration: variable_declaration_type
  582                     | variable_declaration_no_type

  583 copy_or_move_or_clone: '='
  584                      | "<-"
  585                      | ":="

  586 optional_ref: %empty
  587             | '&'

  588 let_variable_name_with_pos_list: "name"
  589                                | "$i" '(' expr ')'
  590                                | "name" "aka" "name"
  591                                | let_variable_name_with_pos_list ',' "name"
  592                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  593 global_let_variable_name_with_pos_list: "name"
  594                                       | global_let_variable_name_with_pos_list ',' "name"

  595 variable_declaration_list: %empty
  596                          | variable_declaration_list SEMICOLON
  597                          | variable_declaration_list let_variable_declaration

  598 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  599                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  600                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  601 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  602                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  603                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  604 optional_shared: %empty
  605                | "shared"

  606 optional_public_or_private_variable: %empty
  607                                    | "private"
  608                                    | "public"

  609 global_variable_declaration_list: %empty
  610                                 | global_variable_declaration_list SEMICOLON

  611 $@43: %empty

  612 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation let_variable_declaration

  613 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  614 $@44: %empty

  615 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

  616 enum_expression: "name"
  617                | "name" '=' expr

  618 commas: COMMA
  619       | commas COMMA

  620 enum_list: %empty
  621          | enum_expression
  622          | enum_list commas enum_expression

  623 optional_public_or_private_alias: %empty
  624                                 | "private"
  625                                 | "public"

  626 $@45: %empty

  627 single_alias: optional_public_or_private_alias "name" $@45 '=' type_declaration

  628 alias_declaration: "typedef" single_alias SEMICOLON

  629 optional_public_or_private_enum: %empty
  630                                | "private"
  631                                | "public"

  632 enum_name: "name"

  633 optional_enum_basic_type_declaration: %empty
  634                                     | ':' enum_basic_type_declaration

  635 optional_commas: %empty
  636                | commas

  637 emit_commas: "new line, comma"
  638            | emit_commas "new line, comma"

  639 optional_emit_commas: %empty
  640                     | emit_commas

  641 $@46: %empty

  642 $@47: %empty

  643 $@48: %empty

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

  645 optional_structure_parent: %empty
  646                          | ':' name_in_namespace

  647 optional_sealed: %empty
  648                | "sealed"

  649 structure_name: optional_sealed "name" optional_structure_parent

  650 class_or_struct: "class"
  651                | "struct"
  652                | "template" "class"
  653                | "template" "struct"

  654 optional_public_or_private_structure: %empty
  655                                     | "private"
  656                                     | "public"

  657 optional_struct_variable_declaration_list: ';'
  658                                          | '{' struct_variable_declaration_list '}'

  659 $@49: %empty

  660 $@50: %empty

  661 $@51: %empty

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

  663 variable_name_with_pos_list: "name"
  664                            | "$i" '(' expr ')'
  665                            | "name" "aka" "name"
  666                            | variable_name_with_pos_list ',' "name"
  667                            | variable_name_with_pos_list ',' "name" "aka" "name"

  668 basic_type_declaration: "bool"
  669                       | "string"
  670                       | "int"
  671                       | "int8"
  672                       | "int16"
  673                       | "int64"
  674                       | "int2"
  675                       | "int3"
  676                       | "int4"
  677                       | "uint"
  678                       | "uint8"
  679                       | "uint16"
  680                       | "uint64"
  681                       | "uint2"
  682                       | "uint3"
  683                       | "uint4"
  684                       | "float"
  685                       | "float2"
  686                       | "float3"
  687                       | "float4"
  688                       | "void"
  689                       | "range"
  690                       | "urange"
  691                       | "range64"
  692                       | "urange64"
  693                       | "double"
  694                       | "bitfield"

  695 enum_basic_type_declaration: "int"
  696                            | "int8"
  697                            | "int16"
  698                            | "uint"
  699                            | "uint8"
  700                            | "uint16"
  701                            | "int64"
  702                            | "uint64"

  703 structure_type_declaration: name_in_namespace

  704 auto_type_declaration: "auto"
  705                      | "auto" '(' "name" ')'
  706                      | "$t" '(' expr ')'

  707 bitfield_bits: "name"
  708              | bitfield_bits ';' "name"

  709 bitfield_alias_bits: %empty
  710                    | "name"
  711                    | "name" '=' expr
  712                    | bitfield_alias_bits commas "name"
  713                    | bitfield_alias_bits commas "name" '=' expr

  714 bitfield_basic_type_declaration: "bitfield"
  715                                | "bitfield" ':' "uint8"
  716                                | "bitfield" ':' "uint16"
  717                                | "bitfield" ':' "uint"
  718                                | "bitfield" ':' "uint64"

  719 $@52: %empty

  720 $@53: %empty

  721 bitfield_type_declaration: bitfield_basic_type_declaration '<' $@52 bitfield_bits '>' $@53

  722 c_or_s: COMMA
  723       | SEMICOLON

  724 table_type_pair: type_declaration
  725                | type_declaration c_or_s type_declaration

  726 dim_list: '[' expr ']'
  727         | '[' ']'
  728         | dim_list '[' expr ']'
  729         | dim_list '[' ']'

  730 type_declaration_no_options: type_declaration_no_options_no_dim
  731                            | type_declaration_no_options_no_dim dim_list

  732 type_declaration_no_options_no_dim: basic_type_declaration
  733                                   | auto_type_declaration
  734                                   | bitfield_type_declaration
  735                                   | structure_type_declaration

  736 $@54: %empty

  737 $@55: %empty

  738 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' $@55
  739                                   | "typedecl" '(' expr ')'
  740                                   | '$' name_in_namespace '(' optional_expr_list ')'

  741 $@56: %empty

  742 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  743                                   | type_declaration_no_options '-' '[' ']'
  744                                   | type_declaration_no_options "explicit"
  745                                   | type_declaration_no_options "const"
  746                                   | type_declaration_no_options '-' "const"
  747                                   | type_declaration_no_options '&'
  748                                   | type_declaration_no_options '-' '&'
  749                                   | type_declaration_no_options '#'
  750                                   | type_declaration_no_options "implicit"
  751                                   | type_declaration_no_options '-' '#'
  752                                   | type_declaration_no_options "==" "const"
  753                                   | type_declaration_no_options "==" '&'
  754                                   | type_declaration_no_options '?'

  755 $@57: %empty

  756 $@58: %empty

  757 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' $@58
  758                                   | type_declaration_no_options "??"

  759 $@59: %empty

  760 $@60: %empty

  761 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' $@60

  762 $@61: %empty

  763 $@62: %empty

  764 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' $@62

  765 $@63: %empty

  766 $@64: %empty

  767 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' $@64
  768                                   | "block"

  769 $@65: %empty

  770 $@66: %empty

  771 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' $@66

  772 $@67: %empty

  773 $@68: %empty

  774 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' $@68
  775                                   | "function"

  776 $@69: %empty

  777 $@70: %empty

  778 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' $@70

  779 $@71: %empty

  780 $@72: %empty

  781 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' $@72
  782                                   | "lambda"

  783 $@73: %empty

  784 $@74: %empty

  785 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' $@74

  786 $@75: %empty

  787 $@76: %empty

  788 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' $@76

  789 $@77: %empty

  790 $@78: %empty

  791 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' $@78

  792 $@79: %empty

  793 $@80: %empty

  794 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' $@80

  795 type_declaration: type_declaration_no_options
  796                 | type_declaration '|' type_declaration_no_options
  797                 | type_declaration '|' '#'

  798 $@81: %empty

  799 $@82: %empty

  800 $@83: %empty

  801 $@84: %empty

  802 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

  803 $@85: %empty

  804 $@86: %empty

  805 $@87: %empty

  806 $@88: %empty

  807 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

  808 $@89: %empty

  809 $@90: %empty

  810 $@91: %empty

  811 $@92: %empty

  812 bitfield_alias_declaration: bitfield_basic_type_declaration $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

  813 make_decl: make_struct_decl
  814          | make_dim_decl
  815          | make_table_decl
  816          | array_comprehension
  817          | make_tuple_call

  818 make_struct_fields: "name" copy_or_move expr
  819                   | "name" ":=" expr
  820                   | make_struct_fields ',' "name" copy_or_move expr
  821                   | make_struct_fields ',' "name" ":=" expr
  822                   | "$f" '(' expr ')' copy_or_move expr
  823                   | "$f" '(' expr ')' ":=" expr
  824                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  825                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  826 make_variant_dim: %empty
  827                 | make_struct_fields

  828 make_struct_single: make_struct_fields optional_comma

  829 make_struct_dim_list: '(' make_struct_fields ')'
  830                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  831 make_struct_dim_decl: make_struct_fields
  832                     | make_struct_dim_list optional_comma

  833 optional_make_struct_dim_decl: make_struct_dim_decl
  834                              | %empty

  835 use_initializer: %empty
  836                | "uninitialized"

  837 $@93: %empty

  838 $@94: %empty

  839 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

  840 $@95: %empty

  841 $@96: %empty

  842 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

  843 $@97: %empty

  844 $@98: %empty

  845 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

  846 $@99: %empty

  847 $@100: %empty

  848 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 use_initializer

  849 make_map_tuple: expr "=>" expr
  850               | expr

  851 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  852 $@101: %empty

  853 $@102: %empty

  854 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  855 make_dim_decl: '[' optional_expr_list ']'

  856 $@103: %empty

  857 $@104: %empty

  858 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

  859 $@105: %empty

  860 $@106: %empty

  861 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

  862 $@107: %empty

  863 $@108: %empty

  864 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'
  865              | "array" '(' expr_list optional_comma ')'

  866 $@109: %empty

  867 $@110: %empty

  868 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'
  869              | "fixed_array" '(' expr_list optional_comma ')'

  870 $@111: %empty

  871 $@112: %empty

  872 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

  873 expr_map_tuple_list: make_map_tuple
  874                    | expr_map_tuple_list ',' make_map_tuple

  875 $@113: %empty

  876 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}'
  877                | "table" '(' expr_map_tuple_list optional_comma ')'
  878                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  879                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  880 array_comprehension_where: %empty
  881                          | ';' "where" expr

  882 optional_comma: %empty
  883               | ','

  884 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  885                    | '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  886                    | '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 27 146 164 440
    '#' (35) 749 751 797
    '$' (36) 24 359 740 742
    '%' (37) 47 51 184 452
    '&' (38) 192 362 459 577 587 747 748 753
    '(' (40) 74 99 100 102 104 107 109 112 114 134 144 150 159 160 312 313 314 315 334 335 351 352 353 366 370 400 401 402 403 405 415 416 417 418 419 423 424 425 426 427 428 429 470 471 481 482 512 513 514 516 517 518 519 520 522 523 524 525 526 527 528 529 530 531 555 589 664 705 706 739 740 742 822 823 824 825 829 830 839 842 845 851 854 858 861 864 865 868 869 872 877 878 879 884 885 886
    ')' (41) 74 99 100 102 104 107 109 112 114 134 144 150 159 160 312 313 314 315 334 335 351 352 353 366 370 400 401 402 403 405 415 416 417 418 419 423 424 425 426 427 428 429 470 471 481 482 512 513 514 516 517 518 519 520 522 523 524 525 526 527 528 529 530 531 555 589 664 705 706 739 740 742 822 823 824 825 829 830 839 842 845 851 854 858 861 864 865 868 869 872 877 878 879 884 885 886
    '*' (42) 182 450 480
    '+' (43) 180 442 448
    ',' (44) 16 60 105 106 107 123 136 153 333 355 368 401 560 591 592 594 666 667 820 821 824 825 830 874 883
    '-' (45) 181 443 449 743 746 748 751
    '.' (46) 52 209 211 212 213 214 215 216 217 218 219 220 221 222 223 413 414 415 416 417 418 419 422 473 475 477 524 526 527
    '/' (47) 53 183 451
    ':' (58) 39 62 63 162 334 485 562 568 579 580 598 599 601 602 634 646 715 716 717 718
    ';' (59) 18 558 559 657 708 881 884 885 886
    '<' (60) 185 309 341 344 347 350 352 353 409 412 453 488 494 499 513 514 515 721 738 742 757 761 764 767 771 774 778 781 785 788 791 794 839 842 845 848 854 858 861 864 868 872 878 879
    '=' (61) 115 127 128 129 130 131 132 134 363 382 574 583 617 627 711 713
    '>' (62) 186 309 341 344 347 350 352 353 409 412 454 488 494 499 513 514 515 721 738 742 757 761 764 767 771 774 778 781 785 788 791 794 839 842 845 848 854 858 861 864 868 872 878 879
    '?' (63) 232 233 485 496 499 500 529 754
    '@' (64) 137 138 360 361 406 409 412 531
    '[' (91) 155 157 207 400 401 417 472 473 726 727 728 729 743 855 884 885
    ']' (93) 155 157 207 208 400 401 417 472 473 474 475 726 727 728 729 743 855 884 885
    '^' (94) 194 461
    '{' (123) 90 95 269 272 338 373 613 644 658 802 807 812 876 886
    '|' (124) 193 460 796 797
    '}' (125) 90 95 269 272 338 373 613 644 658 802 807 812 876 886
    '~' (126) 165 441
    error (256) 295 422
    "lexer error" (258)
    "capture" (259) 370
    "struct" (260) 651 653 839 858
    "class" (261) 650 652 842
    "let" (262) 325 328
    "def" (263) 259 550 552
    "while" (264) 112
    "if" (265) 75 100
    "static_if" (266) 76
    "else" (267) 73 78
    "for" (268) 109 884 885 886
    "recover" (269) 324
    "true" (270) 120 131 436
    "false" (271) 121 132 437
    "new" (272) 311 312 313 314 315 316
    "typeinfo" (273) 351 352 353
    "type" (274) 125 350 488 494 499 738
    "in" (275) 109 126 884 885 886
    "is" (276) 228 230 488 489 490 530
    "as" (277) 55 229 231 232 233 491 494 495 496 499 500 528 529
    "elif" (278) 66
    "static_elif" (279) 67
    "array" (280) 761 858 861 864 865 868
    "return" (281) 319 320 321
    "null" (282) 430
    "break" (283) 317
    "try" (284) 324
    "options" (285) 48
    "table" (286) 764 877 878 879
    "expect" (287) 58
    "const" (288) 538 745 746 752
    "require" (289) 49 140
    "operator" (290) 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
    "enum" (291) 644
    "finally" (292) 269
    "delete" (293) 226 305 306
    "deref" (294) 481
    "typedef" (295) 628
    "typedecl" (296) 739
    "with" (297) 114
    "aka" (298) 103 106 590 592 665 667
    "assume" (299) 115
    "cast" (300) 341
    "override" (301) 535
    "abstract" (302) 550
    "upcast" (303) 344
    "iterator" (304) 767 885
    "var" (305) 326 329
    "addr" (306) 482
    "continue" (307) 318
    "where" (308) 881
    "pass" (309) 292
    "reinterpret" (310) 347
    "module" (311) 28
    "public" (312) 22 57 262 540 608 625 631 656
    "label" (313) 63 64
    "goto" (314) 64 65
    "implicit" (315) 750
    "explicit" (316) 306 744
    "shared" (317) 605
    "private" (318) 23 141 261 541 607 624 630 655
    "smart_ptr" (319) 757
    "unsafe" (320) 110 512
    "inscope" (321) 27 330
    "static" (322) 543
    "fixed_array" (323) 869 872
    "default" (324) 848
    "uninitialized" (325) 315 424 426 836
    "bool" (326) 234 668
    "void" (327) 688
    "string" (328) 235 669
    "auto" (329) 704 705
    "int" (330) 236 670 695
    "int2" (331) 237 674
    "int3" (332) 238 675
    "int4" (333) 239 676
    "uint" (334) 240 677 698 717
    "bitfield" (335) 694 714 715 716 717 718
    "uint2" (336) 241 681
    "uint3" (337) 242 682
    "uint4" (338) 243 683
    "float" (339) 244 684
    "float2" (340) 245 685
    "float3" (341) 246 686
    "float4" (342) 247 687
    "range" (343) 248 689
    "urange" (344) 249 690
    "range64" (345) 250 691
    "urange64" (346) 251 692
    "block" (347) 768 771 774
    "int64" (348) 252 673 701
    "uint64" (349) 253 680 702 718
    "double" (350) 254 693
    "function" (351) 775 778 781
    "lambda" (352) 782 785 788
    "int8" (353) 255 671 696
    "uint8" (354) 256 678 699 715
    "int16" (355) 257 672 697
    "uint16" (356) 258 679 700 716
    "tuple" (357) 791 802 851 854 861
    "variant" (358) 794 807 845 864
    "generator" (359) 513 514 515
    "yield" (360) 322 323
    "sealed" (361) 536 648
    "template" (362) 142 652 653
    "+=" (363) 166 213 391
    "-=" (364) 167 214 392
    "/=" (365) 169 216 394
    "*=" (366) 168 215 393
    "%=" (367) 170 217 395
    "&=" (368) 171 218 385
    "|=" (369) 172 219 386
    "^=" (370) 173 220 387
    "<<" (371) 199 444
    ">>" (372) 200 445
    "++" (373) 195 197 466 468
    "--" (374) 196 198 467 469
    "<=" (375) 190 457
    "<<=" (376) 201 396
    ">>=" (377) 202 397
    ">=" (378) 191 458
    "==" (379) 188 455 752 753
    "!=" (380) 189 456
    "->" (381) 402 403
    "<-" (382) 321 323 358 364 383 575 584
    "??" (383) 227 484 758
    "?." (384) 210 224 476 477 525 527
    "?[" (385) 208 474 475
    "<|" (386) 508
    "|>" (387) 151 509 510
    ":=" (388) 212 225 365 384 585 819 821 823 825
    "<<<" (389) 203 446
    ">>>" (390) 204 447
    "<<<=" (391) 205 398
    ">>>=" (392) 206 399
    "=>" (393) 357 358 849
    "::" (394) 303 304
    "&&" (395) 147 177 462
    "||" (396) 148 178 463
    "^^" (397) 149 179 464
    "&&=" (398) 174 221 388
    "||=" (399) 175 222 389
    "^^=" (400) 176 223 390
    ".." (401) 187 465
    "$$" (402) 516
    "$i" (403) 102 405 517 589 664
    "$v" (404) 518
    "$b" (405) 519
    "$a" (406) 520 555
    "$t" (407) 706
    "$c" (408) 522 523 531
    "$f" (409) 524 525 526 527 528 529 530 822 823 824 825
    "..." (410) 521
    "integer constant" <i> (411) 61 62 63 64 118 129 374
    "long integer constant" <i64> (412) 376
    "unsigned integer constant" <ui> (413) 375
    "unsigned long integer constant" <ui64> (414) 377
    "unsigned int8 constant" <ui> (415) 378
    "floating point constant" <fd> (416) 119 130 379
    "double constant" <d> (417) 380
    "name" <s> (418) 25 50 52 53 55 101 103 105 106 115 117 124 128 163 211 212 213 214 215 216 217 218 219 220 221 222 223 224 230 231 233 302 303 304 332 333 352 353 362 363 364 365 366 402 403 413 414 415 416 417 476 477 490 491 496 562 568 588 590 591 592 593 594 616 617 627 632 649 663 665 666 667 705 707 708 710 711 712 713 802 807 812 818 819 820 821
    "new line, comma" (419) 17 637 638
    "new line, semicolon" (420) 19 68 69 546
    "start of the string" (421) 33 34 43
    STRING_CHARACTER <ch> (422) 29 31 36 44 45
    STRING_CHARACTER_ESC (423) 30 32
    "end of the string" (424) 33 34 43
    "{" (425) 42
    "}" (426) 42
    "end of failed eader macro" (427)
    UNARY_MINUS (428)
    UNARY_PLUS (429)
    PRE_INC (430)
    PRE_DEC (431)
    LLPIPE (432)
    POST_INC (433)
    POST_DEC (434)
    DEREF (435)


Nonterminals, with rules where they appear

    $accept (208)
        on left: 0
    program (209)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    COMMA (210)
        on left: 16 17
        on right: 618 619 722
    SEMICOLON (211)
        on left: 18 19
        on right: 8 9 15 20 84 85 92 97 100 274 275 276 281 283 284 285 286 290 291 292 334 335 548 550 596 598 599 600 601 602 603 610 628 723
    top_level_reader_macro (212)
        on left: 20
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 21 22 23
        on right: 28
    module_name <s> (214)
        on left: 24 25
        on right: 28
    optional_not_required <b> (215)
        on left: 26 27
        on right: 28
    module_declaration (216)
        on left: 28
        on right: 2
    character_sequence <s> (217)
        on left: 29 30 31 32
        on right: 31 32 33 41
    string_constant <s> (218)
        on left: 33 34
        on right: 116 127
    format_string <s> (219)
        on left: 35 36
        on right: 36 39
    optional_format_string <s> (220)
        on left: 37 39
        on right: 42
    $@1 (221)
        on left: 38
        on right: 39
    string_builder_body <pExpression> (222)
        on left: 40 41 42
        on right: 41 42 43
    string_builder <pExpression> (223)
        on left: 43
        on right: 434
    reader_character_sequence (224)
        on left: 44 45
        on right: 45 47
    expr_reader <pExpression> (225)
        on left: 47
        on right: 20 433
    $@2 (226)
        on left: 46
        on right: 47
    options_declaration (227)
        on left: 48
        on right: 9
    require_declaration (228)
        on left: 49
        on right: 8
    require_module_name <s> (229)
        on left: 50 51 52 53
        on right: 51 52 53 54 55
    require_module (230)
        on left: 54 55
        on right: 49
    is_public_module <b> (231)
        on left: 56 57
        on right: 54 55
    expect_declaration (232)
        on left: 58
        on right: 7
    expect_list (233)
        on left: 59 60
        on right: 58 60
    expect_error (234)
        on left: 61 62
        on right: 59 60
    expression_label <pExpression> (235)
        on left: 63
        on right: 290
    expression_goto <pExpression> (236)
        on left: 64 65
        on right: 291
    elif_or_static_elif <b> (237)
        on left: 66 67
        on right: 74
    emit_semis (238)
        on left: 68 69
        on right: 69 71
    optional_emit_semis (239)
        on left: 70 71
        on right: 73 74 99 109 110 112 114 137 138 157 265 371 372 515 552 662 802 807 876
    expression_else <pExpression> (240)
        on left: 72 73 74
        on right: 74 99
    if_or_static_if <b> (241)
        on left: 75 76
        on right: 99
    expression_else_one_liner <pExpression> (242)
        on left: 77 78
        on right: 100
    expression_if_one_liner <pExpression> (243)
        on left: 79 80 81 82 83
        on right: 78 92 97 100
    semis (244)
        on left: 84 85
        on right: 85 87 567 573
    optional_semis (245)
        on left: 86 87
        on right: 802 807
    expression_if_block <pExpression> (246)
        on left: 90 92
        on right: 99
    $@3 (247)
        on left: 88
        on right: 90
    $@4 (248)
        on left: 89
        on right: 90
    $@5 (249)
        on left: 91
        on right: 92
    expression_else_block <pExpression> (250)
        on left: 95 97
        on right: 73 74
    $@6 (251)
        on left: 93
        on right: 95
    $@7 (252)
        on left: 94
        on right: 95
    $@8 (253)
        on left: 96
        on right: 97
    expression_if_then_else <pExpression> (254)
        on left: 99
        on right: 287
    $@9 (255)
        on left: 98
        on right: 99
    expression_if_then_else_oneliner <pExpression> (256)
        on left: 100
        on right: 288
    for_variable_name_with_pos_list <pNameWithPosList> (257)
        on left: 101 102 103 104 105 106 107
        on right: 105 106 107 109 884 885 886
    expression_for_loop <pExpression> (258)
        on left: 109
        on right: 282
    $@10 (259)
        on left: 108
        on right: 109
    expression_unsafe <pExpression> (260)
        on left: 110
        on right: 279
    expression_while_loop <pExpression> (261)
        on left: 112
        on right: 278
    $@11 (262)
        on left: 111
        on right: 112
    expression_with <pExpression> (263)
        on left: 114
        on right: 280
    $@12 (264)
        on left: 113
        on right: 114
    expression_with_alias <pExpression> (265)
        on left: 115
        on right: 281
    annotation_argument_value <aa> (266)
        on left: 116 117 118 119 120 121
        on right: 122 123
    annotation_argument_value_list <aaList> (267)
        on left: 122 123
        on right: 123 134
    annotation_argument_name <s> (268)
        on left: 124 125 126
        on right: 127 128 129 130 131 132 133 134
    annotation_argument <aa> (269)
        on left: 127 128 129 130 131 132 133 134
        on right: 135 136 137 138
    annotation_argument_list <aaList> (270)
        on left: 135 136
        on right: 48 136 144
    metadata_argument_list <aaList> (271)
        on left: 137 138
        on right: 138 533
    annotation_declaration_name <s> (272)
        on left: 139 140 141 142
        on right: 143 144
    annotation_declaration_basic <fa> (273)
        on left: 143 144
        on right: 145
    annotation_declaration <fa> (274)
        on left: 145 146 147 148 149 150 151
        on right: 146 147 148 149 150 151 152 153
    annotation_list <faList> (275)
        on left: 152 153
        on right: 153 155 157
    optional_annotation_list <faList> (276)
        on left: 154 155
        on right: 371 372
    optional_annotation_list_with_emit_semis <faList> (277)
        on left: 156 157
        on right: 259 550 552 644 662
    optional_function_argument_list <pVarDeclList> (278)
        on left: 158 159 160
        on right: 263 371 372 412 774 781 788
    optional_function_type <pTypeDecl> (279)
        on left: 161 162
        on right: 263 371 372 412 774 781 788
    function_name <s> (280)
        on left: 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258
        on right: 263
    global_function_declaration (281)
        on left: 259
        on right: 6
    optional_public_or_private_function <b> (282)
        on left: 260 261 262
        on right: 265
    function_declaration_header <pFuncDecl> (283)
        on left: 263
        on right: 265 550 552
    function_declaration <pFuncDecl> (284)
        on left: 265
        on right: 259
    $@13 (285)
        on left: 264
        on right: 265
    expression_block_finally <pExpression> (286)
        on left: 266 269
        on right: 90 95 272
    $@14 (287)
        on left: 267
        on right: 269
    $@15 (288)
        on left: 268
        on right: 269
    expression_block <pExpression> (289)
        on left: 272
        on right: 109 110 112 114 265 324 356 372 515 552
    $@16 (290)
        on left: 270
        on right: 272
    $@17 (291)
        on left: 271
        on right: 272
    expr_call_pipe <pExpression> (292)
        on left: 273
        on right: 511
    expression_any <pExpression> (293)
        on left: 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292
        on right: 294
    expressions <pExpression> (294)
        on left: 293 294 295
        on right: 90 95 269 272 294 295 373
    optional_expr_list <pExpression> (295)
        on left: 296 297
        on right: 740 742 855 868
    optional_expr_map_tuple_list <pExpression> (296)
        on left: 298 299
        on right: 876 878 879
    type_declaration_no_options_list <pTypeDeclList> (297)
        on left: 300 301
        on right: 301 742
    name_in_namespace <s> (298)
        on left: 302 303 304
        on right: 47 139 351 352 353 400 401 404 423 424 425 426 427 431 646 703 740 742
    expression_delete <pExpression> (299)
        on left: 305 306
        on right: 276
    new_type_declaration <pTypeDecl> (300)
        on left: 309 310
        on right: 311 312 313 314 315
    $@18 (301)
        on left: 307
        on right: 309
    $@19 (302)
        on left: 308
        on right: 309
    expr_new <pExpression> (303)
        on left: 311 312 313 314 315 316
        on right: 504
    expression_break <pExpression> (304)
        on left: 317
        on right: 82 283
    expression_continue <pExpression> (305)
        on left: 318
        on right: 83 284
    expression_return <pExpression> (306)
        on left: 319 320 321
        on right: 80 285
    expression_yield <pExpression> (307)
        on left: 322 323
        on right: 81 286
    expression_try_catch <pExpression> (308)
        on left: 324
        on right: 289
    kwd_let_var_or_nothing <b> (309)
        on left: 325 326 327
        on right: 553 554
    kwd_let <b> (310)
        on left: 328 329
        on right: 336 337 338 613 615
    optional_in_scope <b> (311)
        on left: 330 331
        on right: 336 337 338
    tuple_expansion <pNameList> (312)
        on left: 332 333
        on right: 104 107 333 334 335
    tuple_expansion_variable_declaration <pVarDecl> (313)
        on left: 334 335
        on right: 337
    expression_let <pExpression> (314)
        on left: 336 337 338
        on right: 277
    expr_cast <pExpression> (315)
        on left: 341 344 347
        on right: 503
    $@20 (316)
        on left: 339
        on right: 341
    $@21 (317)
        on left: 340
        on right: 341
    $@22 (318)
        on left: 342
        on right: 344
    $@23 (319)
        on left: 343
        on right: 344
    $@24 (320)
        on left: 345
        on right: 347
    $@25 (321)
        on left: 346
        on right: 347
    expr_type_decl <pExpression> (322)
        on left: 350
        on right: 502
    $@26 (323)
        on left: 348
        on right: 350
    $@27 (324)
        on left: 349
        on right: 350
    expr_type_info <pExpression> (325)
        on left: 351 352 353
        on right: 501
    expr_list <pExpression> (326)
        on left: 354 355
        on right: 109 297 313 355 401 403 416 419 427 429 470 523 851 865 869 872 884 885 886
    block_or_simple_block <pExpression> (327)
        on left: 356 357 358
        on right: 371
    block_or_lambda <i> (328)
        on left: 359 360 361
        on right: 371 372
    capture_entry <pCapt> (329)
        on left: 362 363 364 365 366
        on right: 367 368
    capture_list <pCaptList> (330)
        on left: 367 368
        on right: 368 370
    optional_capture_list <pCaptList> (331)
        on left: 369 370
        on right: 371 372 513 514 515
    expr_full_block <pExpression> (332)
        on left: 371
        on right: 507
    expr_full_block_assumed_piped <pExpression> (333)
        on left: 372 373
        on right: 273
    expr_numeric_const <pExpression> (334)
        on left: 374 375 376 377 378 379 380
        on right: 432
    expr_assign <pExpression> (335)
        on left: 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399
        on right: 275
    expr_named_call <pExpression> (336)
        on left: 400 401
        on right: 506
    expr_method_call <pExpression> (337)
        on left: 402 403
        on right: 505
    func_addr_name <pExpression> (338)
        on left: 404 405
        on right: 406 409 412
    func_addr_expr <pExpression> (339)
        on left: 406 409 412
        on right: 478
    $@28 (340)
        on left: 407
        on right: 409
    $@29 (341)
        on left: 408
        on right: 409
    $@30 (342)
        on left: 410
        on right: 412
    $@31 (343)
        on left: 411
        on right: 412
    expr_field <pExpression> (344)
        on left: 413 414 415 416 417 418 419 422
        on right: 438
    $@32 (345)
        on left: 420
        on right: 422
    $@33 (346)
        on left: 421
        on right: 422
    expr_call <pExpression> (347)
        on left: 423 424 425 426 427 428 429
        on right: 273 479
    expr <pExpression> (348)
        on left: 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 488 489 490 491 494 495 496 499 500 501 502 503 504 505 506 507 508 509 510 511 512
        on right
    $@34 (349)
        on left: 486
        on right: 488
    $@35 (350)
        on left: 487
        on right: 488
    $@36 (351)
        on left: 492
        on right: 494
    $@37 (352)
        on left: 493
        on right: 494
    $@38 (353)
        on left: 497
        on right: 499
    $@39 (354)
        on left: 498
        on right: 499
    expr_generator <pExpression> (355)
        on left: 513 514 515
        on right: 483
    expr_mtag <pExpression> (356)
        on left: 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531
        on right: 439
    optional_field_annotation <aaList> (357)
        on left: 532 533
        on right: 544 553 554 612 615
    optional_override <i> (358)
        on left: 534 535 536
        on right: 544 552
    optional_constant <b> (359)
        on left: 537 538
        on right: 550 552
    optional_public_or_private_member_variable <b> (360)
        on left: 539 540 541
        on right: 544 550 552
    optional_static_member_variable <b> (361)
        on left: 542 543
        on right: 544 552
    structure_variable_declaration <pVarDecl> (362)
        on left: 544
        on right: 548
    struct_variable_declaration_list <pVarDeclList> (363)
        on left: 545 546 548 550 552
        on right: 546 548 550 552 658
    $@40 (364)
        on left: 547
        on right: 548
    $@41 (365)
        on left: 549
        on right: 550
    $@42 (366)
        on left: 551
        on right: 552
    function_argument_declaration_no_type <pVarDecl> (367)
        on left: 553
        on right: 556 558
    function_argument_declaration_type <pVarDecl> (368)
        on left: 554 555
        on right: 557 559 560
    function_argument_list <pVarDeclList> (369)
        on left: 556 557 558 559 560
        on right: 160 558 559 560
    tuple_type <pVarDecl> (370)
        on left: 561 562
        on right: 563 564 566 567
    tuple_type_list <pVarDeclList> (371)
        on left: 563 564
        on right: 564 791 854 861
    tuple_alias_type_list <pVarDeclList> (372)
        on left: 565 566 567
        on right: 567 802
    variant_type <pVarDecl> (373)
        on left: 568
        on right: 569 570 572 573
    variant_type_list <pVarDeclList> (374)
        on left: 569 570
        on right: 570 794 845 864
    variant_alias_type_list <pVarDeclList> (375)
        on left: 571 572 573
        on right: 573 807
    copy_or_move <b> (376)
        on left: 574 575
        on right: 578 580 818 820 822 824
    variable_declaration_no_type <pVarDecl> (377)
        on left: 576 577 578
        on right: 553 582
    variable_declaration_type <pVarDecl> (378)
        on left: 579 580
        on right: 554 581
    variable_declaration <pVarDecl> (379)
        on left: 581 582
        on right: 544
    copy_or_move_or_clone <i> (380)
        on left: 583 584 585
        on right: 334 335 599 600 602 603
    optional_ref <b> (381)
        on left: 586 587
        on right: 335 600 603
    let_variable_name_with_pos_list <pNameWithPosList> (382)
        on left: 588 589 590 591 592
        on right: 591 592 598 599 600
    global_let_variable_name_with_pos_list <pNameWithPosList> (383)
        on left: 593 594
        on right: 594 601 602 603
    variable_declaration_list <pVarDeclList> (384)
        on left: 595 596 597
        on right: 338 596 597
    let_variable_declaration <pVarDecl> (385)
        on left: 598 599 600
        on right: 336 597 612
    global_let_variable_declaration <pVarDecl> (386)
        on left: 601 602 603
        on right: 615
    optional_shared <b> (387)
        on left: 604 605
        on right: 28 613 615
    optional_public_or_private_variable <b> (388)
        on left: 606 607 608
        on right: 613 615
    global_variable_declaration_list <pVarDeclList> (389)
        on left: 609 610 612
        on right: 610 612 613
    $@43 (390)
        on left: 611
        on right: 612
    global_let (391)
        on left: 613 615
        on right: 5
    $@44 (392)
        on left: 614
        on right: 615
    enum_expression <pEnumPair> (393)
        on left: 616 617
        on right: 621 622
    commas (394)
        on left: 618 619
        on right: 619 622 636 712 713
    enum_list <pEnum> (395)
        on left: 620 621 622
        on right: 622 644
    optional_public_or_private_alias <b> (396)
        on left: 623 624 625
        on right: 627 802 807 812
    single_alias (397)
        on left: 627
        on right: 628
    $@45 (398)
        on left: 626
        on right: 627
    alias_declaration (399)
        on left: 628
        on right: 10
    optional_public_or_private_enum <b> (400)
        on left: 629 630 631
        on right: 644
    enum_name <pEnum> (401)
        on left: 632
        on right: 644
    optional_enum_basic_type_declaration <type> (402)
        on left: 633 634
        on right: 644
    optional_commas (403)
        on left: 635 636
        on right: 644 812
    emit_commas (404)
        on left: 637 638
        on right: 638 640
    optional_emit_commas (405)
        on left: 639 640
        on right: 644 812
    enum_declaration (406)
        on left: 644
        on right: 4
    $@46 (407)
        on left: 641
        on right: 644
    $@47 (408)
        on left: 642
        on right: 644
    $@48 (409)
        on left: 643
        on right: 644
    optional_structure_parent <s> (410)
        on left: 645 646
        on right: 649
    optional_sealed <b> (411)
        on left: 647 648
        on right: 649
    structure_name <pStructure> (412)
        on left: 649
        on right: 662
    class_or_struct <i> (413)
        on left: 650 651 652 653
        on right: 662
    optional_public_or_private_structure <b> (414)
        on left: 654 655 656
        on right: 662
    optional_struct_variable_declaration_list <pVarDeclList> (415)
        on left: 657 658
        on right: 662
    structure_declaration (416)
        on left: 662
        on right: 3
    $@49 (417)
        on left: 659
        on right: 662
    $@50 (418)
        on left: 660
        on right: 662
    $@51 (419)
        on left: 661
        on right: 662
    variable_name_with_pos_list <pNameWithPosList> (420)
        on left: 663 664 665 666 667
        on right: 576 577 578 579 580 666 667
    basic_type_declaration <type> (421)
        on left: 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694
        on right: 418 419 428 429 489 495 500 510 732
    enum_basic_type_declaration <type> (422)
        on left: 695 696 697 698 699 700 701 702
        on right: 634
    structure_type_declaration <pTypeDecl> (423)
        on left: 703
        on right: 310 735
    auto_type_declaration <pTypeDecl> (424)
        on left: 704 705 706
        on right: 733
    bitfield_bits <pNameList> (425)
        on left: 707 708
        on right: 708 721
    bitfield_alias_bits <pNameExprList> (426)
        on left: 709 710 711 712 713
        on right: 712 713 812
    bitfield_basic_type_declaration <type> (427)
        on left: 714 715 716 717 718
        on right: 721 812
    bitfield_type_declaration <pTypeDecl> (428)
        on left: 721
        on right: 734
    $@52 (429)
        on left: 719
        on right: 721
    $@53 (430)
        on left: 720
        on right: 721
    c_or_s (431)
        on left: 722 723
        on right: 301 353 564 570 725 879
    table_type_pair <aTypePair> (432)
        on left: 724 725
        on right: 764
    dim_list <pTypeDecl> (433)
        on left: 726 727 728 729
        on right: 728 729 731
    type_declaration_no_options <pTypeDecl> (434)
        on left: 730 731
        on right: 334 341 344 347 409 488 513 514 515 598 599 601 602 743 744 745 746 747 748 749 750 751 752 753 754 758 795 796 839 842 848 858 868 872 878 879
    type_declaration_no_options_no_dim <pTypeDecl> (435)
        on left: 732 733 734 735 738 739 740 742 743 744 745 746 747 748 749 750 751 752 753 754 757 758 761 764 767 768 771 774 775 778 781 782 785 788 791 794
        on right: 730 731
    $@54 (436)
        on left: 736
        on right: 738
    $@55 (437)
        on left: 737
        on right: 738
    $@56 (438)
        on left: 741
        on right: 742
    $@57 (439)
        on left: 755
        on right: 757
    $@58 (440)
        on left: 756
        on right: 757
    $@59 (441)
        on left: 759
        on right: 761
    $@60 (442)
        on left: 760
        on right: 761
    $@61 (443)
        on left: 762
        on right: 764
    $@62 (444)
        on left: 763
        on right: 764
    $@63 (445)
        on left: 765
        on right: 767
    $@64 (446)
        on left: 766
        on right: 767
    $@65 (447)
        on left: 769
        on right: 771
    $@66 (448)
        on left: 770
        on right: 771
    $@67 (449)
        on left: 772
        on right: 774
    $@68 (450)
        on left: 773
        on right: 774
    $@69 (451)
        on left: 776
        on right: 778
    $@70 (452)
        on left: 777
        on right: 778
    $@71 (453)
        on left: 779
        on right: 781
    $@72 (454)
        on left: 780
        on right: 781
    $@73 (455)
        on left: 783
        on right: 785
    $@74 (456)
        on left: 784
        on right: 785
    $@75 (457)
        on left: 786
        on right: 788
    $@76 (458)
        on left: 787
        on right: 788
    $@77 (459)
        on left: 789
        on right: 791
    $@78 (460)
        on left: 790
        on right: 791
    $@79 (461)
        on left: 792
        on right: 794
    $@80 (462)
        on left: 793
        on right: 794
    type_declaration <pTypeDecl> (463)
        on left: 795 796 797
        on right: 162 300 301 309 350 494 499 561 562 568 579 580 627 724 725 738 757 761 767 771 778 785 796 797
    tuple_alias_declaration (464)
        on left: 802
        on right: 12
    $@81 (465)
        on left: 798
        on right: 802
    $@82 (466)
        on left: 799
        on right: 802
    $@83 (467)
        on left: 800
        on right: 802
    $@84 (468)
        on left: 801
        on right: 802
    variant_alias_declaration (469)
        on left: 807
        on right: 11
    $@85 (470)
        on left: 803
        on right: 807
    $@86 (471)
        on left: 804
        on right: 807
    $@87 (472)
        on left: 805
        on right: 807
    $@88 (473)
        on left: 806
        on right: 807
    bitfield_alias_declaration (474)
        on left: 812
        on right: 13
    $@89 (475)
        on left: 808
        on right: 812
    $@90 (476)
        on left: 809
        on right: 812
    $@91 (477)
        on left: 810
        on right: 812
    $@92 (478)
        on left: 811
        on right: 812
    make_decl <pExpression> (479)
        on left: 813 814 815 816 817
        on right: 316 435
    make_struct_fields <pMakeStruct> (480)
        on left: 818 819 820 821 822 823 824 825
        on right: 400 401 417 820 821 824 825 827 828 829 830 831
    make_variant_dim <pExpression> (481)
        on left: 826 827
        on right: 845 864
    make_struct_single <pExpression> (482)
        on left: 828
        on right: 314 315 425 426 471
    make_struct_dim_list <pExpression> (483)
        on left: 829 830
        on right: 830 832
    make_struct_dim_decl <pExpression> (484)
        on left: 831 832
        on right: 833
    optional_make_struct_dim_decl <pExpression> (485)
        on left: 833 834
        on right: 839 842 854 858 861
    use_initializer <b> (486)
        on left: 835 836
        on right: 312 839 842 845 848 854 858 861
    make_struct_decl <pExpression> (487)
        on left: 839 842 845 848
        on right: 813
    $@93 (488)
        on left: 837
        on right: 839
    $@94 (489)
        on left: 838
        on right: 839
    $@95 (490)
        on left: 840
        on right: 842
    $@96 (491)
        on left: 841
        on right: 842
    $@97 (492)
        on left: 843
        on right: 845
    $@98 (493)
        on left: 844
        on right: 845
    $@99 (494)
        on left: 846
        on right: 848
    $@100 (495)
        on left: 847
        on right: 848
    make_map_tuple <pExpression> (496)
        on left: 849 850
        on right: 873 874 886
    make_tuple_call <pExpression> (497)
        on left: 851 854
        on right: 817
    $@101 (498)
        on left: 852
        on right: 854
    $@102 (499)
        on left: 853
        on right: 854
    make_dim_decl <pExpression> (500)
        on left: 855 858 861 864 865 868 869 872
        on right: 814
    $@103 (501)
        on left: 856
        on right: 858
    $@104 (502)
        on left: 857
        on right: 858
    $@105 (503)
        on left: 859
        on right: 861
    $@106 (504)
        on left: 860
        on right: 861
    $@107 (505)
        on left: 862
        on right: 864
    $@108 (506)
        on left: 863
        on right: 864
    $@109 (507)
        on left: 866
        on right: 868
    $@110 (508)
        on left: 867
        on right: 868
    $@111 (509)
        on left: 870
        on right: 872
    $@112 (510)
        on left: 871
        on right: 872
    expr_map_tuple_list <pExpression> (511)
        on left: 873 874
        on right: 299 874 877
    make_table_decl <pExpression> (512)
        on left: 876 877 878 879
        on right: 815
    $@113 (513)
        on left: 875
        on right: 876
    array_comprehension_where <pExpression> (514)
        on left: 880 881
        on right: 884 885 886
    optional_comma <b> (515)
        on left: 882 883
        on right: 297 299 470 828 832 851 865 869 872 877
    array_comprehension <pExpression> (516)
        on left: 884 885 886
        on right: 816


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration SEMICOLON
    9        | program . options_declaration SEMICOLON
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . SEMICOLON

    $end                   shift, and go to state 2
    "let"                  shift, and go to state 3
    "options"              shift, and go to state 4
    "expect"               shift, and go to state 5
    "require"              shift, and go to state 6
    "typedef"              shift, and go to state 7
    "var"                  shift, and go to state 8
    "module"               shift, and go to state 9
    "bitfield"             shift, and go to state 10
    "tuple"                shift, and go to state 11
    "variant"              shift, and go to state 12
    "new line, semicolon"  shift, and go to state 13
    '%'                    shift, and go to state 14
    '['                    shift, and go to state 15
    ';'                    shift, and go to state 16

    $default  reduce using rule 156 (optional_annotation_list_with_emit_semis)

    SEMICOLON                                 go to state 17
    top_level_reader_macro                    go to state 18
    module_declaration                        go to state 19
    expr_reader                               go to state 20
    options_declaration                       go to state 21
    require_declaration                       go to state 22
    expect_declaration                        go to state 23
    optional_annotation_list_with_emit_semis  go to state 24
    global_function_declaration               go to state 25
    kwd_let                                   go to state 26
    global_let                                go to state 27
    alias_declaration                         go to state 28
    enum_declaration                          go to state 29
    structure_declaration                     go to state 30
    bitfield_basic_type_declaration           go to state 31
    tuple_alias_declaration                   go to state 32
    variant_alias_declaration                 go to state 33
    bitfield_alias_declaration                go to state 34


State 2

    0 $accept: program $end .

    $default  accept


State 3

  328 kwd_let: "let" .

    $default  reduce using rule 328 (kwd_let)


State 4

   48 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 39
    annotation_argument_list  go to state 40


State 5

   58 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 41

    expect_list   go to state 42
    expect_error  go to state 43


State 6

   49 require_declaration: "require" . require_module

    "name"  shift, and go to state 44
    '%'     shift, and go to state 45

    require_module_name  go to state 46
    require_module       go to state 47


State 7

  628 alias_declaration: "typedef" . single_alias SEMICOLON

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 623 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 50
    single_alias                      go to state 51


State 8

  329 kwd_let: "var" .

    $default  reduce using rule 329 (kwd_let)


State 9

   28 module_declaration: "module" . module_name optional_shared optional_public_or_private_module optional_not_required

    "name"  shift, and go to state 52
    '$'     shift, and go to state 53

    module_name  go to state 54


State 10

  714 bitfield_basic_type_declaration: "bitfield" .
  715                                | "bitfield" . ':' "uint8"
  716                                | "bitfield" . ':' "uint16"
  717                                | "bitfield" . ':' "uint"
  718                                | "bitfield" . ':' "uint64"

    ':'  shift, and go to state 55

    $default  reduce using rule 714 (bitfield_basic_type_declaration)


State 11

  802 tuple_alias_declaration: "tuple" . $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 798 ($@81)

    $@81  go to state 56


State 12

  807 variant_alias_declaration: "variant" . $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 803 ($@85)

    $@85  go to state 57


State 13

   19 SEMICOLON: "new line, semicolon" .

    $default  reduce using rule 19 (SEMICOLON)


State 14

   47 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 60


State 15

  157 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 69
    annotation_list               go to state 70
    name_in_namespace             go to state 71


State 16

   18 SEMICOLON: ';' .

    $default  reduce using rule 18 (SEMICOLON)


State 17

   15 program: program SEMICOLON .

    $default  reduce using rule 15 (program)


State 18

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 19

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 20

   20 top_level_reader_macro: expr_reader . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 72


State 21

    9 program: program options_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 73


State 22

    8 program: program require_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 74


State 23

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 24

  259 global_function_declaration: optional_annotation_list_with_emit_semis . "def" function_declaration
  644 enum_declaration: optional_annotation_list_with_emit_semis . "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'
  662 structure_declaration: optional_annotation_list_with_emit_semis . $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "def"   shift, and go to state 75
    "enum"  shift, and go to state 76

    $default  reduce using rule 659 ($@49)

    $@49  go to state 77


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  613 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  615           | kwd_let . optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 78

    $default  reduce using rule 604 (optional_shared)

    optional_shared  go to state 79


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

  812 bitfield_alias_declaration: bitfield_basic_type_declaration . $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 808 ($@89)

    $@89  go to state 80


State 32

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 33

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 34

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 35

  125 annotation_argument_name: "type" .

    $default  reduce using rule 125 (annotation_argument_name)


State 36

  126 annotation_argument_name: "in" .

    $default  reduce using rule 126 (annotation_argument_name)


State 37

  124 annotation_argument_name: "name" .

    $default  reduce using rule 124 (annotation_argument_name)


State 38

  127 annotation_argument: annotation_argument_name . '=' string_constant
  128                    | annotation_argument_name . '=' "name"
  129                    | annotation_argument_name . '=' "integer constant"
  130                    | annotation_argument_name . '=' "floating point constant"
  131                    | annotation_argument_name . '=' "true"
  132                    | annotation_argument_name . '=' "false"
  133                    | annotation_argument_name .
  134                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 81

    $default  reduce using rule 133 (annotation_argument)


State 39

  135 annotation_argument_list: annotation_argument .

    $default  reduce using rule 135 (annotation_argument_list)


State 40

   48 options_declaration: "options" annotation_argument_list .
  136 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 82

    $default  reduce using rule 48 (options_declaration)


State 41

   61 expect_error: "integer constant" .
   62             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 83

    $default  reduce using rule 61 (expect_error)


State 42

   58 expect_declaration: "expect" expect_list .
   60 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 84

    $default  reduce using rule 58 (expect_declaration)


State 43

   59 expect_list: expect_error .

    $default  reduce using rule 59 (expect_list)


State 44

   50 require_module_name: "name" .

    $default  reduce using rule 50 (require_module_name)


State 45

   51 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 44
    '%'     shift, and go to state 45

    require_module_name  go to state 85


State 46

   52 require_module_name: require_module_name . '.' "name"
   53                    | require_module_name . '/' "name"
   54 require_module: require_module_name . is_public_module
   55               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 86
    "public"  shift, and go to state 87
    '/'       shift, and go to state 88
    '.'       shift, and go to state 89

    $default  reduce using rule 56 (is_public_module)

    is_public_module  go to state 90


State 47

   49 require_declaration: "require" require_module .

    $default  reduce using rule 49 (require_declaration)


State 48

  625 optional_public_or_private_alias: "public" .

    $default  reduce using rule 625 (optional_public_or_private_alias)


State 49

  624 optional_public_or_private_alias: "private" .

    $default  reduce using rule 624 (optional_public_or_private_alias)


State 50

  627 single_alias: optional_public_or_private_alias . "name" $@45 '=' type_declaration

    "name"  shift, and go to state 91


State 51

  628 alias_declaration: "typedef" single_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 92


State 52

   25 module_name: "name" .

    $default  reduce using rule 25 (module_name)


State 53

   24 module_name: '$' .

    $default  reduce using rule 24 (module_name)


State 54

   28 module_declaration: "module" module_name . optional_shared optional_public_or_private_module optional_not_required

    "shared"  shift, and go to state 78

    $default  reduce using rule 604 (optional_shared)

    optional_shared  go to state 93


State 55

  715 bitfield_basic_type_declaration: "bitfield" ':' . "uint8"
  716                                | "bitfield" ':' . "uint16"
  717                                | "bitfield" ':' . "uint"
  718                                | "bitfield" ':' . "uint64"

    "uint"    shift, and go to state 94
    "uint64"  shift, and go to state 95
    "uint8"   shift, and go to state 96
    "uint16"  shift, and go to state 97


State 56

  802 tuple_alias_declaration: "tuple" $@81 . optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 623 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 98


State 57

  807 variant_alias_declaration: "variant" $@85 . optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 623 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 99


State 58

  304 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 100


State 59

  302 name_in_namespace: "name" .
  303                  | "name" . "::" "name"

    "::"  shift, and go to state 101

    $default  reduce using rule 302 (name_in_namespace)


State 60

   47 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 46 ($@2)

    $@2  go to state 102


State 61

  140 annotation_declaration_name: "require" .

    $default  reduce using rule 140 (annotation_declaration_name)


State 62

  141 annotation_declaration_name: "private" .

    $default  reduce using rule 141 (annotation_declaration_name)


State 63

  142 annotation_declaration_name: "template" .

    $default  reduce using rule 142 (annotation_declaration_name)


State 64

  151 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 103
    name_in_namespace             go to state 71


State 65

  146 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 104
    name_in_namespace             go to state 71


State 66

  150 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 105
    name_in_namespace             go to state 71


State 67

  143 annotation_declaration_basic: annotation_declaration_name .
  144                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 106

    $default  reduce using rule 143 (annotation_declaration_basic)


State 68

  145 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 145 (annotation_declaration)


State 69

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration
  152 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 107
    "||"  shift, and go to state 108
    "^^"  shift, and go to state 109

    $default  reduce using rule 152 (annotation_list)


State 70

  153 annotation_list: annotation_list . ',' annotation_declaration
  157 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 110
    ']'  shift, and go to state 111


State 71

  139 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 139 (annotation_declaration_name)


State 72

   20 top_level_reader_macro: expr_reader SEMICOLON .

    $default  reduce using rule 20 (top_level_reader_macro)


State 73

    9 program: program options_declaration SEMICOLON .

    $default  reduce using rule 9 (program)


State 74

    8 program: program require_declaration SEMICOLON .

    $default  reduce using rule 8 (program)


State 75

  259 global_function_declaration: optional_annotation_list_with_emit_semis "def" . function_declaration

    "public"   shift, and go to state 112
    "private"  shift, and go to state 113

    $default  reduce using rule 260 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 114
    function_declaration                 go to state 115


State 76

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" . $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    $default  reduce using rule 641 ($@46)

    $@46  go to state 116


State 77

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 . class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 117
    "class"     shift, and go to state 118
    "template"  shift, and go to state 119

    class_or_struct  go to state 120


State 78

  605 optional_shared: "shared" .

    $default  reduce using rule 605 (optional_shared)


State 79

  613 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  615           | kwd_let optional_shared . optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 121
    "private"  shift, and go to state 122

    $default  reduce using rule 606 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 123


State 80

  812 bitfield_alias_declaration: bitfield_basic_type_declaration $@89 . optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 623 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 124


State 81

  127 annotation_argument: annotation_argument_name '=' . string_constant
  128                    | annotation_argument_name '=' . "name"
  129                    | annotation_argument_name '=' . "integer constant"
  130                    | annotation_argument_name '=' . "floating point constant"
  131                    | annotation_argument_name '=' . "true"
  132                    | annotation_argument_name '=' . "false"
  134                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 125
    "false"                    shift, and go to state 126
    "integer constant"         shift, and go to state 127
    "floating point constant"  shift, and go to state 128
    "name"                     shift, and go to state 129
    "start of the string"      shift, and go to state 130
    '('                        shift, and go to state 131

    string_constant  go to state 132


State 82

  136 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 133


State 83

   62 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 134


State 84

   60 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 41

    expect_error  go to state 135


State 85

   51 require_module_name: '%' require_module_name .
   52                    | require_module_name . '.' "name"
   53                    | require_module_name . '/' "name"

    '.'  shift, and go to state 89

    $default  reduce using rule 51 (require_module_name)


State 86

   55 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 136


State 87

   57 is_public_module: "public" .

    $default  reduce using rule 57 (is_public_module)


State 88

   53 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 137


State 89

   52 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 138


State 90

   54 require_module: require_module_name is_public_module .

    $default  reduce using rule 54 (require_module)


State 91

  627 single_alias: optional_public_or_private_alias "name" . $@45 '=' type_declaration

    $default  reduce using rule 626 ($@45)

    $@45  go to state 139


State 92

  628 alias_declaration: "typedef" single_alias SEMICOLON .

    $default  reduce using rule 628 (alias_declaration)


State 93

   28 module_declaration: "module" module_name optional_shared . optional_public_or_private_module optional_not_required

    "public"   shift, and go to state 140
    "private"  shift, and go to state 141

    $default  reduce using rule 21 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 142


State 94

  717 bitfield_basic_type_declaration: "bitfield" ':' "uint" .

    $default  reduce using rule 717 (bitfield_basic_type_declaration)


State 95

  718 bitfield_basic_type_declaration: "bitfield" ':' "uint64" .

    $default  reduce using rule 718 (bitfield_basic_type_declaration)


State 96

  715 bitfield_basic_type_declaration: "bitfield" ':' "uint8" .

    $default  reduce using rule 715 (bitfield_basic_type_declaration)


State 97

  716 bitfield_basic_type_declaration: "bitfield" ':' "uint16" .

    $default  reduce using rule 716 (bitfield_basic_type_declaration)


State 98

  802 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias . "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "name"  shift, and go to state 143


State 99

  807 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias . "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "name"  shift, and go to state 144


State 100

  304 name_in_namespace: "::" "name" .

    $default  reduce using rule 304 (name_in_namespace)


State 101

  303 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 145


State 102

   47 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 146

    reader_character_sequence  go to state 147


State 103

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration
  151                       | "|>" annotation_declaration .

    $default  reduce using rule 151 (annotation_declaration)


State 104

  146 annotation_declaration: '!' annotation_declaration .
  147                       | annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 146 (annotation_declaration)


State 105

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration
  150                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 107
    "||"  shift, and go to state 108
    "^^"  shift, and go to state 109
    ')'   shift, and go to state 148


State 106

  144 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 39
    annotation_argument_list  go to state 149


State 107

  147 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 150
    name_in_namespace             go to state 71


State 108

  148 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 151
    name_in_namespace             go to state 71


State 109

  149 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 152
    name_in_namespace             go to state 71


State 110

  153 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 153
    name_in_namespace             go to state 71


State 111

  157 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "new line, semicolon"  shift, and go to state 154

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 156


State 112

  262 optional_public_or_private_function: "public" .

    $default  reduce using rule 262 (optional_public_or_private_function)


State 113

  261 optional_public_or_private_function: "private" .

    $default  reduce using rule 261 (optional_public_or_private_function)


State 114

  265 function_declaration: optional_public_or_private_function . $@13 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 264 ($@13)

    $@13  go to state 157


State 115

  259 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration .

    $default  reduce using rule 259 (global_function_declaration)


State 116

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "public"   shift, and go to state 158
    "private"  shift, and go to state 159

    $default  reduce using rule 629 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 160


State 117

  651 class_or_struct: "struct" .

    $default  reduce using rule 651 (class_or_struct)


State 118

  650 class_or_struct: "class" .

    $default  reduce using rule 650 (class_or_struct)


State 119

  652 class_or_struct: "template" . "class"
  653                | "template" . "struct"

    "struct"  shift, and go to state 161
    "class"   shift, and go to state 162


State 120

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct . optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "public"   shift, and go to state 163
    "private"  shift, and go to state 164

    $default  reduce using rule 654 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 165


State 121

  608 optional_public_or_private_variable: "public" .

    $default  reduce using rule 608 (optional_public_or_private_variable)


State 122

  607 optional_public_or_private_variable: "private" .

    $default  reduce using rule 607 (optional_public_or_private_variable)


State 123

  613 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  615           | kwd_let optional_shared optional_public_or_private_variable . $@44 optional_field_annotation global_let_variable_declaration

    '{'  shift, and go to state 166

    $default  reduce using rule 614 ($@44)

    $@44  go to state 167


State 124

  812 bitfield_alias_declaration: bitfield_basic_type_declaration $@89 optional_public_or_private_alias . "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "name"  shift, and go to state 168


State 125

  131 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 131 (annotation_argument)


State 126

  132 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 132 (annotation_argument)


State 127

  129 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 129 (annotation_argument)


State 128

  130 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 130 (annotation_argument)


State 129

  128 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 128 (annotation_argument)


State 130

   33 string_constant: "start of the string" . character_sequence "end of the string"
   34                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 169
    STRING_CHARACTER_ESC  shift, and go to state 170
    "end of the string"   shift, and go to state 171

    character_sequence  go to state 172


State 131

  134 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 173
    "false"                    shift, and go to state 174
    "integer constant"         shift, and go to state 175
    "floating point constant"  shift, and go to state 176
    "name"                     shift, and go to state 177
    "start of the string"      shift, and go to state 130

    string_constant                 go to state 178
    annotation_argument_value       go to state 179
    annotation_argument_value_list  go to state 180


State 132

  127 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 127 (annotation_argument)


State 133

  136 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 136 (annotation_argument_list)


State 134

   62 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 62 (expect_error)


State 135

   60 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 60 (expect_list)


State 136

   55 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 87

    $default  reduce using rule 56 (is_public_module)

    is_public_module  go to state 181


State 137

   53 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 53 (require_module_name)


State 138

   52 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 52 (require_module_name)


State 139

  627 single_alias: optional_public_or_private_alias "name" $@45 . '=' type_declaration

    '='  shift, and go to state 182


State 140

   22 optional_public_or_private_module: "public" .

    $default  reduce using rule 22 (optional_public_or_private_module)


State 141

   23 optional_public_or_private_module: "private" .

    $default  reduce using rule 23 (optional_public_or_private_module)


State 142

   28 module_declaration: "module" module_name optional_shared optional_public_or_private_module . optional_not_required

    '!'  shift, and go to state 183

    $default  reduce using rule 26 (optional_not_required)

    optional_not_required  go to state 184


State 143

  802 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" . optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 154

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 185


State 144

  807 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" . optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "new line, semicolon"  shift, and go to state 154

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 186


State 145

  303 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 303 (name_in_namespace)


State 146

   44 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 44 (reader_character_sequence)


State 147

   45 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   47 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 187

    $default  reduce using rule 47 (expr_reader)


State 148

  150 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 150 (annotation_declaration)


State 149

  136 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  144 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 82
    ')'  shift, and go to state 188


State 150

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  147                       | annotation_declaration "&&" annotation_declaration .
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 147 (annotation_declaration)


State 151

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  148                       | annotation_declaration "||" annotation_declaration .
  149                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 107
    "^^"  shift, and go to state 109

    $default  reduce using rule 148 (annotation_declaration)


State 152

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration
  149                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 107

    $default  reduce using rule 149 (annotation_declaration)


State 153

  147 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  148                       | annotation_declaration . "||" annotation_declaration
  149                       | annotation_declaration . "^^" annotation_declaration
  153 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 107
    "||"  shift, and go to state 108
    "^^"  shift, and go to state 109

    $default  reduce using rule 153 (annotation_list)


State 154

   68 emit_semis: "new line, semicolon" .

    $default  reduce using rule 68 (emit_semis)


State 155

   69 emit_semis: emit_semis . "new line, semicolon"
   71 optional_emit_semis: emit_semis .

    "new line, semicolon"  shift, and go to state 189

    $default  reduce using rule 71 (optional_emit_semis)


State 156

  157 optional_annotation_list_with_emit_semis: '[' annotation_list ']' optional_emit_semis .

    $default  reduce using rule 157 (optional_annotation_list_with_emit_semis)


State 157

  265 function_declaration: optional_public_or_private_function $@13 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 190
    "bool"      shift, and go to state 191
    "string"    shift, and go to state 192
    "int"       shift, and go to state 193
    "int2"      shift, and go to state 194
    "int3"      shift, and go to state 195
    "int4"      shift, and go to state 196
    "uint"      shift, and go to state 197
    "uint2"     shift, and go to state 198
    "uint3"     shift, and go to state 199
    "uint4"     shift, and go to state 200
    "float"     shift, and go to state 201
    "float2"    shift, and go to state 202
    "float3"    shift, and go to state 203
    "float4"    shift, and go to state 204
    "range"     shift, and go to state 205
    "urange"    shift, and go to state 206
    "range64"   shift, and go to state 207
    "urange64"  shift, and go to state 208
    "int64"     shift, and go to state 209
    "uint64"    shift, and go to state 210
    "double"    shift, and go to state 211
    "int8"      shift, and go to state 212
    "uint8"     shift, and go to state 213
    "int16"     shift, and go to state 214
    "uint16"    shift, and go to state 215
    "++"        shift, and go to state 216
    "--"        shift, and go to state 217
    "name"      shift, and go to state 218

    function_name                go to state 219
    function_declaration_header  go to state 220


State 158

  631 optional_public_or_private_enum: "public" .

    $default  reduce using rule 631 (optional_public_or_private_enum)


State 159

  630 optional_public_or_private_enum: "private" .

    $default  reduce using rule 630 (optional_public_or_private_enum)


State 160

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "name"  shift, and go to state 221

    enum_name  go to state 222


State 161

  653 class_or_struct: "template" "struct" .

    $default  reduce using rule 653 (class_or_struct)


State 162

  652 class_or_struct: "template" "class" .

    $default  reduce using rule 652 (class_or_struct)


State 163

  656 optional_public_or_private_structure: "public" .

    $default  reduce using rule 656 (optional_public_or_private_structure)


State 164

  655 optional_public_or_private_structure: "private" .

    $default  reduce using rule 655 (optional_public_or_private_structure)


State 165

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure . $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    $default  reduce using rule 660 ($@50)

    $@50  go to state 223


State 166

  613 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 609 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 224


State 167

  615 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 225

    $default  reduce using rule 532 (optional_field_annotation)

    metadata_argument_list     go to state 226
    optional_field_annotation  go to state 227


State 168

  812 bitfield_alias_declaration: bitfield_basic_type_declaration $@89 optional_public_or_private_alias "name" . optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "new line, comma"  shift, and go to state 228

    $default  reduce using rule 639 (optional_emit_commas)

    emit_commas           go to state 229
    optional_emit_commas  go to state 230


State 169

   29 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 29 (character_sequence)


State 170

   30 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 30 (character_sequence)


State 171

   34 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 34 (string_constant)


State 172

   31 character_sequence: character_sequence . STRING_CHARACTER
   32                   | character_sequence . STRING_CHARACTER_ESC
   33 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 231
    STRING_CHARACTER_ESC  shift, and go to state 232
    "end of the string"   shift, and go to state 233


State 173

  120 annotation_argument_value: "true" .

    $default  reduce using rule 120 (annotation_argument_value)


State 174

  121 annotation_argument_value: "false" .

    $default  reduce using rule 121 (annotation_argument_value)


State 175

  118 annotation_argument_value: "integer constant" .

    $default  reduce using rule 118 (annotation_argument_value)


State 176

  119 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 119 (annotation_argument_value)


State 177

  117 annotation_argument_value: "name" .

    $default  reduce using rule 117 (annotation_argument_value)


State 178

  116 annotation_argument_value: string_constant .

    $default  reduce using rule 116 (annotation_argument_value)


State 179

  122 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 122 (annotation_argument_value_list)


State 180

  123 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  134 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 234
    ')'  shift, and go to state 235


State 181

   55 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 55 (require_module)


State 182

  627 single_alias: optional_public_or_private_alias "name" $@45 '=' . type_declaration

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 285


State 183

   27 optional_not_required: '!' . "inscope"

    "inscope"  shift, and go to state 286


State 184

   28 module_declaration: "module" module_name optional_shared optional_public_or_private_module optional_not_required .

    $default  reduce using rule 28 (module_declaration)


State 185

  802 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis . $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 799 ($@82)

    $@82  go to state 287


State 186

  807 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis . $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 804 ($@86)

    $@86  go to state 288


State 187

   45 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 45 (reader_character_sequence)


State 188

  144 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 144 (annotation_declaration_basic)


State 189

   69 emit_semis: emit_semis "new line, semicolon" .

    $default  reduce using rule 69 (emit_semis)


State 190

  164 function_name: "operator" . '!'
  165              | "operator" . '~'
  166              | "operator" . "+="
  167              | "operator" . "-="
  168              | "operator" . "*="
  169              | "operator" . "/="
  170              | "operator" . "%="
  171              | "operator" . "&="
  172              | "operator" . "|="
  173              | "operator" . "^="
  174              | "operator" . "&&="
  175              | "operator" . "||="
  176              | "operator" . "^^="
  177              | "operator" . "&&"
  178              | "operator" . "||"
  179              | "operator" . "^^"
  180              | "operator" . '+'
  181              | "operator" . '-'
  182              | "operator" . '*'
  183              | "operator" . '/'
  184              | "operator" . '%'
  185              | "operator" . '<'
  186              | "operator" . '>'
  187              | "operator" . ".."
  188              | "operator" . "=="
  189              | "operator" . "!="
  190              | "operator" . "<="
  191              | "operator" . ">="
  192              | "operator" . '&'
  193              | "operator" . '|'
  194              | "operator" . '^'
  197              | "operator" . "++"
  198              | "operator" . "--"
  199              | "operator" . "<<"
  200              | "operator" . ">>"
  201              | "operator" . "<<="
  202              | "operator" . ">>="
  203              | "operator" . "<<<"
  204              | "operator" . ">>>"
  205              | "operator" . "<<<="
  206              | "operator" . ">>>="
  207              | "operator" . '[' ']'
  208              | "operator" . "?[" ']'
  209              | "operator" . '.'
  210              | "operator" . "?."
  211              | "operator" . '.' "name"
  212              | "operator" . '.' "name" ":="
  213              | "operator" . '.' "name" "+="
  214              | "operator" . '.' "name" "-="
  215              | "operator" . '.' "name" "*="
  216              | "operator" . '.' "name" "/="
  217              | "operator" . '.' "name" "%="
  218              | "operator" . '.' "name" "&="
  219              | "operator" . '.' "name" "|="
  220              | "operator" . '.' "name" "^="
  221              | "operator" . '.' "name" "&&="
  222              | "operator" . '.' "name" "||="
  223              | "operator" . '.' "name" "^^="
  224              | "operator" . "?." "name"
  225              | "operator" . ":="
  226              | "operator" . "delete"
  227              | "operator" . "??"
  228              | "operator" . "is"
  229              | "operator" . "as"
  230              | "operator" . "is" "name"
  231              | "operator" . "as" "name"
  232              | "operator" . '?' "as"
  233              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 289
    "as"      shift, and go to state 290
    "delete"  shift, and go to state 291
    "+="      shift, and go to state 292
    "-="      shift, and go to state 293
    "/="      shift, and go to state 294
    "*="      shift, and go to state 295
    "%="      shift, and go to state 296
    "&="      shift, and go to state 297
    "|="      shift, and go to state 298
    "^="      shift, and go to state 299
    "<<"      shift, and go to state 300
    ">>"      shift, and go to state 301
    "++"      shift, and go to state 302
    "--"      shift, and go to state 303
    "<="      shift, and go to state 304
    "<<="     shift, and go to state 305
    ">>="     shift, and go to state 306
    ">="      shift, and go to state 307
    "=="      shift, and go to state 308
    "!="      shift, and go to state 309
    "??"      shift, and go to state 310
    "?."      shift, and go to state 311
    "?["      shift, and go to state 312
    ":="      shift, and go to state 313
    "<<<"     shift, and go to state 314
    ">>>"     shift, and go to state 315
    "<<<="    shift, and go to state 316
    ">>>="    shift, and go to state 317
    "&&"      shift, and go to state 318
    "||"      shift, and go to state 319
    "^^"      shift, and go to state 320
    "&&="     shift, and go to state 321
    "||="     shift, and go to state 322
    "^^="     shift, and go to state 323
    ".."      shift, and go to state 324
    '?'       shift, and go to state 325
    '|'       shift, and go to state 326
    '^'       shift, and go to state 327
    '&'       shift, and go to state 328
    '<'       shift, and go to state 329
    '>'       shift, and go to state 330
    '-'       shift, and go to state 331
    '+'       shift, and go to state 332
    '*'       shift, and go to state 333
    '/'       shift, and go to state 334
    '%'       shift, and go to state 335
    '~'       shift, and go to state 336
    '!'       shift, and go to state 337
    '.'       shift, and go to state 338
    '['       shift, and go to state 339


State 191

  234 function_name: "bool" .

    $default  reduce using rule 234 (function_name)


State 192

  235 function_name: "string" .

    $default  reduce using rule 235 (function_name)


State 193

  236 function_name: "int" .

    $default  reduce using rule 236 (function_name)


State 194

  237 function_name: "int2" .

    $default  reduce using rule 237 (function_name)


State 195

  238 function_name: "int3" .

    $default  reduce using rule 238 (function_name)


State 196

  239 function_name: "int4" .

    $default  reduce using rule 239 (function_name)


State 197

  240 function_name: "uint" .

    $default  reduce using rule 240 (function_name)


State 198

  241 function_name: "uint2" .

    $default  reduce using rule 241 (function_name)


State 199

  242 function_name: "uint3" .

    $default  reduce using rule 242 (function_name)


State 200

  243 function_name: "uint4" .

    $default  reduce using rule 243 (function_name)


State 201

  244 function_name: "float" .

    $default  reduce using rule 244 (function_name)


State 202

  245 function_name: "float2" .

    $default  reduce using rule 245 (function_name)


State 203

  246 function_name: "float3" .

    $default  reduce using rule 246 (function_name)


State 204

  247 function_name: "float4" .

    $default  reduce using rule 247 (function_name)


State 205

  248 function_name: "range" .

    $default  reduce using rule 248 (function_name)


State 206

  249 function_name: "urange" .

    $default  reduce using rule 249 (function_name)


State 207

  250 function_name: "range64" .

    $default  reduce using rule 250 (function_name)


State 208

  251 function_name: "urange64" .

    $default  reduce using rule 251 (function_name)


State 209

  252 function_name: "int64" .

    $default  reduce using rule 252 (function_name)


State 210

  253 function_name: "uint64" .

    $default  reduce using rule 253 (function_name)


State 211

  254 function_name: "double" .

    $default  reduce using rule 254 (function_name)


State 212

  255 function_name: "int8" .

    $default  reduce using rule 255 (function_name)


State 213

  256 function_name: "uint8" .

    $default  reduce using rule 256 (function_name)


State 214

  257 function_name: "int16" .

    $default  reduce using rule 257 (function_name)


State 215

  258 function_name: "uint16" .

    $default  reduce using rule 258 (function_name)


State 216

  195 function_name: "++" . "operator"

    "operator"  shift, and go to state 340


State 217

  196 function_name: "--" . "operator"

    "operator"  shift, and go to state 341


State 218

  163 function_name: "name" .

    $default  reduce using rule 163 (function_name)


State 219

  263 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 342

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 343


State 220

  265 function_declaration: optional_public_or_private_function $@13 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 154

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 344


State 221

  632 enum_name: "name" .

    $default  reduce using rule 632 (enum_name)


State 222

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    ':'  shift, and go to state 345

    $default  reduce using rule 633 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 346


State 223

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 . structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 347

    $default  reduce using rule 647 (optional_sealed)

    optional_sealed  go to state 348
    structure_name   go to state 349


State 224

  610 global_variable_declaration_list: global_variable_declaration_list . SEMICOLON
  612                                 | global_variable_declaration_list . $@43 optional_field_annotation let_variable_declaration
  613 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 350

    $default  reduce using rule 611 ($@43)

    SEMICOLON  go to state 351
    $@43       go to state 352


State 225

  137 metadata_argument_list: '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 353


State 226

  138 metadata_argument_list: metadata_argument_list . '@' annotation_argument optional_emit_semis
  533 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 354

    $default  reduce using rule 533 (optional_field_annotation)


State 227

  615 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 355

    global_let_variable_name_with_pos_list  go to state 356
    global_let_variable_declaration         go to state 357


State 228

  637 emit_commas: "new line, comma" .

    $default  reduce using rule 637 (emit_commas)


State 229

  638 emit_commas: emit_commas . "new line, comma"
  640 optional_emit_commas: emit_commas .

    "new line, comma"  shift, and go to state 358

    $default  reduce using rule 640 (optional_emit_commas)


State 230

  812 bitfield_alias_declaration: bitfield_basic_type_declaration $@89 optional_public_or_private_alias "name" optional_emit_commas . $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 809 ($@90)

    $@90  go to state 359


State 231

   31 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 31 (character_sequence)


State 232

   32 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 32 (character_sequence)


State 233

   33 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 33 (string_constant)


State 234

  123 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 173
    "false"                    shift, and go to state 174
    "integer constant"         shift, and go to state 175
    "floating point constant"  shift, and go to state 176
    "name"                     shift, and go to state 177
    "start of the string"      shift, and go to state 130

    string_constant            go to state 178
    annotation_argument_value  go to state 360


State 235

  134 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 134 (annotation_argument)


State 236

  738 type_declaration_no_options_no_dim: "type" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 361


State 237

  761 type_declaration_no_options_no_dim: "array" . '<' $@59 type_declaration '>' $@60

    '<'  shift, and go to state 362


State 238

  764 type_declaration_no_options_no_dim: "table" . '<' $@61 table_type_pair '>' $@62

    '<'  shift, and go to state 363


State 239

  739 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 364


State 240

  767 type_declaration_no_options_no_dim: "iterator" . '<' $@63 type_declaration '>' $@64

    '<'  shift, and go to state 365


State 241

  757 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@57 type_declaration '>' $@58

    '<'  shift, and go to state 366


State 242

  668 basic_type_declaration: "bool" .

    $default  reduce using rule 668 (basic_type_declaration)


State 243

  688 basic_type_declaration: "void" .

    $default  reduce using rule 688 (basic_type_declaration)


State 244

  669 basic_type_declaration: "string" .

    $default  reduce using rule 669 (basic_type_declaration)


State 245

  704 auto_type_declaration: "auto" .
  705                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 367

    $default  reduce using rule 704 (auto_type_declaration)


State 246

  670 basic_type_declaration: "int" .

    $default  reduce using rule 670 (basic_type_declaration)


State 247

  674 basic_type_declaration: "int2" .

    $default  reduce using rule 674 (basic_type_declaration)


State 248

  675 basic_type_declaration: "int3" .

    $default  reduce using rule 675 (basic_type_declaration)


State 249

  676 basic_type_declaration: "int4" .

    $default  reduce using rule 676 (basic_type_declaration)


State 250

  677 basic_type_declaration: "uint" .

    $default  reduce using rule 677 (basic_type_declaration)


State 251

  694 basic_type_declaration: "bitfield" .
  714 bitfield_basic_type_declaration: "bitfield" .
  715                                | "bitfield" . ':' "uint8"
  716                                | "bitfield" . ':' "uint16"
  717                                | "bitfield" . ':' "uint"
  718                                | "bitfield" . ':' "uint64"

    ':'  shift, and go to state 55

    '<'       reduce using rule 714 (bitfield_basic_type_declaration)
    $default  reduce using rule 694 (basic_type_declaration)


State 252

  681 basic_type_declaration: "uint2" .

    $default  reduce using rule 681 (basic_type_declaration)


State 253

  682 basic_type_declaration: "uint3" .

    $default  reduce using rule 682 (basic_type_declaration)


State 254

  683 basic_type_declaration: "uint4" .

    $default  reduce using rule 683 (basic_type_declaration)


State 255

  684 basic_type_declaration: "float" .

    $default  reduce using rule 684 (basic_type_declaration)


State 256

  685 basic_type_declaration: "float2" .

    $default  reduce using rule 685 (basic_type_declaration)


State 257

  686 basic_type_declaration: "float3" .

    $default  reduce using rule 686 (basic_type_declaration)


State 258

  687 basic_type_declaration: "float4" .

    $default  reduce using rule 687 (basic_type_declaration)


State 259

  689 basic_type_declaration: "range" .

    $default  reduce using rule 689 (basic_type_declaration)


State 260

  690 basic_type_declaration: "urange" .

    $default  reduce using rule 690 (basic_type_declaration)


State 261

  691 basic_type_declaration: "range64" .

    $default  reduce using rule 691 (basic_type_declaration)


State 262

  692 basic_type_declaration: "urange64" .

    $default  reduce using rule 692 (basic_type_declaration)


State 263

  768 type_declaration_no_options_no_dim: "block" .
  771                                   | "block" . '<' $@65 type_declaration '>' $@66
  774                                   | "block" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 368

    $default  reduce using rule 768 (type_declaration_no_options_no_dim)


State 264

  673 basic_type_declaration: "int64" .

    $default  reduce using rule 673 (basic_type_declaration)


State 265

  680 basic_type_declaration: "uint64" .

    $default  reduce using rule 680 (basic_type_declaration)


State 266

  693 basic_type_declaration: "double" .

    $default  reduce using rule 693 (basic_type_declaration)


State 267

  775 type_declaration_no_options_no_dim: "function" .
  778                                   | "function" . '<' $@69 type_declaration '>' $@70
  781                                   | "function" . '<' $@71 optional_function_argument_list optional_function_type '>' $@72

    '<'  shift, and go to state 369

    $default  reduce using rule 775 (type_declaration_no_options_no_dim)


State 268

  782 type_declaration_no_options_no_dim: "lambda" .
  785                                   | "lambda" . '<' $@73 type_declaration '>' $@74
  788                                   | "lambda" . '<' $@75 optional_function_argument_list optional_function_type '>' $@76

    '<'  shift, and go to state 370

    $default  reduce using rule 782 (type_declaration_no_options_no_dim)


State 269

  671 basic_type_declaration: "int8" .

    $default  reduce using rule 671 (basic_type_declaration)


State 270

  678 basic_type_declaration: "uint8" .

    $default  reduce using rule 678 (basic_type_declaration)


State 271

  672 basic_type_declaration: "int16" .

    $default  reduce using rule 672 (basic_type_declaration)


State 272

  679 basic_type_declaration: "uint16" .

    $default  reduce using rule 679 (basic_type_declaration)


State 273

  791 type_declaration_no_options_no_dim: "tuple" . '<' $@77 tuple_type_list '>' $@78

    '<'  shift, and go to state 371


State 274

  794 type_declaration_no_options_no_dim: "variant" . '<' $@79 variant_type_list '>' $@80

    '<'  shift, and go to state 372


State 275

  706 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 373


State 276

  740 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  742                                   | '$' . name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 374


State 277

  703 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 703 (structure_type_declaration)


State 278

  732 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 732 (type_declaration_no_options_no_dim)


State 279

  735 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 735 (type_declaration_no_options_no_dim)


State 280

  733 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 733 (type_declaration_no_options_no_dim)


State 281

  721 bitfield_type_declaration: bitfield_basic_type_declaration . '<' $@52 bitfield_bits '>' $@53

    '<'  shift, and go to state 375


State 282

  734 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 734 (type_declaration_no_options_no_dim)


State 283

  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"
  795 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 376
    "implicit"  shift, and go to state 377
    "explicit"  shift, and go to state 378
    "=="        shift, and go to state 379
    "??"        shift, and go to state 380
    '?'         shift, and go to state 381
    '&'         shift, and go to state 382
    '-'         shift, and go to state 383
    '#'         shift, and go to state 384

    $default  reduce using rule 795 (type_declaration)


State 284

  730 type_declaration_no_options: type_declaration_no_options_no_dim .
  731                            | type_declaration_no_options_no_dim . dim_list

    '['  shift, and go to state 385

    $default  reduce using rule 730 (type_declaration_no_options)

    dim_list  go to state 386


State 285

  627 single_alias: optional_public_or_private_alias "name" $@45 '=' type_declaration .
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387

    $default  reduce using rule 627 (single_alias)


State 286

   27 optional_not_required: '!' "inscope" .

    $default  reduce using rule 27 (optional_not_required)


State 287

  802 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 . '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    '{'  shift, and go to state 388


State 288

  807 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 . '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    '{'  shift, and go to state 389


State 289

  228 function_name: "operator" "is" .
  230              | "operator" "is" . "name"

    "name"  shift, and go to state 390

    $default  reduce using rule 228 (function_name)


State 290

  229 function_name: "operator" "as" .
  231              | "operator" "as" . "name"

    "name"  shift, and go to state 391

    $default  reduce using rule 229 (function_name)


State 291

  226 function_name: "operator" "delete" .

    $default  reduce using rule 226 (function_name)


State 292

  166 function_name: "operator" "+=" .

    $default  reduce using rule 166 (function_name)


State 293

  167 function_name: "operator" "-=" .

    $default  reduce using rule 167 (function_name)


State 294

  169 function_name: "operator" "/=" .

    $default  reduce using rule 169 (function_name)


State 295

  168 function_name: "operator" "*=" .

    $default  reduce using rule 168 (function_name)


State 296

  170 function_name: "operator" "%=" .

    $default  reduce using rule 170 (function_name)


State 297

  171 function_name: "operator" "&=" .

    $default  reduce using rule 171 (function_name)


State 298

  172 function_name: "operator" "|=" .

    $default  reduce using rule 172 (function_name)


State 299

  173 function_name: "operator" "^=" .

    $default  reduce using rule 173 (function_name)


State 300

  199 function_name: "operator" "<<" .

    $default  reduce using rule 199 (function_name)


State 301

  200 function_name: "operator" ">>" .

    $default  reduce using rule 200 (function_name)


State 302

  197 function_name: "operator" "++" .

    $default  reduce using rule 197 (function_name)


State 303

  198 function_name: "operator" "--" .

    $default  reduce using rule 198 (function_name)


State 304

  190 function_name: "operator" "<=" .

    $default  reduce using rule 190 (function_name)


State 305

  201 function_name: "operator" "<<=" .

    $default  reduce using rule 201 (function_name)


State 306

  202 function_name: "operator" ">>=" .

    $default  reduce using rule 202 (function_name)


State 307

  191 function_name: "operator" ">=" .

    $default  reduce using rule 191 (function_name)


State 308

  188 function_name: "operator" "==" .

    $default  reduce using rule 188 (function_name)


State 309

  189 function_name: "operator" "!=" .

    $default  reduce using rule 189 (function_name)


State 310

  227 function_name: "operator" "??" .

    $default  reduce using rule 227 (function_name)


State 311

  210 function_name: "operator" "?." .
  224              | "operator" "?." . "name"

    "name"  shift, and go to state 392

    $default  reduce using rule 210 (function_name)


State 312

  208 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 393


State 313

  225 function_name: "operator" ":=" .

    $default  reduce using rule 225 (function_name)


State 314

  203 function_name: "operator" "<<<" .

    $default  reduce using rule 203 (function_name)


State 315

  204 function_name: "operator" ">>>" .

    $default  reduce using rule 204 (function_name)


State 316

  205 function_name: "operator" "<<<=" .

    $default  reduce using rule 205 (function_name)


State 317

  206 function_name: "operator" ">>>=" .

    $default  reduce using rule 206 (function_name)


State 318

  177 function_name: "operator" "&&" .

    $default  reduce using rule 177 (function_name)


State 319

  178 function_name: "operator" "||" .

    $default  reduce using rule 178 (function_name)


State 320

  179 function_name: "operator" "^^" .

    $default  reduce using rule 179 (function_name)


State 321

  174 function_name: "operator" "&&=" .

    $default  reduce using rule 174 (function_name)


State 322

  175 function_name: "operator" "||=" .

    $default  reduce using rule 175 (function_name)


State 323

  176 function_name: "operator" "^^=" .

    $default  reduce using rule 176 (function_name)


State 324

  187 function_name: "operator" ".." .

    $default  reduce using rule 187 (function_name)


State 325

  232 function_name: "operator" '?' . "as"
  233              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 394


State 326

  193 function_name: "operator" '|' .

    $default  reduce using rule 193 (function_name)


State 327

  194 function_name: "operator" '^' .

    $default  reduce using rule 194 (function_name)


State 328

  192 function_name: "operator" '&' .

    $default  reduce using rule 192 (function_name)


State 329

  185 function_name: "operator" '<' .

    $default  reduce using rule 185 (function_name)


State 330

  186 function_name: "operator" '>' .

    $default  reduce using rule 186 (function_name)


State 331

  181 function_name: "operator" '-' .

    $default  reduce using rule 181 (function_name)


State 332

  180 function_name: "operator" '+' .

    $default  reduce using rule 180 (function_name)


State 333

  182 function_name: "operator" '*' .

    $default  reduce using rule 182 (function_name)


State 334

  183 function_name: "operator" '/' .

    $default  reduce using rule 183 (function_name)


State 335

  184 function_name: "operator" '%' .

    $default  reduce using rule 184 (function_name)


State 336

  165 function_name: "operator" '~' .

    $default  reduce using rule 165 (function_name)


State 337

  164 function_name: "operator" '!' .

    $default  reduce using rule 164 (function_name)


State 338

  209 function_name: "operator" '.' .
  211              | "operator" '.' . "name"
  212              | "operator" '.' . "name" ":="
  213              | "operator" '.' . "name" "+="
  214              | "operator" '.' . "name" "-="
  215              | "operator" '.' . "name" "*="
  216              | "operator" '.' . "name" "/="
  217              | "operator" '.' . "name" "%="
  218              | "operator" '.' . "name" "&="
  219              | "operator" '.' . "name" "|="
  220              | "operator" '.' . "name" "^="
  221              | "operator" '.' . "name" "&&="
  222              | "operator" '.' . "name" "||="
  223              | "operator" '.' . "name" "^^="

    "name"  shift, and go to state 395

    $default  reduce using rule 209 (function_name)


State 339

  207 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 396


State 340

  195 function_name: "++" "operator" .

    $default  reduce using rule 195 (function_name)


State 341

  196 function_name: "--" "operator" .

    $default  reduce using rule 196 (function_name)


State 342

  159 optional_function_argument_list: '(' . ')'
  160                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 397
    ')'   shift, and go to state 398
    '@'   shift, and go to state 225

    $default  reduce using rule 532 (optional_field_annotation)

    metadata_argument_list                 go to state 226
    optional_field_annotation              go to state 399
    function_argument_declaration_no_type  go to state 400
    function_argument_declaration_type     go to state 401
    function_argument_list                 go to state 402


State 343

  263 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 403

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 404


State 344

  265 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 405
    $@16              go to state 406


State 345

  634 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 407
    "uint"    shift, and go to state 408
    "int64"   shift, and go to state 409
    "uint64"  shift, and go to state 410
    "int8"    shift, and go to state 411
    "uint8"   shift, and go to state 412
    "int16"   shift, and go to state 413
    "uint16"  shift, and go to state 414

    enum_basic_type_declaration  go to state 415


State 346

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "new line, comma"  shift, and go to state 228

    $default  reduce using rule 639 (optional_emit_commas)

    emit_commas           go to state 229
    optional_emit_commas  go to state 416


State 347

  648 optional_sealed: "sealed" .

    $default  reduce using rule 648 (optional_sealed)


State 348

  649 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 417


State 349

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name . optional_emit_semis $@51 optional_struct_variable_declaration_list

    "new line, semicolon"  shift, and go to state 154

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 418


State 350

  613 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 613 (global_let)


State 351

  610 global_variable_declaration_list: global_variable_declaration_list SEMICOLON .

    $default  reduce using rule 610 (global_variable_declaration_list)


State 352

  612 global_variable_declaration_list: global_variable_declaration_list $@43 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 225

    $default  reduce using rule 532 (optional_field_annotation)

    metadata_argument_list     go to state 226
    optional_field_annotation  go to state 419


State 353

  137 metadata_argument_list: '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 154

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 420


State 354

  138 metadata_argument_list: metadata_argument_list '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 35
    "in"    shift, and go to state 36
    "name"  shift, and go to state 37

    annotation_argument_name  go to state 38
    annotation_argument       go to state 421


State 355

  593 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 593 (global_let_variable_name_with_pos_list)


State 356

  594 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  601 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  602                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  603                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 422
    ':'  shift, and go to state 423
    '&'  shift, and go to state 424

    $default  reduce using rule 586 (optional_ref)

    optional_ref  go to state 425


State 357

  615 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 615 (global_let)


State 358

  638 emit_commas: emit_commas "new line, comma" .

    $default  reduce using rule 638 (emit_commas)


State 359

  812 bitfield_alias_declaration: bitfield_basic_type_declaration $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 . '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    '{'  shift, and go to state 426


State 360

  123 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 123 (annotation_argument_value_list)


State 361

  738 type_declaration_no_options_no_dim: "type" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 736 ($@54)

    $@54  go to state 427


State 362

  761 type_declaration_no_options_no_dim: "array" '<' . $@59 type_declaration '>' $@60

    $default  reduce using rule 759 ($@59)

    $@59  go to state 428


State 363

  764 type_declaration_no_options_no_dim: "table" '<' . $@61 table_type_pair '>' $@62

    $default  reduce using rule 762 ($@61)

    $@61  go to state 429


State 364

  739 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 495
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 365

  767 type_declaration_no_options_no_dim: "iterator" '<' . $@63 type_declaration '>' $@64

    $default  reduce using rule 765 ($@63)

    $@63  go to state 505


State 366

  757 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@57 type_declaration '>' $@58

    $default  reduce using rule 755 ($@57)

    $@57  go to state 506


State 367

  705 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 507


State 368

  771 type_declaration_no_options_no_dim: "block" '<' . $@65 type_declaration '>' $@66
  774                                   | "block" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 772 ($@67)
    '>'       reduce using rule 772 ($@67)
    '('       reduce using rule 772 ($@67)
    $default  reduce using rule 769 ($@65)

    $@65  go to state 508
    $@67  go to state 509


State 369

  778 type_declaration_no_options_no_dim: "function" '<' . $@69 type_declaration '>' $@70
  781                                   | "function" '<' . $@71 optional_function_argument_list optional_function_type '>' $@72

    ':'       reduce using rule 779 ($@71)
    '>'       reduce using rule 779 ($@71)
    '('       reduce using rule 779 ($@71)
    $default  reduce using rule 776 ($@69)

    $@69  go to state 510
    $@71  go to state 511


State 370

  785 type_declaration_no_options_no_dim: "lambda" '<' . $@73 type_declaration '>' $@74
  788                                   | "lambda" '<' . $@75 optional_function_argument_list optional_function_type '>' $@76

    ':'       reduce using rule 786 ($@75)
    '>'       reduce using rule 786 ($@75)
    '('       reduce using rule 786 ($@75)
    $default  reduce using rule 783 ($@73)

    $@73  go to state 512
    $@75  go to state 513


State 371

  791 type_declaration_no_options_no_dim: "tuple" '<' . $@77 tuple_type_list '>' $@78

    $default  reduce using rule 789 ($@77)

    $@77  go to state 514


State 372

  794 type_declaration_no_options_no_dim: "variant" '<' . $@79 variant_type_list '>' $@80

    $default  reduce using rule 792 ($@79)

    $@79  go to state 515


State 373

  706 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 516
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 374

  740 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  742                                   | '$' name_in_namespace . '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 517
    '('  shift, and go to state 518


State 375

  721 bitfield_type_declaration: bitfield_basic_type_declaration '<' . $@52 bitfield_bits '>' $@53

    $default  reduce using rule 719 ($@52)

    $@52  go to state 519


State 376

  745 type_declaration_no_options_no_dim: type_declaration_no_options "const" .

    $default  reduce using rule 745 (type_declaration_no_options_no_dim)


State 377

  750 type_declaration_no_options_no_dim: type_declaration_no_options "implicit" .

    $default  reduce using rule 750 (type_declaration_no_options_no_dim)


State 378

  744 type_declaration_no_options_no_dim: type_declaration_no_options "explicit" .

    $default  reduce using rule 744 (type_declaration_no_options_no_dim)


State 379

  752 type_declaration_no_options_no_dim: type_declaration_no_options "==" . "const"
  753                                   | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 520
    '&'      shift, and go to state 521


State 380

  758 type_declaration_no_options_no_dim: type_declaration_no_options "??" .

    $default  reduce using rule 758 (type_declaration_no_options_no_dim)


State 381

  754 type_declaration_no_options_no_dim: type_declaration_no_options '?' .

    $default  reduce using rule 754 (type_declaration_no_options_no_dim)


State 382

  747 type_declaration_no_options_no_dim: type_declaration_no_options '&' .

    $default  reduce using rule 747 (type_declaration_no_options_no_dim)


State 383

  743 type_declaration_no_options_no_dim: type_declaration_no_options '-' . '[' ']'
  746                                   | type_declaration_no_options '-' . "const"
  748                                   | type_declaration_no_options '-' . '&'
  751                                   | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 522
    '&'      shift, and go to state 523
    '['      shift, and go to state 524
    '#'      shift, and go to state 525


State 384

  749 type_declaration_no_options_no_dim: type_declaration_no_options '#' .

    $default  reduce using rule 749 (type_declaration_no_options_no_dim)


State 385

  726 dim_list: '[' . expr ']'
  727         | '[' . ']'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    ']'                               shift, and go to state 526
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 527
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 386

  728 dim_list: dim_list . '[' expr ']'
  729         | dim_list . '[' ']'
  731 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 528

    $default  reduce using rule 731 (type_declaration_no_options)


State 387

  796 type_declaration: type_declaration '|' . type_declaration_no_options
  797                 | type_declaration '|' . '#'

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276
    '#'          shift, and go to state 529

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 530
    type_declaration_no_options_no_dim  go to state 284


State 388

  802 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' . $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 800 ($@83)

    $@83  go to state 531


State 389

  807 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' . $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 805 ($@87)

    $@87  go to state 532


State 390

  230 function_name: "operator" "is" "name" .

    $default  reduce using rule 230 (function_name)


State 391

  231 function_name: "operator" "as" "name" .

    $default  reduce using rule 231 (function_name)


State 392

  224 function_name: "operator" "?." "name" .

    $default  reduce using rule 224 (function_name)


State 393

  208 function_name: "operator" "?[" ']' .

    $default  reduce using rule 208 (function_name)


State 394

  232 function_name: "operator" '?' "as" .
  233              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 533

    $default  reduce using rule 232 (function_name)


State 395

  211 function_name: "operator" '.' "name" .
  212              | "operator" '.' "name" . ":="
  213              | "operator" '.' "name" . "+="
  214              | "operator" '.' "name" . "-="
  215              | "operator" '.' "name" . "*="
  216              | "operator" '.' "name" . "/="
  217              | "operator" '.' "name" . "%="
  218              | "operator" '.' "name" . "&="
  219              | "operator" '.' "name" . "|="
  220              | "operator" '.' "name" . "^="
  221              | "operator" '.' "name" . "&&="
  222              | "operator" '.' "name" . "||="
  223              | "operator" '.' "name" . "^^="

    "+="   shift, and go to state 534
    "-="   shift, and go to state 535
    "/="   shift, and go to state 536
    "*="   shift, and go to state 537
    "%="   shift, and go to state 538
    "&="   shift, and go to state 539
    "|="   shift, and go to state 540
    "^="   shift, and go to state 541
    ":="   shift, and go to state 542
    "&&="  shift, and go to state 543
    "||="  shift, and go to state 544
    "^^="  shift, and go to state 545

    $default  reduce using rule 211 (function_name)


State 396

  207 function_name: "operator" '[' ']' .

    $default  reduce using rule 207 (function_name)


State 397

  555 function_argument_declaration_type: "$a" . '(' expr ')'

    '('  shift, and go to state 546


State 398

  159 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 159 (optional_function_argument_list)


State 399

  553 function_argument_declaration_no_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_no_type
  554 function_argument_declaration_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_type

    "let"  shift, and go to state 547
    "var"  shift, and go to state 548

    $default  reduce using rule 327 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 549


State 400

  556 function_argument_list: function_argument_declaration_no_type .
  558                       | function_argument_declaration_no_type . ';' function_argument_list

    ';'  shift, and go to state 550

    $default  reduce using rule 556 (function_argument_list)


State 401

  557 function_argument_list: function_argument_declaration_type .
  559                       | function_argument_declaration_type . ';' function_argument_list
  560                       | function_argument_declaration_type . ',' function_argument_list

    ','  shift, and go to state 551
    ';'  shift, and go to state 552

    $default  reduce using rule 557 (function_argument_list)


State 402

  160 optional_function_argument_list: '(' function_argument_list . ')'

    ')'  shift, and go to state 553


State 403

  162 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 554


State 404

  263 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 263 (function_declaration_header)


State 405

  265 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 265 (function_declaration)


State 406

  272 expression_block: $@16 . '{' expressions $@17 '}' expression_block_finally

    '{'  shift, and go to state 555


State 407

  695 enum_basic_type_declaration: "int" .

    $default  reduce using rule 695 (enum_basic_type_declaration)


State 408

  698 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 698 (enum_basic_type_declaration)


State 409

  701 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 701 (enum_basic_type_declaration)


State 410

  702 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 702 (enum_basic_type_declaration)


State 411

  696 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 696 (enum_basic_type_declaration)


State 412

  699 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 699 (enum_basic_type_declaration)


State 413

  697 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 697 (enum_basic_type_declaration)


State 414

  700 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 700 (enum_basic_type_declaration)


State 415

  634 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 634 (optional_enum_basic_type_declaration)


State 416

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas . '{' $@47 enum_list optional_commas $@48 '}'

    '{'  shift, and go to state 556


State 417

  649 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 557

    $default  reduce using rule 645 (optional_structure_parent)

    optional_structure_parent  go to state 558


State 418

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis . $@51 optional_struct_variable_declaration_list

    $default  reduce using rule 661 ($@51)

    $@51  go to state 559


State 419

  612 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 560
    "name"  shift, and go to state 561

    let_variable_name_with_pos_list  go to state 562
    let_variable_declaration         go to state 563


State 420

  137 metadata_argument_list: '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 137 (metadata_argument_list)


State 421

  138 metadata_argument_list: metadata_argument_list '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 154

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 564


State 422

  594 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 565


State 423

  601 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  602                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 566
    type_declaration_no_options_no_dim  go to state 284


State 424

  587 optional_ref: '&' .

    $default  reduce using rule 587 (optional_ref)


State 425

  603 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 567
    ":="  shift, and go to state 568
    '='   shift, and go to state 569

    copy_or_move_or_clone  go to state 570


State 426

  812 bitfield_alias_declaration: bitfield_basic_type_declaration $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' . $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 810 ($@91)

    $@91  go to state 571


State 427

  738 type_declaration_no_options_no_dim: "type" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 572


State 428

  761 type_declaration_no_options_no_dim: "array" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 573


State 429

  764 type_declaration_no_options_no_dim: "table" '<' $@61 . table_type_pair '>' $@62

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    table_type_pair                     go to state 574
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 575


State 430

  839 make_struct_decl: "struct" . '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 576


State 431

  842 make_struct_decl: "class" . '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 577


State 432

  436 expr: "true" .

    $default  reduce using rule 436 (expr)


State 433

  437 expr: "false" .

    $default  reduce using rule 437 (expr)


State 434

  311 expr_new: "new" . new_type_declaration
  312         | "new" . new_type_declaration '(' use_initializer ')'
  313         | "new" . new_type_declaration '(' expr_list ')'
  314         | "new" . new_type_declaration '(' make_struct_single ')'
  315         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  316         | "new" . make_decl

    "struct"       shift, and go to state 430
    "class"        shift, and go to state 431
    "array"        shift, and go to state 437
    "table"        shift, and go to state 439
    "fixed_array"  shift, and go to state 446
    "default"      shift, and go to state 447
    "tuple"        shift, and go to state 449
    "variant"      shift, and go to state 450
    "::"           shift, and go to state 58
    "name"         shift, and go to state 59
    '<'            shift, and go to state 578
    '['            shift, and go to state 474
    '{'            shift, and go to state 478

    name_in_namespace           go to state 277
    new_type_declaration        go to state 579
    structure_type_declaration  go to state 580
    make_decl                   go to state 581
    make_struct_decl            go to state 500
    make_tuple_call             go to state 501
    make_dim_decl               go to state 502
    make_table_decl             go to state 503
    array_comprehension         go to state 504


State 435

  351 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  352               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  353               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 582


State 436

  350 expr_type_decl: "type" . '<' $@26 type_declaration '>' $@27

    '<'  shift, and go to state 583


State 437

  858 make_dim_decl: "array" . "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'
  861              | "array" . "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'
  864              | "array" . "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'
  865              | "array" . '(' expr_list optional_comma ')'
  868              | "array" . '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    "struct"   shift, and go to state 584
    "tuple"    shift, and go to state 585
    "variant"  shift, and go to state 586
    '<'        shift, and go to state 587
    '('        shift, and go to state 588


State 438

  430 expr: "null" .

    $default  reduce using rule 430 (expr)


State 439

  877 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  878                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  879                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 589
    '('  shift, and go to state 590


State 440

  481 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 591


State 441

  341 expr_cast: "cast" . '<' $@20 type_declaration_no_options '>' $@21 expr

    '<'  shift, and go to state 592


State 442

  344 expr_cast: "upcast" . '<' $@22 type_declaration_no_options '>' $@23 expr

    '<'  shift, and go to state 593


State 443

  482 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 594


State 444

  347 expr_cast: "reinterpret" . '<' $@24 type_declaration_no_options '>' $@25 expr

    '<'  shift, and go to state 595


State 445

  512 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 596


State 446

  869 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  872              | "fixed_array" . '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 597
    '('  shift, and go to state 598


State 447

  848 make_struct_decl: "default" . '<' $@99 type_declaration_no_options '>' $@100 use_initializer

    '<'  shift, and go to state 599


State 448

  694 basic_type_declaration: "bitfield" .

    $default  reduce using rule 694 (basic_type_declaration)


State 449

  851 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  854                | "tuple" . '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 600
    '('  shift, and go to state 601


State 450

  845 make_struct_decl: "variant" . '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 602


State 451

  513 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  514               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  515               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    '<'  shift, and go to state 603


State 452

  466 expr: "++" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 604
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 453

  467 expr: "--" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 605
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 454

  516 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 606


State 455

  517 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 607


State 456

  518 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 608


State 457

  519 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 609


State 458

  520 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 610


State 459

  522 expr_mtag: "$c" . '(' expr ')' '(' ')'
  523          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 611


State 460

  521 expr_mtag: "..." .

    $default  reduce using rule 521 (expr_mtag)


State 461

  374 expr_numeric_const: "integer constant" .

    $default  reduce using rule 374 (expr_numeric_const)


State 462

  376 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 376 (expr_numeric_const)


State 463

  375 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 375 (expr_numeric_const)


State 464

  377 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 377 (expr_numeric_const)


State 465

  378 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 378 (expr_numeric_const)


State 466

  379 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 379 (expr_numeric_const)


State 467

  380 expr_numeric_const: "double constant" .

    $default  reduce using rule 380 (expr_numeric_const)


State 468

   43 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 40 (string_builder_body)

    string_builder_body  go to state 612


State 469

  443 expr: '-' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 613
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 470

  442 expr: '+' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 614
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 471

  480 expr: '*' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 615
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 472

  441 expr: '~' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 616
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 473

  440 expr: '!' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 617
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 474

  855 make_dim_decl: '[' . optional_expr_list ']'
  884 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  885                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "for"                             shift, and go to state 618
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "iterator"                        shift, and go to state 619
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    $default  reduce using rule 296 (optional_expr_list)

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    optional_expr_list      go to state 620
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 621
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 475

  470 expr: '(' . expr_list optional_comma ')'
  471     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "$f"                              shift, and go to state 623
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 624
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 625
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_fields      go to state 626
    make_struct_single      go to state 627
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 476

  359 block_or_lambda: '$' .

    $default  reduce using rule 359 (block_or_lambda)


State 477

  360 block_or_lambda: '@' .
  361                | '@' . '@'
  406 func_addr_expr: '@' . '@' func_addr_name
  409               | '@' . '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name
  412               | '@' . '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name
  531 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 628

    $default  reduce using rule 360 (block_or_lambda)


State 478

  876 make_table_decl: '{' . $@113 optional_emit_semis optional_expr_map_tuple_list '}'
  886 array_comprehension: '{' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "for"  shift, and go to state 629

    $default  reduce using rule 875 ($@113)

    $@113  go to state 630


State 479

  434 expr: string_builder .

    $default  reduce using rule 434 (expr)


State 480

  433 expr: expr_reader .

    $default  reduce using rule 433 (expr)


State 481

  511 expr: expr_call_pipe .

    $default  reduce using rule 511 (expr)


State 482

  400 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  401                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  423 expr_call: name_in_namespace . '(' ')'
  424          | name_in_namespace . '(' "uninitialized" ')'
  425          | name_in_namespace . '(' make_struct_single ')'
  426          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  427          | name_in_namespace . '(' expr_list ')'
  431 expr: name_in_namespace .

    '('  shift, and go to state 631

    $default  reduce using rule 431 (expr)


State 483

  504 expr: expr_new .

    $default  reduce using rule 504 (expr)


State 484

  503 expr: expr_cast .

    $default  reduce using rule 503 (expr)


State 485

  502 expr: expr_type_decl .

    $default  reduce using rule 502 (expr)


State 486

  501 expr: expr_type_info .

    $default  reduce using rule 501 (expr)


State 487

  371 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '['  shift, and go to state 632

    $default  reduce using rule 154 (optional_annotation_list)

    optional_annotation_list  go to state 633


State 488

  507 expr: expr_full_block .

    $default  reduce using rule 507 (expr)


State 489

  432 expr: expr_numeric_const .

    $default  reduce using rule 432 (expr)


State 490

  506 expr: expr_named_call .

    $default  reduce using rule 506 (expr)


State 491

  505 expr: expr_method_call .

    $default  reduce using rule 505 (expr)


State 492

  478 expr: func_addr_expr .

    $default  reduce using rule 478 (expr)


State 493

  438 expr: expr_field .

    $default  reduce using rule 438 (expr)


State 494

  273 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  479 expr: expr_call .

    '$'  shift, and go to state 476
    '@'  shift, and go to state 634
    '{'  shift, and go to state 635

    $default  reduce using rule 479 (expr)

    block_or_lambda                go to state 636
    expr_full_block_assumed_piped  go to state 637


State 495

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  739 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 673


State 496

  483 expr: expr_generator .

    $default  reduce using rule 483 (expr)


State 497

  439 expr: expr_mtag .

    $default  reduce using rule 439 (expr)


State 498

  428 expr_call: basic_type_declaration . '(' ')'
  429          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 674


State 499

  435 expr: make_decl .

    $default  reduce using rule 435 (expr)


State 500

  813 make_decl: make_struct_decl .

    $default  reduce using rule 813 (make_decl)


State 501

  817 make_decl: make_tuple_call .

    $default  reduce using rule 817 (make_decl)


State 502

  814 make_decl: make_dim_decl .

    $default  reduce using rule 814 (make_decl)


State 503

  815 make_decl: make_table_decl .

    $default  reduce using rule 815 (make_decl)


State 504

  816 make_decl: array_comprehension .

    $default  reduce using rule 816 (make_decl)


State 505

  767 type_declaration_no_options_no_dim: "iterator" '<' $@63 . type_declaration '>' $@64

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 675


State 506

  757 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 . type_declaration '>' $@58

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 676


State 507

  705 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 677


State 508

  771 type_declaration_no_options_no_dim: "block" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 678


State 509

  774 type_declaration_no_options_no_dim: "block" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 342

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 679


State 510

  778 type_declaration_no_options_no_dim: "function" '<' $@69 . type_declaration '>' $@70

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 680


State 511

  781 type_declaration_no_options_no_dim: "function" '<' $@71 . optional_function_argument_list optional_function_type '>' $@72

    '('  shift, and go to state 342

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 681


State 512

  785 type_declaration_no_options_no_dim: "lambda" '<' $@73 . type_declaration '>' $@74

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 682


State 513

  788 type_declaration_no_options_no_dim: "lambda" '<' $@75 . optional_function_argument_list optional_function_type '>' $@76

    '('  shift, and go to state 342

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 683


State 514

  791 type_declaration_no_options_no_dim: "tuple" '<' $@77 . tuple_type_list '>' $@78

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 684
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    tuple_type                          go to state 685
    tuple_type_list                     go to state 686
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 687


State 515

  794 type_declaration_no_options_no_dim: "variant" '<' $@79 . variant_type_list '>' $@80

    "name"  shift, and go to state 688

    variant_type       go to state 689
    variant_type_list  go to state 690


State 516

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  706 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 691


State 517

  742 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 741 ($@56)

    $@56  go to state 692


State 518

  740 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    $default  reduce using rule 296 (optional_expr_list)

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    optional_expr_list      go to state 693
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 621
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 519

  721 bitfield_type_declaration: bitfield_basic_type_declaration '<' $@52 . bitfield_bits '>' $@53

    "name"  shift, and go to state 694

    bitfield_bits  go to state 695


State 520

  752 type_declaration_no_options_no_dim: type_declaration_no_options "==" "const" .

    $default  reduce using rule 752 (type_declaration_no_options_no_dim)


State 521

  753 type_declaration_no_options_no_dim: type_declaration_no_options "==" '&' .

    $default  reduce using rule 753 (type_declaration_no_options_no_dim)


State 522

  746 type_declaration_no_options_no_dim: type_declaration_no_options '-' "const" .

    $default  reduce using rule 746 (type_declaration_no_options_no_dim)


State 523

  748 type_declaration_no_options_no_dim: type_declaration_no_options '-' '&' .

    $default  reduce using rule 748 (type_declaration_no_options_no_dim)


State 524

  743 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 696


State 525

  751 type_declaration_no_options_no_dim: type_declaration_no_options '-' '#' .

    $default  reduce using rule 751 (type_declaration_no_options_no_dim)


State 526

  727 dim_list: '[' ']' .

    $default  reduce using rule 727 (dim_list)


State 527

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  726 dim_list: '[' expr . ']'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ']'    shift, and go to state 697


State 528

  728 dim_list: dim_list '[' . expr ']'
  729         | dim_list '[' . ']'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    ']'                               shift, and go to state 698
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 699
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 529

  797 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 797 (type_declaration)


State 530

  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"
  796 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 376
    "implicit"  shift, and go to state 377
    "explicit"  shift, and go to state 378
    "=="        shift, and go to state 379
    "??"        shift, and go to state 380
    '?'         shift, and go to state 381
    '&'         shift, and go to state 382
    '-'         shift, and go to state 383
    '#'         shift, and go to state 384

    $default  reduce using rule 796 (type_declaration)


State 531

  802 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 . tuple_alias_type_list optional_semis $@84 '}'

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 684
    '$'          shift, and go to state 276

    $default  reduce using rule 565 (tuple_alias_type_list)

    name_in_namespace                   go to state 277
    tuple_type                          go to state 700
    tuple_alias_type_list               go to state 701
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 687


State 532

  807 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 . variant_alias_type_list optional_semis $@88 '}'

    "name"  shift, and go to state 688

    $default  reduce using rule 571 (variant_alias_type_list)

    variant_type             go to state 702
    variant_alias_type_list  go to state 703


State 533

  233 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 233 (function_name)


State 534

  213 function_name: "operator" '.' "name" "+=" .

    $default  reduce using rule 213 (function_name)


State 535

  214 function_name: "operator" '.' "name" "-=" .

    $default  reduce using rule 214 (function_name)


State 536

  216 function_name: "operator" '.' "name" "/=" .

    $default  reduce using rule 216 (function_name)


State 537

  215 function_name: "operator" '.' "name" "*=" .

    $default  reduce using rule 215 (function_name)


State 538

  217 function_name: "operator" '.' "name" "%=" .

    $default  reduce using rule 217 (function_name)


State 539

  218 function_name: "operator" '.' "name" "&=" .

    $default  reduce using rule 218 (function_name)


State 540

  219 function_name: "operator" '.' "name" "|=" .

    $default  reduce using rule 219 (function_name)


State 541

  220 function_name: "operator" '.' "name" "^=" .

    $default  reduce using rule 220 (function_name)


State 542

  212 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 212 (function_name)


State 543

  221 function_name: "operator" '.' "name" "&&=" .

    $default  reduce using rule 221 (function_name)


State 544

  222 function_name: "operator" '.' "name" "||=" .

    $default  reduce using rule 222 (function_name)


State 545

  223 function_name: "operator" '.' "name" "^^=" .

    $default  reduce using rule 223 (function_name)


State 546

  555 function_argument_declaration_type: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 704
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 547

  325 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 325 (kwd_let_var_or_nothing)


State 548

  326 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 326 (kwd_let_var_or_nothing)


State 549

  553 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_no_type
  554 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_type

    "$i"    shift, and go to state 705
    "name"  shift, and go to state 706

    variable_declaration_no_type  go to state 707
    variable_declaration_type     go to state 708
    variable_name_with_pos_list   go to state 709


State 550

  558 function_argument_list: function_argument_declaration_no_type ';' . function_argument_list

    "$a"  shift, and go to state 397
    '@'   shift, and go to state 225

    $default  reduce using rule 532 (optional_field_annotation)

    metadata_argument_list                 go to state 226
    optional_field_annotation              go to state 399
    function_argument_declaration_no_type  go to state 400
    function_argument_declaration_type     go to state 401
    function_argument_list                 go to state 710


State 551

  560 function_argument_list: function_argument_declaration_type ',' . function_argument_list

    "$a"  shift, and go to state 397
    '@'   shift, and go to state 225

    $default  reduce using rule 532 (optional_field_annotation)

    metadata_argument_list                 go to state 226
    optional_field_annotation              go to state 399
    function_argument_declaration_no_type  go to state 400
    function_argument_declaration_type     go to state 401
    function_argument_list                 go to state 711


State 552

  559 function_argument_list: function_argument_declaration_type ';' . function_argument_list

    "$a"  shift, and go to state 397
    '@'   shift, and go to state 225

    $default  reduce using rule 532 (optional_field_annotation)

    metadata_argument_list                 go to state 226
    optional_field_annotation              go to state 399
    function_argument_declaration_no_type  go to state 400
    function_argument_declaration_type     go to state 401
    function_argument_list                 go to state 712


State 553

  160 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 160 (optional_function_argument_list)


State 554

  162 optional_function_type: ':' type_declaration .
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387

    $default  reduce using rule 162 (optional_function_type)


State 555

  272 expression_block: $@16 '{' . expressions $@17 '}' expression_block_finally

    $default  reduce using rule 293 (expressions)

    expressions  go to state 713


State 556

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' . $@47 enum_list optional_commas $@48 '}'

    $default  reduce using rule 642 ($@47)

    $@47  go to state 714


State 557

  646 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 58
    "name"  shift, and go to state 59

    name_in_namespace  go to state 715


State 558

  649 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 649 (structure_name)


State 559

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 . optional_struct_variable_declaration_list

    ';'  shift, and go to state 716
    '{'  shift, and go to state 717

    optional_struct_variable_declaration_list  go to state 718


State 560

  589 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 719


State 561

  588 let_variable_name_with_pos_list: "name" .
  590                                | "name" . "aka" "name"

    "aka"  shift, and go to state 720

    $default  reduce using rule 588 (let_variable_name_with_pos_list)


State 562

  591 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  592                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  598 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  599                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  600                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 721
    ':'  shift, and go to state 722
    '&'  shift, and go to state 424

    $default  reduce using rule 586 (optional_ref)

    optional_ref  go to state 723


State 563

  612 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 612 (global_variable_declaration_list)


State 564

  138 metadata_argument_list: metadata_argument_list '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 138 (metadata_argument_list)


State 565

  594 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 594 (global_let_variable_name_with_pos_list)


State 566

  601 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  602                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 376
    "implicit"             shift, and go to state 377
    "explicit"             shift, and go to state 378
    "=="                   shift, and go to state 379
    "<-"                   shift, and go to state 567
    "??"                   shift, and go to state 380
    ":="                   shift, and go to state 568
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 569
    '?'                    shift, and go to state 381
    '&'                    shift, and go to state 382
    '-'                    shift, and go to state 383
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 384

    SEMICOLON              go to state 724
    copy_or_move_or_clone  go to state 725


State 567

  584 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 584 (copy_or_move_or_clone)


State 568

  585 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 585 (copy_or_move_or_clone)


State 569

  583 copy_or_move_or_clone: '=' .

    $default  reduce using rule 583 (copy_or_move_or_clone)


State 570

  603 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 726
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 571

  812 bitfield_alias_declaration: bitfield_basic_type_declaration $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 . bitfield_alias_bits optional_commas $@92 '}'

    "name"  shift, and go to state 727

    $default  reduce using rule 709 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 728


State 572

  738 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration . '>' $@55
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387
    '>'  shift, and go to state 729


State 573

  761 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration . '>' $@60
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387
    '>'  shift, and go to state 730


State 574

  764 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair . '>' $@62

    '>'  shift, and go to state 731


State 575

  724 table_type_pair: type_declaration .
  725                | type_declaration . c_or_s type_declaration
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    "new line, comma"      shift, and go to state 732
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 733
    '|'                    shift, and go to state 387
    ';'                    shift, and go to state 16

    $default  reduce using rule 724 (table_type_pair)

    COMMA      go to state 734
    SEMICOLON  go to state 735
    c_or_s     go to state 736


State 576

  839 make_struct_decl: "struct" '<' . $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 837 ($@93)

    $@93  go to state 737


State 577

  842 make_struct_decl: "class" '<' . $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 840 ($@95)

    $@95  go to state 738


State 578

  309 new_type_declaration: '<' . $@18 type_declaration '>' $@19

    $default  reduce using rule 307 ($@18)

    $@18  go to state 739


State 579

  311 expr_new: "new" new_type_declaration .
  312         | "new" new_type_declaration . '(' use_initializer ')'
  313         | "new" new_type_declaration . '(' expr_list ')'
  314         | "new" new_type_declaration . '(' make_struct_single ')'
  315         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 740

    $default  reduce using rule 311 (expr_new)


State 580

  310 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 310 (new_type_declaration)


State 581

  316 expr_new: "new" make_decl .

    $default  reduce using rule 316 (expr_new)


State 582

  351 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  352               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  353               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 741
    '('  shift, and go to state 742


State 583

  350 expr_type_decl: "type" '<' . $@26 type_declaration '>' $@27

    $default  reduce using rule 348 ($@26)

    $@26  go to state 743


State 584

  858 make_dim_decl: "array" "struct" . '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 744


State 585

  861 make_dim_decl: "array" "tuple" . '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 745


State 586

  864 make_dim_decl: "array" "variant" . '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'

    '<'  shift, and go to state 746


State 587

  868 make_dim_decl: "array" '<' . $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    $default  reduce using rule 866 ($@109)

    $@109  go to state 747


State 588

  865 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 748
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 589

  878 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  879                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 749
    type_declaration_no_options_no_dim  go to state 284


State 590

  877 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 750
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_map_tuple          go to state 751
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    expr_map_tuple_list     go to state 752
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 591

  481 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 753
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 592

  341 expr_cast: "cast" '<' . $@20 type_declaration_no_options '>' $@21 expr

    $default  reduce using rule 339 ($@20)

    $@20  go to state 754


State 593

  344 expr_cast: "upcast" '<' . $@22 type_declaration_no_options '>' $@23 expr

    $default  reduce using rule 342 ($@22)

    $@22  go to state 755


State 594

  482 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 756
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 595

  347 expr_cast: "reinterpret" '<' . $@24 type_declaration_no_options '>' $@25 expr

    $default  reduce using rule 345 ($@24)

    $@24  go to state 757


State 596

  512 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 758
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 597

  872 make_dim_decl: "fixed_array" '<' . $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    $default  reduce using rule 870 ($@111)

    $@111  go to state 759


State 598

  869 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 760
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 599

  848 make_struct_decl: "default" '<' . $@99 type_declaration_no_options '>' $@100 use_initializer

    $default  reduce using rule 846 ($@99)

    $@99  go to state 761


State 600

  854 make_tuple_call: "tuple" '<' . $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 852 ($@101)

    $@101  go to state 762


State 601

  851 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 763
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 602

  845 make_struct_decl: "variant" '<' . $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 843 ($@97)

    $@97  go to state 764


State 603

  513 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  514               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  515               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 765
    type_declaration_no_options_no_dim  go to state 284


State 604

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  466     | "++" expr .
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 638
    "as"  shift, and go to state 639
    "++"  shift, and go to state 642
    "--"  shift, and go to state 643
    "->"  shift, and go to state 648
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    "<|"  shift, and go to state 652
    "|>"  shift, and go to state 653
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 466 (expr)


State 605

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  467     | "--" expr .
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 638
    "as"  shift, and go to state 639
    "++"  shift, and go to state 642
    "--"  shift, and go to state 643
    "->"  shift, and go to state 648
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    "<|"  shift, and go to state 652
    "|>"  shift, and go to state 653
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 467 (expr)


State 606

  516 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 766
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 607

  517 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 767
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 608

  518 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 768
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 609

  519 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 769
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 610

  520 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 770
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 611

  522 expr_mtag: "$c" '(' . expr ')' '(' ')'
  523          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 771
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 612

   41 string_builder_body: string_builder_body . character_sequence
   42                    | string_builder_body . "{" expr optional_format_string "}"
   43 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 169
    STRING_CHARACTER_ESC  shift, and go to state 170
    "end of the string"   shift, and go to state 772
    "{"                   shift, and go to state 773

    character_sequence  go to state 774


State 613

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  443 expr: '-' expr .
  444     | expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 638
    "as"  shift, and go to state 639
    "++"  shift, and go to state 642
    "--"  shift, and go to state 643
    "->"  shift, and go to state 648
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    "<|"  shift, and go to state 652
    "|>"  shift, and go to state 653
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 443 (expr)


State 614

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  442 expr: '+' expr .
  444     | expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 638
    "as"  shift, and go to state 639
    "++"  shift, and go to state 642
    "--"  shift, and go to state 643
    "->"  shift, and go to state 648
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    "<|"  shift, and go to state 652
    "|>"  shift, and go to state 653
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 442 (expr)


State 615

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  480     | '*' expr .
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 480 (expr)


State 616

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  441 expr: '~' expr .
  444     | expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 638
    "as"  shift, and go to state 639
    "++"  shift, and go to state 642
    "--"  shift, and go to state 643
    "->"  shift, and go to state 648
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    "<|"  shift, and go to state 652
    "|>"  shift, and go to state 653
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 441 (expr)


State 617

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  440 expr: '!' expr .
  444     | expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 638
    "as"  shift, and go to state 639
    "++"  shift, and go to state 642
    "--"  shift, and go to state 643
    "->"  shift, and go to state 648
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    "<|"  shift, and go to state 652
    "|>"  shift, and go to state 653
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 440 (expr)


State 618

  884 array_comprehension: '[' "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 775


State 619

  885 array_comprehension: '[' "iterator" . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "for"  shift, and go to state 776


State 620

  855 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 777


State 621

  297 optional_expr_list: expr_list . optional_comma
  355 expr_list: expr_list . ',' expr

    ','  shift, and go to state 778

    $default  reduce using rule 882 (optional_comma)

    optional_comma  go to state 779


State 622

  354 expr_list: expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 354 (expr_list)


State 623

  822 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  823                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 780


State 624

  302 name_in_namespace: "name" .
  303                  | "name" . "::" "name"
  818 make_struct_fields: "name" . copy_or_move expr
  819                   | "name" . ":=" expr

    "<-"  shift, and go to state 781
    ":="  shift, and go to state 782
    "::"  shift, and go to state 101
    '='   shift, and go to state 783

    $default  reduce using rule 302 (name_in_namespace)

    copy_or_move  go to state 784


State 625

  355 expr_list: expr_list . ',' expr
  470 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 778

    $default  reduce using rule 882 (optional_comma)

    optional_comma  go to state 785


State 626

  820 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  821                   | make_struct_fields . ',' "name" ":=" expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  825                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  828 make_struct_single: make_struct_fields . optional_comma

    ','  shift, and go to state 786

    $default  reduce using rule 882 (optional_comma)

    optional_comma  go to state 787


State 627

  471 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 788


State 628

  361 block_or_lambda: '@' '@' .
  406 func_addr_expr: '@' '@' . func_addr_name
  409               | '@' '@' . '<' $@28 type_declaration_no_options '>' $@29 func_addr_name
  412               | '@' '@' . '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name
  531 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 789
    "$c"    shift, and go to state 790
    "name"  shift, and go to state 59
    '<'     shift, and go to state 791

    $default  reduce using rule 361 (block_or_lambda)

    name_in_namespace  go to state 792
    func_addr_name     go to state 793


State 629

  886 array_comprehension: '{' "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    '('  shift, and go to state 794


State 630

  876 make_table_decl: '{' $@113 . optional_emit_semis optional_expr_map_tuple_list '}'

    "new line, semicolon"  shift, and go to state 154

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 795


State 631

  400 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  401                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  423 expr_call: name_in_namespace '(' . ')'
  424          | name_in_namespace '(' . "uninitialized" ')'
  425          | name_in_namespace '(' . make_struct_single ')'
  426          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  427          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "uninitialized"                   shift, and go to state 796
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "$f"                              shift, and go to state 623
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 624
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 797
    '('                               shift, and go to state 475
    ')'                               shift, and go to state 798
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 799
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_fields      go to state 626
    make_struct_single      go to state 800
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 632

  155 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 61
    "private"   shift, and go to state 62
    "template"  shift, and go to state 63
    "|>"        shift, and go to state 64
    "::"        shift, and go to state 58
    "name"      shift, and go to state 59
    '!'         shift, and go to state 65
    '('         shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 69
    annotation_list               go to state 801
    name_in_namespace             go to state 71


State 633

  371 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    "capture"  shift, and go to state 802

    $default  reduce using rule 369 (optional_capture_list)

    optional_capture_list  go to state 803


State 634

  360 block_or_lambda: '@' .
  361                | '@' . '@'

    '@'  shift, and go to state 804

    $default  reduce using rule 360 (block_or_lambda)


State 635

  373 expr_full_block_assumed_piped: '{' . expressions '}'

    $default  reduce using rule 293 (expressions)

    expressions  go to state 805


State 636

  372 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '['  shift, and go to state 632

    $default  reduce using rule 154 (optional_annotation_list)

    optional_annotation_list  go to state 806


State 637

  273 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 273 (expr_call_pipe)


State 638

  488 expr: expr "is" . "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr "is" . basic_type_declaration
  490     | expr "is" . "name"
  530 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 807
    "bool"      shift, and go to state 242
    "void"      shift, and go to state 243
    "string"    shift, and go to state 244
    "int"       shift, and go to state 246
    "int2"      shift, and go to state 247
    "int3"      shift, and go to state 248
    "int4"      shift, and go to state 249
    "uint"      shift, and go to state 250
    "bitfield"  shift, and go to state 448
    "uint2"     shift, and go to state 252
    "uint3"     shift, and go to state 253
    "uint4"     shift, and go to state 254
    "float"     shift, and go to state 255
    "float2"    shift, and go to state 256
    "float3"    shift, and go to state 257
    "float4"    shift, and go to state 258
    "range"     shift, and go to state 259
    "urange"    shift, and go to state 260
    "range64"   shift, and go to state 261
    "urange64"  shift, and go to state 262
    "int64"     shift, and go to state 264
    "uint64"    shift, and go to state 265
    "double"    shift, and go to state 266
    "int8"      shift, and go to state 269
    "uint8"     shift, and go to state 270
    "int16"     shift, and go to state 271
    "uint16"    shift, and go to state 272
    "$f"        shift, and go to state 808
    "name"      shift, and go to state 809

    basic_type_declaration  go to state 810


State 639

  491 expr: expr "as" . "name"
  494     | expr "as" . "type" '<' $@36 type_declaration '>' $@37
  495     | expr "as" . basic_type_declaration
  528 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 811
    "bool"      shift, and go to state 242
    "void"      shift, and go to state 243
    "string"    shift, and go to state 244
    "int"       shift, and go to state 246
    "int2"      shift, and go to state 247
    "int3"      shift, and go to state 248
    "int4"      shift, and go to state 249
    "uint"      shift, and go to state 250
    "bitfield"  shift, and go to state 448
    "uint2"     shift, and go to state 252
    "uint3"     shift, and go to state 253
    "uint4"     shift, and go to state 254
    "float"     shift, and go to state 255
    "float2"    shift, and go to state 256
    "float3"    shift, and go to state 257
    "float4"    shift, and go to state 258
    "range"     shift, and go to state 259
    "urange"    shift, and go to state 260
    "range64"   shift, and go to state 261
    "urange64"  shift, and go to state 262
    "int64"     shift, and go to state 264
    "uint64"    shift, and go to state 265
    "double"    shift, and go to state 266
    "int8"      shift, and go to state 269
    "uint8"     shift, and go to state 270
    "int16"     shift, and go to state 271
    "uint16"    shift, and go to state 272
    "$f"        shift, and go to state 812
    "name"      shift, and go to state 813

    basic_type_declaration  go to state 814


State 640

  444 expr: expr "<<" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 815
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 641

  445 expr: expr ">>" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 816
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 642

  468 expr: expr "++" .

    $default  reduce using rule 468 (expr)


State 643

  469 expr: expr "--" .

    $default  reduce using rule 469 (expr)


State 644

  457 expr: expr "<=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 817
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 645

  458 expr: expr ">=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 818
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 646

  455 expr: expr "==" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 819
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 647

  456 expr: expr "!=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 820
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 648

  402 expr_method_call: expr "->" . "name" '(' ')'
  403                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 821


State 649

  484 expr: expr "??" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 822
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 650

  476 expr: expr "?." . "name"
  525 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 823
    "name"  shift, and go to state 824


State 651

  474 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 825
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 652

  508 expr: expr "<|" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 826
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 653

  509 expr: expr "|>" . expr
  510     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 827
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 828
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 654

  446 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 829
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 655

  447 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 830
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 656

  462 expr: expr "&&" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 831
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 657

  463 expr: expr "||" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 832
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 658

  464 expr: expr "^^" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 833
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 659

  465 expr: expr ".." . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 834
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 660

  485 expr: expr '?' . expr ':' expr
  496     | expr '?' . "as" "name"
  499     | expr '?' . "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr '?' . "as" basic_type_declaration
  529 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "as"                              shift, and go to state 835
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 836
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 661

  460 expr: expr '|' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 837
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 662

  461 expr: expr '^' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 838
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 663

  459 expr: expr '&' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 839
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 664

  453 expr: expr '<' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 840
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 665

  454 expr: expr '>' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 841
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 666

  449 expr: expr '-' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 842
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 667

  448 expr: expr '+' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 843
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 668

  450 expr: expr '*' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 844
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 669

  451 expr: expr '/' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 845
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 670

  452 expr: expr '%' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 846
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 671

  413 expr_field: expr '.' . "name"
  414           | expr '.' . '.' "name"
  415           | expr '.' . "name" '(' ')'
  416           | expr '.' . "name" '(' expr_list ')'
  417           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  418           | expr '.' . basic_type_declaration '(' ')'
  419           | expr '.' . basic_type_declaration '(' expr_list ')'
  422           | expr '.' . $@32 error $@33
  473 expr: expr '.' . '[' expr ']'
  475     | expr '.' . "?[" expr ']'
  477     | expr '.' . "?." "name"
  524 expr_mtag: expr '.' . "$f" '(' expr ')'
  526          | expr '.' . '.' "$f" '(' expr ')'
  527          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 242
    "void"      shift, and go to state 243
    "string"    shift, and go to state 244
    "int"       shift, and go to state 246
    "int2"      shift, and go to state 247
    "int3"      shift, and go to state 248
    "int4"      shift, and go to state 249
    "uint"      shift, and go to state 250
    "bitfield"  shift, and go to state 448
    "uint2"     shift, and go to state 252
    "uint3"     shift, and go to state 253
    "uint4"     shift, and go to state 254
    "float"     shift, and go to state 255
    "float2"    shift, and go to state 256
    "float3"    shift, and go to state 257
    "float4"    shift, and go to state 258
    "range"     shift, and go to state 259
    "urange"    shift, and go to state 260
    "range64"   shift, and go to state 261
    "urange64"  shift, and go to state 262
    "int64"     shift, and go to state 264
    "uint64"    shift, and go to state 265
    "double"    shift, and go to state 266
    "int8"      shift, and go to state 269
    "uint8"     shift, and go to state 270
    "int16"     shift, and go to state 271
    "uint16"    shift, and go to state 272
    "?."        shift, and go to state 847
    "?["        shift, and go to state 848
    "$f"        shift, and go to state 849
    "name"      shift, and go to state 850
    '.'         shift, and go to state 851
    '['         shift, and go to state 852

    $default  reduce using rule 420 ($@32)

    $@32                    go to state 853
    basic_type_declaration  go to state 854


State 672

  472 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 855
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 673

  739 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 739 (type_declaration_no_options_no_dim)


State 674

  428 expr_call: basic_type_declaration '(' . ')'
  429          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    ')'                               shift, and go to state 856
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 857
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 675

  767 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration . '>' $@64
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387
    '>'  shift, and go to state 858


State 676

  757 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration . '>' $@58
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387
    '>'  shift, and go to state 859


State 677

  705 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 705 (auto_type_declaration)


State 678

  771 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration . '>' $@66
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387
    '>'  shift, and go to state 860


State 679

  774 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 403

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 861


State 680

  778 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration . '>' $@70
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387
    '>'  shift, and go to state 862


State 681

  781 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list . optional_function_type '>' $@72

    ':'  shift, and go to state 403

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 863


State 682

  785 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration . '>' $@74
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387
    '>'  shift, and go to state 864


State 683

  788 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list . optional_function_type '>' $@76

    ':'  shift, and go to state 403

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 865


State 684

  302 name_in_namespace: "name" .
  303                  | "name" . "::" "name"
  562 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 101
    ':'   shift, and go to state 866

    $default  reduce using rule 302 (name_in_namespace)


State 685

  563 tuple_type_list: tuple_type .

    $default  reduce using rule 563 (tuple_type_list)


State 686

  564 tuple_type_list: tuple_type_list . c_or_s tuple_type
  791 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list . '>' $@78

    "new line, comma"      shift, and go to state 732
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 733
    '>'                    shift, and go to state 867
    ';'                    shift, and go to state 16

    COMMA      go to state 734
    SEMICOLON  go to state 735
    c_or_s     go to state 868


State 687

  561 tuple_type: type_declaration .
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387

    $default  reduce using rule 561 (tuple_type)


State 688

  568 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 869


State 689

  569 variant_type_list: variant_type .

    $default  reduce using rule 569 (variant_type_list)


State 690

  570 variant_type_list: variant_type_list . c_or_s variant_type
  794 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list . '>' $@80

    "new line, comma"      shift, and go to state 732
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 733
    '>'                    shift, and go to state 870
    ';'                    shift, and go to state 16

    COMMA      go to state 734
    SEMICOLON  go to state 735
    c_or_s     go to state 871


State 691

  706 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 706 (auto_type_declaration)


State 692

  742 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    type_declaration_no_options_list    go to state 872
    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 873


State 693

  740 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 874


State 694

  707 bitfield_bits: "name" .

    $default  reduce using rule 707 (bitfield_bits)


State 695

  708 bitfield_bits: bitfield_bits . ';' "name"
  721 bitfield_type_declaration: bitfield_basic_type_declaration '<' $@52 bitfield_bits . '>' $@53

    '>'  shift, and go to state 875
    ';'  shift, and go to state 876


State 696

  743 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 743 (type_declaration_no_options_no_dim)


State 697

  726 dim_list: '[' expr ']' .

    $default  reduce using rule 726 (dim_list)


State 698

  729 dim_list: dim_list '[' ']' .

    $default  reduce using rule 729 (dim_list)


State 699

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  728 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ']'    shift, and go to state 877


State 700

  566 tuple_alias_type_list: tuple_type .

    $default  reduce using rule 566 (tuple_alias_type_list)


State 701

  567 tuple_alias_type_list: tuple_alias_type_list . semis tuple_type
  802 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list . optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 86 (optional_semis)

    SEMICOLON       go to state 878
    semis           go to state 879
    optional_semis  go to state 880


State 702

  572 variant_alias_type_list: variant_type .

    $default  reduce using rule 572 (variant_alias_type_list)


State 703

  573 variant_alias_type_list: variant_alias_type_list . semis variant_type
  807 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list . optional_semis $@88 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 86 (optional_semis)

    SEMICOLON       go to state 878
    semis           go to state 881
    optional_semis  go to state 882


State 704

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  555 function_argument_declaration_type: "$a" '(' expr . ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 883


State 705

  664 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 884


State 706

  663 variable_name_with_pos_list: "name" .
  665                            | "name" . "aka" "name"

    "aka"  shift, and go to state 885

    $default  reduce using rule 663 (variable_name_with_pos_list)


State 707

  553 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type .

    $default  reduce using rule 553 (function_argument_declaration_no_type)


State 708

  554 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type .

    $default  reduce using rule 554 (function_argument_declaration_type)


State 709

  576 variable_declaration_no_type: variable_name_with_pos_list .
  577                             | variable_name_with_pos_list . '&'
  578                             | variable_name_with_pos_list . copy_or_move expr
  579 variable_declaration_type: variable_name_with_pos_list . ':' type_declaration
  580                          | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  666 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  667                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 781
    ','   shift, and go to state 886
    '='   shift, and go to state 783
    ':'   shift, and go to state 887
    '&'   shift, and go to state 888

    $default  reduce using rule 576 (variable_declaration_no_type)

    copy_or_move  go to state 889


State 710

  558 function_argument_list: function_argument_declaration_no_type ';' function_argument_list .

    $default  reduce using rule 558 (function_argument_list)


State 711

  560 function_argument_list: function_argument_declaration_type ',' function_argument_list .

    $default  reduce using rule 560 (function_argument_list)


State 712

  559 function_argument_list: function_argument_declaration_type ';' function_argument_list .

    $default  reduce using rule 559 (function_argument_list)


State 713

  272 expression_block: $@16 '{' expressions . $@17 '}' expression_block_finally
  294 expressions: expressions . expression_any
  295            | expressions . error

    error                             shift, and go to state 890
    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 891
    "null"                            shift, and go to state 438
    "break"                           shift, and go to state 892
    "try"                             shift, and go to state 893
    "table"                           shift, and go to state 439
    "delete"                          shift, and go to state 894
    "deref"                           shift, and go to state 440
    "assume"                          shift, and go to state 895
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 443
    "continue"                        shift, and go to state 896
    "pass"                            shift, and go to state 897
    "reinterpret"                     shift, and go to state 444
    "label"                           shift, and go to state 898
    "goto"                            shift, and go to state 899
    "unsafe"                          shift, and go to state 900
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "yield"                           shift, and go to state 901
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 478

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)
    '}'          reduce using rule 271 ($@17)

    SEMICOLON                         go to state 902
    string_builder                    go to state 479
    expr_reader                       go to state 480
    expression_label                  go to state 903
    expression_goto                   go to state 904
    expression_if_one_liner           go to state 905
    expression_if_then_else           go to state 906
    $@9                               go to state 907
    expression_if_then_else_oneliner  go to state 908
    expression_for_loop               go to state 909
    $@10                              go to state 910
    expression_unsafe                 go to state 911
    expression_while_loop             go to state 912
    $@11                              go to state 913
    expression_with                   go to state 914
    $@12                              go to state 915
    expression_with_alias             go to state 916
    $@17                              go to state 917
    expr_call_pipe                    go to state 481
    expression_any                    go to state 918
    name_in_namespace                 go to state 482
    expression_delete                 go to state 919
    expr_new                          go to state 483
    expression_break                  go to state 920
    expression_continue               go to state 921
    expression_return                 go to state 922
    expression_yield                  go to state 923
    expression_try_catch              go to state 924
    kwd_let                           go to state 925
    expression_let                    go to state 926
    expr_cast                         go to state 484
    expr_type_decl                    go to state 485
    expr_type_info                    go to state 486
    block_or_lambda                   go to state 487
    expr_full_block                   go to state 488
    expr_numeric_const                go to state 489
    expr_assign                       go to state 927
    expr_named_call                   go to state 490
    expr_method_call                  go to state 491
    func_addr_expr                    go to state 492
    expr_field                        go to state 493
    expr_call                         go to state 494
    expr                              go to state 928
    expr_generator                    go to state 496
    expr_mtag                         go to state 497
    basic_type_declaration            go to state 498
    make_decl                         go to state 499
    make_struct_decl                  go to state 500
    make_tuple_call                   go to state 501
    make_dim_decl                     go to state 502
    make_table_decl                   go to state 503
    array_comprehension               go to state 504


State 714

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 . enum_list optional_commas $@48 '}'

    "name"  shift, and go to state 929

    $default  reduce using rule 620 (enum_list)

    enum_expression  go to state 930
    enum_list        go to state 931


State 715

  646 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 646 (optional_structure_parent)


State 716

  657 optional_struct_variable_declaration_list: ';' .

    $default  reduce using rule 657 (optional_struct_variable_declaration_list)


State 717

  658 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 545 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 932


State 718

  662 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list .

    $default  reduce using rule 662 (structure_declaration)


State 719

  589 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 933
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 720

  590 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 934


State 721

  591 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  592                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 935


State 722

  598 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  599                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 936
    type_declaration_no_options_no_dim  go to state 284


State 723

  600 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 567
    ":="  shift, and go to state 568
    '='   shift, and go to state 569

    copy_or_move_or_clone  go to state 937


State 724

  601 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 601 (global_let_variable_declaration)


State 725

  602 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 938
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 726

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  603 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 638
    "as"                   shift, and go to state 639
    "<<"                   shift, and go to state 640
    ">>"                   shift, and go to state 641
    "++"                   shift, and go to state 642
    "--"                   shift, and go to state 643
    "<="                   shift, and go to state 644
    ">="                   shift, and go to state 645
    "=="                   shift, and go to state 646
    "!="                   shift, and go to state 647
    "->"                   shift, and go to state 648
    "??"                   shift, and go to state 649
    "?."                   shift, and go to state 650
    "?["                   shift, and go to state 651
    "<|"                   shift, and go to state 652
    "|>"                   shift, and go to state 653
    "<<<"                  shift, and go to state 654
    ">>>"                  shift, and go to state 655
    "&&"                   shift, and go to state 656
    "||"                   shift, and go to state 657
    "^^"                   shift, and go to state 658
    ".."                   shift, and go to state 659
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 660
    '|'                    shift, and go to state 661
    '^'                    shift, and go to state 662
    '&'                    shift, and go to state 663
    '<'                    shift, and go to state 664
    '>'                    shift, and go to state 665
    '-'                    shift, and go to state 666
    '+'                    shift, and go to state 667
    '*'                    shift, and go to state 668
    '/'                    shift, and go to state 669
    '%'                    shift, and go to state 670
    '.'                    shift, and go to state 671
    '['                    shift, and go to state 672
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 939


State 727

  710 bitfield_alias_bits: "name" .
  711                    | "name" . '=' expr

    '='  shift, and go to state 940

    $default  reduce using rule 710 (bitfield_alias_bits)


State 728

  712 bitfield_alias_bits: bitfield_alias_bits . commas "name"
  713                    | bitfield_alias_bits . commas "name" '=' expr
  812 bitfield_alias_declaration: bitfield_basic_type_declaration $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits . optional_commas $@92 '}'

    "new line, comma"  shift, and go to state 732
    ','                shift, and go to state 733

    $default  reduce using rule 635 (optional_commas)

    COMMA            go to state 941
    commas           go to state 942
    optional_commas  go to state 943


State 729

  738 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 737 ($@55)

    $@55  go to state 944


State 730

  761 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 760 ($@60)

    $@60  go to state 945


State 731

  764 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' . $@62

    $default  reduce using rule 763 ($@62)

    $@62  go to state 946


State 732

   17 COMMA: "new line, comma" .

    $default  reduce using rule 17 (COMMA)


State 733

   16 COMMA: ',' .

    $default  reduce using rule 16 (COMMA)


State 734

  722 c_or_s: COMMA .

    $default  reduce using rule 722 (c_or_s)


State 735

  723 c_or_s: SEMICOLON .

    $default  reduce using rule 723 (c_or_s)


State 736

  725 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 947


State 737

  839 make_struct_decl: "struct" '<' $@93 . type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 948
    type_declaration_no_options_no_dim  go to state 284


State 738

  842 make_struct_decl: "class" '<' $@95 . type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 949
    type_declaration_no_options_no_dim  go to state 284


State 739

  309 new_type_declaration: '<' $@18 . type_declaration '>' $@19

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 950


State 740

  312 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  313         | "new" new_type_declaration '(' . expr_list ')'
  314         | "new" new_type_declaration '(' . make_struct_single ')'
  315         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "uninitialized"                   shift, and go to state 951
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "$f"                              shift, and go to state 623
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 624
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    $default  reduce using rule 835 (use_initializer)

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 952
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_fields      go to state 626
    make_struct_single      go to state 953
    use_initializer         go to state 954
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 741

  352 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  353               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 955


State 742

  351 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 956
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 743

  350 expr_type_decl: "type" '<' $@26 . type_declaration '>' $@27

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 957


State 744

  858 make_dim_decl: "array" "struct" '<' . $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 856 ($@103)

    $@103  go to state 958


State 745

  861 make_dim_decl: "array" "tuple" '<' . $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 859 ($@105)

    $@105  go to state 959


State 746

  864 make_dim_decl: "array" "variant" '<' . $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'

    $default  reduce using rule 862 ($@107)

    $@107  go to state 960


State 747

  868 make_dim_decl: "array" '<' $@109 . type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 961
    type_declaration_no_options_no_dim  go to state 284


State 748

  355 expr_list: expr_list . ',' expr
  865 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 778

    $default  reduce using rule 882 (optional_comma)

    optional_comma  go to state 962


State 749

  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"
  878 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  879                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"                shift, and go to state 376
    "implicit"             shift, and go to state 377
    "explicit"             shift, and go to state 378
    "=="                   shift, and go to state 379
    "??"                   shift, and go to state 380
    "new line, comma"      shift, and go to state 732
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 733
    '?'                    shift, and go to state 381
    '&'                    shift, and go to state 382
    '>'                    shift, and go to state 963
    '-'                    shift, and go to state 383
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 384

    COMMA      go to state 734
    SEMICOLON  go to state 735
    c_or_s     go to state 964


State 750

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  849 make_map_tuple: expr . "=>" expr
  850               | expr .

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "=>"   shift, and go to state 965
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 850 (make_map_tuple)


State 751

  873 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 873 (expr_map_tuple_list)


State 752

  874 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  877 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 966

    $default  reduce using rule 882 (optional_comma)

    optional_comma  go to state 967


State 753

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  481     | "deref" '(' expr . ')'
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 968


State 754

  341 expr_cast: "cast" '<' $@20 . type_declaration_no_options '>' $@21 expr

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 969
    type_declaration_no_options_no_dim  go to state 284


State 755

  344 expr_cast: "upcast" '<' $@22 . type_declaration_no_options '>' $@23 expr

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 970
    type_declaration_no_options_no_dim  go to state 284


State 756

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  482     | "addr" '(' expr . ')'
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 971


State 757

  347 expr_cast: "reinterpret" '<' $@24 . type_declaration_no_options '>' $@25 expr

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 972
    type_declaration_no_options_no_dim  go to state 284


State 758

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  512     | "unsafe" '(' expr . ')'
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 973


State 759

  872 make_dim_decl: "fixed_array" '<' $@111 . type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 974
    type_declaration_no_options_no_dim  go to state 284


State 760

  355 expr_list: expr_list . ',' expr
  869 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 778

    $default  reduce using rule 882 (optional_comma)

    optional_comma  go to state 975


State 761

  848 make_struct_decl: "default" '<' $@99 . type_declaration_no_options '>' $@100 use_initializer

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 976
    type_declaration_no_options_no_dim  go to state 284


State 762

  854 make_tuple_call: "tuple" '<' $@101 . tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 684
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    tuple_type                          go to state 685
    tuple_type_list                     go to state 977
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 687


State 763

  355 expr_list: expr_list . ',' expr
  851 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 778

    $default  reduce using rule 882 (optional_comma)

    optional_comma  go to state 978


State 764

  845 make_struct_decl: "variant" '<' $@97 . variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 688

    variant_type       go to state 689
    variant_type_list  go to state 979


State 765

  513 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  514               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  515               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_emit_semis expression_block
  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 376
    "implicit"  shift, and go to state 377
    "explicit"  shift, and go to state 378
    "=="        shift, and go to state 379
    "??"        shift, and go to state 380
    '?'         shift, and go to state 381
    '&'         shift, and go to state 382
    '>'         shift, and go to state 980
    '-'         shift, and go to state 383
    '#'         shift, and go to state 384


State 766

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  516 expr_mtag: "$$" '(' expr . ')'
  524          | expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 981


State 767

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  517 expr_mtag: "$i" '(' expr . ')'
  524          | expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 982


State 768

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  518 expr_mtag: "$v" '(' expr . ')'
  524          | expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 983


State 769

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  519 expr_mtag: "$b" '(' expr . ')'
  524          | expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 984


State 770

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  520 expr_mtag: "$a" '(' expr . ')'
  524          | expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 985


State 771

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  522 expr_mtag: "$c" '(' expr . ')' '(' ')'
  523          | "$c" '(' expr . ')' '(' expr_list ')'
  524          | expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 986


State 772

   43 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 43 (string_builder)


State 773

   42 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 987
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 774

   31 character_sequence: character_sequence . STRING_CHARACTER
   32                   | character_sequence . STRING_CHARACTER_ESC
   41 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 231
    STRING_CHARACTER_ESC  shift, and go to state 232

    $default  reduce using rule 41 (string_builder_body)


State 775

  884 array_comprehension: '[' "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 988
    "name"  shift, and go to state 989
    '('     shift, and go to state 990

    for_variable_name_with_pos_list  go to state 991


State 776

  885 array_comprehension: '[' "iterator" "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 992


State 777

  855 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 855 (make_dim_decl)


State 778

  355 expr_list: expr_list ',' . expr
  883 optional_comma: ',' .

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    $default  reduce using rule 883 (optional_comma)

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 993
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 779

  297 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 297 (optional_expr_list)


State 780

  822 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  823                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 994
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 781

  575 copy_or_move: "<-" .

    $default  reduce using rule 575 (copy_or_move)


State 782

  819 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 995
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 783

  574 copy_or_move: '=' .

    $default  reduce using rule 574 (copy_or_move)


State 784

  818 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 996
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 785

  470 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 997


State 786

  820 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  821                   | make_struct_fields ',' . "name" ":=" expr
  824                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  825                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr
  883 optional_comma: ',' .

    "$f"    shift, and go to state 998
    "name"  shift, and go to state 999

    $default  reduce using rule 883 (optional_comma)


State 787

  828 make_struct_single: make_struct_fields optional_comma .

    $default  reduce using rule 828 (make_struct_single)


State 788

  471 expr: '(' make_struct_single ')' .

    $default  reduce using rule 471 (expr)


State 789

  405 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1000


State 790

  531 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1001


State 791

  409 func_addr_expr: '@' '@' '<' . $@28 type_declaration_no_options '>' $@29 func_addr_name
  412               | '@' '@' '<' . $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name

    ':'       reduce using rule 410 ($@30)
    '>'       reduce using rule 410 ($@30)
    '('       reduce using rule 410 ($@30)
    $default  reduce using rule 407 ($@28)

    $@28  go to state 1002
    $@30  go to state 1003


State 792

  404 func_addr_name: name_in_namespace .

    $default  reduce using rule 404 (func_addr_name)


State 793

  406 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 406 (func_addr_expr)


State 794

  886 array_comprehension: '{' "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 988
    "name"  shift, and go to state 989
    '('     shift, and go to state 990

    for_variable_name_with_pos_list  go to state 1004


State 795

  876 make_table_decl: '{' $@113 optional_emit_semis . optional_expr_map_tuple_list '}'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    $default  reduce using rule 298 (optional_expr_map_tuple_list)

    string_builder                go to state 479
    expr_reader                   go to state 480
    expr_call_pipe                go to state 481
    optional_expr_map_tuple_list  go to state 1005
    name_in_namespace             go to state 482
    expr_new                      go to state 483
    expr_cast                     go to state 484
    expr_type_decl                go to state 485
    expr_type_info                go to state 486
    block_or_lambda               go to state 487
    expr_full_block               go to state 488
    expr_numeric_const            go to state 489
    expr_named_call               go to state 490
    expr_method_call              go to state 491
    func_addr_expr                go to state 492
    expr_field                    go to state 493
    expr_call                     go to state 494
    expr                          go to state 750
    expr_generator                go to state 496
    expr_mtag                     go to state 497
    basic_type_declaration        go to state 498
    make_decl                     go to state 499
    make_struct_decl              go to state 500
    make_map_tuple                go to state 751
    make_tuple_call               go to state 501
    make_dim_decl                 go to state 502
    expr_map_tuple_list           go to state 1006
    make_table_decl               go to state 503
    array_comprehension           go to state 504


State 796

  424 expr_call: name_in_namespace '(' "uninitialized" . ')'
  426          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 623
    "name"  shift, and go to state 1007
    ')'     shift, and go to state 1008

    make_struct_fields  go to state 626
    make_struct_single  go to state 1009


State 797

  400 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  855 make_dim_decl: '[' . optional_expr_list ']'
  884 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  885                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "for"                             shift, and go to state 618
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "iterator"                        shift, and go to state 619
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "$f"                              shift, and go to state 623
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 624
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    $default  reduce using rule 296 (optional_expr_list)

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    optional_expr_list      go to state 620
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 621
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_fields      go to state 1010
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 798

  423 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 423 (expr_call)


State 799

  355 expr_list: expr_list . ',' expr
  401 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  427 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1011
    ')'  shift, and go to state 1012


State 800

  425 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1013


State 801

  153 annotation_list: annotation_list . ',' annotation_declaration
  155 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 110
    ']'  shift, and go to state 1014


State 802

  370 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1015


State 803

  371 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '('  shift, and go to state 342

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 1016


State 804

  361 block_or_lambda: '@' '@' .

    $default  reduce using rule 361 (block_or_lambda)


State 805

  294 expressions: expressions . expression_any
  295            | expressions . error
  373 expr_full_block_assumed_piped: '{' expressions . '}'

    error                             shift, and go to state 890
    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 891
    "null"                            shift, and go to state 438
    "break"                           shift, and go to state 892
    "try"                             shift, and go to state 893
    "table"                           shift, and go to state 439
    "delete"                          shift, and go to state 894
    "deref"                           shift, and go to state 440
    "assume"                          shift, and go to state 895
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 443
    "continue"                        shift, and go to state 896
    "pass"                            shift, and go to state 897
    "reinterpret"                     shift, and go to state 444
    "label"                           shift, and go to state 898
    "goto"                            shift, and go to state 899
    "unsafe"                          shift, and go to state 900
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "yield"                           shift, and go to state 901
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 478
    '}'                               shift, and go to state 1017

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)

    SEMICOLON                         go to state 902
    string_builder                    go to state 479
    expr_reader                       go to state 480
    expression_label                  go to state 903
    expression_goto                   go to state 904
    expression_if_one_liner           go to state 905
    expression_if_then_else           go to state 906
    $@9                               go to state 907
    expression_if_then_else_oneliner  go to state 908
    expression_for_loop               go to state 909
    $@10                              go to state 910
    expression_unsafe                 go to state 911
    expression_while_loop             go to state 912
    $@11                              go to state 913
    expression_with                   go to state 914
    $@12                              go to state 915
    expression_with_alias             go to state 916
    expr_call_pipe                    go to state 481
    expression_any                    go to state 918
    name_in_namespace                 go to state 482
    expression_delete                 go to state 919
    expr_new                          go to state 483
    expression_break                  go to state 920
    expression_continue               go to state 921
    expression_return                 go to state 922
    expression_yield                  go to state 923
    expression_try_catch              go to state 924
    kwd_let                           go to state 925
    expression_let                    go to state 926
    expr_cast                         go to state 484
    expr_type_decl                    go to state 485
    expr_type_info                    go to state 486
    block_or_lambda                   go to state 487
    expr_full_block                   go to state 488
    expr_numeric_const                go to state 489
    expr_assign                       go to state 927
    expr_named_call                   go to state 490
    expr_method_call                  go to state 491
    func_addr_expr                    go to state 492
    expr_field                        go to state 493
    expr_call                         go to state 494
    expr                              go to state 928
    expr_generator                    go to state 496
    expr_mtag                         go to state 497
    basic_type_declaration            go to state 498
    make_decl                         go to state 499
    make_struct_decl                  go to state 500
    make_tuple_call                   go to state 501
    make_dim_decl                     go to state 502
    make_table_decl                   go to state 503
    array_comprehension               go to state 504


State 806

  372 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    "capture"  shift, and go to state 802

    $default  reduce using rule 369 (optional_capture_list)

    optional_capture_list  go to state 1018


State 807

  488 expr: expr "is" "type" . '<' $@34 type_declaration_no_options '>' $@35

    '<'  shift, and go to state 1019


State 808

  530 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1020


State 809

  490 expr: expr "is" "name" .

    $default  reduce using rule 490 (expr)


State 810

  489 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 489 (expr)


State 811

  494 expr: expr "as" "type" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 1021


State 812

  528 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1022


State 813

  491 expr: expr "as" "name" .

    $default  reduce using rule 491 (expr)


State 814

  495 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 495 (expr)


State 815

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  444     | expr "<<" expr .
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 638
    "as"  shift, and go to state 639
    "++"  shift, and go to state 642
    "--"  shift, and go to state 643
    "->"  shift, and go to state 648
    "??"  shift, and go to state 649
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    "<|"  shift, and go to state 652
    "|>"  shift, and go to state 653
    '-'   shift, and go to state 666
    '+'   shift, and go to state 667
    '*'   shift, and go to state 668
    '/'   shift, and go to state 669
    '%'   shift, and go to state 670
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 444 (expr)


State 816

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  445     | expr ">>" expr .
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 638
    "as"  shift, and go to state 639
    "++"  shift, and go to state 642
    "--"  shift, and go to state 643
    "->"  shift, and go to state 648
    "??"  shift, and go to state 649
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    "<|"  shift, and go to state 652
    "|>"  shift, and go to state 653
    '-'   shift, and go to state 666
    '+'   shift, and go to state 667
    '*'   shift, and go to state 668
    '/'   shift, and go to state 669
    '%'   shift, and go to state 670
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 445 (expr)


State 817

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  457     | expr "<=" expr .
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 457 (expr)


State 818

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  458     | expr ">=" expr .
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 458 (expr)


State 819

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  455     | expr "==" expr .
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 455 (expr)


State 820

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  456     | expr "!=" expr .
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 456 (expr)


State 821

  402 expr_method_call: expr "->" "name" . '(' ')'
  403                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1023


State 822

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  484     | expr "??" expr .
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 638
    "as"  shift, and go to state 639
    "++"  shift, and go to state 642
    "--"  shift, and go to state 643
    "->"  shift, and go to state 648
    "??"  shift, and go to state 649
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    "<|"  shift, and go to state 652
    "|>"  shift, and go to state 653
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 484 (expr)


State 823

  525 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1024


State 824

  476 expr: expr "?." "name" .

    $default  reduce using rule 476 (expr)


State 825

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  474     | expr "?[" expr . ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ']'    shift, and go to state 1025


State 826

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  508     | expr "<|" expr .
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 648
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 508 (expr)


State 827

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  509     | expr "|>" expr .
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 648
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 509 (expr)


State 828

  428 expr_call: basic_type_declaration . '(' ')'
  429          | basic_type_declaration . '(' expr_list ')'
  510 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 674

    $default  reduce using rule 510 (expr)


State 829

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  446     | expr "<<<" expr .
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 638
    "as"  shift, and go to state 639
    "++"  shift, and go to state 642
    "--"  shift, and go to state 643
    "->"  shift, and go to state 648
    "??"  shift, and go to state 649
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    "<|"  shift, and go to state 652
    "|>"  shift, and go to state 653
    '-'   shift, and go to state 666
    '+'   shift, and go to state 667
    '*'   shift, and go to state 668
    '/'   shift, and go to state 669
    '%'   shift, and go to state 670
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 446 (expr)


State 830

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  447     | expr ">>>" expr .
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 638
    "as"  shift, and go to state 639
    "++"  shift, and go to state 642
    "--"  shift, and go to state 643
    "->"  shift, and go to state 648
    "??"  shift, and go to state 649
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    "<|"  shift, and go to state 652
    "|>"  shift, and go to state 653
    '-'   shift, and go to state 666
    '+'   shift, and go to state 667
    '*'   shift, and go to state 668
    '/'   shift, and go to state 669
    '%'   shift, and go to state 670
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 447 (expr)


State 831

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  462     | expr "&&" expr .
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 462 (expr)


State 832

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  463     | expr "||" expr .
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "^^"   shift, and go to state 658
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 463 (expr)


State 833

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  464     | expr "^^" expr .
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 464 (expr)


State 834

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  465     | expr ".." expr .
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    ".."  error (nonassociative)

    $default  reduce using rule 465 (expr)


State 835

  496 expr: expr '?' "as" . "name"
  499     | expr '?' "as" . "type" '<' $@38 type_declaration '>' $@39
  500     | expr '?' "as" . basic_type_declaration
  529 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1026
    "bool"      shift, and go to state 242
    "void"      shift, and go to state 243
    "string"    shift, and go to state 244
    "int"       shift, and go to state 246
    "int2"      shift, and go to state 247
    "int3"      shift, and go to state 248
    "int4"      shift, and go to state 249
    "uint"      shift, and go to state 250
    "bitfield"  shift, and go to state 448
    "uint2"     shift, and go to state 252
    "uint3"     shift, and go to state 253
    "uint4"     shift, and go to state 254
    "float"     shift, and go to state 255
    "float2"    shift, and go to state 256
    "float3"    shift, and go to state 257
    "float4"    shift, and go to state 258
    "range"     shift, and go to state 259
    "urange"    shift, and go to state 260
    "range64"   shift, and go to state 261
    "urange64"  shift, and go to state 262
    "int64"     shift, and go to state 264
    "uint64"    shift, and go to state 265
    "double"    shift, and go to state 266
    "int8"      shift, and go to state 269
    "uint8"     shift, and go to state 270
    "int16"     shift, and go to state 271
    "uint16"    shift, and go to state 272
    "$f"        shift, and go to state 1027
    "name"      shift, and go to state 1028

    basic_type_declaration  go to state 1029


State 836

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  485     | expr '?' expr . ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    ':'    shift, and go to state 1030
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672


State 837

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  460     | expr '|' expr .
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 460 (expr)


State 838

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  461     | expr '^' expr .
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 461 (expr)


State 839

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  459     | expr '&' expr .
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 459 (expr)


State 840

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  453     | expr '<' expr .
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 453 (expr)


State 841

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  454     | expr '>' expr .
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 454 (expr)


State 842

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  449     | expr '-' expr .
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 638
    "as"  shift, and go to state 639
    "++"  shift, and go to state 642
    "--"  shift, and go to state 643
    "->"  shift, and go to state 648
    "??"  shift, and go to state 649
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    "<|"  shift, and go to state 652
    "|>"  shift, and go to state 653
    '*'   shift, and go to state 668
    '/'   shift, and go to state 669
    '%'   shift, and go to state 670
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 449 (expr)


State 843

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  448     | expr '+' expr .
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 638
    "as"  shift, and go to state 639
    "++"  shift, and go to state 642
    "--"  shift, and go to state 643
    "->"  shift, and go to state 648
    "??"  shift, and go to state 649
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    "<|"  shift, and go to state 652
    "|>"  shift, and go to state 653
    '*'   shift, and go to state 668
    '/'   shift, and go to state 669
    '%'   shift, and go to state 670
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 448 (expr)


State 844

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  450     | expr '*' expr .
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 638
    "as"  shift, and go to state 639
    "++"  shift, and go to state 642
    "--"  shift, and go to state 643
    "->"  shift, and go to state 648
    "??"  shift, and go to state 649
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    "<|"  shift, and go to state 652
    "|>"  shift, and go to state 653
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 450 (expr)


State 845

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  451     | expr '/' expr .
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 638
    "as"  shift, and go to state 639
    "++"  shift, and go to state 642
    "--"  shift, and go to state 643
    "->"  shift, and go to state 648
    "??"  shift, and go to state 649
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    "<|"  shift, and go to state 652
    "|>"  shift, and go to state 653
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 451 (expr)


State 846

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  452     | expr '%' expr .
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 638
    "as"  shift, and go to state 639
    "++"  shift, and go to state 642
    "--"  shift, and go to state 643
    "->"  shift, and go to state 648
    "??"  shift, and go to state 649
    "?."  shift, and go to state 650
    "?["  shift, and go to state 651
    "<|"  shift, and go to state 652
    "|>"  shift, and go to state 653
    '.'   shift, and go to state 671
    '['   shift, and go to state 672

    $default  reduce using rule 452 (expr)


State 847

  477 expr: expr '.' "?." . "name"
  527 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1031
    "name"  shift, and go to state 1032


State 848

  475 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1033
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 849

  524 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1034


State 850

  413 expr_field: expr '.' "name" .
  415           | expr '.' "name" . '(' ')'
  416           | expr '.' "name" . '(' expr_list ')'
  417           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1035

    $default  reduce using rule 413 (expr_field)


State 851

  414 expr_field: expr '.' '.' . "name"
  526 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1036
    "name"  shift, and go to state 1037


State 852

  473 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1038
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 853

  422 expr_field: expr '.' $@32 . error $@33

    error  shift, and go to state 1039


State 854

  418 expr_field: expr '.' basic_type_declaration . '(' ')'
  419           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1040


State 855

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  472     | expr '[' expr . ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ']'    shift, and go to state 1041


State 856

  428 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 428 (expr_call)


State 857

  355 expr_list: expr_list . ',' expr
  429 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1042
    ')'  shift, and go to state 1043


State 858

  767 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' . $@64

    $default  reduce using rule 766 ($@64)

    $@64  go to state 1044


State 859

  757 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' . $@58

    $default  reduce using rule 756 ($@58)

    $@58  go to state 1045


State 860

  771 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 770 ($@66)

    $@66  go to state 1046


State 861

  774 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1047


State 862

  778 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' . $@70

    $default  reduce using rule 777 ($@70)

    $@70  go to state 1048


State 863

  781 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type . '>' $@72

    '>'  shift, and go to state 1049


State 864

  785 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' . $@74

    $default  reduce using rule 784 ($@74)

    $@74  go to state 1050


State 865

  788 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type . '>' $@76

    '>'  shift, and go to state 1051


State 866

  562 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 1052


State 867

  791 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' . $@78

    $default  reduce using rule 790 ($@78)

    $@78  go to state 1053


State 868

  564 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 684
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    tuple_type                          go to state 1054
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 687


State 869

  568 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 1055


State 870

  794 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' . $@80

    $default  reduce using rule 793 ($@80)

    $@80  go to state 1056


State 871

  570 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 688

    variant_type  go to state 1057


State 872

  301 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  742 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "new line, comma"      shift, and go to state 732
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 733
    '>'                    shift, and go to state 1058
    ';'                    shift, and go to state 16

    COMMA      go to state 734
    SEMICOLON  go to state 735
    c_or_s     go to state 1059


State 873

  300 type_declaration_no_options_list: type_declaration .
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387

    $default  reduce using rule 300 (type_declaration_no_options_list)


State 874

  740 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 740 (type_declaration_no_options_no_dim)


State 875

  721 bitfield_type_declaration: bitfield_basic_type_declaration '<' $@52 bitfield_bits '>' . $@53

    $default  reduce using rule 720 ($@53)

    $@53  go to state 1060


State 876

  708 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1061


State 877

  728 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 728 (dim_list)


State 878

   84 semis: SEMICOLON .

    $default  reduce using rule 84 (semis)


State 879

   85 semis: semis . SEMICOLON
   87 optional_semis: semis .
  567 tuple_alias_type_list: tuple_alias_type_list semis . tuple_type

    "type"                 shift, and go to state 236
    "array"                shift, and go to state 237
    "table"                shift, and go to state 238
    "typedecl"             shift, and go to state 239
    "iterator"             shift, and go to state 240
    "smart_ptr"            shift, and go to state 241
    "bool"                 shift, and go to state 242
    "void"                 shift, and go to state 243
    "string"               shift, and go to state 244
    "auto"                 shift, and go to state 245
    "int"                  shift, and go to state 246
    "int2"                 shift, and go to state 247
    "int3"                 shift, and go to state 248
    "int4"                 shift, and go to state 249
    "uint"                 shift, and go to state 250
    "bitfield"             shift, and go to state 251
    "uint2"                shift, and go to state 252
    "uint3"                shift, and go to state 253
    "uint4"                shift, and go to state 254
    "float"                shift, and go to state 255
    "float2"               shift, and go to state 256
    "float3"               shift, and go to state 257
    "float4"               shift, and go to state 258
    "range"                shift, and go to state 259
    "urange"               shift, and go to state 260
    "range64"              shift, and go to state 261
    "urange64"             shift, and go to state 262
    "block"                shift, and go to state 263
    "int64"                shift, and go to state 264
    "uint64"               shift, and go to state 265
    "double"               shift, and go to state 266
    "function"             shift, and go to state 267
    "lambda"               shift, and go to state 268
    "int8"                 shift, and go to state 269
    "uint8"                shift, and go to state 270
    "int16"                shift, and go to state 271
    "uint16"               shift, and go to state 272
    "tuple"                shift, and go to state 273
    "variant"              shift, and go to state 274
    "::"                   shift, and go to state 58
    "$t"                   shift, and go to state 275
    "name"                 shift, and go to state 684
    "new line, semicolon"  shift, and go to state 13
    '$'                    shift, and go to state 276
    ';'                    shift, and go to state 16

    $default  reduce using rule 87 (optional_semis)

    SEMICOLON                           go to state 1062
    name_in_namespace                   go to state 277
    tuple_type                          go to state 1063
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 687


State 880

  802 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis . $@84 '}'

    $default  reduce using rule 801 ($@84)

    $@84  go to state 1064


State 881

   85 semis: semis . SEMICOLON
   87 optional_semis: semis .
  573 variant_alias_type_list: variant_alias_type_list semis . variant_type

    "name"                 shift, and go to state 688
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 87 (optional_semis)

    SEMICOLON     go to state 1062
    variant_type  go to state 1065


State 882

  807 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis . $@88 '}'

    $default  reduce using rule 806 ($@88)

    $@88  go to state 1066


State 883

  555 function_argument_declaration_type: "$a" '(' expr ')' .

    $default  reduce using rule 555 (function_argument_declaration_type)


State 884

  664 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1067
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 885

  665 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1068


State 886

  666 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  667                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1069


State 887

  579 variable_declaration_type: variable_name_with_pos_list ':' . type_declaration
  580                          | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 1070


State 888

  577 variable_declaration_no_type: variable_name_with_pos_list '&' .

    $default  reduce using rule 577 (variable_declaration_no_type)


State 889

  578 variable_declaration_no_type: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1071
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 890

  295 expressions: expressions error .

    $default  reduce using rule 295 (expressions)


State 891

  319 expression_return: "return" .
  320                  | "return" . expr
  321                  | "return" . "<-" expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "<-"                              shift, and go to state 1072
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    $default  reduce using rule 319 (expression_return)

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1073
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 892

  317 expression_break: "break" .

    $default  reduce using rule 317 (expression_break)


State 893

  324 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1074
    $@16              go to state 406


State 894

  305 expression_delete: "delete" . expr
  306                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "explicit"                        shift, and go to state 1075
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1076
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 895

  115 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 1077


State 896

  318 expression_continue: "continue" .

    $default  reduce using rule 318 (expression_continue)


State 897

  292 expression_any: "pass" . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1078


State 898

   63 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 1079


State 899

   64 expression_goto: "goto" . "label" "integer constant"
   65                | "goto" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "label"                           shift, and go to state 1080
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1081
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 900

  110 expression_unsafe: "unsafe" . optional_emit_semis expression_block
  512 expr: "unsafe" . '(' expr ')'

    "new line, semicolon"  shift, and go to state 154
    '('                    shift, and go to state 596

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 1082


State 901

  322 expression_yield: "yield" . expr
  323                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "<-"                              shift, and go to state 1083
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1084
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 902

  274 expression_any: SEMICOLON .

    $default  reduce using rule 274 (expression_any)


State 903

  290 expression_any: expression_label . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1085


State 904

  291 expression_any: expression_goto . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1086


State 905

  100 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner SEMICOLON

    "if"  shift, and go to state 1087


State 906

  287 expression_any: expression_if_then_else .

    $default  reduce using rule 287 (expression_any)


State 907

   99 expression_if_then_else: $@9 . if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

    "if"         shift, and go to state 1088
    "static_if"  shift, and go to state 1089

    if_or_static_if  go to state 1090


State 908

  288 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 288 (expression_any)


State 909

  282 expression_any: expression_for_loop .

    $default  reduce using rule 282 (expression_any)


State 910

  109 expression_for_loop: $@10 . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "for"  shift, and go to state 1091


State 911

  279 expression_any: expression_unsafe .

    $default  reduce using rule 279 (expression_any)


State 912

  278 expression_any: expression_while_loop .

    $default  reduce using rule 278 (expression_any)


State 913

  112 expression_while_loop: $@11 . "while" '(' expr ')' optional_emit_semis expression_block

    "while"  shift, and go to state 1092


State 914

  280 expression_any: expression_with .

    $default  reduce using rule 280 (expression_any)


State 915

  114 expression_with: $@12 . "with" '(' expr ')' optional_emit_semis expression_block

    "with"  shift, and go to state 1093


State 916

  281 expression_any: expression_with_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1094


State 917

  272 expression_block: $@16 '{' expressions $@17 . '}' expression_block_finally

    '}'  shift, and go to state 1095


State 918

  294 expressions: expressions expression_any .

    $default  reduce using rule 294 (expressions)


State 919

  276 expression_any: expression_delete . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1096


State 920

   82 expression_if_one_liner: expression_break .
  283 expression_any: expression_break . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 82 (expression_if_one_liner)

    SEMICOLON  go to state 1097


State 921

   83 expression_if_one_liner: expression_continue .
  284 expression_any: expression_continue . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 83 (expression_if_one_liner)

    SEMICOLON  go to state 1098


State 922

   80 expression_if_one_liner: expression_return .
  285 expression_any: expression_return . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 80 (expression_if_one_liner)

    SEMICOLON  go to state 1099


State 923

   81 expression_if_one_liner: expression_yield .
  286 expression_any: expression_yield . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 81 (expression_if_one_liner)

    SEMICOLON  go to state 1100


State 924

  289 expression_any: expression_try_catch .

    $default  reduce using rule 289 (expression_any)


State 925

  336 expression_let: kwd_let . optional_in_scope let_variable_declaration
  337               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  338               | kwd_let . optional_in_scope '{' variable_declaration_list '}'

    "inscope"  shift, and go to state 1101

    $default  reduce using rule 331 (optional_in_scope)

    optional_in_scope  go to state 1102


State 926

  277 expression_any: expression_let .

    $default  reduce using rule 277 (expression_any)


State 927

  275 expression_any: expr_assign . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1103


State 928

   79 expression_if_one_liner: expr .
  381 expr_assign: expr .
  382            | expr . '=' expr
  383            | expr . "<-" expr
  384            | expr . ":=" expr
  385            | expr . "&=" expr
  386            | expr . "|=" expr
  387            | expr . "^=" expr
  388            | expr . "&&=" expr
  389            | expr . "||=" expr
  390            | expr . "^^=" expr
  391            | expr . "+=" expr
  392            | expr . "-=" expr
  393            | expr . "*=" expr
  394            | expr . "/=" expr
  395            | expr . "%=" expr
  396            | expr . "<<=" expr
  397            | expr . ">>=" expr
  398            | expr . "<<<=" expr
  399            | expr . ">>>=" expr
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 638
    "as"    shift, and go to state 639
    "+="    shift, and go to state 1104
    "-="    shift, and go to state 1105
    "/="    shift, and go to state 1106
    "*="    shift, and go to state 1107
    "%="    shift, and go to state 1108
    "&="    shift, and go to state 1109
    "|="    shift, and go to state 1110
    "^="    shift, and go to state 1111
    "<<"    shift, and go to state 640
    ">>"    shift, and go to state 641
    "++"    shift, and go to state 642
    "--"    shift, and go to state 643
    "<="    shift, and go to state 644
    "<<="   shift, and go to state 1112
    ">>="   shift, and go to state 1113
    ">="    shift, and go to state 645
    "=="    shift, and go to state 646
    "!="    shift, and go to state 647
    "->"    shift, and go to state 648
    "<-"    shift, and go to state 1114
    "??"    shift, and go to state 649
    "?."    shift, and go to state 650
    "?["    shift, and go to state 651
    "<|"    shift, and go to state 652
    "|>"    shift, and go to state 653
    ":="    shift, and go to state 1115
    "<<<"   shift, and go to state 654
    ">>>"   shift, and go to state 655
    "<<<="  shift, and go to state 1116
    ">>>="  shift, and go to state 1117
    "&&"    shift, and go to state 656
    "||"    shift, and go to state 657
    "^^"    shift, and go to state 658
    "&&="   shift, and go to state 1118
    "||="   shift, and go to state 1119
    "^^="   shift, and go to state 1120
    ".."    shift, and go to state 659
    '='     shift, and go to state 1121
    '?'     shift, and go to state 660
    '|'     shift, and go to state 661
    '^'     shift, and go to state 662
    '&'     shift, and go to state 663
    '<'     shift, and go to state 664
    '>'     shift, and go to state 665
    '-'     shift, and go to state 666
    '+'     shift, and go to state 667
    '*'     shift, and go to state 668
    '/'     shift, and go to state 669
    '%'     shift, and go to state 670
    '.'     shift, and go to state 671
    '['     shift, and go to state 672

    "if"      reduce using rule 79 (expression_if_one_liner)
    $default  reduce using rule 381 (expr_assign)


State 929

  616 enum_expression: "name" .
  617                | "name" . '=' expr

    '='  shift, and go to state 1122

    $default  reduce using rule 616 (enum_expression)


State 930

  621 enum_list: enum_expression .

    $default  reduce using rule 621 (enum_list)


State 931

  622 enum_list: enum_list . commas enum_expression
  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list . optional_commas $@48 '}'

    "new line, comma"  shift, and go to state 732
    ','                shift, and go to state 733

    $default  reduce using rule 635 (optional_commas)

    COMMA            go to state 941
    commas           go to state 1123
    optional_commas  go to state 1124


State 932

  546 struct_variable_declaration_list: struct_variable_declaration_list . "new line, semicolon"
  548                                 | struct_variable_declaration_list . $@40 structure_variable_declaration SEMICOLON
  550                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  552                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block
  658 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 1125
    '['                    shift, and go to state 15
    '}'                    shift, and go to state 1126

    "def"     reduce using rule 156 (optional_annotation_list_with_emit_semis)
    $default  reduce using rule 547 ($@40)

    optional_annotation_list_with_emit_semis  go to state 1127
    $@40                                      go to state 1128


State 933

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  589 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1129


State 934

  590 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 590 (let_variable_name_with_pos_list)


State 935

  591 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  592                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1130

    $default  reduce using rule 591 (let_variable_name_with_pos_list)


State 936

  598 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  599                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 376
    "implicit"             shift, and go to state 377
    "explicit"             shift, and go to state 378
    "=="                   shift, and go to state 379
    "<-"                   shift, and go to state 567
    "??"                   shift, and go to state 380
    ":="                   shift, and go to state 568
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 569
    '?'                    shift, and go to state 381
    '&'                    shift, and go to state 382
    '-'                    shift, and go to state 383
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 384

    SEMICOLON              go to state 1131
    copy_or_move_or_clone  go to state 1132


State 937

  600 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1133
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 938

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  602 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 638
    "as"                   shift, and go to state 639
    "<<"                   shift, and go to state 640
    ">>"                   shift, and go to state 641
    "++"                   shift, and go to state 642
    "--"                   shift, and go to state 643
    "<="                   shift, and go to state 644
    ">="                   shift, and go to state 645
    "=="                   shift, and go to state 646
    "!="                   shift, and go to state 647
    "->"                   shift, and go to state 648
    "??"                   shift, and go to state 649
    "?."                   shift, and go to state 650
    "?["                   shift, and go to state 651
    "<|"                   shift, and go to state 652
    "|>"                   shift, and go to state 653
    "<<<"                  shift, and go to state 654
    ">>>"                  shift, and go to state 655
    "&&"                   shift, and go to state 656
    "||"                   shift, and go to state 657
    "^^"                   shift, and go to state 658
    ".."                   shift, and go to state 659
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 660
    '|'                    shift, and go to state 661
    '^'                    shift, and go to state 662
    '&'                    shift, and go to state 663
    '<'                    shift, and go to state 664
    '>'                    shift, and go to state 665
    '-'                    shift, and go to state 666
    '+'                    shift, and go to state 667
    '*'                    shift, and go to state 668
    '/'                    shift, and go to state 669
    '%'                    shift, and go to state 670
    '.'                    shift, and go to state 671
    '['                    shift, and go to state 672
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1134


State 939

  603 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 603 (global_let_variable_declaration)


State 940

  711 bitfield_alias_bits: "name" '=' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1135
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 941

  618 commas: COMMA .

    $default  reduce using rule 618 (commas)


State 942

  619 commas: commas . COMMA
  636 optional_commas: commas .
  712 bitfield_alias_bits: bitfield_alias_bits commas . "name"
  713                    | bitfield_alias_bits commas . "name" '=' expr

    "name"             shift, and go to state 1136
    "new line, comma"  shift, and go to state 732
    ','                shift, and go to state 733

    $default  reduce using rule 636 (optional_commas)

    COMMA  go to state 1137


State 943

  812 bitfield_alias_declaration: bitfield_basic_type_declaration $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas . $@92 '}'

    $default  reduce using rule 811 ($@92)

    $@92  go to state 1138


State 944

  738 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 738 (type_declaration_no_options_no_dim)


State 945

  761 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 761 (type_declaration_no_options_no_dim)


State 946

  764 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' $@62 .

    $default  reduce using rule 764 (type_declaration_no_options_no_dim)


State 947

  725 table_type_pair: type_declaration c_or_s type_declaration .
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387

    $default  reduce using rule 725 (table_type_pair)


State 948

  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"
  839 make_struct_decl: "struct" '<' $@93 type_declaration_no_options . '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 376
    "implicit"  shift, and go to state 377
    "explicit"  shift, and go to state 378
    "=="        shift, and go to state 379
    "??"        shift, and go to state 380
    '?'         shift, and go to state 381
    '&'         shift, and go to state 382
    '>'         shift, and go to state 1139
    '-'         shift, and go to state 383
    '#'         shift, and go to state 384


State 949

  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"
  842 make_struct_decl: "class" '<' $@95 type_declaration_no_options . '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 376
    "implicit"  shift, and go to state 377
    "explicit"  shift, and go to state 378
    "=="        shift, and go to state 379
    "??"        shift, and go to state 380
    '?'         shift, and go to state 381
    '&'         shift, and go to state 382
    '>'         shift, and go to state 1140
    '-'         shift, and go to state 383
    '#'         shift, and go to state 384


State 950

  309 new_type_declaration: '<' $@18 type_declaration . '>' $@19
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387
    '>'  shift, and go to state 1141


State 951

  315 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  836 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 623
    "name"  shift, and go to state 1007

    $default  reduce using rule 836 (use_initializer)

    make_struct_fields  go to state 626
    make_struct_single  go to state 1142


State 952

  313 expr_new: "new" new_type_declaration '(' expr_list . ')'
  355 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1042
    ')'  shift, and go to state 1143


State 953

  314 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1144


State 954

  312 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1145


State 955

  352 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  353               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "new line, comma"      shift, and go to state 732
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 733
    '>'                    shift, and go to state 1146
    ';'                    shift, and go to state 16

    COMMA      go to state 734
    SEMICOLON  go to state 735
    c_or_s     go to state 1147


State 956

  351 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1148


State 957

  350 expr_type_decl: "type" '<' $@26 type_declaration . '>' $@27
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387
    '>'  shift, and go to state 1149


State 958

  858 make_dim_decl: "array" "struct" '<' $@103 . type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 1150
    type_declaration_no_options_no_dim  go to state 284


State 959

  861 make_dim_decl: "array" "tuple" '<' $@105 . tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 684
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    tuple_type                          go to state 685
    tuple_type_list                     go to state 1151
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 687


State 960

  864 make_dim_decl: "array" "variant" '<' $@107 . variant_type_list '>' $@108 '(' make_variant_dim ')'

    "name"  shift, and go to state 688

    variant_type       go to state 689
    variant_type_list  go to state 1152


State 961

  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"
  868 make_dim_decl: "array" '<' $@109 type_declaration_no_options . '>' $@110 '(' optional_expr_list ')'

    "const"     shift, and go to state 376
    "implicit"  shift, and go to state 377
    "explicit"  shift, and go to state 378
    "=="        shift, and go to state 379
    "??"        shift, and go to state 380
    '?'         shift, and go to state 381
    '&'         shift, and go to state 382
    '>'         shift, and go to state 1153
    '-'         shift, and go to state 383
    '#'         shift, and go to state 384


State 962

  865 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1154


State 963

  878 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1155


State 964

  879 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 1156
    type_declaration_no_options_no_dim  go to state 284


State 965

  849 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1157
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 966

  874 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  883 optional_comma: ',' .

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    $default  reduce using rule 883 (optional_comma)

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 750
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_map_tuple          go to state 1158
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 967

  877 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1159


State 968

  481 expr: "deref" '(' expr ')' .

    $default  reduce using rule 481 (expr)


State 969

  341 expr_cast: "cast" '<' $@20 type_declaration_no_options . '>' $@21 expr
  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 376
    "implicit"  shift, and go to state 377
    "explicit"  shift, and go to state 378
    "=="        shift, and go to state 379
    "??"        shift, and go to state 380
    '?'         shift, and go to state 381
    '&'         shift, and go to state 382
    '>'         shift, and go to state 1160
    '-'         shift, and go to state 383
    '#'         shift, and go to state 384


State 970

  344 expr_cast: "upcast" '<' $@22 type_declaration_no_options . '>' $@23 expr
  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 376
    "implicit"  shift, and go to state 377
    "explicit"  shift, and go to state 378
    "=="        shift, and go to state 379
    "??"        shift, and go to state 380
    '?'         shift, and go to state 381
    '&'         shift, and go to state 382
    '>'         shift, and go to state 1161
    '-'         shift, and go to state 383
    '#'         shift, and go to state 384


State 971

  482 expr: "addr" '(' expr ')' .

    $default  reduce using rule 482 (expr)


State 972

  347 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options . '>' $@25 expr
  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 376
    "implicit"  shift, and go to state 377
    "explicit"  shift, and go to state 378
    "=="        shift, and go to state 379
    "??"        shift, and go to state 380
    '?'         shift, and go to state 381
    '&'         shift, and go to state 382
    '>'         shift, and go to state 1162
    '-'         shift, and go to state 383
    '#'         shift, and go to state 384


State 973

  512 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 512 (expr)


State 974

  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"
  872 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options . '>' $@112 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 376
    "implicit"  shift, and go to state 377
    "explicit"  shift, and go to state 378
    "=="        shift, and go to state 379
    "??"        shift, and go to state 380
    '?'         shift, and go to state 381
    '&'         shift, and go to state 382
    '>'         shift, and go to state 1163
    '-'         shift, and go to state 383
    '#'         shift, and go to state 384


State 975

  869 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1164


State 976

  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"
  848 make_struct_decl: "default" '<' $@99 type_declaration_no_options . '>' $@100 use_initializer

    "const"     shift, and go to state 376
    "implicit"  shift, and go to state 377
    "explicit"  shift, and go to state 378
    "=="        shift, and go to state 379
    "??"        shift, and go to state 380
    '?'         shift, and go to state 381
    '&'         shift, and go to state 382
    '>'         shift, and go to state 1165
    '-'         shift, and go to state 383
    '#'         shift, and go to state 384


State 977

  564 tuple_type_list: tuple_type_list . c_or_s tuple_type
  854 make_tuple_call: "tuple" '<' $@101 tuple_type_list . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 732
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 733
    '>'                    shift, and go to state 1166
    ';'                    shift, and go to state 16

    COMMA      go to state 734
    SEMICOLON  go to state 735
    c_or_s     go to state 868


State 978

  851 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1167


State 979

  570 variant_type_list: variant_type_list . c_or_s variant_type
  845 make_struct_decl: "variant" '<' $@97 variant_type_list . '>' $@98 '(' use_initializer make_variant_dim ')'

    "new line, comma"      shift, and go to state 732
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 733
    '>'                    shift, and go to state 1168
    ';'                    shift, and go to state 16

    COMMA      go to state 734
    SEMICOLON  go to state 735
    c_or_s     go to state 871


State 980

  513 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  514               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  515               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_emit_semis expression_block

    "capture"  shift, and go to state 802

    $default  reduce using rule 369 (optional_capture_list)

    optional_capture_list  go to state 1169


State 981

  516 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 516 (expr_mtag)


State 982

  517 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 517 (expr_mtag)


State 983

  518 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 518 (expr_mtag)


State 984

  519 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 519 (expr_mtag)


State 985

  520 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 520 (expr_mtag)


State 986

  522 expr_mtag: "$c" '(' expr ')' . '(' ')'
  523          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1170


State 987

   42 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    ':'    shift, and go to state 1171
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 37 (optional_format_string)

    optional_format_string  go to state 1172


State 988

  102 for_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 1173


State 989

  101 for_variable_name_with_pos_list: "name" .
  103                                | "name" . "aka" "name"

    "aka"  shift, and go to state 1174

    $default  reduce using rule 101 (for_variable_name_with_pos_list)


State 990

  104 for_variable_name_with_pos_list: '(' . tuple_expansion ')'

    "name"  shift, and go to state 1175

    tuple_expansion  go to state 1176


State 991

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  106                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  884 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1177
    ','   shift, and go to state 1178


State 992

  885 array_comprehension: '[' "iterator" "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 988
    "name"  shift, and go to state 989
    '('     shift, and go to state 990

    for_variable_name_with_pos_list  go to state 1179


State 993

  355 expr_list: expr_list ',' expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 355 (expr_list)


State 994

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  822 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  823                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1180


State 995

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  819 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 819 (make_struct_fields)


State 996

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  818 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 818 (make_struct_fields)


State 997

  470 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 470 (expr)


State 998

  824 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  825                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1181


State 999

  820 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  821                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 781
    ":="  shift, and go to state 1182
    '='   shift, and go to state 783

    copy_or_move  go to state 1183


State 1000

  405 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1184
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1001

  531 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1185
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1002

  409 func_addr_expr: '@' '@' '<' $@28 . type_declaration_no_options '>' $@29 func_addr_name

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 1186
    type_declaration_no_options_no_dim  go to state 284


State 1003

  412 func_addr_expr: '@' '@' '<' $@30 . optional_function_argument_list optional_function_type '>' $@31 func_addr_name

    '('  shift, and go to state 342

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 1187


State 1004

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  106                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  886 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1188
    ','   shift, and go to state 1178


State 1005

  876 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list . '}'

    '}'  shift, and go to state 1189


State 1006

  299 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  874 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 966

    $default  reduce using rule 882 (optional_comma)

    optional_comma  go to state 1190


State 1007

  818 make_struct_fields: "name" . copy_or_move expr
  819                   | "name" . ":=" expr

    "<-"  shift, and go to state 781
    ":="  shift, and go to state 782
    '='   shift, and go to state 783

    copy_or_move  go to state 784


State 1008

  424 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 424 (expr_call)


State 1009

  426 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1191


State 1010

  400 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  820 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  821                   | make_struct_fields . ',' "name" ":=" expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  825                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1192
    ']'  shift, and go to state 1193


State 1011

  355 expr_list: expr_list ',' . expr
  401 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 1194
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 993
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1012

  427 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 427 (expr_call)


State 1013

  425 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 425 (expr_call)


State 1014

  155 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 155 (optional_annotation_list)


State 1015

  370 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1195
    ":="    shift, and go to state 1196
    "name"  shift, and go to state 1197
    '='     shift, and go to state 1198
    '&'     shift, and go to state 1199

    capture_entry  go to state 1200
    capture_list   go to state 1201


State 1016

  371 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis block_or_simple_block

    ':'  shift, and go to state 403

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 1202


State 1017

  373 expr_full_block_assumed_piped: '{' expressions '}' .

    $default  reduce using rule 373 (expr_full_block_assumed_piped)


State 1018

  372 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '('  shift, and go to state 342

    $default  reduce using rule 158 (optional_function_argument_list)

    optional_function_argument_list  go to state 1203


State 1019

  488 expr: expr "is" "type" '<' . $@34 type_declaration_no_options '>' $@35

    $default  reduce using rule 486 ($@34)

    $@34  go to state 1204


State 1020

  530 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1205
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1021

  494 expr: expr "as" "type" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 492 ($@36)

    $@36  go to state 1206


State 1022

  528 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1207
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1023

  402 expr_method_call: expr "->" "name" '(' . ')'
  403                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    ')'                               shift, and go to state 1208
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 1209
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1024

  525 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1210
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1025

  474 expr: expr "?[" expr ']' .

    $default  reduce using rule 474 (expr)


State 1026

  499 expr: expr '?' "as" "type" . '<' $@38 type_declaration '>' $@39

    '<'  shift, and go to state 1211


State 1027

  529 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1212


State 1028

  496 expr: expr '?' "as" "name" .

    $default  reduce using rule 496 (expr)


State 1029

  500 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 500 (expr)


State 1030

  485 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1213
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1031

  527 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1214


State 1032

  477 expr: expr '.' "?." "name" .

    $default  reduce using rule 477 (expr)


State 1033

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  475     | expr '.' "?[" expr . ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ']'    shift, and go to state 1215


State 1034

  524 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1216
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1035

  415 expr_field: expr '.' "name" '(' . ')'
  416           | expr '.' "name" '(' . expr_list ')'
  417           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 1217
    '('                               shift, and go to state 475
    ')'                               shift, and go to state 1218
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 1219
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1036

  526 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1220


State 1037

  414 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 414 (expr_field)


State 1038

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  473     | expr '.' '[' expr . ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ']'    shift, and go to state 1221


State 1039

  422 expr_field: expr '.' $@32 error . $@33

    $default  reduce using rule 421 ($@33)

    $@33  go to state 1222


State 1040

  418 expr_field: expr '.' basic_type_declaration '(' . ')'
  419           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    ')'                               shift, and go to state 1223
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 1224
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1041

  472 expr: expr '[' expr ']' .

    $default  reduce using rule 472 (expr)


State 1042

  355 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 993
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1043

  429 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 429 (expr_call)


State 1044

  767 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' $@64 .

    $default  reduce using rule 767 (type_declaration_no_options_no_dim)


State 1045

  757 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' $@58 .

    $default  reduce using rule 757 (type_declaration_no_options_no_dim)


State 1046

  771 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 771 (type_declaration_no_options_no_dim)


State 1047

  774 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 773 ($@68)

    $@68  go to state 1225


State 1048

  778 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' $@70 .

    $default  reduce using rule 778 (type_declaration_no_options_no_dim)


State 1049

  781 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' . $@72

    $default  reduce using rule 780 ($@72)

    $@72  go to state 1226


State 1050

  785 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' $@74 .

    $default  reduce using rule 785 (type_declaration_no_options_no_dim)


State 1051

  788 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' . $@76

    $default  reduce using rule 787 ($@76)

    $@76  go to state 1227


State 1052

  562 tuple_type: "name" ':' type_declaration .
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387

    $default  reduce using rule 562 (tuple_type)


State 1053

  791 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' $@78 .

    $default  reduce using rule 791 (type_declaration_no_options_no_dim)


State 1054

  564 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 564 (tuple_type_list)


State 1055

  568 variant_type: "name" ':' type_declaration .
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387

    $default  reduce using rule 568 (variant_type)


State 1056

  794 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' $@80 .

    $default  reduce using rule 794 (type_declaration_no_options_no_dim)


State 1057

  570 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 570 (variant_type_list)


State 1058

  742 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1228


State 1059

  301 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 1229


State 1060

  721 bitfield_type_declaration: bitfield_basic_type_declaration '<' $@52 bitfield_bits '>' $@53 .

    $default  reduce using rule 721 (bitfield_type_declaration)


State 1061

  708 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 708 (bitfield_bits)


State 1062

   85 semis: semis SEMICOLON .

    $default  reduce using rule 85 (semis)


State 1063

  567 tuple_alias_type_list: tuple_alias_type_list semis tuple_type .

    $default  reduce using rule 567 (tuple_alias_type_list)


State 1064

  802 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 . '}'

    '}'  shift, and go to state 1230


State 1065

  573 variant_alias_type_list: variant_alias_type_list semis variant_type .

    $default  reduce using rule 573 (variant_alias_type_list)


State 1066

  807 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 . '}'

    '}'  shift, and go to state 1231


State 1067

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  664 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1232


State 1068

  665 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 665 (variable_name_with_pos_list)


State 1069

  666 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  667                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1233

    $default  reduce using rule 666 (variable_name_with_pos_list)


State 1070

  579 variable_declaration_type: variable_name_with_pos_list ':' type_declaration .
  580                          | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 781
    '='   shift, and go to state 783
    '|'   shift, and go to state 387

    $default  reduce using rule 579 (variable_declaration_type)

    copy_or_move  go to state 1234


State 1071

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  578 variable_declaration_no_type: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 578 (variable_declaration_no_type)


State 1072

  321 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1235
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1073

  320 expression_return: "return" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 320 (expression_return)


State 1074

  324 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1236


State 1075

  306 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1237
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1076

  305 expression_delete: "delete" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 305 (expression_delete)


State 1077

  115 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1238


State 1078

  292 expression_any: "pass" SEMICOLON .

    $default  reduce using rule 292 (expression_any)


State 1079

   63 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1239


State 1080

   64 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1240


State 1081

   65 expression_goto: "goto" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 65 (expression_goto)


State 1082

  110 expression_unsafe: "unsafe" optional_emit_semis . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1241
    $@16              go to state 406


State 1083

  323 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1242
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1084

  322 expression_yield: "yield" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 322 (expression_yield)


State 1085

  290 expression_any: expression_label SEMICOLON .

    $default  reduce using rule 290 (expression_any)


State 1086

  291 expression_any: expression_goto SEMICOLON .

    $default  reduce using rule 291 (expression_any)


State 1087

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner SEMICOLON

    '('  shift, and go to state 1243


State 1088

   75 if_or_static_if: "if" .

    $default  reduce using rule 75 (if_or_static_if)


State 1089

   76 if_or_static_if: "static_if" .

    $default  reduce using rule 76 (if_or_static_if)


State 1090

   99 expression_if_then_else: $@9 if_or_static_if . '(' expr ')' optional_emit_semis expression_if_block expression_else

    '('  shift, and go to state 1244


State 1091

  109 expression_for_loop: $@10 "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    '('  shift, and go to state 1245


State 1092

  112 expression_while_loop: $@11 "while" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1246


State 1093

  114 expression_with: $@12 "with" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1247


State 1094

  281 expression_any: expression_with_alias SEMICOLON .

    $default  reduce using rule 281 (expression_any)


State 1095

  272 expression_block: $@16 '{' expressions $@17 '}' . expression_block_finally

    "finally"  shift, and go to state 1248

    $default  reduce using rule 266 (expression_block_finally)

    expression_block_finally  go to state 1249


State 1096

  276 expression_any: expression_delete SEMICOLON .

    $default  reduce using rule 276 (expression_any)


State 1097

  283 expression_any: expression_break SEMICOLON .

    $default  reduce using rule 283 (expression_any)


State 1098

  284 expression_any: expression_continue SEMICOLON .

    $default  reduce using rule 284 (expression_any)


State 1099

  285 expression_any: expression_return SEMICOLON .

    $default  reduce using rule 285 (expression_any)


State 1100

  286 expression_any: expression_yield SEMICOLON .

    $default  reduce using rule 286 (expression_any)


State 1101

  330 optional_in_scope: "inscope" .

    $default  reduce using rule 330 (optional_in_scope)


State 1102

  336 expression_let: kwd_let optional_in_scope . let_variable_declaration
  337               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  338               | kwd_let optional_in_scope . '{' variable_declaration_list '}'

    "$i"    shift, and go to state 560
    "name"  shift, and go to state 561
    '('     shift, and go to state 1250
    '{'     shift, and go to state 1251

    tuple_expansion_variable_declaration  go to state 1252
    let_variable_name_with_pos_list       go to state 562
    let_variable_declaration              go to state 1253


State 1103

  275 expression_any: expr_assign SEMICOLON .

    $default  reduce using rule 275 (expression_any)


State 1104

  391 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1254
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1105

  392 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1255
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1106

  394 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1256
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1107

  393 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1257
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1108

  395 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1258
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1109

  385 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1259
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1110

  386 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1260
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1111

  387 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1261
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1112

  396 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1262
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1113

  397 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1263
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1114

  383 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1264
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1115

  384 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1265
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1116

  398 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1266
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1117

  399 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1267
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1118

  388 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1268
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1119

  389 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1269
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1120

  390 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1270
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1121

  382 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1271
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1122

  617 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1272
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1123

  619 commas: commas . COMMA
  622 enum_list: enum_list commas . enum_expression
  636 optional_commas: commas .

    "name"             shift, and go to state 929
    "new line, comma"  shift, and go to state 732
    ','                shift, and go to state 733

    $default  reduce using rule 636 (optional_commas)

    COMMA            go to state 1137
    enum_expression  go to state 1273


State 1124

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas . $@48 '}'

    $default  reduce using rule 643 ($@48)

    $@48  go to state 1274


State 1125

  546 struct_variable_declaration_list: struct_variable_declaration_list "new line, semicolon" .

    $default  reduce using rule 546 (struct_variable_declaration_list)


State 1126

  658 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 658 (optional_struct_variable_declaration_list)


State 1127

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  552                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "def"  shift, and go to state 1275


State 1128

  548 struct_variable_declaration_list: struct_variable_declaration_list $@40 . structure_variable_declaration SEMICOLON

    '@'  shift, and go to state 225

    $default  reduce using rule 532 (optional_field_annotation)

    metadata_argument_list          go to state 226
    optional_field_annotation       go to state 1276
    structure_variable_declaration  go to state 1277


State 1129

  589 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 589 (let_variable_name_with_pos_list)


State 1130

  592 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1278


State 1131

  598 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 598 (let_variable_declaration)


State 1132

  599 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1279
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1133

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  600 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 638
    "as"                   shift, and go to state 639
    "<<"                   shift, and go to state 640
    ">>"                   shift, and go to state 641
    "++"                   shift, and go to state 642
    "--"                   shift, and go to state 643
    "<="                   shift, and go to state 644
    ">="                   shift, and go to state 645
    "=="                   shift, and go to state 646
    "!="                   shift, and go to state 647
    "->"                   shift, and go to state 648
    "??"                   shift, and go to state 649
    "?."                   shift, and go to state 650
    "?["                   shift, and go to state 651
    "<|"                   shift, and go to state 652
    "|>"                   shift, and go to state 653
    "<<<"                  shift, and go to state 654
    ">>>"                  shift, and go to state 655
    "&&"                   shift, and go to state 656
    "||"                   shift, and go to state 657
    "^^"                   shift, and go to state 658
    ".."                   shift, and go to state 659
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 660
    '|'                    shift, and go to state 661
    '^'                    shift, and go to state 662
    '&'                    shift, and go to state 663
    '<'                    shift, and go to state 664
    '>'                    shift, and go to state 665
    '-'                    shift, and go to state 666
    '+'                    shift, and go to state 667
    '*'                    shift, and go to state 668
    '/'                    shift, and go to state 669
    '%'                    shift, and go to state 670
    '.'                    shift, and go to state 671
    '['                    shift, and go to state 672
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1280


State 1134

  602 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 602 (global_let_variable_declaration)


State 1135

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  711 bitfield_alias_bits: "name" '=' expr .

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 711 (bitfield_alias_bits)


State 1136

  712 bitfield_alias_bits: bitfield_alias_bits commas "name" .
  713                    | bitfield_alias_bits commas "name" . '=' expr

    '='  shift, and go to state 1281

    $default  reduce using rule 712 (bitfield_alias_bits)


State 1137

  619 commas: commas COMMA .

    $default  reduce using rule 619 (commas)


State 1138

  812 bitfield_alias_declaration: bitfield_basic_type_declaration $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 . '}'

    '}'  shift, and go to state 1282


State 1139

  839 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' . $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 838 ($@94)

    $@94  go to state 1283


State 1140

  842 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' . $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 841 ($@96)

    $@96  go to state 1284


State 1141

  309 new_type_declaration: '<' $@18 type_declaration '>' . $@19

    $default  reduce using rule 308 ($@19)

    $@19  go to state 1285


State 1142

  315 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1286


State 1143

  313 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 313 (expr_new)


State 1144

  314 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 314 (expr_new)


State 1145

  312 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 312 (expr_new)


State 1146

  352 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1287


State 1147

  353 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1288


State 1148

  351 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 351 (expr_type_info)


State 1149

  350 expr_type_decl: "type" '<' $@26 type_declaration '>' . $@27

    $default  reduce using rule 349 ($@27)

    $@27  go to state 1289


State 1150

  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"
  858 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options . '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 376
    "implicit"  shift, and go to state 377
    "explicit"  shift, and go to state 378
    "=="        shift, and go to state 379
    "??"        shift, and go to state 380
    '?'         shift, and go to state 381
    '&'         shift, and go to state 382
    '>'         shift, and go to state 1290
    '-'         shift, and go to state 383
    '#'         shift, and go to state 384


State 1151

  564 tuple_type_list: tuple_type_list . c_or_s tuple_type
  861 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list . '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 732
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 733
    '>'                    shift, and go to state 1291
    ';'                    shift, and go to state 16

    COMMA      go to state 734
    SEMICOLON  go to state 735
    c_or_s     go to state 868


State 1152

  570 variant_type_list: variant_type_list . c_or_s variant_type
  864 make_dim_decl: "array" "variant" '<' $@107 variant_type_list . '>' $@108 '(' make_variant_dim ')'

    "new line, comma"      shift, and go to state 732
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 733
    '>'                    shift, and go to state 1292
    ';'                    shift, and go to state 16

    COMMA      go to state 734
    SEMICOLON  go to state 735
    c_or_s     go to state 871


State 1153

  868 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' . $@110 '(' optional_expr_list ')'

    $default  reduce using rule 867 ($@110)

    $@110  go to state 1293


State 1154

  865 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 865 (make_dim_decl)


State 1155

  878 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    $default  reduce using rule 298 (optional_expr_map_tuple_list)

    string_builder                go to state 479
    expr_reader                   go to state 480
    expr_call_pipe                go to state 481
    optional_expr_map_tuple_list  go to state 1294
    name_in_namespace             go to state 482
    expr_new                      go to state 483
    expr_cast                     go to state 484
    expr_type_decl                go to state 485
    expr_type_info                go to state 486
    block_or_lambda               go to state 487
    expr_full_block               go to state 488
    expr_numeric_const            go to state 489
    expr_named_call               go to state 490
    expr_method_call              go to state 491
    func_addr_expr                go to state 492
    expr_field                    go to state 493
    expr_call                     go to state 494
    expr                          go to state 750
    expr_generator                go to state 496
    expr_mtag                     go to state 497
    basic_type_declaration        go to state 498
    make_decl                     go to state 499
    make_struct_decl              go to state 500
    make_map_tuple                go to state 751
    make_tuple_call               go to state 501
    make_dim_decl                 go to state 502
    expr_map_tuple_list           go to state 1006
    make_table_decl               go to state 503
    array_comprehension           go to state 504


State 1156

  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"
  879 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 376
    "implicit"  shift, and go to state 377
    "explicit"  shift, and go to state 378
    "=="        shift, and go to state 379
    "??"        shift, and go to state 380
    '?'         shift, and go to state 381
    '&'         shift, and go to state 382
    '>'         shift, and go to state 1295
    '-'         shift, and go to state 383
    '#'         shift, and go to state 384


State 1157

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  849 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 849 (make_map_tuple)


State 1158

  874 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 874 (expr_map_tuple_list)


State 1159

  877 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 877 (make_table_decl)


State 1160

  341 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' . $@21 expr

    $default  reduce using rule 340 ($@21)

    $@21  go to state 1296


State 1161

  344 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' . $@23 expr

    $default  reduce using rule 343 ($@23)

    $@23  go to state 1297


State 1162

  347 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' . $@25 expr

    $default  reduce using rule 346 ($@25)

    $@25  go to state 1298


State 1163

  872 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' . $@112 '(' expr_list optional_comma ')'

    $default  reduce using rule 871 ($@112)

    $@112  go to state 1299


State 1164

  869 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 869 (make_dim_decl)


State 1165

  848 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' . $@100 use_initializer

    $default  reduce using rule 847 ($@100)

    $@100  go to state 1300


State 1166

  854 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 853 ($@102)

    $@102  go to state 1301


State 1167

  851 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 851 (make_tuple_call)


State 1168

  845 make_struct_decl: "variant" '<' $@97 variant_type_list '>' . $@98 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 844 ($@98)

    $@98  go to state 1302


State 1169

  513 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  514               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  515               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 154
    '('                    shift, and go to state 1303

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 1304


State 1170

  522 expr_mtag: "$c" '(' expr ')' '(' . ')'
  523          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    ')'                               shift, and go to state 1305
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 1306
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1171

   39 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 38 ($@1)

    $@1  go to state 1307


State 1172

   42 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1308


State 1173

  102 for_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1309
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1174

  103 for_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1310


State 1175

  332 tuple_expansion: "name" .

    $default  reduce using rule 332 (tuple_expansion)


State 1176

  104 for_variable_name_with_pos_list: '(' tuple_expansion . ')'
  333 tuple_expansion: tuple_expansion . ',' "name"

    ','  shift, and go to state 1311
    ')'  shift, and go to state 1312


State 1177

  884 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 1313
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1178

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' . "name"
  106                                | for_variable_name_with_pos_list ',' . "name" "aka" "name"
  107                                | for_variable_name_with_pos_list ',' . '(' tuple_expansion ')'

    "name"  shift, and go to state 1314
    '('     shift, and go to state 1315


State 1179

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  106                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  885 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1316
    ','   shift, and go to state 1178


State 1180

  822 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  823                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 781
    ":="  shift, and go to state 1317
    '='   shift, and go to state 783

    copy_or_move  go to state 1318


State 1181

  824 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  825                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1319
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1182

  821 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1320
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1183

  820 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1321
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1184

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  405 func_addr_name: "$i" '(' expr . ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1322


State 1185

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  531          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1323


State 1186

  409 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options . '>' $@29 func_addr_name
  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 376
    "implicit"  shift, and go to state 377
    "explicit"  shift, and go to state 378
    "=="        shift, and go to state 379
    "??"        shift, and go to state 380
    '?'         shift, and go to state 381
    '&'         shift, and go to state 382
    '>'         shift, and go to state 1324
    '-'         shift, and go to state 383
    '#'         shift, and go to state 384


State 1187

  412 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list . optional_function_type '>' $@31 func_addr_name

    ':'  shift, and go to state 403

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 1325


State 1188

  886 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 1326
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1189

  876 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}' .

    $default  reduce using rule 876 (make_table_decl)


State 1190

  299 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 299 (optional_expr_map_tuple_list)


State 1191

  426 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 426 (expr_call)


State 1192

  820 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  821                   | make_struct_fields ',' . "name" ":=" expr
  824                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  825                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 998
    "name"  shift, and go to state 999


State 1193

  400 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1327


State 1194

  401 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  855 make_dim_decl: '[' . optional_expr_list ']'
  884 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  885                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "for"                             shift, and go to state 618
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "iterator"                        shift, and go to state 619
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "$f"                              shift, and go to state 623
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 624
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    $default  reduce using rule 296 (optional_expr_list)

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    optional_expr_list      go to state 620
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 621
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_fields      go to state 1328
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1195

  364 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1329


State 1196

  365 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1330


State 1197

  366 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1331


State 1198

  363 capture_entry: '=' . "name"

    "name"  shift, and go to state 1332


State 1199

  362 capture_entry: '&' . "name"

    "name"  shift, and go to state 1333


State 1200

  367 capture_list: capture_entry .

    $default  reduce using rule 367 (capture_list)


State 1201

  368 capture_list: capture_list . ',' capture_entry
  370 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1334
    ')'  shift, and go to state 1335


State 1202

  371 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis block_or_simple_block

    "new line, semicolon"  shift, and go to state 154

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 1336


State 1203

  372 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis expression_block

    ':'  shift, and go to state 403

    $default  reduce using rule 161 (optional_function_type)

    optional_function_type  go to state 1337


State 1204

  488 expr: expr "is" "type" '<' $@34 . type_declaration_no_options '>' $@35

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 1338
    type_declaration_no_options_no_dim  go to state 284


State 1205

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  530          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1339


State 1206

  494 expr: expr "as" "type" '<' $@36 . type_declaration '>' $@37

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 1340


State 1207

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  528          | expr "as" "$f" '(' expr . ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1341


State 1208

  402 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 402 (expr_method_call)


State 1209

  355 expr_list: expr_list . ',' expr
  403 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1042
    ')'  shift, and go to state 1342


State 1210

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  525          | expr "?." "$f" '(' expr . ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1343


State 1211

  499 expr: expr '?' "as" "type" '<' . $@38 type_declaration '>' $@39

    $default  reduce using rule 497 ($@38)

    $@38  go to state 1344


State 1212

  529 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1345
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1213

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  485     | expr '?' expr ':' expr .
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 485 (expr)


State 1214

  527 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1346
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1215

  475 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 475 (expr)


State 1216

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  524          | expr '.' "$f" '(' expr . ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1347


State 1217

  417 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  855 make_dim_decl: '[' . optional_expr_list ']'
  884 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  885                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "for"                             shift, and go to state 618
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "iterator"                        shift, and go to state 619
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "$f"                              shift, and go to state 623
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 624
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    $default  reduce using rule 296 (optional_expr_list)

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    optional_expr_list      go to state 620
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 621
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_fields      go to state 1348
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1218

  415 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 415 (expr_field)


State 1219

  355 expr_list: expr_list . ',' expr
  416 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1042
    ')'  shift, and go to state 1349


State 1220

  526 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1350
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1221

  473 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 473 (expr)


State 1222

  422 expr_field: expr '.' $@32 error $@33 .

    $default  reduce using rule 422 (expr_field)


State 1223

  418 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 418 (expr_field)


State 1224

  355 expr_list: expr_list . ',' expr
  419 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1042
    ')'  shift, and go to state 1351


State 1225

  774 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 774 (type_declaration_no_options_no_dim)


State 1226

  781 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' $@72 .

    $default  reduce using rule 781 (type_declaration_no_options_no_dim)


State 1227

  788 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' $@76 .

    $default  reduce using rule 788 (type_declaration_no_options_no_dim)


State 1228

  742 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    $default  reduce using rule 296 (optional_expr_list)

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    optional_expr_list      go to state 1352
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 621
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1229

  301 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387

    $default  reduce using rule 301 (type_declaration_no_options_list)


State 1230

  802 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}' .

    $default  reduce using rule 802 (tuple_alias_declaration)


State 1231

  807 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}' .

    $default  reduce using rule 807 (variant_alias_declaration)


State 1232

  664 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 664 (variable_name_with_pos_list)


State 1233

  667 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1353


State 1234

  580 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1354
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1235

  321 expression_return: "return" "<-" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 321 (expression_return)


State 1236

  324 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1355
    $@16              go to state 406


State 1237

  306 expression_delete: "delete" "explicit" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 306 (expression_delete)


State 1238

  115 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1356
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1239

   63 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 63 (expression_label)


State 1240

   64 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 64 (expression_goto)


State 1241

  110 expression_unsafe: "unsafe" optional_emit_semis expression_block .

    $default  reduce using rule 110 (expression_unsafe)


State 1242

  323 expression_yield: "yield" "<-" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 323 (expression_yield)


State 1243

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner SEMICOLON

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1357
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1244

   99 expression_if_then_else: $@9 if_or_static_if '(' . expr ')' optional_emit_semis expression_if_block expression_else

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1358
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1245

  109 expression_for_loop: $@10 "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "$i"    shift, and go to state 988
    "name"  shift, and go to state 989
    '('     shift, and go to state 990

    for_variable_name_with_pos_list  go to state 1359


State 1246

  112 expression_while_loop: $@11 "while" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1360
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1247

  114 expression_with: $@12 "with" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1361
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1248

  269 expression_block_finally: "finally" . $@14 '{' expressions $@15 '}'

    $default  reduce using rule 267 ($@14)

    $@14  go to state 1362


State 1249

  272 expression_block: $@16 '{' expressions $@17 '}' expression_block_finally .

    $default  reduce using rule 272 (expression_block)


State 1250

  334 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  335                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    "name"  shift, and go to state 1175

    tuple_expansion  go to state 1363


State 1251

  338 expression_let: kwd_let optional_in_scope '{' . variable_declaration_list '}'

    $default  reduce using rule 595 (variable_declaration_list)

    variable_declaration_list  go to state 1364


State 1252

  337 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 337 (expression_let)


State 1253

  336 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 336 (expression_let)


State 1254

  391 expr_assign: expr "+=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 391 (expr_assign)


State 1255

  392 expr_assign: expr "-=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 392 (expr_assign)


State 1256

  394 expr_assign: expr "/=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 394 (expr_assign)


State 1257

  393 expr_assign: expr "*=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 393 (expr_assign)


State 1258

  395 expr_assign: expr "%=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 395 (expr_assign)


State 1259

  385 expr_assign: expr "&=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 385 (expr_assign)


State 1260

  386 expr_assign: expr "|=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 386 (expr_assign)


State 1261

  387 expr_assign: expr "^=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 387 (expr_assign)


State 1262

  396 expr_assign: expr "<<=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 396 (expr_assign)


State 1263

  397 expr_assign: expr ">>=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 397 (expr_assign)


State 1264

  383 expr_assign: expr "<-" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 383 (expr_assign)


State 1265

  384 expr_assign: expr ":=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 384 (expr_assign)


State 1266

  398 expr_assign: expr "<<<=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 398 (expr_assign)


State 1267

  399 expr_assign: expr ">>>=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 399 (expr_assign)


State 1268

  388 expr_assign: expr "&&=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 388 (expr_assign)


State 1269

  389 expr_assign: expr "||=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 389 (expr_assign)


State 1270

  390 expr_assign: expr "^^=" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 390 (expr_assign)


State 1271

  382 expr_assign: expr '=' expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 382 (expr_assign)


State 1272

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  617 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 617 (enum_expression)


State 1273

  622 enum_list: enum_list commas enum_expression .

    $default  reduce using rule 622 (enum_list)


State 1274

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 . '}'

    '}'  shift, and go to state 1365


State 1275

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  552                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "public"   shift, and go to state 1366
    "private"  shift, and go to state 1367

    $default  reduce using rule 539 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1368


State 1276

  544 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1369

    $default  reduce using rule 542 (optional_static_member_variable)

    optional_static_member_variable  go to state 1370


State 1277

  548 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1371


State 1278

  592 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 592 (let_variable_name_with_pos_list)


State 1279

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  599 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 638
    "as"                   shift, and go to state 639
    "<<"                   shift, and go to state 640
    ">>"                   shift, and go to state 641
    "++"                   shift, and go to state 642
    "--"                   shift, and go to state 643
    "<="                   shift, and go to state 644
    ">="                   shift, and go to state 645
    "=="                   shift, and go to state 646
    "!="                   shift, and go to state 647
    "->"                   shift, and go to state 648
    "??"                   shift, and go to state 649
    "?."                   shift, and go to state 650
    "?["                   shift, and go to state 651
    "<|"                   shift, and go to state 652
    "|>"                   shift, and go to state 653
    "<<<"                  shift, and go to state 654
    ">>>"                  shift, and go to state 655
    "&&"                   shift, and go to state 656
    "||"                   shift, and go to state 657
    "^^"                   shift, and go to state 658
    ".."                   shift, and go to state 659
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 660
    '|'                    shift, and go to state 661
    '^'                    shift, and go to state 662
    '&'                    shift, and go to state 663
    '<'                    shift, and go to state 664
    '>'                    shift, and go to state 665
    '-'                    shift, and go to state 666
    '+'                    shift, and go to state 667
    '*'                    shift, and go to state 668
    '/'                    shift, and go to state 669
    '%'                    shift, and go to state 670
    '.'                    shift, and go to state 671
    '['                    shift, and go to state 672
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1372


State 1280

  600 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 600 (let_variable_declaration)


State 1281

  713 bitfield_alias_bits: bitfield_alias_bits commas "name" '=' . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1373
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1282

  812 bitfield_alias_declaration: bitfield_basic_type_declaration $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}' .

    $default  reduce using rule 812 (bitfield_alias_declaration)


State 1283

  839 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1374


State 1284

  842 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1375


State 1285

  309 new_type_declaration: '<' $@18 type_declaration '>' $@19 .

    $default  reduce using rule 309 (new_type_declaration)


State 1286

  315 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 315 (expr_new)


State 1287

  352 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1376
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1288

  353 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1377


State 1289

  350 expr_type_decl: "type" '<' $@26 type_declaration '>' $@27 .

    $default  reduce using rule 350 (expr_type_decl)


State 1290

  858 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' . $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 857 ($@104)

    $@104  go to state 1378


State 1291

  861 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' . $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 860 ($@106)

    $@106  go to state 1379


State 1292

  864 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' . $@108 '(' make_variant_dim ')'

    $default  reduce using rule 863 ($@108)

    $@108  go to state 1380


State 1293

  868 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 . '(' optional_expr_list ')'

    '('  shift, and go to state 1381


State 1294

  878 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1382


State 1295

  879 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1383


State 1296

  341 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1384
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1297

  344 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1385
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1298

  347 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1386
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1299

  872 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1387


State 1300

  848 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 . use_initializer

    "uninitialized"  shift, and go to state 1388

    $default  reduce using rule 835 (use_initializer)

    use_initializer  go to state 1389


State 1301

  854 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1390


State 1302

  845 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1391


State 1303

  513 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  514               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    ')'                               shift, and go to state 1392
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1393
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1304

  515 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1394
    $@16              go to state 406


State 1305

  522 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 522 (expr_mtag)


State 1306

  355 expr_list: expr_list . ',' expr
  523 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1042
    ')'  shift, and go to state 1395


State 1307

   39 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 35 (format_string)

    format_string  go to state 1396


State 1308

   42 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 42 (string_builder_body)


State 1309

  102 for_variable_name_with_pos_list: "$i" '(' expr . ')'
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1397


State 1310

  103 for_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 103 (for_variable_name_with_pos_list)


State 1311

  333 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1398


State 1312

  104 for_variable_name_with_pos_list: '(' tuple_expansion ')' .

    $default  reduce using rule 104 (for_variable_name_with_pos_list)


State 1313

  355 expr_list: expr_list . ',' expr
  884 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1042
    ')'  shift, and go to state 1399


State 1314

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" .
  106                                | for_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1400

    $default  reduce using rule 105 (for_variable_name_with_pos_list)


State 1315

  107 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' . tuple_expansion ')'

    "name"  shift, and go to state 1175

    tuple_expansion  go to state 1401


State 1316

  885 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 1402
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1317

  823 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1403
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1318

  822 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1404
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1319

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  824 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  825                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1405


State 1320

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  821 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 821 (make_struct_fields)


State 1321

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  820 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 820 (make_struct_fields)


State 1322

  405 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 405 (func_addr_name)


State 1323

  531 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 531 (expr_mtag)


State 1324

  409 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' . $@29 func_addr_name

    $default  reduce using rule 408 ($@29)

    $@29  go to state 1406


State 1325

  412 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type . '>' $@31 func_addr_name

    '>'  shift, and go to state 1407


State 1326

  355 expr_list: expr_list . ',' expr
  886 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 1042
    ')'  shift, and go to state 1408


State 1327

  400 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 400 (expr_named_call)


State 1328

  401 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  820 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  821                   | make_struct_fields . ',' "name" ":=" expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  825                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1192
    ']'  shift, and go to state 1409


State 1329

  364 capture_entry: "<-" "name" .

    $default  reduce using rule 364 (capture_entry)


State 1330

  365 capture_entry: ":=" "name" .

    $default  reduce using rule 365 (capture_entry)


State 1331

  366 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1410


State 1332

  363 capture_entry: '=' "name" .

    $default  reduce using rule 363 (capture_entry)


State 1333

  362 capture_entry: '&' "name" .

    $default  reduce using rule 362 (capture_entry)


State 1334

  368 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1195
    ":="    shift, and go to state 1196
    "name"  shift, and go to state 1197
    '='     shift, and go to state 1198
    '&'     shift, and go to state 1199

    capture_entry  go to state 1411


State 1335

  370 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 370 (optional_capture_list)


State 1336

  371 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . block_or_simple_block

    "=>"  shift, and go to state 1412

    $default  reduce using rule 270 ($@16)

    expression_block       go to state 1413
    $@16                   go to state 406
    block_or_simple_block  go to state 1414


State 1337

  372 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 154

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 1415


State 1338

  488 expr: expr "is" "type" '<' $@34 type_declaration_no_options . '>' $@35
  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 376
    "implicit"  shift, and go to state 377
    "explicit"  shift, and go to state 378
    "=="        shift, and go to state 379
    "??"        shift, and go to state 380
    '?'         shift, and go to state 381
    '&'         shift, and go to state 382
    '>'         shift, and go to state 1416
    '-'         shift, and go to state 383
    '#'         shift, and go to state 384


State 1339

  530 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 530 (expr_mtag)


State 1340

  494 expr: expr "as" "type" '<' $@36 type_declaration . '>' $@37
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387
    '>'  shift, and go to state 1417


State 1341

  528 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 528 (expr_mtag)


State 1342

  403 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 403 (expr_method_call)


State 1343

  525 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 525 (expr_mtag)


State 1344

  499 expr: expr '?' "as" "type" '<' $@38 . type_declaration '>' $@39

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 283
    type_declaration_no_options_no_dim  go to state 284
    type_declaration                    go to state 1418


State 1345

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  529          | expr '?' "as" "$f" '(' expr . ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1419


State 1346

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  527          | expr '.' "?." "$f" '(' expr . ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1420


State 1347

  524 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 524 (expr_mtag)


State 1348

  417 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  820 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  821                   | make_struct_fields . ',' "name" ":=" expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  825                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1192
    ']'  shift, and go to state 1421


State 1349

  416 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 416 (expr_field)


State 1350

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  526          | expr '.' '.' "$f" '(' expr . ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1422


State 1351

  419 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 419 (expr_field)


State 1352

  742 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1423


State 1353

  667 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 667 (variable_name_with_pos_list)


State 1354

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  580 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 580 (variable_declaration_type)


State 1355

  324 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 324 (expression_try_catch)


State 1356

  115 expression_with_alias: "assume" "name" '=' expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 115 (expression_with_alias)


State 1357

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner SEMICOLON
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1424


State 1358

   99 expression_if_then_else: $@9 if_or_static_if '(' expr . ')' optional_emit_semis expression_if_block expression_else
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1425


State 1359

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  106                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  107                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' optional_emit_semis expression_block

    "in"  shift, and go to state 1426
    ','   shift, and go to state 1178


State 1360

  112 expression_while_loop: $@11 "while" '(' expr . ')' optional_emit_semis expression_block
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1427


State 1361

  114 expression_with: $@12 "with" '(' expr . ')' optional_emit_semis expression_block
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1428


State 1362

  269 expression_block_finally: "finally" $@14 . '{' expressions $@15 '}'

    '{'  shift, and go to state 1429


State 1363

  333 tuple_expansion: tuple_expansion . ',' "name"
  334 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  335                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 1311
    ')'  shift, and go to state 1430


State 1364

  338 expression_let: kwd_let optional_in_scope '{' variable_declaration_list . '}'
  596 variable_declaration_list: variable_declaration_list . SEMICOLON
  597                          | variable_declaration_list . let_variable_declaration

    "$i"                   shift, and go to state 560
    "name"                 shift, and go to state 561
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 1431

    SEMICOLON                        go to state 1432
    let_variable_name_with_pos_list  go to state 562
    let_variable_declaration         go to state 1433


State 1365

  644 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}' .

    $default  reduce using rule 644 (enum_declaration)


State 1366

  540 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 540 (optional_public_or_private_member_variable)


State 1367

  541 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 541 (optional_public_or_private_member_variable)


State 1368

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  552                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "abstract"  shift, and go to state 1434
    "static"    shift, and go to state 1369

    $default  reduce using rule 542 (optional_static_member_variable)

    optional_static_member_variable  go to state 1435


State 1369

  543 optional_static_member_variable: "static" .

    $default  reduce using rule 543 (optional_static_member_variable)


State 1370

  544 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1436
    "sealed"    shift, and go to state 1437

    $default  reduce using rule 534 (optional_override)

    optional_override  go to state 1438


State 1371

  548 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration SEMICOLON .

    $default  reduce using rule 548 (struct_variable_declaration_list)


State 1372

  599 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 599 (let_variable_declaration)


State 1373

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  713 bitfield_alias_bits: bitfield_alias_bits commas "name" '=' expr .

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 713 (bitfield_alias_bits)


State 1374

  839 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1388

    $default  reduce using rule 835 (use_initializer)

    use_initializer  go to state 1439


State 1375

  842 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1388

    $default  reduce using rule 835 (use_initializer)

    use_initializer  go to state 1440


State 1376

  352 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1441


State 1377

  353 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1442


State 1378

  858 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1443


State 1379

  861 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1444


State 1380

  864 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 . '(' make_variant_dim ')'

    '('  shift, and go to state 1445


State 1381

  868 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    $default  reduce using rule 296 (optional_expr_list)

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    optional_expr_list      go to state 1446
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 621
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1382

  878 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 878 (make_table_decl)


State 1383

  879 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    $default  reduce using rule 298 (optional_expr_map_tuple_list)

    string_builder                go to state 479
    expr_reader                   go to state 480
    expr_call_pipe                go to state 481
    optional_expr_map_tuple_list  go to state 1447
    name_in_namespace             go to state 482
    expr_new                      go to state 483
    expr_cast                     go to state 484
    expr_type_decl                go to state 485
    expr_type_info                go to state 486
    block_or_lambda               go to state 487
    expr_full_block               go to state 488
    expr_numeric_const            go to state 489
    expr_named_call               go to state 490
    expr_method_call              go to state 491
    func_addr_expr                go to state 492
    expr_field                    go to state 493
    expr_call                     go to state 494
    expr                          go to state 750
    expr_generator                go to state 496
    expr_mtag                     go to state 497
    basic_type_declaration        go to state 498
    make_decl                     go to state 499
    make_struct_decl              go to state 500
    make_map_tuple                go to state 751
    make_tuple_call               go to state 501
    make_dim_decl                 go to state 502
    expr_map_tuple_list           go to state 1006
    make_table_decl               go to state 503
    array_comprehension           go to state 504


State 1384

  341 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 341 (expr_cast)


State 1385

  344 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 344 (expr_cast)


State 1386

  347 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 347 (expr_cast)


State 1387

  872 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 1448
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1388

  836 use_initializer: "uninitialized" .

    $default  reduce using rule 836 (use_initializer)


State 1389

  848 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 use_initializer .

    $default  reduce using rule 848 (make_struct_decl)


State 1390

  854 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1388

    $default  reduce using rule 835 (use_initializer)

    use_initializer  go to state 1449


State 1391

  845 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1388

    $default  reduce using rule 835 (use_initializer)

    use_initializer  go to state 1450


State 1392

  513 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 513 (expr_generator)


State 1393

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  514 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1451


State 1394

  515 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block .

    $default  reduce using rule 515 (expr_generator)


State 1395

  523 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 523 (expr_mtag)


State 1396

   36 format_string: format_string . STRING_CHARACTER
   39 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1452

    $default  reduce using rule 39 (optional_format_string)


State 1397

  102 for_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 102 (for_variable_name_with_pos_list)


State 1398

  333 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 333 (tuple_expansion)


State 1399

  884 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1453


State 1400

  106 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1454


State 1401

  107 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' tuple_expansion . ')'
  333 tuple_expansion: tuple_expansion . ',' "name"

    ','  shift, and go to state 1311
    ')'  shift, and go to state 1455


State 1402

  355 expr_list: expr_list . ',' expr
  885 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1042
    ')'  shift, and go to state 1456


State 1403

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  823 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 823 (make_struct_fields)


State 1404

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  822 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 822 (make_struct_fields)


State 1405

  824 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  825                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 781
    ":="  shift, and go to state 1457
    '='   shift, and go to state 783

    copy_or_move  go to state 1458


State 1406

  409 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 789
    "name"  shift, and go to state 59

    name_in_namespace  go to state 792
    func_addr_name     go to state 1459


State 1407

  412 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' . $@31 func_addr_name

    $default  reduce using rule 411 ($@31)

    $@31  go to state 1460


State 1408

  886 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' make_map_tuple array_comprehension_where '}'

    ';'  shift, and go to state 1461


State 1409

  401 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1462


State 1410

  366 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1463


State 1411

  368 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 368 (capture_list)


State 1412

  357 block_or_simple_block: "=>" . expr
  358                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "<-"                              shift, and go to state 1464
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1465
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1413

  356 block_or_simple_block: expression_block .

    $default  reduce using rule 356 (block_or_simple_block)


State 1414

  371 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block .

    $default  reduce using rule 371 (expr_full_block)


State 1415

  372 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1466
    $@16              go to state 406


State 1416

  488 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' . $@35

    $default  reduce using rule 487 ($@35)

    $@35  go to state 1467


State 1417

  494 expr: expr "as" "type" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 493 ($@37)

    $@37  go to state 1468


State 1418

  499 expr: expr '?' "as" "type" '<' $@38 type_declaration . '>' $@39
  796 type_declaration: type_declaration . '|' type_declaration_no_options
  797                 | type_declaration . '|' '#'

    '|'  shift, and go to state 387
    '>'  shift, and go to state 1469


State 1419

  529 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 529 (expr_mtag)


State 1420

  527 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 527 (expr_mtag)


State 1421

  417 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1470


State 1422

  526 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 526 (expr_mtag)


State 1423

  742 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 742 (type_declaration_no_options_no_dim)


State 1424

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner SEMICOLON

    "else"  shift, and go to state 1471

    $default  reduce using rule 77 (expression_else_one_liner)

    expression_else_one_liner  go to state 1472


State 1425

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' . optional_emit_semis expression_if_block expression_else

    "new line, semicolon"  shift, and go to state 154

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 1473


State 1426

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    expr_list               go to state 1474
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 622
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1427

  112 expression_while_loop: $@11 "while" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 154

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 1475


State 1428

  114 expression_with: $@12 "with" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 154

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 1476


State 1429

  269 expression_block_finally: "finally" $@14 '{' . expressions $@15 '}'

    $default  reduce using rule 293 (expressions)

    expressions  go to state 1477


State 1430

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  335                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr SEMICOLON

    ':'  shift, and go to state 1478
    '&'  shift, and go to state 424

    $default  reduce using rule 586 (optional_ref)

    optional_ref  go to state 1479


State 1431

  338 expression_let: kwd_let optional_in_scope '{' variable_declaration_list '}' .

    $default  reduce using rule 338 (expression_let)


State 1432

  596 variable_declaration_list: variable_declaration_list SEMICOLON .

    $default  reduce using rule 596 (variable_declaration_list)


State 1433

  597 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 597 (variable_declaration_list)


State 1434

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" . optional_constant $@41 function_declaration_header SEMICOLON

    "const"  shift, and go to state 1480

    $default  reduce using rule 537 (optional_constant)

    optional_constant  go to state 1481


State 1435

  552 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "override"  shift, and go to state 1436
    "sealed"    shift, and go to state 1437

    $default  reduce using rule 534 (optional_override)

    optional_override  go to state 1482


State 1436

  535 optional_override: "override" .

    $default  reduce using rule 535 (optional_override)


State 1437

  536 optional_override: "sealed" .

    $default  reduce using rule 536 (optional_override)


State 1438

  544 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1366
    "private"  shift, and go to state 1367

    $default  reduce using rule 539 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1483


State 1439

  839 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 623
    "name"  shift, and go to state 1007
    '('     shift, and go to state 1484

    $default  reduce using rule 834 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1485
    make_struct_dim_list           go to state 1486
    make_struct_dim_decl           go to state 1487
    optional_make_struct_dim_decl  go to state 1488


State 1440

  842 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 623
    "name"  shift, and go to state 1007
    '('     shift, and go to state 1484

    $default  reduce using rule 834 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1485
    make_struct_dim_list           go to state 1486
    make_struct_dim_decl           go to state 1487
    optional_make_struct_dim_decl  go to state 1489


State 1441

  352 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 352 (expr_type_info)


State 1442

  353 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1490
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1443

  858 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1388

    $default  reduce using rule 835 (use_initializer)

    use_initializer  go to state 1491


State 1444

  861 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1388

    $default  reduce using rule 835 (use_initializer)

    use_initializer  go to state 1492


State 1445

  864 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 623
    "name"  shift, and go to state 1007

    $default  reduce using rule 826 (make_variant_dim)

    make_struct_fields  go to state 1493
    make_variant_dim    go to state 1494


State 1446

  868 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1495


State 1447

  879 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1496


State 1448

  355 expr_list: expr_list . ',' expr
  872 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 778

    $default  reduce using rule 882 (optional_comma)

    optional_comma  go to state 1497


State 1449

  854 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 623
    "name"  shift, and go to state 1007
    '('     shift, and go to state 1484

    $default  reduce using rule 834 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1485
    make_struct_dim_list           go to state 1486
    make_struct_dim_decl           go to state 1487
    optional_make_struct_dim_decl  go to state 1498


State 1450

  845 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 623
    "name"  shift, and go to state 1007

    $default  reduce using rule 826 (make_variant_dim)

    make_struct_fields  go to state 1493
    make_variant_dim    go to state 1499


State 1451

  514 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 514 (expr_generator)


State 1452

   36 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 36 (format_string)


State 1453

  884 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1500
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1454

  106 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 106 (for_variable_name_with_pos_list)


State 1455

  107 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' tuple_expansion ')' .

    $default  reduce using rule 107 (for_variable_name_with_pos_list)


State 1456

  885 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1501


State 1457

  825 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1502
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1458

  824 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1503
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1459

  409 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name .

    $default  reduce using rule 409 (func_addr_expr)


State 1460

  412 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 . func_addr_name

    "::"    shift, and go to state 58
    "$i"    shift, and go to state 789
    "name"  shift, and go to state 59

    name_in_namespace  go to state 792
    func_addr_name     go to state 1504


State 1461

  886 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 750
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_map_tuple          go to state 1505
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1462

  401 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 401 (expr_named_call)


State 1463

  366 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 366 (capture_entry)


State 1464

  358 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1506
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1465

  357 block_or_simple_block: "=>" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    ".."  error (nonassociative)

    $default  reduce using rule 357 (block_or_simple_block)


State 1466

  372 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block .

    $default  reduce using rule 372 (expr_full_block_assumed_piped)


State 1467

  488 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' $@35 .

    $default  reduce using rule 488 (expr)


State 1468

  494 expr: expr "as" "type" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 494 (expr)


State 1469

  499 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' . $@39

    $default  reduce using rule 498 ($@39)

    $@39  go to state 1507


State 1470

  417 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 417 (expr_field)


State 1471

   78 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 891
    "null"                            shift, and go to state 438
    "break"                           shift, and go to state 892
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "continue"                        shift, and go to state 896
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "yield"                           shift, and go to state 901
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder           go to state 479
    expr_reader              go to state 480
    expression_if_one_liner  go to state 1508
    expr_call_pipe           go to state 481
    name_in_namespace        go to state 482
    expr_new                 go to state 483
    expression_break         go to state 1509
    expression_continue      go to state 1510
    expression_return        go to state 1511
    expression_yield         go to state 1512
    expr_cast                go to state 484
    expr_type_decl           go to state 485
    expr_type_info           go to state 486
    block_or_lambda          go to state 487
    expr_full_block          go to state 488
    expr_numeric_const       go to state 489
    expr_named_call          go to state 490
    expr_method_call         go to state 491
    func_addr_expr           go to state 492
    expr_field               go to state 493
    expr_call                go to state 494
    expr                     go to state 1513
    expr_generator           go to state 496
    expr_mtag                go to state 497
    basic_type_declaration   go to state 498
    make_decl                go to state 499
    make_struct_decl         go to state 500
    make_tuple_call          go to state 501
    make_dim_decl            go to state 502
    make_table_decl          go to state 503
    array_comprehension      go to state 504


State 1472

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1514


State 1473

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis . expression_if_block expression_else

    '{'       reduce using rule 88 ($@3)
    '{'       [reduce using rule 91 ($@5)]
    $default  reduce using rule 91 ($@5)

    expression_if_block  go to state 1515
    $@3                  go to state 1516
    $@5                  go to state 1517


State 1474

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' optional_emit_semis expression_block
  355 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1042
    ')'  shift, and go to state 1518


State 1475

  112 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1519
    $@16              go to state 406


State 1476

  114 expression_with: $@12 "with" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1520
    $@16              go to state 406


State 1477

  269 expression_block_finally: "finally" $@14 '{' expressions . $@15 '}'
  294 expressions: expressions . expression_any
  295            | expressions . error

    error                             shift, and go to state 890
    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 891
    "null"                            shift, and go to state 438
    "break"                           shift, and go to state 892
    "try"                             shift, and go to state 893
    "table"                           shift, and go to state 439
    "delete"                          shift, and go to state 894
    "deref"                           shift, and go to state 440
    "assume"                          shift, and go to state 895
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 443
    "continue"                        shift, and go to state 896
    "pass"                            shift, and go to state 897
    "reinterpret"                     shift, and go to state 444
    "label"                           shift, and go to state 898
    "goto"                            shift, and go to state 899
    "unsafe"                          shift, and go to state 900
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "yield"                           shift, and go to state 901
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 478

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)
    '}'          reduce using rule 268 ($@15)

    SEMICOLON                         go to state 902
    string_builder                    go to state 479
    expr_reader                       go to state 480
    expression_label                  go to state 903
    expression_goto                   go to state 904
    expression_if_one_liner           go to state 905
    expression_if_then_else           go to state 906
    $@9                               go to state 907
    expression_if_then_else_oneliner  go to state 908
    expression_for_loop               go to state 909
    $@10                              go to state 910
    expression_unsafe                 go to state 911
    expression_while_loop             go to state 912
    $@11                              go to state 913
    expression_with                   go to state 914
    $@12                              go to state 915
    expression_with_alias             go to state 916
    $@15                              go to state 1521
    expr_call_pipe                    go to state 481
    expression_any                    go to state 918
    name_in_namespace                 go to state 482
    expression_delete                 go to state 919
    expr_new                          go to state 483
    expression_break                  go to state 920
    expression_continue               go to state 921
    expression_return                 go to state 922
    expression_yield                  go to state 923
    expression_try_catch              go to state 924
    kwd_let                           go to state 925
    expression_let                    go to state 926
    expr_cast                         go to state 484
    expr_type_decl                    go to state 485
    expr_type_info                    go to state 486
    block_or_lambda                   go to state 487
    expr_full_block                   go to state 488
    expr_numeric_const                go to state 489
    expr_assign                       go to state 927
    expr_named_call                   go to state 490
    expr_method_call                  go to state 491
    func_addr_expr                    go to state 492
    expr_field                        go to state 493
    expr_call                         go to state 494
    expr                              go to state 928
    expr_generator                    go to state 496
    expr_mtag                         go to state 497
    basic_type_declaration            go to state 498
    make_decl                         go to state 499
    make_struct_decl                  go to state 500
    make_tuple_call                   go to state 501
    make_dim_decl                     go to state 502
    make_table_decl                   go to state 503
    array_comprehension               go to state 504


State 1478

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 236
    "array"      shift, and go to state 237
    "table"      shift, and go to state 238
    "typedecl"   shift, and go to state 239
    "iterator"   shift, and go to state 240
    "smart_ptr"  shift, and go to state 241
    "bool"       shift, and go to state 242
    "void"       shift, and go to state 243
    "string"     shift, and go to state 244
    "auto"       shift, and go to state 245
    "int"        shift, and go to state 246
    "int2"       shift, and go to state 247
    "int3"       shift, and go to state 248
    "int4"       shift, and go to state 249
    "uint"       shift, and go to state 250
    "bitfield"   shift, and go to state 251
    "uint2"      shift, and go to state 252
    "uint3"      shift, and go to state 253
    "uint4"      shift, and go to state 254
    "float"      shift, and go to state 255
    "float2"     shift, and go to state 256
    "float3"     shift, and go to state 257
    "float4"     shift, and go to state 258
    "range"      shift, and go to state 259
    "urange"     shift, and go to state 260
    "range64"    shift, and go to state 261
    "urange64"   shift, and go to state 262
    "block"      shift, and go to state 263
    "int64"      shift, and go to state 264
    "uint64"     shift, and go to state 265
    "double"     shift, and go to state 266
    "function"   shift, and go to state 267
    "lambda"     shift, and go to state 268
    "int8"       shift, and go to state 269
    "uint8"      shift, and go to state 270
    "int16"      shift, and go to state 271
    "uint16"     shift, and go to state 272
    "tuple"      shift, and go to state 273
    "variant"    shift, and go to state 274
    "::"         shift, and go to state 58
    "$t"         shift, and go to state 275
    "name"       shift, and go to state 59
    '$'          shift, and go to state 276

    name_in_namespace                   go to state 277
    basic_type_declaration              go to state 278
    structure_type_declaration          go to state 279
    auto_type_declaration               go to state 280
    bitfield_basic_type_declaration     go to state 281
    bitfield_type_declaration           go to state 282
    type_declaration_no_options         go to state 1522
    type_declaration_no_options_no_dim  go to state 284


State 1479

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 567
    ":="  shift, and go to state 568
    '='   shift, and go to state 569

    copy_or_move_or_clone  go to state 1523


State 1480

  538 optional_constant: "const" .

    $default  reduce using rule 538 (optional_constant)


State 1481

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant . $@41 function_declaration_header SEMICOLON

    $default  reduce using rule 549 ($@41)

    $@41  go to state 1524


State 1482

  552 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "const"  shift, and go to state 1480

    $default  reduce using rule 537 (optional_constant)

    optional_constant  go to state 1525


State 1483

  544 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 705
    "name"  shift, and go to state 706

    variable_declaration_no_type  go to state 1526
    variable_declaration_type     go to state 1527
    variable_declaration          go to state 1528
    variable_name_with_pos_list   go to state 709


State 1484

  829 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 623
    "name"  shift, and go to state 1007

    make_struct_fields  go to state 1529


State 1485

  820 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  821                   | make_struct_fields . ',' "name" ":=" expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  825                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  831 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1192

    $default  reduce using rule 831 (make_struct_dim_decl)


State 1486

  830 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  832 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1530

    $default  reduce using rule 882 (optional_comma)

    optional_comma  go to state 1531


State 1487

  833 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 833 (optional_make_struct_dim_decl)


State 1488

  839 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1532


State 1489

  842 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1533


State 1490

  353 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1534


State 1491

  858 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 623
    "name"  shift, and go to state 1007
    '('     shift, and go to state 1484

    $default  reduce using rule 834 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1485
    make_struct_dim_list           go to state 1486
    make_struct_dim_decl           go to state 1487
    optional_make_struct_dim_decl  go to state 1535


State 1492

  861 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 623
    "name"  shift, and go to state 1007
    '('     shift, and go to state 1484

    $default  reduce using rule 834 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1485
    make_struct_dim_list           go to state 1486
    make_struct_dim_decl           go to state 1487
    optional_make_struct_dim_decl  go to state 1536


State 1493

  820 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  821                   | make_struct_fields . ',' "name" ":=" expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  825                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  827 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1192

    $default  reduce using rule 827 (make_variant_dim)


State 1494

  864 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1537


State 1495

  868 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')' .

    $default  reduce using rule 868 (make_dim_decl)


State 1496

  879 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 879 (make_table_decl)


State 1497

  872 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1538


State 1498

  854 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1539


State 1499

  845 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1540


State 1500

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  884 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ';'    shift, and go to state 1541

    $default  reduce using rule 880 (array_comprehension_where)

    array_comprehension_where  go to state 1542


State 1501

  885 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1543
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1502

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  825 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 825 (make_struct_fields)


State 1503

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  824 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 824 (make_struct_fields)


State 1504

  412 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name .

    $default  reduce using rule 412 (func_addr_expr)


State 1505

  886 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1541

    $default  reduce using rule 880 (array_comprehension_where)

    array_comprehension_where  go to state 1544


State 1506

  358 block_or_simple_block: "=>" "<-" expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 358 (block_or_simple_block)


State 1507

  499 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' $@39 .

    $default  reduce using rule 499 (expr)


State 1508

   78 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 78 (expression_else_one_liner)


State 1509

   82 expression_if_one_liner: expression_break .

    $default  reduce using rule 82 (expression_if_one_liner)


State 1510

   83 expression_if_one_liner: expression_continue .

    $default  reduce using rule 83 (expression_if_one_liner)


State 1511

   80 expression_if_one_liner: expression_return .

    $default  reduce using rule 80 (expression_if_one_liner)


State 1512

   81 expression_if_one_liner: expression_yield .

    $default  reduce using rule 81 (expression_if_one_liner)


State 1513

   79 expression_if_one_liner: expr .
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 79 (expression_if_one_liner)


State 1514

  100 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON .

    $default  reduce using rule 100 (expression_if_then_else_oneliner)


State 1515

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block . expression_else

    "else"         shift, and go to state 1545
    "elif"         shift, and go to state 1546
    "static_elif"  shift, and go to state 1547

    $default  reduce using rule 72 (expression_else)

    elif_or_static_elif  go to state 1548
    expression_else      go to state 1549


State 1516

   90 expression_if_block: $@3 . '{' expressions $@4 '}' expression_block_finally

    '{'  shift, and go to state 1550


State 1517

   92 expression_if_block: $@5 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 891
    "null"                            shift, and go to state 438
    "break"                           shift, and go to state 892
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "continue"                        shift, and go to state 896
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "yield"                           shift, and go to state 901
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder           go to state 479
    expr_reader              go to state 480
    expression_if_one_liner  go to state 1551
    expr_call_pipe           go to state 481
    name_in_namespace        go to state 482
    expr_new                 go to state 483
    expression_break         go to state 1509
    expression_continue      go to state 1510
    expression_return        go to state 1511
    expression_yield         go to state 1512
    expr_cast                go to state 484
    expr_type_decl           go to state 485
    expr_type_info           go to state 486
    block_or_lambda          go to state 487
    expr_full_block          go to state 488
    expr_numeric_const       go to state 489
    expr_named_call          go to state 490
    expr_method_call         go to state 491
    func_addr_expr           go to state 492
    expr_field               go to state 493
    expr_call                go to state 494
    expr                     go to state 1513
    expr_generator           go to state 496
    expr_mtag                go to state 497
    basic_type_declaration   go to state 498
    make_decl                go to state 499
    make_struct_decl         go to state 500
    make_tuple_call          go to state 501
    make_dim_decl            go to state 502
    make_table_decl          go to state 503
    array_comprehension      go to state 504


State 1518

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 154

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 1552


State 1519

  112 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 112 (expression_while_loop)


State 1520

  114 expression_with: $@12 "with" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 114 (expression_with)


State 1521

  269 expression_block_finally: "finally" $@14 '{' expressions $@15 . '}'

    '}'  shift, and go to state 1553


State 1522

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  743 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  744                                   | type_declaration_no_options . "explicit"
  745                                   | type_declaration_no_options . "const"
  746                                   | type_declaration_no_options . '-' "const"
  747                                   | type_declaration_no_options . '&'
  748                                   | type_declaration_no_options . '-' '&'
  749                                   | type_declaration_no_options . '#'
  750                                   | type_declaration_no_options . "implicit"
  751                                   | type_declaration_no_options . '-' '#'
  752                                   | type_declaration_no_options . "==" "const"
  753                                   | type_declaration_no_options . "==" '&'
  754                                   | type_declaration_no_options . '?'
  758                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 376
    "implicit"  shift, and go to state 377
    "explicit"  shift, and go to state 378
    "=="        shift, and go to state 379
    "<-"        shift, and go to state 567
    "??"        shift, and go to state 380
    ":="        shift, and go to state 568
    '='         shift, and go to state 569
    '?'         shift, and go to state 381
    '&'         shift, and go to state 382
    '-'         shift, and go to state 383
    '#'         shift, and go to state 384

    copy_or_move_or_clone  go to state 1554


State 1523

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1555
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1524

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 . function_declaration_header SEMICOLON

    "operator"  shift, and go to state 190
    "bool"      shift, and go to state 191
    "string"    shift, and go to state 192
    "int"       shift, and go to state 193
    "int2"      shift, and go to state 194
    "int3"      shift, and go to state 195
    "int4"      shift, and go to state 196
    "uint"      shift, and go to state 197
    "uint2"     shift, and go to state 198
    "uint3"     shift, and go to state 199
    "uint4"     shift, and go to state 200
    "float"     shift, and go to state 201
    "float2"    shift, and go to state 202
    "float3"    shift, and go to state 203
    "float4"    shift, and go to state 204
    "range"     shift, and go to state 205
    "urange"    shift, and go to state 206
    "range64"   shift, and go to state 207
    "urange64"  shift, and go to state 208
    "int64"     shift, and go to state 209
    "uint64"    shift, and go to state 210
    "double"    shift, and go to state 211
    "int8"      shift, and go to state 212
    "uint8"     shift, and go to state 213
    "int16"     shift, and go to state 214
    "uint16"    shift, and go to state 215
    "++"        shift, and go to state 216
    "--"        shift, and go to state 217
    "name"      shift, and go to state 218

    function_name                go to state 219
    function_declaration_header  go to state 1556


State 1525

  552 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@42 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 551 ($@42)

    $@42  go to state 1557


State 1526

  582 variable_declaration: variable_declaration_no_type .

    $default  reduce using rule 582 (variable_declaration)


State 1527

  581 variable_declaration: variable_declaration_type .

    $default  reduce using rule 581 (variable_declaration)


State 1528

  544 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 544 (structure_variable_declaration)


State 1529

  820 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  821                   | make_struct_fields . ',' "name" ":=" expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  825                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  829 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1192
    ')'  shift, and go to state 1558


State 1530

  830 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  883 optional_comma: ',' .

    '('  shift, and go to state 1559

    $default  reduce using rule 883 (optional_comma)


State 1531

  832 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 832 (make_struct_dim_decl)


State 1532

  839 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 839 (make_struct_decl)


State 1533

  842 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 842 (make_struct_decl)


State 1534

  353 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 353 (expr_type_info)


State 1535

  858 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1560


State 1536

  861 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1561


State 1537

  864 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')' .

    $default  reduce using rule 864 (make_dim_decl)


State 1538

  872 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')' .

    $default  reduce using rule 872 (make_dim_decl)


State 1539

  854 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 854 (make_tuple_call)


State 1540

  845 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 845 (make_struct_decl)


State 1541

  881 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1562


State 1542

  884 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1563


State 1543

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  885 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ';'    shift, and go to state 1541

    $default  reduce using rule 880 (array_comprehension_where)

    array_comprehension_where  go to state 1564


State 1544

  886 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1565


State 1545

   73 expression_else: "else" . optional_emit_semis expression_else_block

    "new line, semicolon"  shift, and go to state 154

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 1566


State 1546

   66 elif_or_static_elif: "elif" .

    $default  reduce using rule 66 (elif_or_static_elif)


State 1547

   67 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 67 (elif_or_static_elif)


State 1548

   74 expression_else: elif_or_static_elif . '(' expr ')' optional_emit_semis expression_else_block expression_else

    '('  shift, and go to state 1567


State 1549

   99 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else .

    $default  reduce using rule 99 (expression_if_then_else)


State 1550

   90 expression_if_block: $@3 '{' . expressions $@4 '}' expression_block_finally

    $default  reduce using rule 293 (expressions)

    expressions  go to state 1568


State 1551

   92 expression_if_block: $@5 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1569


State 1552

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1570
    $@16              go to state 406


State 1553

  269 expression_block_finally: "finally" $@14 '{' expressions $@15 '}' .

    $default  reduce using rule 269 (expression_block_finally)


State 1554

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1571
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1555

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . SEMICOLON
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 638
    "as"                   shift, and go to state 639
    "<<"                   shift, and go to state 640
    ">>"                   shift, and go to state 641
    "++"                   shift, and go to state 642
    "--"                   shift, and go to state 643
    "<="                   shift, and go to state 644
    ">="                   shift, and go to state 645
    "=="                   shift, and go to state 646
    "!="                   shift, and go to state 647
    "->"                   shift, and go to state 648
    "??"                   shift, and go to state 649
    "?."                   shift, and go to state 650
    "?["                   shift, and go to state 651
    "<|"                   shift, and go to state 652
    "|>"                   shift, and go to state 653
    "<<<"                  shift, and go to state 654
    ">>>"                  shift, and go to state 655
    "&&"                   shift, and go to state 656
    "||"                   shift, and go to state 657
    "^^"                   shift, and go to state 658
    ".."                   shift, and go to state 659
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 660
    '|'                    shift, and go to state 661
    '^'                    shift, and go to state 662
    '&'                    shift, and go to state 663
    '<'                    shift, and go to state 664
    '>'                    shift, and go to state 665
    '-'                    shift, and go to state 666
    '+'                    shift, and go to state 667
    '*'                    shift, and go to state 668
    '/'                    shift, and go to state 669
    '%'                    shift, and go to state 670
    '.'                    shift, and go to state 671
    '['                    shift, and go to state 672
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1572


State 1556

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1573


State 1557

  552 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 190
    "bool"      shift, and go to state 191
    "string"    shift, and go to state 192
    "int"       shift, and go to state 193
    "int2"      shift, and go to state 194
    "int3"      shift, and go to state 195
    "int4"      shift, and go to state 196
    "uint"      shift, and go to state 197
    "uint2"     shift, and go to state 198
    "uint3"     shift, and go to state 199
    "uint4"     shift, and go to state 200
    "float"     shift, and go to state 201
    "float2"    shift, and go to state 202
    "float3"    shift, and go to state 203
    "float4"    shift, and go to state 204
    "range"     shift, and go to state 205
    "urange"    shift, and go to state 206
    "range64"   shift, and go to state 207
    "urange64"  shift, and go to state 208
    "int64"     shift, and go to state 209
    "uint64"    shift, and go to state 210
    "double"    shift, and go to state 211
    "int8"      shift, and go to state 212
    "uint8"     shift, and go to state 213
    "int16"     shift, and go to state 214
    "uint16"    shift, and go to state 215
    "++"        shift, and go to state 216
    "--"        shift, and go to state 217
    "name"      shift, and go to state 218

    function_name                go to state 219
    function_declaration_header  go to state 1574


State 1558

  829 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 829 (make_struct_dim_list)


State 1559

  830 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 623
    "name"  shift, and go to state 1007

    make_struct_fields  go to state 1575


State 1560

  858 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 858 (make_dim_decl)


State 1561

  861 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 861 (make_dim_decl)


State 1562

  881 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1576
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1563

  884 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 884 (array_comprehension)


State 1564

  885 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1577


State 1565

  886 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 886 (array_comprehension)


State 1566

   73 expression_else: "else" optional_emit_semis . expression_else_block

    '{'       reduce using rule 93 ($@6)
    '{'       [reduce using rule 96 ($@8)]
    $default  reduce using rule 96 ($@8)

    expression_else_block  go to state 1578
    $@6                    go to state 1579
    $@8                    go to state 1580


State 1567

   74 expression_else: elif_or_static_elif '(' . expr ')' optional_emit_semis expression_else_block expression_else

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "null"                            shift, and go to state 438
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder          go to state 479
    expr_reader             go to state 480
    expr_call_pipe          go to state 481
    name_in_namespace       go to state 482
    expr_new                go to state 483
    expr_cast               go to state 484
    expr_type_decl          go to state 485
    expr_type_info          go to state 486
    block_or_lambda         go to state 487
    expr_full_block         go to state 488
    expr_numeric_const      go to state 489
    expr_named_call         go to state 490
    expr_method_call        go to state 491
    func_addr_expr          go to state 492
    expr_field              go to state 493
    expr_call               go to state 494
    expr                    go to state 1581
    expr_generator          go to state 496
    expr_mtag               go to state 497
    basic_type_declaration  go to state 498
    make_decl               go to state 499
    make_struct_decl        go to state 500
    make_tuple_call         go to state 501
    make_dim_decl           go to state 502
    make_table_decl         go to state 503
    array_comprehension     go to state 504


State 1568

   90 expression_if_block: $@3 '{' expressions . $@4 '}' expression_block_finally
  294 expressions: expressions . expression_any
  295            | expressions . error

    error                             shift, and go to state 890
    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 891
    "null"                            shift, and go to state 438
    "break"                           shift, and go to state 892
    "try"                             shift, and go to state 893
    "table"                           shift, and go to state 439
    "delete"                          shift, and go to state 894
    "deref"                           shift, and go to state 440
    "assume"                          shift, and go to state 895
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 443
    "continue"                        shift, and go to state 896
    "pass"                            shift, and go to state 897
    "reinterpret"                     shift, and go to state 444
    "label"                           shift, and go to state 898
    "goto"                            shift, and go to state 899
    "unsafe"                          shift, and go to state 900
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "yield"                           shift, and go to state 901
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 478

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)
    '}'          reduce using rule 89 ($@4)

    SEMICOLON                         go to state 902
    string_builder                    go to state 479
    expr_reader                       go to state 480
    expression_label                  go to state 903
    expression_goto                   go to state 904
    expression_if_one_liner           go to state 905
    $@4                               go to state 1582
    expression_if_then_else           go to state 906
    $@9                               go to state 907
    expression_if_then_else_oneliner  go to state 908
    expression_for_loop               go to state 909
    $@10                              go to state 910
    expression_unsafe                 go to state 911
    expression_while_loop             go to state 912
    $@11                              go to state 913
    expression_with                   go to state 914
    $@12                              go to state 915
    expression_with_alias             go to state 916
    expr_call_pipe                    go to state 481
    expression_any                    go to state 918
    name_in_namespace                 go to state 482
    expression_delete                 go to state 919
    expr_new                          go to state 483
    expression_break                  go to state 920
    expression_continue               go to state 921
    expression_return                 go to state 922
    expression_yield                  go to state 923
    expression_try_catch              go to state 924
    kwd_let                           go to state 925
    expression_let                    go to state 926
    expr_cast                         go to state 484
    expr_type_decl                    go to state 485
    expr_type_info                    go to state 486
    block_or_lambda                   go to state 487
    expr_full_block                   go to state 488
    expr_numeric_const                go to state 489
    expr_assign                       go to state 927
    expr_named_call                   go to state 490
    expr_method_call                  go to state 491
    func_addr_expr                    go to state 492
    expr_field                        go to state 493
    expr_call                         go to state 494
    expr                              go to state 928
    expr_generator                    go to state 496
    expr_mtag                         go to state 497
    basic_type_declaration            go to state 498
    make_decl                         go to state 499
    make_struct_decl                  go to state 500
    make_tuple_call                   go to state 501
    make_dim_decl                     go to state 502
    make_table_decl                   go to state 503
    array_comprehension               go to state 504


State 1569

   92 expression_if_block: $@5 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 92 (expression_if_block)


State 1570

  109 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block .

    $default  reduce using rule 109 (expression_for_loop)


State 1571

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 638
    "as"                   shift, and go to state 639
    "<<"                   shift, and go to state 640
    ">>"                   shift, and go to state 641
    "++"                   shift, and go to state 642
    "--"                   shift, and go to state 643
    "<="                   shift, and go to state 644
    ">="                   shift, and go to state 645
    "=="                   shift, and go to state 646
    "!="                   shift, and go to state 647
    "->"                   shift, and go to state 648
    "??"                   shift, and go to state 649
    "?."                   shift, and go to state 650
    "?["                   shift, and go to state 651
    "<|"                   shift, and go to state 652
    "|>"                   shift, and go to state 653
    "<<<"                  shift, and go to state 654
    ">>>"                  shift, and go to state 655
    "&&"                   shift, and go to state 656
    "||"                   shift, and go to state 657
    "^^"                   shift, and go to state 658
    ".."                   shift, and go to state 659
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 660
    '|'                    shift, and go to state 661
    '^'                    shift, and go to state 662
    '&'                    shift, and go to state 663
    '<'                    shift, and go to state 664
    '>'                    shift, and go to state 665
    '-'                    shift, and go to state 666
    '+'                    shift, and go to state 667
    '*'                    shift, and go to state 668
    '/'                    shift, and go to state 669
    '%'                    shift, and go to state 670
    '.'                    shift, and go to state 671
    '['                    shift, and go to state 672
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1583


State 1572

  335 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 335 (tuple_expansion_variable_declaration)


State 1573

  550 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON .

    $default  reduce using rule 550 (struct_variable_declaration_list)


State 1574

  552 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 154

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 1584


State 1575

  820 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  821                   | make_struct_fields . ',' "name" ":=" expr
  824                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  825                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  830 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1192
    ')'  shift, and go to state 1585


State 1576

  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'
  881 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672

    $default  reduce using rule 881 (array_comprehension_where)


State 1577

  885 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 885 (array_comprehension)


State 1578

   73 expression_else: "else" optional_emit_semis expression_else_block .

    $default  reduce using rule 73 (expression_else)


State 1579

   95 expression_else_block: $@6 . '{' expressions $@7 '}' expression_block_finally

    '{'  shift, and go to state 1586


State 1580

   97 expression_else_block: $@8 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 891
    "null"                            shift, and go to state 438
    "break"                           shift, and go to state 892
    "table"                           shift, and go to state 439
    "deref"                           shift, and go to state 440
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "addr"                            shift, and go to state 443
    "continue"                        shift, and go to state 896
    "reinterpret"                     shift, and go to state 444
    "unsafe"                          shift, and go to state 445
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "yield"                           shift, and go to state 901
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    '{'                               shift, and go to state 478

    string_builder           go to state 479
    expr_reader              go to state 480
    expression_if_one_liner  go to state 1587
    expr_call_pipe           go to state 481
    name_in_namespace        go to state 482
    expr_new                 go to state 483
    expression_break         go to state 1509
    expression_continue      go to state 1510
    expression_return        go to state 1511
    expression_yield         go to state 1512
    expr_cast                go to state 484
    expr_type_decl           go to state 485
    expr_type_info           go to state 486
    block_or_lambda          go to state 487
    expr_full_block          go to state 488
    expr_numeric_const       go to state 489
    expr_named_call          go to state 490
    expr_method_call         go to state 491
    func_addr_expr           go to state 492
    expr_field               go to state 493
    expr_call                go to state 494
    expr                     go to state 1513
    expr_generator           go to state 496
    expr_mtag                go to state 497
    basic_type_declaration   go to state 498
    make_decl                go to state 499
    make_struct_decl         go to state 500
    make_tuple_call          go to state 501
    make_dim_decl            go to state 502
    make_table_decl          go to state 503
    array_comprehension      go to state 504


State 1581

   74 expression_else: elif_or_static_elif '(' expr . ')' optional_emit_semis expression_else_block expression_else
  402 expr_method_call: expr . "->" "name" '(' ')'
  403                 | expr . "->" "name" '(' expr_list ')'
  413 expr_field: expr . '.' "name"
  414           | expr . '.' '.' "name"
  415           | expr . '.' "name" '(' ')'
  416           | expr . '.' "name" '(' expr_list ')'
  417           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  418           | expr . '.' basic_type_declaration '(' ')'
  419           | expr . '.' basic_type_declaration '(' expr_list ')'
  422           | expr . '.' $@32 error $@33
  444 expr: expr . "<<" expr
  445     | expr . ">>" expr
  446     | expr . "<<<" expr
  447     | expr . ">>>" expr
  448     | expr . '+' expr
  449     | expr . '-' expr
  450     | expr . '*' expr
  451     | expr . '/' expr
  452     | expr . '%' expr
  453     | expr . '<' expr
  454     | expr . '>' expr
  455     | expr . "==" expr
  456     | expr . "!=" expr
  457     | expr . "<=" expr
  458     | expr . ">=" expr
  459     | expr . '&' expr
  460     | expr . '|' expr
  461     | expr . '^' expr
  462     | expr . "&&" expr
  463     | expr . "||" expr
  464     | expr . "^^" expr
  465     | expr . ".." expr
  468     | expr . "++"
  469     | expr . "--"
  472     | expr . '[' expr ']'
  473     | expr . '.' '[' expr ']'
  474     | expr . "?[" expr ']'
  475     | expr . '.' "?[" expr ']'
  476     | expr . "?." "name"
  477     | expr . '.' "?." "name"
  484     | expr . "??" expr
  485     | expr . '?' expr ':' expr
  488     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  489     | expr . "is" basic_type_declaration
  490     | expr . "is" "name"
  491     | expr . "as" "name"
  494     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  495     | expr . "as" basic_type_declaration
  496     | expr . '?' "as" "name"
  499     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  500     | expr . '?' "as" basic_type_declaration
  508     | expr . "<|" expr
  509     | expr . "|>" expr
  510     | expr . "|>" basic_type_declaration
  524 expr_mtag: expr . '.' "$f" '(' expr ')'
  525          | expr . "?." "$f" '(' expr ')'
  526          | expr . '.' '.' "$f" '(' expr ')'
  527          | expr . '.' "?." "$f" '(' expr ')'
  528          | expr . "as" "$f" '(' expr ')'
  529          | expr . '?' "as" "$f" '(' expr ')'
  530          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 638
    "as"   shift, and go to state 639
    "<<"   shift, and go to state 640
    ">>"   shift, and go to state 641
    "++"   shift, and go to state 642
    "--"   shift, and go to state 643
    "<="   shift, and go to state 644
    ">="   shift, and go to state 645
    "=="   shift, and go to state 646
    "!="   shift, and go to state 647
    "->"   shift, and go to state 648
    "??"   shift, and go to state 649
    "?."   shift, and go to state 650
    "?["   shift, and go to state 651
    "<|"   shift, and go to state 652
    "|>"   shift, and go to state 653
    "<<<"  shift, and go to state 654
    ">>>"  shift, and go to state 655
    "&&"   shift, and go to state 656
    "||"   shift, and go to state 657
    "^^"   shift, and go to state 658
    ".."   shift, and go to state 659
    '?'    shift, and go to state 660
    '|'    shift, and go to state 661
    '^'    shift, and go to state 662
    '&'    shift, and go to state 663
    '<'    shift, and go to state 664
    '>'    shift, and go to state 665
    '-'    shift, and go to state 666
    '+'    shift, and go to state 667
    '*'    shift, and go to state 668
    '/'    shift, and go to state 669
    '%'    shift, and go to state 670
    '.'    shift, and go to state 671
    '['    shift, and go to state 672
    ')'    shift, and go to state 1588


State 1582

   90 expression_if_block: $@3 '{' expressions $@4 . '}' expression_block_finally

    '}'  shift, and go to state 1589


State 1583

  334 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 334 (tuple_expansion_variable_declaration)


State 1584

  552 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 270 ($@16)

    expression_block  go to state 1590
    $@16              go to state 406


State 1585

  830 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 830 (make_struct_dim_list)


State 1586

   95 expression_else_block: $@6 '{' . expressions $@7 '}' expression_block_finally

    $default  reduce using rule 293 (expressions)

    expressions  go to state 1591


State 1587

   97 expression_else_block: $@8 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1592


State 1588

   74 expression_else: elif_or_static_elif '(' expr ')' . optional_emit_semis expression_else_block expression_else

    "new line, semicolon"  shift, and go to state 154

    $default  reduce using rule 70 (optional_emit_semis)

    emit_semis           go to state 155
    optional_emit_semis  go to state 1593


State 1589

   90 expression_if_block: $@3 '{' expressions $@4 '}' . expression_block_finally

    "finally"  shift, and go to state 1248

    $default  reduce using rule 266 (expression_block_finally)

    expression_block_finally  go to state 1594


State 1590

  552 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 552 (struct_variable_declaration_list)


State 1591

   95 expression_else_block: $@6 '{' expressions . $@7 '}' expression_block_finally
  294 expressions: expressions . expression_any
  295            | expressions . error

    error                             shift, and go to state 890
    "struct"                          shift, and go to state 430
    "class"                           shift, and go to state 431
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 432
    "false"                           shift, and go to state 433
    "new"                             shift, and go to state 434
    "typeinfo"                        shift, and go to state 435
    "type"                            shift, and go to state 436
    "array"                           shift, and go to state 437
    "return"                          shift, and go to state 891
    "null"                            shift, and go to state 438
    "break"                           shift, and go to state 892
    "try"                             shift, and go to state 893
    "table"                           shift, and go to state 439
    "delete"                          shift, and go to state 894
    "deref"                           shift, and go to state 440
    "assume"                          shift, and go to state 895
    "cast"                            shift, and go to state 441
    "upcast"                          shift, and go to state 442
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 443
    "continue"                        shift, and go to state 896
    "pass"                            shift, and go to state 897
    "reinterpret"                     shift, and go to state 444
    "label"                           shift, and go to state 898
    "goto"                            shift, and go to state 899
    "unsafe"                          shift, and go to state 900
    "fixed_array"                     shift, and go to state 446
    "default"                         shift, and go to state 447
    "bool"                            shift, and go to state 242
    "void"                            shift, and go to state 243
    "string"                          shift, and go to state 244
    "int"                             shift, and go to state 246
    "int2"                            shift, and go to state 247
    "int3"                            shift, and go to state 248
    "int4"                            shift, and go to state 249
    "uint"                            shift, and go to state 250
    "bitfield"                        shift, and go to state 448
    "uint2"                           shift, and go to state 252
    "uint3"                           shift, and go to state 253
    "uint4"                           shift, and go to state 254
    "float"                           shift, and go to state 255
    "float2"                          shift, and go to state 256
    "float3"                          shift, and go to state 257
    "float4"                          shift, and go to state 258
    "range"                           shift, and go to state 259
    "urange"                          shift, and go to state 260
    "range64"                         shift, and go to state 261
    "urange64"                        shift, and go to state 262
    "int64"                           shift, and go to state 264
    "uint64"                          shift, and go to state 265
    "double"                          shift, and go to state 266
    "int8"                            shift, and go to state 269
    "uint8"                           shift, and go to state 270
    "int16"                           shift, and go to state 271
    "uint16"                          shift, and go to state 272
    "tuple"                           shift, and go to state 449
    "variant"                         shift, and go to state 450
    "generator"                       shift, and go to state 451
    "yield"                           shift, and go to state 901
    "++"                              shift, and go to state 452
    "--"                              shift, and go to state 453
    "::"                              shift, and go to state 58
    "$$"                              shift, and go to state 454
    "$i"                              shift, and go to state 455
    "$v"                              shift, and go to state 456
    "$b"                              shift, and go to state 457
    "$a"                              shift, and go to state 458
    "$c"                              shift, and go to state 459
    "..."                             shift, and go to state 460
    "integer constant"                shift, and go to state 461
    "long integer constant"           shift, and go to state 462
    "unsigned integer constant"       shift, and go to state 463
    "unsigned long integer constant"  shift, and go to state 464
    "unsigned int8 constant"          shift, and go to state 465
    "floating point constant"         shift, and go to state 466
    "double constant"                 shift, and go to state 467
    "name"                            shift, and go to state 59
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 468
    '-'                               shift, and go to state 469
    '+'                               shift, and go to state 470
    '*'                               shift, and go to state 471
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 472
    '!'                               shift, and go to state 473
    '['                               shift, and go to state 474
    '('                               shift, and go to state 475
    '$'                               shift, and go to state 476
    '@'                               shift, and go to state 477
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 478

    "while"      reduce using rule 111 ($@11)
    "if"         reduce using rule 98 ($@9)
    "static_if"  reduce using rule 98 ($@9)
    "for"        reduce using rule 108 ($@10)
    "with"       reduce using rule 113 ($@12)
    '}'          reduce using rule 94 ($@7)

    SEMICOLON                         go to state 902
    string_builder                    go to state 479
    expr_reader                       go to state 480
    expression_label                  go to state 903
    expression_goto                   go to state 904
    expression_if_one_liner           go to state 905
    $@7                               go to state 1595
    expression_if_then_else           go to state 906
    $@9                               go to state 907
    expression_if_then_else_oneliner  go to state 908
    expression_for_loop               go to state 909
    $@10                              go to state 910
    expression_unsafe                 go to state 911
    expression_while_loop             go to state 912
    $@11                              go to state 913
    expression_with                   go to state 914
    $@12                              go to state 915
    expression_with_alias             go to state 916
    expr_call_pipe                    go to state 481
    expression_any                    go to state 918
    name_in_namespace                 go to state 482
    expression_delete                 go to state 919
    expr_new                          go to state 483
    expression_break                  go to state 920
    expression_continue               go to state 921
    expression_return                 go to state 922
    expression_yield                  go to state 923
    expression_try_catch              go to state 924
    kwd_let                           go to state 925
    expression_let                    go to state 926
    expr_cast                         go to state 484
    expr_type_decl                    go to state 485
    expr_type_info                    go to state 486
    block_or_lambda                   go to state 487
    expr_full_block                   go to state 488
    expr_numeric_const                go to state 489
    expr_assign                       go to state 927
    expr_named_call                   go to state 490
    expr_method_call                  go to state 491
    func_addr_expr                    go to state 492
    expr_field                        go to state 493
    expr_call                         go to state 494
    expr                              go to state 928
    expr_generator                    go to state 496
    expr_mtag                         go to state 497
    basic_type_declaration            go to state 498
    make_decl                         go to state 499
    make_struct_decl                  go to state 500
    make_tuple_call                   go to state 501
    make_dim_decl                     go to state 502
    make_table_decl                   go to state 503
    array_comprehension               go to state 504


State 1592

   97 expression_else_block: $@8 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 97 (expression_else_block)


State 1593

   74 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis . expression_else_block expression_else

    '{'       reduce using rule 93 ($@6)
    '{'       [reduce using rule 96 ($@8)]
    $default  reduce using rule 96 ($@8)

    expression_else_block  go to state 1596
    $@6                    go to state 1579
    $@8                    go to state 1580


State 1594

   90 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally .

    $default  reduce using rule 90 (expression_if_block)


State 1595

   95 expression_else_block: $@6 '{' expressions $@7 . '}' expression_block_finally

    '}'  shift, and go to state 1597


State 1596

   74 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block . expression_else

    "else"         shift, and go to state 1545
    "elif"         shift, and go to state 1546
    "static_elif"  shift, and go to state 1547

    $default  reduce using rule 72 (expression_else)

    elif_or_static_elif  go to state 1548
    expression_else      go to state 1598


State 1597

   95 expression_else_block: $@6 '{' expressions $@7 '}' . expression_block_finally

    "finally"  shift, and go to state 1248

    $default  reduce using rule 266 (expression_block_finally)

    expression_block_finally  go to state 1599


State 1598

   74 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block expression_else .

    $default  reduce using rule 74 (expression_else)


State 1599

   95 expression_else_block: $@6 '{' expressions $@7 '}' expression_block_finally .

    $default  reduce using rule 95 (expression_else_block)
