Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


State 1448 conflicts: 1 reduce/reduce
State 1541 conflicts: 1 reduce/reduce
State 1568 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration SEMICOLON
    9        | program options_declaration SEMICOLON
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program SEMICOLON

   16 COMMA: ','
   17      | "new line, comma"

   18 SEMICOLON: ';'
   19          | "new line, semicolon"

   20 top_level_reader_macro: expr_reader SEMICOLON

   21 optional_public_or_private_module: %empty
   22                                  | "public"
   23                                  | "private"

   24 module_name: '$'
   25            | "name"

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   27 character_sequence: STRING_CHARACTER
   28                   | STRING_CHARACTER_ESC
   29                   | character_sequence STRING_CHARACTER
   30                   | character_sequence STRING_CHARACTER_ESC

   31 string_constant: "start of the string" character_sequence "end of the string"
   32                | "start of the string" "end of the string"

   33 format_string: %empty
   34              | format_string STRING_CHARACTER

   35 optional_format_string: %empty

   36 $@1: %empty

   37 optional_format_string: ':' $@1 format_string

   38 string_builder_body: %empty
   39                    | string_builder_body character_sequence
   40                    | string_builder_body "{" expr optional_format_string "}"

   41 string_builder: "start of the string" string_builder_body "end of the string"

   42 reader_character_sequence: STRING_CHARACTER
   43                          | reader_character_sequence STRING_CHARACTER

   44 $@2: %empty

   45 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   46 options_declaration: "options" annotation_argument_list

   47 require_declaration: "require" require_module

   48 require_module_name: "name"
   49                    | '%' require_module_name
   50                    | require_module_name '.' "name"
   51                    | require_module_name '/' "name"

   52 require_module: require_module_name is_public_module
   53               | require_module_name "as" "name" is_public_module

   54 is_public_module: %empty
   55                 | "public"

   56 expect_declaration: "expect" expect_list

   57 expect_list: expect_error
   58            | expect_list ',' expect_error

   59 expect_error: "integer constant"
   60             | "integer constant" ':' "integer constant"

   61 expression_label: "label" "integer constant" ':'

   62 expression_goto: "goto" "label" "integer constant"
   63                | "goto" expr

   64 elif_or_static_elif: "elif"
   65                    | "static_elif"

   66 emit_semis: "new line, semicolon"
   67           | emit_semis "new line, semicolon"

   68 optional_emit_semis: %empty
   69                    | emit_semis

   70 expression_else: %empty
   71                | "else" optional_emit_semis expression_else_block
   72                | elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block expression_else

   73 if_or_static_if: "if"
   74                | "static_if"

   75 expression_else_one_liner: %empty
   76                          | "else" expression_if_one_liner

   77 expression_if_one_liner: expr
   78                        | expression_return
   79                        | expression_yield
   80                        | expression_break
   81                        | expression_continue

   82 semis: SEMICOLON
   83      | semis SEMICOLON

   84 optional_semis: %empty
   85               | semis

   86 $@3: %empty

   87 $@4: %empty

   88 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally

   89 $@5: %empty

   90 expression_if_block: $@5 expression_if_one_liner SEMICOLON

   91 $@6: %empty

   92 $@7: %empty

   93 expression_else_block: $@6 '{' expressions $@7 '}' expression_block_finally

   94 $@8: %empty

   95 expression_else_block: $@8 expression_if_one_liner SEMICOLON

   96 $@9: %empty

   97 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON

   99 for_variable_name_with_pos_list: "name"
  100                                | "$i" '(' expr ')'
  101                                | "name" "aka" "name"
  102                                | '(' tuple_expansion ')'
  103                                | for_variable_name_with_pos_list ',' "name"
  104                                | for_variable_name_with_pos_list ',' "name" "aka" "name"
  105                                | for_variable_name_with_pos_list ',' '(' tuple_expansion ')'

  106 $@10: %empty

  107 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

  108 expression_unsafe: "unsafe" optional_emit_semis expression_block

  109 $@11: %empty

  110 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis expression_block

  111 $@12: %empty

  112 expression_with: $@12 "with" '(' expr ')' optional_emit_semis expression_block

  113 expression_with_alias: "assume" "name" '=' expr

  114 annotation_argument_value: string_constant
  115                          | "name"
  116                          | "integer constant"
  117                          | "floating point constant"
  118                          | "true"
  119                          | "false"

  120 annotation_argument_value_list: annotation_argument_value
  121                               | annotation_argument_value_list ',' annotation_argument_value

  122 annotation_argument_name: "name"
  123                         | "type"
  124                         | "in"

  125 annotation_argument: annotation_argument_name '=' string_constant
  126                    | annotation_argument_name '=' "name"
  127                    | annotation_argument_name '=' "integer constant"
  128                    | annotation_argument_name '=' "floating point constant"
  129                    | annotation_argument_name '=' "true"
  130                    | annotation_argument_name '=' "false"
  131                    | annotation_argument_name
  132                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  133 annotation_argument_list: annotation_argument
  134                         | annotation_argument_list ',' annotation_argument

  135 metadata_argument_list: '@' annotation_argument optional_emit_semis
  136                       | metadata_argument_list '@' annotation_argument optional_emit_semis

  137 annotation_declaration_name: name_in_namespace
  138                            | "require"
  139                            | "private"
  140                            | "template"

  141 annotation_declaration_basic: annotation_declaration_name
  142                             | annotation_declaration_name '(' annotation_argument_list ')'

  143 annotation_declaration: annotation_declaration_basic
  144                       | '!' annotation_declaration
  145                       | annotation_declaration "&&" annotation_declaration
  146                       | annotation_declaration "||" annotation_declaration
  147                       | annotation_declaration "^^" annotation_declaration
  148                       | '(' annotation_declaration ')'
  149                       | "|>" annotation_declaration

  150 annotation_list: annotation_declaration
  151                | annotation_list ',' annotation_declaration

  152 optional_annotation_list: %empty
  153                         | '[' annotation_list ']'

  154 optional_annotation_list_with_emit_semis: %empty
  155                                         | '[' annotation_list ']' optional_emit_semis

  156 optional_function_argument_list: %empty
  157                                | '(' ')'
  158                                | '(' function_argument_list ')'

  159 optional_function_type: %empty
  160                       | ':' type_declaration

  161 function_name: "name"
  162              | "operator" '!'
  163              | "operator" '~'
  164              | "operator" "+="
  165              | "operator" "-="
  166              | "operator" "*="
  167              | "operator" "/="
  168              | "operator" "%="
  169              | "operator" "&="
  170              | "operator" "|="
  171              | "operator" "^="
  172              | "operator" "&&="
  173              | "operator" "||="
  174              | "operator" "^^="
  175              | "operator" "&&"
  176              | "operator" "||"
  177              | "operator" "^^"
  178              | "operator" '+'
  179              | "operator" '-'
  180              | "operator" '*'
  181              | "operator" '/'
  182              | "operator" '%'
  183              | "operator" '<'
  184              | "operator" '>'
  185              | "operator" ".."
  186              | "operator" "=="
  187              | "operator" "!="
  188              | "operator" "<="
  189              | "operator" ">="
  190              | "operator" '&'
  191              | "operator" '|'
  192              | "operator" '^'
  193              | "++" "operator"
  194              | "--" "operator"
  195              | "operator" "++"
  196              | "operator" "--"
  197              | "operator" "<<"
  198              | "operator" ">>"
  199              | "operator" "<<="
  200              | "operator" ">>="
  201              | "operator" "<<<"
  202              | "operator" ">>>"
  203              | "operator" "<<<="
  204              | "operator" ">>>="
  205              | "operator" '[' ']'
  206              | "operator" "?[" ']'
  207              | "operator" '.'
  208              | "operator" "?."
  209              | "operator" '.' "name"
  210              | "operator" '.' "name" ":="
  211              | "operator" "?." "name"
  212              | "operator" ":="
  213              | "operator" "delete"
  214              | "operator" "??"
  215              | "operator" "is"
  216              | "operator" "as"
  217              | "operator" "is" "name"
  218              | "operator" "as" "name"
  219              | "operator" '?' "as"
  220              | "operator" '?' "as" "name"
  221              | "bool"
  222              | "string"
  223              | "int"
  224              | "int2"
  225              | "int3"
  226              | "int4"
  227              | "uint"
  228              | "uint2"
  229              | "uint3"
  230              | "uint4"
  231              | "float"
  232              | "float2"
  233              | "float3"
  234              | "float4"
  235              | "range"
  236              | "urange"
  237              | "range64"
  238              | "urange64"
  239              | "int64"
  240              | "uint64"
  241              | "double"
  242              | "int8"
  243              | "uint8"
  244              | "int16"
  245              | "uint16"

  246 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration

  247 optional_public_or_private_function: %empty
  248                                    | "private"
  249                                    | "public"

  250 function_declaration_header: function_name optional_function_argument_list optional_function_type

  251 $@13: %empty

  252 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block

  253 expression_block_finally: %empty

  254 $@14: %empty

  255 $@15: %empty

  256 expression_block_finally: "finally" $@14 '{' expressions $@15 '}'

  257 $@16: %empty

  258 $@17: %empty

  259 expression_block: $@16 '{' expressions $@17 '}' expression_block_finally

  260 expr_call_pipe: expr_call expr_full_block_assumed_piped

  261 expression_any: SEMICOLON
  262               | expr_assign SEMICOLON
  263               | expression_delete SEMICOLON
  264               | expression_let
  265               | expression_while_loop
  266               | expression_unsafe
  267               | expression_with
  268               | expression_with_alias SEMICOLON
  269               | expression_for_loop
  270               | expression_break SEMICOLON
  271               | expression_continue SEMICOLON
  272               | expression_return SEMICOLON
  273               | expression_yield SEMICOLON
  274               | expression_if_then_else
  275               | expression_if_then_else_oneliner
  276               | expression_try_catch
  277               | expression_label SEMICOLON
  278               | expression_goto SEMICOLON
  279               | "pass" SEMICOLON

  280 expressions: %empty
  281            | expressions expression_any
  282            | expressions error

  283 optional_expr_list: %empty
  284                   | expr_list optional_comma

  285 optional_expr_map_tuple_list: %empty
  286                             | expr_map_tuple_list optional_comma

  287 type_declaration_no_options_list: type_declaration
  288                                 | type_declaration_no_options_list c_or_s type_declaration

  289 name_in_namespace: "name"
  290                  | "name" "::" "name"
  291                  | "::" "name"

  292 expression_delete: "delete" expr
  293                  | "delete" "explicit" expr

  294 $@18: %empty

  295 $@19: %empty

  296 new_type_declaration: '<' $@18 type_declaration '>' $@19
  297                     | structure_type_declaration

  298 expr_new: "new" new_type_declaration
  299         | "new" new_type_declaration '(' use_initializer ')'
  300         | "new" new_type_declaration '(' expr_list ')'
  301         | "new" new_type_declaration '(' make_struct_single ')'
  302         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  303         | "new" make_decl

  304 expression_break: "break"

  305 expression_continue: "continue"

  306 expression_return: "return"
  307                  | "return" expr
  308                  | "return" "<-" expr

  309 expression_yield: "yield" expr
  310                 | "yield" "<-" expr

  311 expression_try_catch: "try" expression_block "recover" expression_block

  312 kwd_let_var_or_nothing: "let"
  313                       | "var"
  314                       | %empty

  315 kwd_let: "let"
  316        | "var"

  317 optional_in_scope: "inscope"
  318                  | %empty

  319 tuple_expansion: "name"
  320                | tuple_expansion ',' "name"

  321 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  322                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

  323 expression_let: kwd_let optional_in_scope let_variable_declaration
  324               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  325               | kwd_let optional_in_scope '{' variable_declaration_list '}'

  326 $@20: %empty

  327 $@21: %empty

  328 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 expr

  329 $@22: %empty

  330 $@23: %empty

  331 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 expr

  332 $@24: %empty

  333 $@25: %empty

  334 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 expr

  335 $@26: %empty

  336 $@27: %empty

  337 expr_type_decl: "type" '<' $@26 type_declaration '>' $@27

  338 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  339               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  340               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  341 expr_list: expr
  342          | expr_list ',' expr

  343 block_or_simple_block: expression_block
  344                      | "=>" expr
  345                      | "=>" "<-" expr

  346 block_or_lambda: '$'
  347                | '@'
  348                | '@' '@'

  349 capture_entry: '&' "name"
  350              | '=' "name"
  351              | "<-" "name"
  352              | ":=" "name"
  353              | "name" '(' "name" ')'

  354 capture_list: capture_entry
  355             | capture_list ',' capture_entry

  356 optional_capture_list: %empty
  357                      | "capture" '(' capture_list ')'

  358 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

  359 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block
  360                              | '{' expressions '}'

  361 expr_numeric_const: "integer constant"
  362                   | "unsigned integer constant"
  363                   | "long integer constant"
  364                   | "unsigned long integer constant"
  365                   | "unsigned int8 constant"
  366                   | "floating point constant"
  367                   | "double constant"

  368 expr_assign: expr
  369            | expr '=' expr
  370            | expr "<-" expr
  371            | expr ":=" expr
  372            | expr "&=" expr
  373            | expr "|=" expr
  374            | expr "^=" expr
  375            | expr "&&=" expr
  376            | expr "||=" expr
  377            | expr "^^=" expr
  378            | expr "+=" expr
  379            | expr "-=" expr
  380            | expr "*=" expr
  381            | expr "/=" expr
  382            | expr "%=" expr
  383            | expr "<<=" expr
  384            | expr ">>=" expr
  385            | expr "<<<=" expr
  386            | expr ">>>=" expr

  387 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  388                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  389 expr_method_call: expr "->" "name" '(' ')'
  390                 | expr "->" "name" '(' expr_list ')'

  391 func_addr_name: name_in_namespace
  392               | "$i" '(' expr ')'

  393 func_addr_expr: '@' '@' func_addr_name

  394 $@28: %empty

  395 $@29: %empty

  396 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name

  397 $@30: %empty

  398 $@31: %empty

  399 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name

  400 expr_field: expr '.' "name"
  401           | expr '.' '.' "name"
  402           | expr '.' "name" '(' ')'
  403           | expr '.' "name" '(' expr_list ')'
  404           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr '.' basic_type_declaration '(' ')'
  406           | expr '.' basic_type_declaration '(' expr_list ')'

  407 $@32: %empty

  408 $@33: %empty

  409 expr_field: expr '.' $@32 error $@33

  410 expr_call: name_in_namespace '(' ')'
  411          | name_in_namespace '(' "uninitialized" ')'
  412          | name_in_namespace '(' make_struct_single ')'
  413          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  414          | name_in_namespace '(' expr_list ')'
  415          | basic_type_declaration '(' ')'
  416          | basic_type_declaration '(' expr_list ')'

  417 expr: "null"
  418     | name_in_namespace
  419     | expr_numeric_const
  420     | expr_reader
  421     | string_builder
  422     | make_decl
  423     | "true"
  424     | "false"
  425     | expr_field
  426     | expr_mtag
  427     | '!' expr
  428     | '~' expr
  429     | '+' expr
  430     | '-' expr
  431     | expr "<<" expr
  432     | expr ">>" expr
  433     | expr "<<<" expr
  434     | expr ">>>" expr
  435     | expr '+' expr
  436     | expr '-' expr
  437     | expr '*' expr
  438     | expr '/' expr
  439     | expr '%' expr
  440     | expr '<' expr
  441     | expr '>' expr
  442     | expr "==" expr
  443     | expr "!=" expr
  444     | expr "<=" expr
  445     | expr ">=" expr
  446     | expr '&' expr
  447     | expr '|' expr
  448     | expr '^' expr
  449     | expr "&&" expr
  450     | expr "||" expr
  451     | expr "^^" expr
  452     | expr ".." expr
  453     | "++" expr
  454     | "--" expr
  455     | expr "++"
  456     | expr "--"
  457     | '(' expr_list optional_comma ')'
  458     | '(' make_struct_single ')'
  459     | expr '[' expr ']'
  460     | expr '.' '[' expr ']'
  461     | expr "?[" expr ']'
  462     | expr '.' "?[" expr ']'
  463     | expr "?." "name"
  464     | expr '.' "?." "name"
  465     | func_addr_expr
  466     | expr_call
  467     | '*' expr
  468     | "deref" '(' expr ')'
  469     | "addr" '(' expr ')'
  470     | expr_generator
  471     | expr "??" expr
  472     | expr '?' expr ':' expr

  473 $@34: %empty

  474 $@35: %empty

  475 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr "is" basic_type_declaration
  477     | expr "is" "name"
  478     | expr "as" "name"

  479 $@36: %empty

  480 $@37: %empty

  481 expr: expr "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr "as" basic_type_declaration
  483     | expr '?' "as" "name"

  484 $@38: %empty

  485 $@39: %empty

  486 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr '?' "as" basic_type_declaration
  488     | expr_type_info
  489     | expr_type_decl
  490     | expr_cast
  491     | expr_new
  492     | expr_method_call
  493     | expr_named_call
  494     | expr_full_block
  495     | expr "<|" expr
  496     | expr "|>" expr
  497     | expr "|>" basic_type_declaration
  498     | expr_call_pipe
  499     | "unsafe" '(' expr ')'

  500 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  501               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  502               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

  503 expr_mtag: "$$" '(' expr ')'
  504          | "$i" '(' expr ')'
  505          | "$v" '(' expr ')'
  506          | "$b" '(' expr ')'
  507          | "$a" '(' expr ')'
  508          | "..."
  509          | "$c" '(' expr ')' '(' ')'
  510          | "$c" '(' expr ')' '(' expr_list ')'
  511          | expr '.' "$f" '(' expr ')'
  512          | expr "?." "$f" '(' expr ')'
  513          | expr '.' '.' "$f" '(' expr ')'
  514          | expr '.' "?." "$f" '(' expr ')'
  515          | expr "as" "$f" '(' expr ')'
  516          | expr '?' "as" "$f" '(' expr ')'
  517          | expr "is" "$f" '(' expr ')'
  518          | '@' '@' "$c" '(' expr ')'

  519 optional_field_annotation: %empty
  520                          | metadata_argument_list

  521 optional_override: %empty
  522                  | "override"
  523                  | "sealed"

  524 optional_constant: %empty
  525                  | "const"

  526 optional_public_or_private_member_variable: %empty
  527                                           | "public"
  528                                           | "private"

  529 optional_static_member_variable: %empty
  530                                | "static"

  531 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  532 struct_variable_declaration_list: %empty
  533                                 | struct_variable_declaration_list "new line, semicolon"

  534 $@40: %empty

  535 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration SEMICOLON

  536 $@41: %empty

  537 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON

  538 $@42: %empty

  539 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

  540 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type

  541 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type
  542                                   | "$a" '(' expr ')'

  543 function_argument_list: function_argument_declaration_no_type
  544                       | function_argument_declaration_type
  545                       | function_argument_declaration_no_type ';' function_argument_list
  546                       | function_argument_declaration_type ';' function_argument_list
  547                       | function_argument_declaration_type ',' function_argument_list

  548 tuple_type: type_declaration
  549           | "name" ':' type_declaration

  550 tuple_type_list: tuple_type
  551                | tuple_type_list c_or_s tuple_type

  552 tuple_alias_type_list: %empty
  553                      | tuple_type
  554                      | tuple_alias_type_list semis tuple_type

  555 variant_type: "name" ':' type_declaration

  556 variant_type_list: variant_type
  557                  | variant_type_list c_or_s variant_type

  558 variant_alias_type_list: %empty
  559                        | variant_type
  560                        | variant_alias_type_list semis variant_type

  561 copy_or_move: '='
  562             | "<-"

  563 variable_declaration_no_type: variable_name_with_pos_list
  564                             | variable_name_with_pos_list '&'
  565                             | variable_name_with_pos_list copy_or_move expr

  566 variable_declaration_type: variable_name_with_pos_list ':' type_declaration
  567                          | variable_name_with_pos_list ':' type_declaration copy_or_move expr

  568 variable_declaration: variable_declaration_type
  569                     | variable_declaration_no_type

  570 copy_or_move_or_clone: '='
  571                      | "<-"
  572                      | ":="

  573 optional_ref: %empty
  574             | '&'

  575 let_variable_name_with_pos_list: "name"
  576                                | "$i" '(' expr ')'
  577                                | "name" "aka" "name"
  578                                | let_variable_name_with_pos_list ',' "name"
  579                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  580 global_let_variable_name_with_pos_list: "name"
  581                                       | global_let_variable_name_with_pos_list ',' "name"

  582 variable_declaration_list: %empty
  583                          | variable_declaration_list SEMICOLON
  584                          | variable_declaration_list let_variable_declaration

  585 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  586                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  587                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  588 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  589                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  590                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  591 optional_shared: %empty
  592                | "shared"

  593 optional_public_or_private_variable: %empty
  594                                    | "private"
  595                                    | "public"

  596 global_variable_declaration_list: %empty
  597                                 | global_variable_declaration_list SEMICOLON

  598 $@43: %empty

  599 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation let_variable_declaration

  600 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  601 $@44: %empty

  602 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

  603 enum_expression: "name"
  604                | "name" '=' expr

  605 commas: COMMA
  606       | commas COMMA

  607 enum_list: %empty
  608          | enum_expression
  609          | enum_list commas enum_expression

  610 optional_public_or_private_alias: %empty
  611                                 | "private"
  612                                 | "public"

  613 $@45: %empty

  614 single_alias: optional_public_or_private_alias "name" $@45 '=' type_declaration

  615 alias_declaration: "typedef" single_alias SEMICOLON

  616 optional_public_or_private_enum: %empty
  617                                | "private"
  618                                | "public"

  619 enum_name: "name"

  620 optional_enum_basic_type_declaration: %empty
  621                                     | ':' enum_basic_type_declaration

  622 optional_commas: %empty
  623                | commas

  624 emit_commas: "new line, comma"
  625            | emit_commas "new line, comma"

  626 optional_emit_commas: %empty
  627                     | emit_commas

  628 $@46: %empty

  629 $@47: %empty

  630 $@48: %empty

  631 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

  632 optional_structure_parent: %empty
  633                          | ':' name_in_namespace

  634 optional_sealed: %empty
  635                | "sealed"

  636 structure_name: optional_sealed "name" optional_structure_parent

  637 class_or_struct: "class"
  638                | "struct"
  639                | "template" "class"
  640                | "template" "struct"

  641 optional_public_or_private_structure: %empty
  642                                     | "private"
  643                                     | "public"

  644 optional_struct_variable_declaration_list: ';'
  645                                          | '{' struct_variable_declaration_list '}'

  646 $@49: %empty

  647 $@50: %empty

  648 $@51: %empty

  649 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

  650 variable_name_with_pos_list: "name"
  651                            | "$i" '(' expr ')'
  652                            | "name" "aka" "name"
  653                            | variable_name_with_pos_list ',' "name"
  654                            | variable_name_with_pos_list ',' "name" "aka" "name"

  655 basic_type_declaration: "bool"
  656                       | "string"
  657                       | "int"
  658                       | "int8"
  659                       | "int16"
  660                       | "int64"
  661                       | "int2"
  662                       | "int3"
  663                       | "int4"
  664                       | "uint"
  665                       | "uint8"
  666                       | "uint16"
  667                       | "uint64"
  668                       | "uint2"
  669                       | "uint3"
  670                       | "uint4"
  671                       | "float"
  672                       | "float2"
  673                       | "float3"
  674                       | "float4"
  675                       | "void"
  676                       | "range"
  677                       | "urange"
  678                       | "range64"
  679                       | "urange64"
  680                       | "double"
  681                       | "bitfield"

  682 enum_basic_type_declaration: "int"
  683                            | "int8"
  684                            | "int16"
  685                            | "uint"
  686                            | "uint8"
  687                            | "uint16"
  688                            | "int64"
  689                            | "uint64"

  690 structure_type_declaration: name_in_namespace

  691 auto_type_declaration: "auto"
  692                      | "auto" '(' "name" ')'
  693                      | "$t" '(' expr ')'

  694 bitfield_bits: "name"
  695              | bitfield_bits ';' "name"

  696 bitfield_alias_bits: %empty
  697                    | "name"
  698                    | bitfield_alias_bits commas "name"

  699 $@52: %empty

  700 $@53: %empty

  701 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits '>' $@53

  702 c_or_s: COMMA
  703       | SEMICOLON

  704 table_type_pair: type_declaration
  705                | type_declaration c_or_s type_declaration

  706 dim_list: '[' expr ']'
  707         | '[' ']'
  708         | dim_list '[' expr ']'
  709         | dim_list '[' ']'

  710 type_declaration_no_options: type_declaration_no_options_no_dim
  711                            | type_declaration_no_options_no_dim dim_list

  712 type_declaration_no_options_no_dim: basic_type_declaration
  713                                   | auto_type_declaration
  714                                   | bitfield_type_declaration
  715                                   | structure_type_declaration

  716 $@54: %empty

  717 $@55: %empty

  718 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' $@55
  719                                   | "typedecl" '(' expr ')'
  720                                   | '$' name_in_namespace '(' optional_expr_list ')'

  721 $@56: %empty

  722 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  723                                   | type_declaration_no_options '-' '[' ']'
  724                                   | type_declaration_no_options "explicit"
  725                                   | type_declaration_no_options "const"
  726                                   | type_declaration_no_options '-' "const"
  727                                   | type_declaration_no_options '&'
  728                                   | type_declaration_no_options '-' '&'
  729                                   | type_declaration_no_options '#'
  730                                   | type_declaration_no_options "implicit"
  731                                   | type_declaration_no_options '-' '#'
  732                                   | type_declaration_no_options "==" "const"
  733                                   | type_declaration_no_options "==" '&'
  734                                   | type_declaration_no_options '?'

  735 $@57: %empty

  736 $@58: %empty

  737 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' $@58
  738                                   | type_declaration_no_options "??"

  739 $@59: %empty

  740 $@60: %empty

  741 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' $@60

  742 $@61: %empty

  743 $@62: %empty

  744 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' $@62

  745 $@63: %empty

  746 $@64: %empty

  747 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' $@64
  748                                   | "block"

  749 $@65: %empty

  750 $@66: %empty

  751 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' $@66

  752 $@67: %empty

  753 $@68: %empty

  754 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' $@68
  755                                   | "function"

  756 $@69: %empty

  757 $@70: %empty

  758 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' $@70

  759 $@71: %empty

  760 $@72: %empty

  761 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' $@72
  762                                   | "lambda"

  763 $@73: %empty

  764 $@74: %empty

  765 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' $@74

  766 $@75: %empty

  767 $@76: %empty

  768 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' $@76

  769 $@77: %empty

  770 $@78: %empty

  771 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' $@78

  772 $@79: %empty

  773 $@80: %empty

  774 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' $@80

  775 type_declaration: type_declaration_no_options
  776                 | type_declaration '|' type_declaration_no_options
  777                 | type_declaration '|' '#'

  778 $@81: %empty

  779 $@82: %empty

  780 $@83: %empty

  781 $@84: %empty

  782 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

  783 $@85: %empty

  784 $@86: %empty

  785 $@87: %empty

  786 $@88: %empty

  787 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

  788 $@89: %empty

  789 $@90: %empty

  790 $@91: %empty

  791 $@92: %empty

  792 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

  793 make_decl: make_struct_decl
  794          | make_dim_decl
  795          | make_table_decl
  796          | array_comprehension
  797          | make_tuple_call

  798 make_struct_fields: "name" copy_or_move expr
  799                   | "name" ":=" expr
  800                   | make_struct_fields ',' "name" copy_or_move expr
  801                   | make_struct_fields ',' "name" ":=" expr
  802                   | "$f" '(' expr ')' copy_or_move expr
  803                   | "$f" '(' expr ')' ":=" expr
  804                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  805                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  806 make_variant_dim: %empty
  807                 | make_struct_fields

  808 make_struct_single: make_struct_fields optional_comma

  809 make_struct_dim_list: '(' make_struct_fields ')'
  810                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  811 make_struct_dim_decl: make_struct_fields
  812                     | make_struct_dim_list optional_comma

  813 optional_make_struct_dim_decl: make_struct_dim_decl
  814                              | %empty

  815 use_initializer: %empty
  816                | "uninitialized"

  817 $@93: %empty

  818 $@94: %empty

  819 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

  820 $@95: %empty

  821 $@96: %empty

  822 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

  823 $@97: %empty

  824 $@98: %empty

  825 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

  826 $@99: %empty

  827 $@100: %empty

  828 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 use_initializer

  829 make_map_tuple: expr "=>" expr
  830               | expr

  831 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  832 $@101: %empty

  833 $@102: %empty

  834 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  835 make_dim_decl: '[' optional_expr_list ']'

  836 $@103: %empty

  837 $@104: %empty

  838 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

  839 $@105: %empty

  840 $@106: %empty

  841 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

  842 $@107: %empty

  843 $@108: %empty

  844 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'
  845              | "array" '(' expr_list optional_comma ')'

  846 $@109: %empty

  847 $@110: %empty

  848 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'
  849              | "fixed_array" '(' expr_list optional_comma ')'

  850 $@111: %empty

  851 $@112: %empty

  852 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

  853 expr_map_tuple_list: make_map_tuple
  854                    | expr_map_tuple_list ',' make_map_tuple

  855 $@113: %empty

  856 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}'
  857                | "table" '(' expr_map_tuple_list optional_comma ')'
  858                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  859                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  860 array_comprehension_where: %empty
  861                          | ';' "where" expr

  862 optional_comma: %empty
  863               | ','

  864 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  865                    | '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  866                    | '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 144 162 427
    '#' (35) 729 731 777
    '$' (36) 24 346 720 722
    '%' (37) 45 49 182 439
    '&' (38) 190 349 446 564 574 727 728 733
    '(' (40) 72 97 98 100 102 105 107 110 112 132 142 148 157 158 299 300 301 302 321 322 338 339 340 353 357 387 388 389 390 392 402 403 404 405 406 410 411 412 413 414 415 416 457 458 468 469 499 500 501 503 504 505 506 507 509 510 511 512 513 514 515 516 517 518 542 576 651 692 693 719 720 722 802 803 804 805 809 810 819 822 825 831 834 838 841 844 845 848 849 852 857 858 859 864 865 866
    ')' (41) 72 97 98 100 102 105 107 110 112 132 142 148 157 158 299 300 301 302 321 322 338 339 340 353 357 387 388 389 390 392 402 403 404 405 406 410 411 412 413 414 415 416 457 458 468 469 499 500 501 503 504 505 506 507 509 510 511 512 513 514 515 516 517 518 542 576 651 692 693 719 720 722 802 803 804 805 809 810 819 822 825 831 834 838 841 844 845 848 849 852 857 858 859 864 865 866
    '*' (42) 180 437 467
    '+' (43) 178 429 435
    ',' (44) 16 58 103 104 105 121 134 151 320 342 355 388 547 578 579 581 653 654 800 801 804 805 810 854 863
    '-' (45) 179 430 436 723 726 728 731
    '.' (46) 50 207 209 210 400 401 402 403 404 405 406 409 460 462 464 511 513 514
    '/' (47) 51 181 438
    ':' (58) 37 60 61 160 321 472 549 555 566 567 585 586 588 589 621 633
    ';' (59) 18 545 546 644 695 861 864 865 866
    '<' (60) 183 296 328 331 334 337 339 340 396 399 440 475 481 486 500 501 502 701 718 722 737 741 744 747 751 754 758 761 765 768 771 774 819 822 825 828 834 838 841 844 848 852 858 859
    '=' (61) 113 125 126 127 128 129 130 132 350 369 561 570 604 614
    '>' (62) 184 296 328 331 334 337 339 340 396 399 441 475 481 486 500 501 502 701 718 722 737 741 744 747 751 754 758 761 765 768 771 774 819 822 825 828 834 838 841 844 848 852 858 859
    '?' (63) 219 220 472 483 486 487 516 734
    '@' (64) 135 136 347 348 393 396 399 518
    '[' (91) 153 155 205 387 388 404 459 460 706 707 708 709 723 835 864 865
    ']' (93) 153 155 205 206 387 388 404 459 460 461 462 706 707 708 709 723 835 864 865
    '^' (94) 192 448
    '{' (123) 88 93 256 259 325 360 600 631 645 782 787 792 856 866
    '|' (124) 191 447 776 777
    '}' (125) 88 93 256 259 325 360 600 631 645 782 787 792 856 866
    '~' (126) 163 428
    error (256) 282 409
    "lexer error" (258)
    "capture" (259) 357
    "struct" (260) 638 640 819 838
    "class" (261) 637 639 822
    "let" (262) 312 315
    "def" (263) 246 537 539
    "while" (264) 110
    "if" (265) 73 98
    "static_if" (266) 74
    "else" (267) 71 76
    "for" (268) 107 864 865 866
    "recover" (269) 311
    "true" (270) 118 129 423
    "false" (271) 119 130 424
    "new" (272) 298 299 300 301 302 303
    "typeinfo" (273) 338 339 340
    "type" (274) 123 337 475 481 486 718
    "in" (275) 107 124 864 865 866
    "is" (276) 215 217 475 476 477 517
    "as" (277) 53 216 218 219 220 478 481 482 483 486 487 515 516
    "elif" (278) 64
    "static_elif" (279) 65
    "array" (280) 741 838 841 844 845 848
    "return" (281) 306 307 308
    "null" (282) 417
    "break" (283) 304
    "try" (284) 311
    "options" (285) 46
    "table" (286) 744 857 858 859
    "expect" (287) 56
    "const" (288) 525 725 726 732
    "require" (289) 47 138
    "operator" (290) 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220
    "enum" (291) 631
    "finally" (292) 256
    "delete" (293) 213 292 293
    "deref" (294) 468
    "typedef" (295) 615
    "typedecl" (296) 719
    "with" (297) 112
    "aka" (298) 101 104 577 579 652 654
    "assume" (299) 113
    "cast" (300) 328
    "override" (301) 522
    "abstract" (302) 537
    "upcast" (303) 331
    "iterator" (304) 747 865
    "var" (305) 313 316
    "addr" (306) 469
    "continue" (307) 305
    "where" (308) 861
    "pass" (309) 279
    "reinterpret" (310) 334
    "module" (311) 26
    "public" (312) 22 55 249 527 595 612 618 643
    "label" (313) 61 62
    "goto" (314) 62 63
    "implicit" (315) 730
    "explicit" (316) 293 724
    "shared" (317) 592
    "private" (318) 23 139 248 528 594 611 617 642
    "smart_ptr" (319) 737
    "unsafe" (320) 108 499
    "inscope" (321) 317
    "static" (322) 530
    "fixed_array" (323) 849 852
    "default" (324) 828
    "uninitialized" (325) 302 411 413 816
    "bool" (326) 221 655
    "void" (327) 675
    "string" (328) 222 656
    "auto" (329) 691 692
    "int" (330) 223 657 682
    "int2" (331) 224 661
    "int3" (332) 225 662
    "int4" (333) 226 663
    "uint" (334) 227 664 685
    "bitfield" (335) 681 701 792
    "uint2" (336) 228 668
    "uint3" (337) 229 669
    "uint4" (338) 230 670
    "float" (339) 231 671
    "float2" (340) 232 672
    "float3" (341) 233 673
    "float4" (342) 234 674
    "range" (343) 235 676
    "urange" (344) 236 677
    "range64" (345) 237 678
    "urange64" (346) 238 679
    "block" (347) 748 751 754
    "int64" (348) 239 660 688
    "uint64" (349) 240 667 689
    "double" (350) 241 680
    "function" (351) 755 758 761
    "lambda" (352) 762 765 768
    "int8" (353) 242 658 683
    "uint8" (354) 243 665 686
    "int16" (355) 244 659 684
    "uint16" (356) 245 666 687
    "tuple" (357) 771 782 831 834 841
    "variant" (358) 774 787 825 844
    "generator" (359) 500 501 502
    "yield" (360) 309 310
    "sealed" (361) 523 635
    "template" (362) 140 639 640
    "+=" (363) 164 378
    "-=" (364) 165 379
    "/=" (365) 167 381
    "*=" (366) 166 380
    "%=" (367) 168 382
    "&=" (368) 169 372
    "|=" (369) 170 373
    "^=" (370) 171 374
    "<<" (371) 197 431
    ">>" (372) 198 432
    "++" (373) 193 195 453 455
    "--" (374) 194 196 454 456
    "<=" (375) 188 444
    "<<=" (376) 199 383
    ">>=" (377) 200 384
    ">=" (378) 189 445
    "==" (379) 186 442 732 733
    "!=" (380) 187 443
    "->" (381) 389 390
    "<-" (382) 308 310 345 351 370 562 571
    "??" (383) 214 471 738
    "?." (384) 208 211 463 464 512 514
    "?[" (385) 206 461 462
    "<|" (386) 495
    "|>" (387) 149 496 497
    ":=" (388) 210 212 352 371 572 799 801 803 805
    "<<<" (389) 201 433
    ">>>" (390) 202 434
    "<<<=" (391) 203 385
    ">>>=" (392) 204 386
    "=>" (393) 344 345 829
    "::" (394) 290 291
    "&&" (395) 145 175 449
    "||" (396) 146 176 450
    "^^" (397) 147 177 451
    "&&=" (398) 172 375
    "||=" (399) 173 376
    "^^=" (400) 174 377
    ".." (401) 185 452
    "$$" (402) 503
    "$i" (403) 100 392 504 576 651
    "$v" (404) 505
    "$b" (405) 506
    "$a" (406) 507 542
    "$t" (407) 693
    "$c" (408) 509 510 518
    "$f" (409) 511 512 513 514 515 516 517 802 803 804 805
    "..." (410) 508
    "integer constant" <i> (411) 59 60 61 62 116 127 361
    "long integer constant" <i64> (412) 363
    "unsigned integer constant" <ui> (413) 362
    "unsigned long integer constant" <ui64> (414) 364
    "unsigned int8 constant" <ui> (415) 365
    "floating point constant" <fd> (416) 117 128 366
    "double constant" <d> (417) 367
    "name" <s> (418) 25 48 50 51 53 99 101 103 104 113 115 122 126 161 209 210 211 217 218 220 289 290 291 319 320 339 340 349 350 351 352 353 389 390 400 401 402 403 404 463 464 477 478 483 549 555 575 577 578 579 580 581 603 604 614 619 636 650 652 653 654 692 694 695 697 698 782 787 792 798 799 800 801
    "new line, comma" (419) 17 624 625
    "new line, semicolon" (420) 19 66 67 533
    "start of the string" (421) 31 32 41
    STRING_CHARACTER <ch> (422) 27 29 34 42 43
    STRING_CHARACTER_ESC (423) 28 30
    "end of the string" (424) 31 32 41
    "{" (425) 40
    "}" (426) 40
    "end of failed eader macro" (427)
    UNARY_MINUS (428)
    UNARY_PLUS (429)
    PRE_INC (430)
    PRE_DEC (431)
    LLPIPE (432)
    POST_INC (433)
    POST_DEC (434)
    DEREF (435)


Nonterminals, with rules where they appear

    $accept (208)
        on left: 0
    program (209)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    COMMA (210)
        on left: 16 17
        on right: 605 606 702
    SEMICOLON (211)
        on left: 18 19
        on right: 8 9 15 20 82 83 90 95 98 261 262 263 268 270 271 272 273 277 278 279 321 322 535 537 583 585 586 587 588 589 590 597 615 703
    top_level_reader_macro (212)
        on left: 20
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 21 22 23
        on right: 26
    module_name <s> (214)
        on left: 24 25
        on right: 26
    module_declaration (215)
        on left: 26
        on right: 2
    character_sequence <s> (216)
        on left: 27 28 29 30
        on right: 29 30 31 39
    string_constant <s> (217)
        on left: 31 32
        on right: 114 125
    format_string <s> (218)
        on left: 33 34
        on right: 34 37
    optional_format_string <s> (219)
        on left: 35 37
        on right: 40
    $@1 (220)
        on left: 36
        on right: 37
    string_builder_body <pExpression> (221)
        on left: 38 39 40
        on right: 39 40 41
    string_builder <pExpression> (222)
        on left: 41
        on right: 421
    reader_character_sequence (223)
        on left: 42 43
        on right: 43 45
    expr_reader <pExpression> (224)
        on left: 45
        on right: 20 420
    $@2 (225)
        on left: 44
        on right: 45
    options_declaration (226)
        on left: 46
        on right: 9
    require_declaration (227)
        on left: 47
        on right: 8
    require_module_name <s> (228)
        on left: 48 49 50 51
        on right: 49 50 51 52 53
    require_module (229)
        on left: 52 53
        on right: 47
    is_public_module <b> (230)
        on left: 54 55
        on right: 52 53
    expect_declaration (231)
        on left: 56
        on right: 7
    expect_list (232)
        on left: 57 58
        on right: 56 58
    expect_error (233)
        on left: 59 60
        on right: 57 58
    expression_label <pExpression> (234)
        on left: 61
        on right: 277
    expression_goto <pExpression> (235)
        on left: 62 63
        on right: 278
    elif_or_static_elif <b> (236)
        on left: 64 65
        on right: 72
    emit_semis (237)
        on left: 66 67
        on right: 67 69
    optional_emit_semis (238)
        on left: 68 69
        on right: 71 72 97 107 108 110 112 135 136 155 252 358 359 502 539 649 782 787 856
    expression_else <pExpression> (239)
        on left: 70 71 72
        on right: 72 97
    if_or_static_if <b> (240)
        on left: 73 74
        on right: 97
    expression_else_one_liner <pExpression> (241)
        on left: 75 76
        on right: 98
    expression_if_one_liner <pExpression> (242)
        on left: 77 78 79 80 81
        on right: 76 90 95 98
    semis (243)
        on left: 82 83
        on right: 83 85 554 560
    optional_semis (244)
        on left: 84 85
        on right: 782 787
    expression_if_block <pExpression> (245)
        on left: 88 90
        on right: 97
    $@3 (246)
        on left: 86
        on right: 88
    $@4 (247)
        on left: 87
        on right: 88
    $@5 (248)
        on left: 89
        on right: 90
    expression_else_block <pExpression> (249)
        on left: 93 95
        on right: 71 72
    $@6 (250)
        on left: 91
        on right: 93
    $@7 (251)
        on left: 92
        on right: 93
    $@8 (252)
        on left: 94
        on right: 95
    expression_if_then_else <pExpression> (253)
        on left: 97
        on right: 274
    $@9 (254)
        on left: 96
        on right: 97
    expression_if_then_else_oneliner <pExpression> (255)
        on left: 98
        on right: 275
    for_variable_name_with_pos_list <pNameWithPosList> (256)
        on left: 99 100 101 102 103 104 105
        on right: 103 104 105 107 864 865 866
    expression_for_loop <pExpression> (257)
        on left: 107
        on right: 269
    $@10 (258)
        on left: 106
        on right: 107
    expression_unsafe <pExpression> (259)
        on left: 108
        on right: 266
    expression_while_loop <pExpression> (260)
        on left: 110
        on right: 265
    $@11 (261)
        on left: 109
        on right: 110
    expression_with <pExpression> (262)
        on left: 112
        on right: 267
    $@12 (263)
        on left: 111
        on right: 112
    expression_with_alias <pExpression> (264)
        on left: 113
        on right: 268
    annotation_argument_value <aa> (265)
        on left: 114 115 116 117 118 119
        on right: 120 121
    annotation_argument_value_list <aaList> (266)
        on left: 120 121
        on right: 121 132
    annotation_argument_name <s> (267)
        on left: 122 123 124
        on right: 125 126 127 128 129 130 131 132
    annotation_argument <aa> (268)
        on left: 125 126 127 128 129 130 131 132
        on right: 133 134 135 136
    annotation_argument_list <aaList> (269)
        on left: 133 134
        on right: 46 134 142
    metadata_argument_list <aaList> (270)
        on left: 135 136
        on right: 136 520
    annotation_declaration_name <s> (271)
        on left: 137 138 139 140
        on right: 141 142
    annotation_declaration_basic <fa> (272)
        on left: 141 142
        on right: 143
    annotation_declaration <fa> (273)
        on left: 143 144 145 146 147 148 149
        on right: 144 145 146 147 148 149 150 151
    annotation_list <faList> (274)
        on left: 150 151
        on right: 151 153 155
    optional_annotation_list <faList> (275)
        on left: 152 153
        on right: 358 359
    optional_annotation_list_with_emit_semis <faList> (276)
        on left: 154 155
        on right: 246 537 539 631 649
    optional_function_argument_list <pVarDeclList> (277)
        on left: 156 157 158
        on right: 250 358 359 399 754 761 768
    optional_function_type <pTypeDecl> (278)
        on left: 159 160
        on right: 250 358 359 399 754 761 768
    function_name <s> (279)
        on left: 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245
        on right: 250
    global_function_declaration (280)
        on left: 246
        on right: 6
    optional_public_or_private_function <b> (281)
        on left: 247 248 249
        on right: 252
    function_declaration_header <pFuncDecl> (282)
        on left: 250
        on right: 252 537 539
    function_declaration <pFuncDecl> (283)
        on left: 252
        on right: 246
    $@13 (284)
        on left: 251
        on right: 252
    expression_block_finally <pExpression> (285)
        on left: 253 256
        on right: 88 93 259
    $@14 (286)
        on left: 254
        on right: 256
    $@15 (287)
        on left: 255
        on right: 256
    expression_block <pExpression> (288)
        on left: 259
        on right: 107 108 110 112 252 311 343 359 502 539
    $@16 (289)
        on left: 257
        on right: 259
    $@17 (290)
        on left: 258
        on right: 259
    expr_call_pipe <pExpression> (291)
        on left: 260
        on right: 498
    expression_any <pExpression> (292)
        on left: 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279
        on right: 281
    expressions <pExpression> (293)
        on left: 280 281 282
        on right: 88 93 256 259 281 282 360
    optional_expr_list <pExpression> (294)
        on left: 283 284
        on right: 720 722 835 848
    optional_expr_map_tuple_list <pExpression> (295)
        on left: 285 286
        on right: 856 858 859
    type_declaration_no_options_list <pTypeDeclList> (296)
        on left: 287 288
        on right: 288 722
    name_in_namespace <s> (297)
        on left: 289 290 291
        on right: 45 137 338 339 340 387 388 391 410 411 412 413 414 418 633 690 720 722
    expression_delete <pExpression> (298)
        on left: 292 293
        on right: 263
    new_type_declaration <pTypeDecl> (299)
        on left: 296 297
        on right: 298 299 300 301 302
    $@18 (300)
        on left: 294
        on right: 296
    $@19 (301)
        on left: 295
        on right: 296
    expr_new <pExpression> (302)
        on left: 298 299 300 301 302 303
        on right: 491
    expression_break <pExpression> (303)
        on left: 304
        on right: 80 270
    expression_continue <pExpression> (304)
        on left: 305
        on right: 81 271
    expression_return <pExpression> (305)
        on left: 306 307 308
        on right: 78 272
    expression_yield <pExpression> (306)
        on left: 309 310
        on right: 79 273
    expression_try_catch <pExpression> (307)
        on left: 311
        on right: 276
    kwd_let_var_or_nothing <b> (308)
        on left: 312 313 314
        on right: 540 541
    kwd_let <b> (309)
        on left: 315 316
        on right: 323 324 325 600 602
    optional_in_scope <b> (310)
        on left: 317 318
        on right: 323 324 325
    tuple_expansion <pNameList> (311)
        on left: 319 320
        on right: 102 105 320 321 322
    tuple_expansion_variable_declaration <pVarDecl> (312)
        on left: 321 322
        on right: 324
    expression_let <pExpression> (313)
        on left: 323 324 325
        on right: 264
    expr_cast <pExpression> (314)
        on left: 328 331 334
        on right: 490
    $@20 (315)
        on left: 326
        on right: 328
    $@21 (316)
        on left: 327
        on right: 328
    $@22 (317)
        on left: 329
        on right: 331
    $@23 (318)
        on left: 330
        on right: 331
    $@24 (319)
        on left: 332
        on right: 334
    $@25 (320)
        on left: 333
        on right: 334
    expr_type_decl <pExpression> (321)
        on left: 337
        on right: 489
    $@26 (322)
        on left: 335
        on right: 337
    $@27 (323)
        on left: 336
        on right: 337
    expr_type_info <pExpression> (324)
        on left: 338 339 340
        on right: 488
    expr_list <pExpression> (325)
        on left: 341 342
        on right: 107 284 300 342 388 390 403 406 414 416 457 510 831 845 849 852 864 865 866
    block_or_simple_block <pExpression> (326)
        on left: 343 344 345
        on right: 358
    block_or_lambda <i> (327)
        on left: 346 347 348
        on right: 358 359
    capture_entry <pCapt> (328)
        on left: 349 350 351 352 353
        on right: 354 355
    capture_list <pCaptList> (329)
        on left: 354 355
        on right: 355 357
    optional_capture_list <pCaptList> (330)
        on left: 356 357
        on right: 358 359 500 501 502
    expr_full_block <pExpression> (331)
        on left: 358
        on right: 494
    expr_full_block_assumed_piped <pExpression> (332)
        on left: 359 360
        on right: 260
    expr_numeric_const <pExpression> (333)
        on left: 361 362 363 364 365 366 367
        on right: 419
    expr_assign <pExpression> (334)
        on left: 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386
        on right: 262
    expr_named_call <pExpression> (335)
        on left: 387 388
        on right: 493
    expr_method_call <pExpression> (336)
        on left: 389 390
        on right: 492
    func_addr_name <pExpression> (337)
        on left: 391 392
        on right: 393 396 399
    func_addr_expr <pExpression> (338)
        on left: 393 396 399
        on right: 465
    $@28 (339)
        on left: 394
        on right: 396
    $@29 (340)
        on left: 395
        on right: 396
    $@30 (341)
        on left: 397
        on right: 399
    $@31 (342)
        on left: 398
        on right: 399
    expr_field <pExpression> (343)
        on left: 400 401 402 403 404 405 406 409
        on right: 425
    $@32 (344)
        on left: 407
        on right: 409
    $@33 (345)
        on left: 408
        on right: 409
    expr_call <pExpression> (346)
        on left: 410 411 412 413 414 415 416
        on right: 260 466
    expr <pExpression> (347)
        on left: 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 475 476 477 478 481 482 483 486 487 488 489 490 491 492 493 494 495 496 497 498 499
        on right
    $@34 (348)
        on left: 473
        on right: 475
    $@35 (349)
        on left: 474
        on right: 475
    $@36 (350)
        on left: 479
        on right: 481
    $@37 (351)
        on left: 480
        on right: 481
    $@38 (352)
        on left: 484
        on right: 486
    $@39 (353)
        on left: 485
        on right: 486
    expr_generator <pExpression> (354)
        on left: 500 501 502
        on right: 470
    expr_mtag <pExpression> (355)
        on left: 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518
        on right: 426
    optional_field_annotation <aaList> (356)
        on left: 519 520
        on right: 531 540 541 599 602
    optional_override <i> (357)
        on left: 521 522 523
        on right: 531 539
    optional_constant <b> (358)
        on left: 524 525
        on right: 537 539
    optional_public_or_private_member_variable <b> (359)
        on left: 526 527 528
        on right: 531 537 539
    optional_static_member_variable <b> (360)
        on left: 529 530
        on right: 531 539
    structure_variable_declaration <pVarDecl> (361)
        on left: 531
        on right: 535
    struct_variable_declaration_list <pVarDeclList> (362)
        on left: 532 533 535 537 539
        on right: 533 535 537 539 645
    $@40 (363)
        on left: 534
        on right: 535
    $@41 (364)
        on left: 536
        on right: 537
    $@42 (365)
        on left: 538
        on right: 539
    function_argument_declaration_no_type <pVarDecl> (366)
        on left: 540
        on right: 543 545
    function_argument_declaration_type <pVarDecl> (367)
        on left: 541 542
        on right: 544 546 547
    function_argument_list <pVarDeclList> (368)
        on left: 543 544 545 546 547
        on right: 158 545 546 547
    tuple_type <pVarDecl> (369)
        on left: 548 549
        on right: 550 551 553 554
    tuple_type_list <pVarDeclList> (370)
        on left: 550 551
        on right: 551 771 834 841
    tuple_alias_type_list <pVarDeclList> (371)
        on left: 552 553 554
        on right: 554 782
    variant_type <pVarDecl> (372)
        on left: 555
        on right: 556 557 559 560
    variant_type_list <pVarDeclList> (373)
        on left: 556 557
        on right: 557 774 825 844
    variant_alias_type_list <pVarDeclList> (374)
        on left: 558 559 560
        on right: 560 787
    copy_or_move <b> (375)
        on left: 561 562
        on right: 565 567 798 800 802 804
    variable_declaration_no_type <pVarDecl> (376)
        on left: 563 564 565
        on right: 540 569
    variable_declaration_type <pVarDecl> (377)
        on left: 566 567
        on right: 541 568
    variable_declaration <pVarDecl> (378)
        on left: 568 569
        on right: 531
    copy_or_move_or_clone <i> (379)
        on left: 570 571 572
        on right: 321 322 586 587 589 590
    optional_ref <b> (380)
        on left: 573 574
        on right: 322 587 590
    let_variable_name_with_pos_list <pNameWithPosList> (381)
        on left: 575 576 577 578 579
        on right: 578 579 585 586 587
    global_let_variable_name_with_pos_list <pNameWithPosList> (382)
        on left: 580 581
        on right: 581 588 589 590
    variable_declaration_list <pVarDeclList> (383)
        on left: 582 583 584
        on right: 325 583 584
    let_variable_declaration <pVarDecl> (384)
        on left: 585 586 587
        on right: 323 584 599
    global_let_variable_declaration <pVarDecl> (385)
        on left: 588 589 590
        on right: 602
    optional_shared <b> (386)
        on left: 591 592
        on right: 26 600 602
    optional_public_or_private_variable <b> (387)
        on left: 593 594 595
        on right: 600 602
    global_variable_declaration_list <pVarDeclList> (388)
        on left: 596 597 599
        on right: 597 599 600
    $@43 (389)
        on left: 598
        on right: 599
    global_let (390)
        on left: 600 602
        on right: 5
    $@44 (391)
        on left: 601
        on right: 602
    enum_expression <pEnumPair> (392)
        on left: 603 604
        on right: 608 609
    commas (393)
        on left: 605 606
        on right: 606 609 623 698
    enum_list <pEnum> (394)
        on left: 607 608 609
        on right: 609 631
    optional_public_or_private_alias <b> (395)
        on left: 610 611 612
        on right: 614 782 787 792
    single_alias (396)
        on left: 614
        on right: 615
    $@45 (397)
        on left: 613
        on right: 614
    alias_declaration (398)
        on left: 615
        on right: 10
    optional_public_or_private_enum <b> (399)
        on left: 616 617 618
        on right: 631
    enum_name <pEnum> (400)
        on left: 619
        on right: 631
    optional_enum_basic_type_declaration <type> (401)
        on left: 620 621
        on right: 631
    optional_commas (402)
        on left: 622 623
        on right: 631 792
    emit_commas (403)
        on left: 624 625
        on right: 625 627
    optional_emit_commas (404)
        on left: 626 627
        on right: 631 792
    enum_declaration (405)
        on left: 631
        on right: 4
    $@46 (406)
        on left: 628
        on right: 631
    $@47 (407)
        on left: 629
        on right: 631
    $@48 (408)
        on left: 630
        on right: 631
    optional_structure_parent <s> (409)
        on left: 632 633
        on right: 636
    optional_sealed <b> (410)
        on left: 634 635
        on right: 636
    structure_name <pStructure> (411)
        on left: 636
        on right: 649
    class_or_struct <i> (412)
        on left: 637 638 639 640
        on right: 649
    optional_public_or_private_structure <b> (413)
        on left: 641 642 643
        on right: 649
    optional_struct_variable_declaration_list <pVarDeclList> (414)
        on left: 644 645
        on right: 649
    structure_declaration (415)
        on left: 649
        on right: 3
    $@49 (416)
        on left: 646
        on right: 649
    $@50 (417)
        on left: 647
        on right: 649
    $@51 (418)
        on left: 648
        on right: 649
    variable_name_with_pos_list <pNameWithPosList> (419)
        on left: 650 651 652 653 654
        on right: 563 564 565 566 567 653 654
    basic_type_declaration <type> (420)
        on left: 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681
        on right: 405 406 415 416 476 482 487 497 712
    enum_basic_type_declaration <type> (421)
        on left: 682 683 684 685 686 687 688 689
        on right: 621
    structure_type_declaration <pTypeDecl> (422)
        on left: 690
        on right: 297 715
    auto_type_declaration <pTypeDecl> (423)
        on left: 691 692 693
        on right: 713
    bitfield_bits <pNameList> (424)
        on left: 694 695
        on right: 695 701
    bitfield_alias_bits <pNameList> (425)
        on left: 696 697 698
        on right: 698 792
    bitfield_type_declaration <pTypeDecl> (426)
        on left: 701
        on right: 714
    $@52 (427)
        on left: 699
        on right: 701
    $@53 (428)
        on left: 700
        on right: 701
    c_or_s (429)
        on left: 702 703
        on right: 288 340 551 557 705 859
    table_type_pair <aTypePair> (430)
        on left: 704 705
        on right: 744
    dim_list <pTypeDecl> (431)
        on left: 706 707 708 709
        on right: 708 709 711
    type_declaration_no_options <pTypeDecl> (432)
        on left: 710 711
        on right: 321 328 331 334 396 475 500 501 502 585 586 588 589 723 724 725 726 727 728 729 730 731 732 733 734 738 775 776 819 822 828 838 848 852 858 859
    type_declaration_no_options_no_dim <pTypeDecl> (433)
        on left: 712 713 714 715 718 719 720 722 723 724 725 726 727 728 729 730 731 732 733 734 737 738 741 744 747 748 751 754 755 758 761 762 765 768 771 774
        on right: 710 711
    $@54 (434)
        on left: 716
        on right: 718
    $@55 (435)
        on left: 717
        on right: 718
    $@56 (436)
        on left: 721
        on right: 722
    $@57 (437)
        on left: 735
        on right: 737
    $@58 (438)
        on left: 736
        on right: 737
    $@59 (439)
        on left: 739
        on right: 741
    $@60 (440)
        on left: 740
        on right: 741
    $@61 (441)
        on left: 742
        on right: 744
    $@62 (442)
        on left: 743
        on right: 744
    $@63 (443)
        on left: 745
        on right: 747
    $@64 (444)
        on left: 746
        on right: 747
    $@65 (445)
        on left: 749
        on right: 751
    $@66 (446)
        on left: 750
        on right: 751
    $@67 (447)
        on left: 752
        on right: 754
    $@68 (448)
        on left: 753
        on right: 754
    $@69 (449)
        on left: 756
        on right: 758
    $@70 (450)
        on left: 757
        on right: 758
    $@71 (451)
        on left: 759
        on right: 761
    $@72 (452)
        on left: 760
        on right: 761
    $@73 (453)
        on left: 763
        on right: 765
    $@74 (454)
        on left: 764
        on right: 765
    $@75 (455)
        on left: 766
        on right: 768
    $@76 (456)
        on left: 767
        on right: 768
    $@77 (457)
        on left: 769
        on right: 771
    $@78 (458)
        on left: 770
        on right: 771
    $@79 (459)
        on left: 772
        on right: 774
    $@80 (460)
        on left: 773
        on right: 774
    type_declaration <pTypeDecl> (461)
        on left: 775 776 777
        on right: 160 287 288 296 337 481 486 548 549 555 566 567 614 704 705 718 737 741 747 751 758 765 776 777
    tuple_alias_declaration (462)
        on left: 782
        on right: 12
    $@81 (463)
        on left: 778
        on right: 782
    $@82 (464)
        on left: 779
        on right: 782
    $@83 (465)
        on left: 780
        on right: 782
    $@84 (466)
        on left: 781
        on right: 782
    variant_alias_declaration (467)
        on left: 787
        on right: 11
    $@85 (468)
        on left: 783
        on right: 787
    $@86 (469)
        on left: 784
        on right: 787
    $@87 (470)
        on left: 785
        on right: 787
    $@88 (471)
        on left: 786
        on right: 787
    bitfield_alias_declaration (472)
        on left: 792
        on right: 13
    $@89 (473)
        on left: 788
        on right: 792
    $@90 (474)
        on left: 789
        on right: 792
    $@91 (475)
        on left: 790
        on right: 792
    $@92 (476)
        on left: 791
        on right: 792
    make_decl <pExpression> (477)
        on left: 793 794 795 796 797
        on right: 303 422
    make_struct_fields <pMakeStruct> (478)
        on left: 798 799 800 801 802 803 804 805
        on right: 387 388 404 800 801 804 805 807 808 809 810 811
    make_variant_dim <pExpression> (479)
        on left: 806 807
        on right: 825 844
    make_struct_single <pExpression> (480)
        on left: 808
        on right: 301 302 412 413 458
    make_struct_dim_list <pExpression> (481)
        on left: 809 810
        on right: 810 812
    make_struct_dim_decl <pExpression> (482)
        on left: 811 812
        on right: 813
    optional_make_struct_dim_decl <pExpression> (483)
        on left: 813 814
        on right: 819 822 834 838 841
    use_initializer <b> (484)
        on left: 815 816
        on right: 299 819 822 825 828 834 838 841
    make_struct_decl <pExpression> (485)
        on left: 819 822 825 828
        on right: 793
    $@93 (486)
        on left: 817
        on right: 819
    $@94 (487)
        on left: 818
        on right: 819
    $@95 (488)
        on left: 820
        on right: 822
    $@96 (489)
        on left: 821
        on right: 822
    $@97 (490)
        on left: 823
        on right: 825
    $@98 (491)
        on left: 824
        on right: 825
    $@99 (492)
        on left: 826
        on right: 828
    $@100 (493)
        on left: 827
        on right: 828
    make_map_tuple <pExpression> (494)
        on left: 829 830
        on right: 853 854 866
    make_tuple_call <pExpression> (495)
        on left: 831 834
        on right: 797
    $@101 (496)
        on left: 832
        on right: 834
    $@102 (497)
        on left: 833
        on right: 834
    make_dim_decl <pExpression> (498)
        on left: 835 838 841 844 845 848 849 852
        on right: 794
    $@103 (499)
        on left: 836
        on right: 838
    $@104 (500)
        on left: 837
        on right: 838
    $@105 (501)
        on left: 839
        on right: 841
    $@106 (502)
        on left: 840
        on right: 841
    $@107 (503)
        on left: 842
        on right: 844
    $@108 (504)
        on left: 843
        on right: 844
    $@109 (505)
        on left: 846
        on right: 848
    $@110 (506)
        on left: 847
        on right: 848
    $@111 (507)
        on left: 850
        on right: 852
    $@112 (508)
        on left: 851
        on right: 852
    expr_map_tuple_list <pExpression> (509)
        on left: 853 854
        on right: 286 854 857
    make_table_decl <pExpression> (510)
        on left: 856 857 858 859
        on right: 795
    $@113 (511)
        on left: 855
        on right: 856
    array_comprehension_where <pExpression> (512)
        on left: 860 861
        on right: 864 865 866
    optional_comma <b> (513)
        on left: 862 863
        on right: 284 286 457 808 812 831 845 849 852 857
    array_comprehension <pExpression> (514)
        on left: 864 865 866
        on right: 796


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration SEMICOLON
    9        | program . options_declaration SEMICOLON
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . SEMICOLON

    $end                   shift, and go to state 2
    "let"                  shift, and go to state 3
    "options"              shift, and go to state 4
    "expect"               shift, and go to state 5
    "require"              shift, and go to state 6
    "typedef"              shift, and go to state 7
    "var"                  shift, and go to state 8
    "module"               shift, and go to state 9
    "bitfield"             shift, and go to state 10
    "tuple"                shift, and go to state 11
    "variant"              shift, and go to state 12
    "new line, semicolon"  shift, and go to state 13
    '%'                    shift, and go to state 14
    '['                    shift, and go to state 15
    ';'                    shift, and go to state 16

    $default  reduce using rule 154 (optional_annotation_list_with_emit_semis)

    SEMICOLON                                 go to state 17
    top_level_reader_macro                    go to state 18
    module_declaration                        go to state 19
    expr_reader                               go to state 20
    options_declaration                       go to state 21
    require_declaration                       go to state 22
    expect_declaration                        go to state 23
    optional_annotation_list_with_emit_semis  go to state 24
    global_function_declaration               go to state 25
    kwd_let                                   go to state 26
    global_let                                go to state 27
    alias_declaration                         go to state 28
    enum_declaration                          go to state 29
    structure_declaration                     go to state 30
    tuple_alias_declaration                   go to state 31
    variant_alias_declaration                 go to state 32
    bitfield_alias_declaration                go to state 33


State 2

    0 $accept: program $end .

    $default  accept


State 3

  315 kwd_let: "let" .

    $default  reduce using rule 315 (kwd_let)


State 4

   46 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 39


State 5

   56 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 40

    expect_list   go to state 41
    expect_error  go to state 42


State 6

   47 require_declaration: "require" . require_module

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 45
    require_module       go to state 46


State 7

  615 alias_declaration: "typedef" . single_alias SEMICOLON

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 610 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 49
    single_alias                      go to state 50


State 8

  316 kwd_let: "var" .

    $default  reduce using rule 316 (kwd_let)


State 9

   26 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 51
    '$'     shift, and go to state 52

    module_name  go to state 53


State 10

  792 bitfield_alias_declaration: "bitfield" . $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 788 ($@89)

    $@89  go to state 54


State 11

  782 tuple_alias_declaration: "tuple" . $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 778 ($@81)

    $@81  go to state 55


State 12

  787 variant_alias_declaration: "variant" . $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 783 ($@85)

    $@85  go to state 56


State 13

   19 SEMICOLON: "new line, semicolon" .

    $default  reduce using rule 19 (SEMICOLON)


State 14

   45 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 59


State 15

  155 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 69
    name_in_namespace             go to state 70


State 16

   18 SEMICOLON: ';' .

    $default  reduce using rule 18 (SEMICOLON)


State 17

   15 program: program SEMICOLON .

    $default  reduce using rule 15 (program)


State 18

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 19

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 20

   20 top_level_reader_macro: expr_reader . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 71


State 21

    9 program: program options_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 72


State 22

    8 program: program require_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 73


State 23

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 24

  246 global_function_declaration: optional_annotation_list_with_emit_semis . "def" function_declaration
  631 enum_declaration: optional_annotation_list_with_emit_semis . "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'
  649 structure_declaration: optional_annotation_list_with_emit_semis . $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "def"   shift, and go to state 74
    "enum"  shift, and go to state 75

    $default  reduce using rule 646 ($@49)

    $@49  go to state 76


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  600 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  602           | kwd_let . optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 77

    $default  reduce using rule 591 (optional_shared)

    optional_shared  go to state 78


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 32

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 33

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 34

  123 annotation_argument_name: "type" .

    $default  reduce using rule 123 (annotation_argument_name)


State 35

  124 annotation_argument_name: "in" .

    $default  reduce using rule 124 (annotation_argument_name)


State 36

  122 annotation_argument_name: "name" .

    $default  reduce using rule 122 (annotation_argument_name)


State 37

  125 annotation_argument: annotation_argument_name . '=' string_constant
  126                    | annotation_argument_name . '=' "name"
  127                    | annotation_argument_name . '=' "integer constant"
  128                    | annotation_argument_name . '=' "floating point constant"
  129                    | annotation_argument_name . '=' "true"
  130                    | annotation_argument_name . '=' "false"
  131                    | annotation_argument_name .
  132                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 79

    $default  reduce using rule 131 (annotation_argument)


State 38

  133 annotation_argument_list: annotation_argument .

    $default  reduce using rule 133 (annotation_argument_list)


State 39

   46 options_declaration: "options" annotation_argument_list .
  134 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 80

    $default  reduce using rule 46 (options_declaration)


State 40

   59 expect_error: "integer constant" .
   60             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 81

    $default  reduce using rule 59 (expect_error)


State 41

   56 expect_declaration: "expect" expect_list .
   58 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 82

    $default  reduce using rule 56 (expect_declaration)


State 42

   57 expect_list: expect_error .

    $default  reduce using rule 57 (expect_list)


State 43

   48 require_module_name: "name" .

    $default  reduce using rule 48 (require_module_name)


State 44

   49 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 43
    '%'     shift, and go to state 44

    require_module_name  go to state 83


State 45

   50 require_module_name: require_module_name . '.' "name"
   51                    | require_module_name . '/' "name"
   52 require_module: require_module_name . is_public_module
   53               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 84
    "public"  shift, and go to state 85
    '/'       shift, and go to state 86
    '.'       shift, and go to state 87

    $default  reduce using rule 54 (is_public_module)

    is_public_module  go to state 88


State 46

   47 require_declaration: "require" require_module .

    $default  reduce using rule 47 (require_declaration)


State 47

  612 optional_public_or_private_alias: "public" .

    $default  reduce using rule 612 (optional_public_or_private_alias)


State 48

  611 optional_public_or_private_alias: "private" .

    $default  reduce using rule 611 (optional_public_or_private_alias)


State 49

  614 single_alias: optional_public_or_private_alias . "name" $@45 '=' type_declaration

    "name"  shift, and go to state 89


State 50

  615 alias_declaration: "typedef" single_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 90


State 51

   25 module_name: "name" .

    $default  reduce using rule 25 (module_name)


State 52

   24 module_name: '$' .

    $default  reduce using rule 24 (module_name)


State 53

   26 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 77

    $default  reduce using rule 591 (optional_shared)

    optional_shared  go to state 91


State 54

  792 bitfield_alias_declaration: "bitfield" $@89 . optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 610 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 92


State 55

  782 tuple_alias_declaration: "tuple" $@81 . optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 610 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 93


State 56

  787 variant_alias_declaration: "variant" $@85 . optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "public"   shift, and go to state 47
    "private"  shift, and go to state 48

    $default  reduce using rule 610 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 94


State 57

  291 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 95


State 58

  289 name_in_namespace: "name" .
  290                  | "name" . "::" "name"

    "::"  shift, and go to state 96

    $default  reduce using rule 289 (name_in_namespace)


State 59

   45 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 44 ($@2)

    $@2  go to state 97


State 60

  138 annotation_declaration_name: "require" .

    $default  reduce using rule 138 (annotation_declaration_name)


State 61

  139 annotation_declaration_name: "private" .

    $default  reduce using rule 139 (annotation_declaration_name)


State 62

  140 annotation_declaration_name: "template" .

    $default  reduce using rule 140 (annotation_declaration_name)


State 63

  149 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 98
    name_in_namespace             go to state 70


State 64

  144 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 99
    name_in_namespace             go to state 70


State 65

  148 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 100
    name_in_namespace             go to state 70


State 66

  141 annotation_declaration_basic: annotation_declaration_name .
  142                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 101

    $default  reduce using rule 141 (annotation_declaration_basic)


State 67

  143 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 143 (annotation_declaration)


State 68

  145 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  146                       | annotation_declaration . "||" annotation_declaration
  147                       | annotation_declaration . "^^" annotation_declaration
  150 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 150 (annotation_list)


State 69

  151 annotation_list: annotation_list . ',' annotation_declaration
  155 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 105
    ']'  shift, and go to state 106


State 70

  137 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 137 (annotation_declaration_name)


State 71

   20 top_level_reader_macro: expr_reader SEMICOLON .

    $default  reduce using rule 20 (top_level_reader_macro)


State 72

    9 program: program options_declaration SEMICOLON .

    $default  reduce using rule 9 (program)


State 73

    8 program: program require_declaration SEMICOLON .

    $default  reduce using rule 8 (program)


State 74

  246 global_function_declaration: optional_annotation_list_with_emit_semis "def" . function_declaration

    "public"   shift, and go to state 107
    "private"  shift, and go to state 108

    $default  reduce using rule 247 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 109
    function_declaration                 go to state 110


State 75

  631 enum_declaration: optional_annotation_list_with_emit_semis "enum" . $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    $default  reduce using rule 628 ($@46)

    $@46  go to state 111


State 76

  649 structure_declaration: optional_annotation_list_with_emit_semis $@49 . class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 112
    "class"     shift, and go to state 113
    "template"  shift, and go to state 114

    class_or_struct  go to state 115


State 77

  592 optional_shared: "shared" .

    $default  reduce using rule 592 (optional_shared)


State 78

  600 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  602           | kwd_let optional_shared . optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 593 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 118


State 79

  125 annotation_argument: annotation_argument_name '=' . string_constant
  126                    | annotation_argument_name '=' . "name"
  127                    | annotation_argument_name '=' . "integer constant"
  128                    | annotation_argument_name '=' . "floating point constant"
  129                    | annotation_argument_name '=' . "true"
  130                    | annotation_argument_name '=' . "false"
  132                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 119
    "false"                    shift, and go to state 120
    "integer constant"         shift, and go to state 121
    "floating point constant"  shift, and go to state 122
    "name"                     shift, and go to state 123
    "start of the string"      shift, and go to state 124
    '('                        shift, and go to state 125

    string_constant  go to state 126


State 80

  134 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 127


State 81

   60 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 128


State 82

   58 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 40

    expect_error  go to state 129


State 83

   49 require_module_name: '%' require_module_name .
   50                    | require_module_name . '.' "name"
   51                    | require_module_name . '/' "name"

    '.'  shift, and go to state 87

    $default  reduce using rule 49 (require_module_name)


State 84

   53 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 130


State 85

   55 is_public_module: "public" .

    $default  reduce using rule 55 (is_public_module)


State 86

   51 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 131


State 87

   50 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 132


State 88

   52 require_module: require_module_name is_public_module .

    $default  reduce using rule 52 (require_module)


State 89

  614 single_alias: optional_public_or_private_alias "name" . $@45 '=' type_declaration

    $default  reduce using rule 613 ($@45)

    $@45  go to state 133


State 90

  615 alias_declaration: "typedef" single_alias SEMICOLON .

    $default  reduce using rule 615 (alias_declaration)


State 91

   26 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 134
    "private"  shift, and go to state 135

    $default  reduce using rule 21 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 136


State 92

  792 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias . "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "name"  shift, and go to state 137


State 93

  782 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias . "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "name"  shift, and go to state 138


State 94

  787 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias . "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "name"  shift, and go to state 139


State 95

  291 name_in_namespace: "::" "name" .

    $default  reduce using rule 291 (name_in_namespace)


State 96

  290 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 140


State 97

   45 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 141

    reader_character_sequence  go to state 142


State 98

  145 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  146                       | annotation_declaration . "||" annotation_declaration
  147                       | annotation_declaration . "^^" annotation_declaration
  149                       | "|>" annotation_declaration .

    $default  reduce using rule 149 (annotation_declaration)


State 99

  144 annotation_declaration: '!' annotation_declaration .
  145                       | annotation_declaration . "&&" annotation_declaration
  146                       | annotation_declaration . "||" annotation_declaration
  147                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 144 (annotation_declaration)


State 100

  145 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  146                       | annotation_declaration . "||" annotation_declaration
  147                       | annotation_declaration . "^^" annotation_declaration
  148                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104
    ')'   shift, and go to state 143


State 101

  142 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 144


State 102

  145 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 145
    name_in_namespace             go to state 70


State 103

  146 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 146
    name_in_namespace             go to state 70


State 104

  147 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 147
    name_in_namespace             go to state 70


State 105

  151 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 148
    name_in_namespace             go to state 70


State 106

  155 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 151


State 107

  249 optional_public_or_private_function: "public" .

    $default  reduce using rule 249 (optional_public_or_private_function)


State 108

  248 optional_public_or_private_function: "private" .

    $default  reduce using rule 248 (optional_public_or_private_function)


State 109

  252 function_declaration: optional_public_or_private_function . $@13 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 251 ($@13)

    $@13  go to state 152


State 110

  246 global_function_declaration: optional_annotation_list_with_emit_semis "def" function_declaration .

    $default  reduce using rule 246 (global_function_declaration)


State 111

  631 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "public"   shift, and go to state 153
    "private"  shift, and go to state 154

    $default  reduce using rule 616 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 155


State 112

  638 class_or_struct: "struct" .

    $default  reduce using rule 638 (class_or_struct)


State 113

  637 class_or_struct: "class" .

    $default  reduce using rule 637 (class_or_struct)


State 114

  639 class_or_struct: "template" . "class"
  640                | "template" . "struct"

    "struct"  shift, and go to state 156
    "class"   shift, and go to state 157


State 115

  649 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct . optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "public"   shift, and go to state 158
    "private"  shift, and go to state 159

    $default  reduce using rule 641 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 160


State 116

  595 optional_public_or_private_variable: "public" .

    $default  reduce using rule 595 (optional_public_or_private_variable)


State 117

  594 optional_public_or_private_variable: "private" .

    $default  reduce using rule 594 (optional_public_or_private_variable)


State 118

  600 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  602           | kwd_let optional_shared optional_public_or_private_variable . $@44 optional_field_annotation global_let_variable_declaration

    '{'  shift, and go to state 161

    $default  reduce using rule 601 ($@44)

    $@44  go to state 162


State 119

  129 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 129 (annotation_argument)


State 120

  130 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 130 (annotation_argument)


State 121

  127 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 127 (annotation_argument)


State 122

  128 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 128 (annotation_argument)


State 123

  126 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 126 (annotation_argument)


State 124

   31 string_constant: "start of the string" . character_sequence "end of the string"
   32                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 165

    character_sequence  go to state 166


State 125

  132 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant                 go to state 172
    annotation_argument_value       go to state 173
    annotation_argument_value_list  go to state 174


State 126

  125 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 125 (annotation_argument)


State 127

  134 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 134 (annotation_argument_list)


State 128

   60 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 60 (expect_error)


State 129

   58 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 58 (expect_list)


State 130

   53 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 85

    $default  reduce using rule 54 (is_public_module)

    is_public_module  go to state 175


State 131

   51 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 51 (require_module_name)


State 132

   50 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 50 (require_module_name)


State 133

  614 single_alias: optional_public_or_private_alias "name" $@45 . '=' type_declaration

    '='  shift, and go to state 176


State 134

   22 optional_public_or_private_module: "public" .

    $default  reduce using rule 22 (optional_public_or_private_module)


State 135

   23 optional_public_or_private_module: "private" .

    $default  reduce using rule 23 (optional_public_or_private_module)


State 136

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 26 (module_declaration)


State 137

  792 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" . optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    "new line, comma"  shift, and go to state 177

    $default  reduce using rule 626 (optional_emit_commas)

    emit_commas           go to state 178
    optional_emit_commas  go to state 179


State 138

  782 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" . optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 180


State 139

  787 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" . optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 181


State 140

  290 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 290 (name_in_namespace)


State 141

   42 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 42 (reader_character_sequence)


State 142

   43 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   45 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 182

    $default  reduce using rule 45 (expr_reader)


State 143

  148 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 148 (annotation_declaration)


State 144

  134 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  142 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 80
    ')'  shift, and go to state 183


State 145

  145 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  145                       | annotation_declaration "&&" annotation_declaration .
  146                       | annotation_declaration . "||" annotation_declaration
  147                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 145 (annotation_declaration)


State 146

  145 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  146                       | annotation_declaration . "||" annotation_declaration
  146                       | annotation_declaration "||" annotation_declaration .
  147                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 102
    "^^"  shift, and go to state 104

    $default  reduce using rule 146 (annotation_declaration)


State 147

  145 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  146                       | annotation_declaration . "||" annotation_declaration
  147                       | annotation_declaration . "^^" annotation_declaration
  147                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 102

    $default  reduce using rule 147 (annotation_declaration)


State 148

  145 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  146                       | annotation_declaration . "||" annotation_declaration
  147                       | annotation_declaration . "^^" annotation_declaration
  151 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 102
    "||"  shift, and go to state 103
    "^^"  shift, and go to state 104

    $default  reduce using rule 151 (annotation_list)


State 149

   66 emit_semis: "new line, semicolon" .

    $default  reduce using rule 66 (emit_semis)


State 150

   67 emit_semis: emit_semis . "new line, semicolon"
   69 optional_emit_semis: emit_semis .

    "new line, semicolon"  shift, and go to state 184

    $default  reduce using rule 69 (optional_emit_semis)


State 151

  155 optional_annotation_list_with_emit_semis: '[' annotation_list ']' optional_emit_semis .

    $default  reduce using rule 155 (optional_annotation_list_with_emit_semis)


State 152

  252 function_declaration: optional_public_or_private_function $@13 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 215


State 153

  618 optional_public_or_private_enum: "public" .

    $default  reduce using rule 618 (optional_public_or_private_enum)


State 154

  617 optional_public_or_private_enum: "private" .

    $default  reduce using rule 617 (optional_public_or_private_enum)


State 155

  631 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "name"  shift, and go to state 216

    enum_name  go to state 217


State 156

  640 class_or_struct: "template" "struct" .

    $default  reduce using rule 640 (class_or_struct)


State 157

  639 class_or_struct: "template" "class" .

    $default  reduce using rule 639 (class_or_struct)


State 158

  643 optional_public_or_private_structure: "public" .

    $default  reduce using rule 643 (optional_public_or_private_structure)


State 159

  642 optional_public_or_private_structure: "private" .

    $default  reduce using rule 642 (optional_public_or_private_structure)


State 160

  649 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure . $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    $default  reduce using rule 647 ($@50)

    $@50  go to state 218


State 161

  600 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 596 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 219


State 162

  602 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 220

    $default  reduce using rule 519 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 222


State 163

   27 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 27 (character_sequence)


State 164

   28 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 28 (character_sequence)


State 165

   32 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 32 (string_constant)


State 166

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   31 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224
    "end of the string"   shift, and go to state 225


State 167

  118 annotation_argument_value: "true" .

    $default  reduce using rule 118 (annotation_argument_value)


State 168

  119 annotation_argument_value: "false" .

    $default  reduce using rule 119 (annotation_argument_value)


State 169

  116 annotation_argument_value: "integer constant" .

    $default  reduce using rule 116 (annotation_argument_value)


State 170

  117 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 117 (annotation_argument_value)


State 171

  115 annotation_argument_value: "name" .

    $default  reduce using rule 115 (annotation_argument_value)


State 172

  114 annotation_argument_value: string_constant .

    $default  reduce using rule 114 (annotation_argument_value)


State 173

  120 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 120 (annotation_argument_value_list)


State 174

  121 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  132 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 226
    ')'  shift, and go to state 227


State 175

   53 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 53 (require_module)


State 176

  614 single_alias: optional_public_or_private_alias "name" $@45 '=' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 276


State 177

  624 emit_commas: "new line, comma" .

    $default  reduce using rule 624 (emit_commas)


State 178

  625 emit_commas: emit_commas . "new line, comma"
  627 optional_emit_commas: emit_commas .

    "new line, comma"  shift, and go to state 277

    $default  reduce using rule 627 (optional_emit_commas)


State 179

  792 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas . $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 789 ($@90)

    $@90  go to state 278


State 180

  782 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis . $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 779 ($@82)

    $@82  go to state 279


State 181

  787 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis . $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 784 ($@86)

    $@86  go to state 280


State 182

   43 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 43 (reader_character_sequence)


State 183

  142 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 142 (annotation_declaration_basic)


State 184

   67 emit_semis: emit_semis "new line, semicolon" .

    $default  reduce using rule 67 (emit_semis)


State 185

  162 function_name: "operator" . '!'
  163              | "operator" . '~'
  164              | "operator" . "+="
  165              | "operator" . "-="
  166              | "operator" . "*="
  167              | "operator" . "/="
  168              | "operator" . "%="
  169              | "operator" . "&="
  170              | "operator" . "|="
  171              | "operator" . "^="
  172              | "operator" . "&&="
  173              | "operator" . "||="
  174              | "operator" . "^^="
  175              | "operator" . "&&"
  176              | "operator" . "||"
  177              | "operator" . "^^"
  178              | "operator" . '+'
  179              | "operator" . '-'
  180              | "operator" . '*'
  181              | "operator" . '/'
  182              | "operator" . '%'
  183              | "operator" . '<'
  184              | "operator" . '>'
  185              | "operator" . ".."
  186              | "operator" . "=="
  187              | "operator" . "!="
  188              | "operator" . "<="
  189              | "operator" . ">="
  190              | "operator" . '&'
  191              | "operator" . '|'
  192              | "operator" . '^'
  195              | "operator" . "++"
  196              | "operator" . "--"
  197              | "operator" . "<<"
  198              | "operator" . ">>"
  199              | "operator" . "<<="
  200              | "operator" . ">>="
  201              | "operator" . "<<<"
  202              | "operator" . ">>>"
  203              | "operator" . "<<<="
  204              | "operator" . ">>>="
  205              | "operator" . '[' ']'
  206              | "operator" . "?[" ']'
  207              | "operator" . '.'
  208              | "operator" . "?."
  209              | "operator" . '.' "name"
  210              | "operator" . '.' "name" ":="
  211              | "operator" . "?." "name"
  212              | "operator" . ":="
  213              | "operator" . "delete"
  214              | "operator" . "??"
  215              | "operator" . "is"
  216              | "operator" . "as"
  217              | "operator" . "is" "name"
  218              | "operator" . "as" "name"
  219              | "operator" . '?' "as"
  220              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 281
    "as"      shift, and go to state 282
    "delete"  shift, and go to state 283
    "+="      shift, and go to state 284
    "-="      shift, and go to state 285
    "/="      shift, and go to state 286
    "*="      shift, and go to state 287
    "%="      shift, and go to state 288
    "&="      shift, and go to state 289
    "|="      shift, and go to state 290
    "^="      shift, and go to state 291
    "<<"      shift, and go to state 292
    ">>"      shift, and go to state 293
    "++"      shift, and go to state 294
    "--"      shift, and go to state 295
    "<="      shift, and go to state 296
    "<<="     shift, and go to state 297
    ">>="     shift, and go to state 298
    ">="      shift, and go to state 299
    "=="      shift, and go to state 300
    "!="      shift, and go to state 301
    "??"      shift, and go to state 302
    "?."      shift, and go to state 303
    "?["      shift, and go to state 304
    ":="      shift, and go to state 305
    "<<<"     shift, and go to state 306
    ">>>"     shift, and go to state 307
    "<<<="    shift, and go to state 308
    ">>>="    shift, and go to state 309
    "&&"      shift, and go to state 310
    "||"      shift, and go to state 311
    "^^"      shift, and go to state 312
    "&&="     shift, and go to state 313
    "||="     shift, and go to state 314
    "^^="     shift, and go to state 315
    ".."      shift, and go to state 316
    '?'       shift, and go to state 317
    '|'       shift, and go to state 318
    '^'       shift, and go to state 319
    '&'       shift, and go to state 320
    '<'       shift, and go to state 321
    '>'       shift, and go to state 322
    '-'       shift, and go to state 323
    '+'       shift, and go to state 324
    '*'       shift, and go to state 325
    '/'       shift, and go to state 326
    '%'       shift, and go to state 327
    '~'       shift, and go to state 328
    '!'       shift, and go to state 329
    '.'       shift, and go to state 330
    '['       shift, and go to state 331


State 186

  221 function_name: "bool" .

    $default  reduce using rule 221 (function_name)


State 187

  222 function_name: "string" .

    $default  reduce using rule 222 (function_name)


State 188

  223 function_name: "int" .

    $default  reduce using rule 223 (function_name)


State 189

  224 function_name: "int2" .

    $default  reduce using rule 224 (function_name)


State 190

  225 function_name: "int3" .

    $default  reduce using rule 225 (function_name)


State 191

  226 function_name: "int4" .

    $default  reduce using rule 226 (function_name)


State 192

  227 function_name: "uint" .

    $default  reduce using rule 227 (function_name)


State 193

  228 function_name: "uint2" .

    $default  reduce using rule 228 (function_name)


State 194

  229 function_name: "uint3" .

    $default  reduce using rule 229 (function_name)


State 195

  230 function_name: "uint4" .

    $default  reduce using rule 230 (function_name)


State 196

  231 function_name: "float" .

    $default  reduce using rule 231 (function_name)


State 197

  232 function_name: "float2" .

    $default  reduce using rule 232 (function_name)


State 198

  233 function_name: "float3" .

    $default  reduce using rule 233 (function_name)


State 199

  234 function_name: "float4" .

    $default  reduce using rule 234 (function_name)


State 200

  235 function_name: "range" .

    $default  reduce using rule 235 (function_name)


State 201

  236 function_name: "urange" .

    $default  reduce using rule 236 (function_name)


State 202

  237 function_name: "range64" .

    $default  reduce using rule 237 (function_name)


State 203

  238 function_name: "urange64" .

    $default  reduce using rule 238 (function_name)


State 204

  239 function_name: "int64" .

    $default  reduce using rule 239 (function_name)


State 205

  240 function_name: "uint64" .

    $default  reduce using rule 240 (function_name)


State 206

  241 function_name: "double" .

    $default  reduce using rule 241 (function_name)


State 207

  242 function_name: "int8" .

    $default  reduce using rule 242 (function_name)


State 208

  243 function_name: "uint8" .

    $default  reduce using rule 243 (function_name)


State 209

  244 function_name: "int16" .

    $default  reduce using rule 244 (function_name)


State 210

  245 function_name: "uint16" .

    $default  reduce using rule 245 (function_name)


State 211

  193 function_name: "++" . "operator"

    "operator"  shift, and go to state 332


State 212

  194 function_name: "--" . "operator"

    "operator"  shift, and go to state 333


State 213

  161 function_name: "name" .

    $default  reduce using rule 161 (function_name)


State 214

  250 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 334

    $default  reduce using rule 156 (optional_function_argument_list)

    optional_function_argument_list  go to state 335


State 215

  252 function_declaration: optional_public_or_private_function $@13 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 336


State 216

  619 enum_name: "name" .

    $default  reduce using rule 619 (enum_name)


State 217

  631 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    ':'  shift, and go to state 337

    $default  reduce using rule 620 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 338


State 218

  649 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 . structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 339

    $default  reduce using rule 634 (optional_sealed)

    optional_sealed  go to state 340
    structure_name   go to state 341


State 219

  597 global_variable_declaration_list: global_variable_declaration_list . SEMICOLON
  599                                 | global_variable_declaration_list . $@43 optional_field_annotation let_variable_declaration
  600 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 342

    $default  reduce using rule 598 ($@43)

    SEMICOLON  go to state 343
    $@43       go to state 344


State 220

  135 metadata_argument_list: '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 345


State 221

  136 metadata_argument_list: metadata_argument_list . '@' annotation_argument optional_emit_semis
  520 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 346

    $default  reduce using rule 520 (optional_field_annotation)


State 222

  602 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 347

    global_let_variable_name_with_pos_list  go to state 348
    global_let_variable_declaration         go to state 349


State 223

   29 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 29 (character_sequence)


State 224

   30 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 30 (character_sequence)


State 225

   31 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 31 (string_constant)


State 226

  121 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 167
    "false"                    shift, and go to state 168
    "integer constant"         shift, and go to state 169
    "floating point constant"  shift, and go to state 170
    "name"                     shift, and go to state 171
    "start of the string"      shift, and go to state 124

    string_constant            go to state 172
    annotation_argument_value  go to state 350


State 227

  132 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 132 (annotation_argument)


State 228

  718 type_declaration_no_options_no_dim: "type" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 351


State 229

  741 type_declaration_no_options_no_dim: "array" . '<' $@59 type_declaration '>' $@60

    '<'  shift, and go to state 352


State 230

  744 type_declaration_no_options_no_dim: "table" . '<' $@61 table_type_pair '>' $@62

    '<'  shift, and go to state 353


State 231

  719 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 354


State 232

  747 type_declaration_no_options_no_dim: "iterator" . '<' $@63 type_declaration '>' $@64

    '<'  shift, and go to state 355


State 233

  737 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@57 type_declaration '>' $@58

    '<'  shift, and go to state 356


State 234

  655 basic_type_declaration: "bool" .

    $default  reduce using rule 655 (basic_type_declaration)


State 235

  675 basic_type_declaration: "void" .

    $default  reduce using rule 675 (basic_type_declaration)


State 236

  656 basic_type_declaration: "string" .

    $default  reduce using rule 656 (basic_type_declaration)


State 237

  691 auto_type_declaration: "auto" .
  692                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 357

    $default  reduce using rule 691 (auto_type_declaration)


State 238

  657 basic_type_declaration: "int" .

    $default  reduce using rule 657 (basic_type_declaration)


State 239

  661 basic_type_declaration: "int2" .

    $default  reduce using rule 661 (basic_type_declaration)


State 240

  662 basic_type_declaration: "int3" .

    $default  reduce using rule 662 (basic_type_declaration)


State 241

  663 basic_type_declaration: "int4" .

    $default  reduce using rule 663 (basic_type_declaration)


State 242

  664 basic_type_declaration: "uint" .

    $default  reduce using rule 664 (basic_type_declaration)


State 243

  681 basic_type_declaration: "bitfield" .
  701 bitfield_type_declaration: "bitfield" . '<' $@52 bitfield_bits '>' $@53

    '<'  shift, and go to state 358

    $default  reduce using rule 681 (basic_type_declaration)


State 244

  668 basic_type_declaration: "uint2" .

    $default  reduce using rule 668 (basic_type_declaration)


State 245

  669 basic_type_declaration: "uint3" .

    $default  reduce using rule 669 (basic_type_declaration)


State 246

  670 basic_type_declaration: "uint4" .

    $default  reduce using rule 670 (basic_type_declaration)


State 247

  671 basic_type_declaration: "float" .

    $default  reduce using rule 671 (basic_type_declaration)


State 248

  672 basic_type_declaration: "float2" .

    $default  reduce using rule 672 (basic_type_declaration)


State 249

  673 basic_type_declaration: "float3" .

    $default  reduce using rule 673 (basic_type_declaration)


State 250

  674 basic_type_declaration: "float4" .

    $default  reduce using rule 674 (basic_type_declaration)


State 251

  676 basic_type_declaration: "range" .

    $default  reduce using rule 676 (basic_type_declaration)


State 252

  677 basic_type_declaration: "urange" .

    $default  reduce using rule 677 (basic_type_declaration)


State 253

  678 basic_type_declaration: "range64" .

    $default  reduce using rule 678 (basic_type_declaration)


State 254

  679 basic_type_declaration: "urange64" .

    $default  reduce using rule 679 (basic_type_declaration)


State 255

  748 type_declaration_no_options_no_dim: "block" .
  751                                   | "block" . '<' $@65 type_declaration '>' $@66
  754                                   | "block" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 359

    $default  reduce using rule 748 (type_declaration_no_options_no_dim)


State 256

  660 basic_type_declaration: "int64" .

    $default  reduce using rule 660 (basic_type_declaration)


State 257

  667 basic_type_declaration: "uint64" .

    $default  reduce using rule 667 (basic_type_declaration)


State 258

  680 basic_type_declaration: "double" .

    $default  reduce using rule 680 (basic_type_declaration)


State 259

  755 type_declaration_no_options_no_dim: "function" .
  758                                   | "function" . '<' $@69 type_declaration '>' $@70
  761                                   | "function" . '<' $@71 optional_function_argument_list optional_function_type '>' $@72

    '<'  shift, and go to state 360

    $default  reduce using rule 755 (type_declaration_no_options_no_dim)


State 260

  762 type_declaration_no_options_no_dim: "lambda" .
  765                                   | "lambda" . '<' $@73 type_declaration '>' $@74
  768                                   | "lambda" . '<' $@75 optional_function_argument_list optional_function_type '>' $@76

    '<'  shift, and go to state 361

    $default  reduce using rule 762 (type_declaration_no_options_no_dim)


State 261

  658 basic_type_declaration: "int8" .

    $default  reduce using rule 658 (basic_type_declaration)


State 262

  665 basic_type_declaration: "uint8" .

    $default  reduce using rule 665 (basic_type_declaration)


State 263

  659 basic_type_declaration: "int16" .

    $default  reduce using rule 659 (basic_type_declaration)


State 264

  666 basic_type_declaration: "uint16" .

    $default  reduce using rule 666 (basic_type_declaration)


State 265

  771 type_declaration_no_options_no_dim: "tuple" . '<' $@77 tuple_type_list '>' $@78

    '<'  shift, and go to state 362


State 266

  774 type_declaration_no_options_no_dim: "variant" . '<' $@79 variant_type_list '>' $@80

    '<'  shift, and go to state 363


State 267

  693 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 364


State 268

  720 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  722                                   | '$' . name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 365


State 269

  690 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 690 (structure_type_declaration)


State 270

  712 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 712 (type_declaration_no_options_no_dim)


State 271

  715 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 715 (type_declaration_no_options_no_dim)


State 272

  713 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 713 (type_declaration_no_options_no_dim)


State 273

  714 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 714 (type_declaration_no_options_no_dim)


State 274

  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"
  775 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    $default  reduce using rule 775 (type_declaration)


State 275

  710 type_declaration_no_options: type_declaration_no_options_no_dim .
  711                            | type_declaration_no_options_no_dim . dim_list

    '['  shift, and go to state 375

    $default  reduce using rule 710 (type_declaration_no_options)

    dim_list  go to state 376


State 276

  614 single_alias: optional_public_or_private_alias "name" $@45 '=' type_declaration .
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 614 (single_alias)


State 277

  625 emit_commas: emit_commas "new line, comma" .

    $default  reduce using rule 625 (emit_commas)


State 278

  792 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 . '{' $@91 bitfield_alias_bits optional_commas $@92 '}'

    '{'  shift, and go to state 378


State 279

  782 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 . '{' $@83 tuple_alias_type_list optional_semis $@84 '}'

    '{'  shift, and go to state 379


State 280

  787 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 . '{' $@87 variant_alias_type_list optional_semis $@88 '}'

    '{'  shift, and go to state 380


State 281

  215 function_name: "operator" "is" .
  217              | "operator" "is" . "name"

    "name"  shift, and go to state 381

    $default  reduce using rule 215 (function_name)


State 282

  216 function_name: "operator" "as" .
  218              | "operator" "as" . "name"

    "name"  shift, and go to state 382

    $default  reduce using rule 216 (function_name)


State 283

  213 function_name: "operator" "delete" .

    $default  reduce using rule 213 (function_name)


State 284

  164 function_name: "operator" "+=" .

    $default  reduce using rule 164 (function_name)


State 285

  165 function_name: "operator" "-=" .

    $default  reduce using rule 165 (function_name)


State 286

  167 function_name: "operator" "/=" .

    $default  reduce using rule 167 (function_name)


State 287

  166 function_name: "operator" "*=" .

    $default  reduce using rule 166 (function_name)


State 288

  168 function_name: "operator" "%=" .

    $default  reduce using rule 168 (function_name)


State 289

  169 function_name: "operator" "&=" .

    $default  reduce using rule 169 (function_name)


State 290

  170 function_name: "operator" "|=" .

    $default  reduce using rule 170 (function_name)


State 291

  171 function_name: "operator" "^=" .

    $default  reduce using rule 171 (function_name)


State 292

  197 function_name: "operator" "<<" .

    $default  reduce using rule 197 (function_name)


State 293

  198 function_name: "operator" ">>" .

    $default  reduce using rule 198 (function_name)


State 294

  195 function_name: "operator" "++" .

    $default  reduce using rule 195 (function_name)


State 295

  196 function_name: "operator" "--" .

    $default  reduce using rule 196 (function_name)


State 296

  188 function_name: "operator" "<=" .

    $default  reduce using rule 188 (function_name)


State 297

  199 function_name: "operator" "<<=" .

    $default  reduce using rule 199 (function_name)


State 298

  200 function_name: "operator" ">>=" .

    $default  reduce using rule 200 (function_name)


State 299

  189 function_name: "operator" ">=" .

    $default  reduce using rule 189 (function_name)


State 300

  186 function_name: "operator" "==" .

    $default  reduce using rule 186 (function_name)


State 301

  187 function_name: "operator" "!=" .

    $default  reduce using rule 187 (function_name)


State 302

  214 function_name: "operator" "??" .

    $default  reduce using rule 214 (function_name)


State 303

  208 function_name: "operator" "?." .
  211              | "operator" "?." . "name"

    "name"  shift, and go to state 383

    $default  reduce using rule 208 (function_name)


State 304

  206 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 384


State 305

  212 function_name: "operator" ":=" .

    $default  reduce using rule 212 (function_name)


State 306

  201 function_name: "operator" "<<<" .

    $default  reduce using rule 201 (function_name)


State 307

  202 function_name: "operator" ">>>" .

    $default  reduce using rule 202 (function_name)


State 308

  203 function_name: "operator" "<<<=" .

    $default  reduce using rule 203 (function_name)


State 309

  204 function_name: "operator" ">>>=" .

    $default  reduce using rule 204 (function_name)


State 310

  175 function_name: "operator" "&&" .

    $default  reduce using rule 175 (function_name)


State 311

  176 function_name: "operator" "||" .

    $default  reduce using rule 176 (function_name)


State 312

  177 function_name: "operator" "^^" .

    $default  reduce using rule 177 (function_name)


State 313

  172 function_name: "operator" "&&=" .

    $default  reduce using rule 172 (function_name)


State 314

  173 function_name: "operator" "||=" .

    $default  reduce using rule 173 (function_name)


State 315

  174 function_name: "operator" "^^=" .

    $default  reduce using rule 174 (function_name)


State 316

  185 function_name: "operator" ".." .

    $default  reduce using rule 185 (function_name)


State 317

  219 function_name: "operator" '?' . "as"
  220              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 385


State 318

  191 function_name: "operator" '|' .

    $default  reduce using rule 191 (function_name)


State 319

  192 function_name: "operator" '^' .

    $default  reduce using rule 192 (function_name)


State 320

  190 function_name: "operator" '&' .

    $default  reduce using rule 190 (function_name)


State 321

  183 function_name: "operator" '<' .

    $default  reduce using rule 183 (function_name)


State 322

  184 function_name: "operator" '>' .

    $default  reduce using rule 184 (function_name)


State 323

  179 function_name: "operator" '-' .

    $default  reduce using rule 179 (function_name)


State 324

  178 function_name: "operator" '+' .

    $default  reduce using rule 178 (function_name)


State 325

  180 function_name: "operator" '*' .

    $default  reduce using rule 180 (function_name)


State 326

  181 function_name: "operator" '/' .

    $default  reduce using rule 181 (function_name)


State 327

  182 function_name: "operator" '%' .

    $default  reduce using rule 182 (function_name)


State 328

  163 function_name: "operator" '~' .

    $default  reduce using rule 163 (function_name)


State 329

  162 function_name: "operator" '!' .

    $default  reduce using rule 162 (function_name)


State 330

  207 function_name: "operator" '.' .
  209              | "operator" '.' . "name"
  210              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 386

    $default  reduce using rule 207 (function_name)


State 331

  205 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 387


State 332

  193 function_name: "++" "operator" .

    $default  reduce using rule 193 (function_name)


State 333

  194 function_name: "--" "operator" .

    $default  reduce using rule 194 (function_name)


State 334

  157 optional_function_argument_list: '(' . ')'
  158                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 388
    ')'   shift, and go to state 389
    '@'   shift, and go to state 220

    $default  reduce using rule 519 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 393


State 335

  250 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 394

    $default  reduce using rule 159 (optional_function_type)

    optional_function_type  go to state 395


State 336

  252 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 257 ($@16)

    expression_block  go to state 396
    $@16              go to state 397


State 337

  621 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 398
    "uint"    shift, and go to state 399
    "int64"   shift, and go to state 400
    "uint64"  shift, and go to state 401
    "int8"    shift, and go to state 402
    "uint8"   shift, and go to state 403
    "int16"   shift, and go to state 404
    "uint16"  shift, and go to state 405

    enum_basic_type_declaration  go to state 406


State 338

  631 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}'

    "new line, comma"  shift, and go to state 177

    $default  reduce using rule 626 (optional_emit_commas)

    emit_commas           go to state 178
    optional_emit_commas  go to state 407


State 339

  635 optional_sealed: "sealed" .

    $default  reduce using rule 635 (optional_sealed)


State 340

  636 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 408


State 341

  649 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name . optional_emit_semis $@51 optional_struct_variable_declaration_list

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 409


State 342

  600 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 600 (global_let)


State 343

  597 global_variable_declaration_list: global_variable_declaration_list SEMICOLON .

    $default  reduce using rule 597 (global_variable_declaration_list)


State 344

  599 global_variable_declaration_list: global_variable_declaration_list $@43 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 220

    $default  reduce using rule 519 (optional_field_annotation)

    metadata_argument_list     go to state 221
    optional_field_annotation  go to state 410


State 345

  135 metadata_argument_list: '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 411


State 346

  136 metadata_argument_list: metadata_argument_list '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 412


State 347

  580 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 580 (global_let_variable_name_with_pos_list)


State 348

  581 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  588 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  589                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  590                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 413
    ':'  shift, and go to state 414
    '&'  shift, and go to state 415

    $default  reduce using rule 573 (optional_ref)

    optional_ref  go to state 416


State 349

  602 global_let: kwd_let optional_shared optional_public_or_private_variable $@44 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 602 (global_let)


State 350

  121 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 121 (annotation_argument_value_list)


State 351

  718 type_declaration_no_options_no_dim: "type" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 716 ($@54)

    $@54  go to state 417


State 352

  741 type_declaration_no_options_no_dim: "array" '<' . $@59 type_declaration '>' $@60

    $default  reduce using rule 739 ($@59)

    $@59  go to state 418


State 353

  744 type_declaration_no_options_no_dim: "table" '<' . $@61 table_type_pair '>' $@62

    $default  reduce using rule 742 ($@61)

    $@61  go to state 419


State 354

  719 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 485
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 355

  747 type_declaration_no_options_no_dim: "iterator" '<' . $@63 type_declaration '>' $@64

    $default  reduce using rule 745 ($@63)

    $@63  go to state 495


State 356

  737 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@57 type_declaration '>' $@58

    $default  reduce using rule 735 ($@57)

    $@57  go to state 496


State 357

  692 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 497


State 358

  701 bitfield_type_declaration: "bitfield" '<' . $@52 bitfield_bits '>' $@53

    $default  reduce using rule 699 ($@52)

    $@52  go to state 498


State 359

  751 type_declaration_no_options_no_dim: "block" '<' . $@65 type_declaration '>' $@66
  754                                   | "block" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 752 ($@67)
    '>'       reduce using rule 752 ($@67)
    '('       reduce using rule 752 ($@67)
    $default  reduce using rule 749 ($@65)

    $@65  go to state 499
    $@67  go to state 500


State 360

  758 type_declaration_no_options_no_dim: "function" '<' . $@69 type_declaration '>' $@70
  761                                   | "function" '<' . $@71 optional_function_argument_list optional_function_type '>' $@72

    ':'       reduce using rule 759 ($@71)
    '>'       reduce using rule 759 ($@71)
    '('       reduce using rule 759 ($@71)
    $default  reduce using rule 756 ($@69)

    $@69  go to state 501
    $@71  go to state 502


State 361

  765 type_declaration_no_options_no_dim: "lambda" '<' . $@73 type_declaration '>' $@74
  768                                   | "lambda" '<' . $@75 optional_function_argument_list optional_function_type '>' $@76

    ':'       reduce using rule 766 ($@75)
    '>'       reduce using rule 766 ($@75)
    '('       reduce using rule 766 ($@75)
    $default  reduce using rule 763 ($@73)

    $@73  go to state 503
    $@75  go to state 504


State 362

  771 type_declaration_no_options_no_dim: "tuple" '<' . $@77 tuple_type_list '>' $@78

    $default  reduce using rule 769 ($@77)

    $@77  go to state 505


State 363

  774 type_declaration_no_options_no_dim: "variant" '<' . $@79 variant_type_list '>' $@80

    $default  reduce using rule 772 ($@79)

    $@79  go to state 506


State 364

  693 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 507
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 365

  720 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  722                                   | '$' name_in_namespace . '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 508
    '('  shift, and go to state 509


State 366

  725 type_declaration_no_options_no_dim: type_declaration_no_options "const" .

    $default  reduce using rule 725 (type_declaration_no_options_no_dim)


State 367

  730 type_declaration_no_options_no_dim: type_declaration_no_options "implicit" .

    $default  reduce using rule 730 (type_declaration_no_options_no_dim)


State 368

  724 type_declaration_no_options_no_dim: type_declaration_no_options "explicit" .

    $default  reduce using rule 724 (type_declaration_no_options_no_dim)


State 369

  732 type_declaration_no_options_no_dim: type_declaration_no_options "==" . "const"
  733                                   | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 510
    '&'      shift, and go to state 511


State 370

  738 type_declaration_no_options_no_dim: type_declaration_no_options "??" .

    $default  reduce using rule 738 (type_declaration_no_options_no_dim)


State 371

  734 type_declaration_no_options_no_dim: type_declaration_no_options '?' .

    $default  reduce using rule 734 (type_declaration_no_options_no_dim)


State 372

  727 type_declaration_no_options_no_dim: type_declaration_no_options '&' .

    $default  reduce using rule 727 (type_declaration_no_options_no_dim)


State 373

  723 type_declaration_no_options_no_dim: type_declaration_no_options '-' . '[' ']'
  726                                   | type_declaration_no_options '-' . "const"
  728                                   | type_declaration_no_options '-' . '&'
  731                                   | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 512
    '&'      shift, and go to state 513
    '['      shift, and go to state 514
    '#'      shift, and go to state 515


State 374

  729 type_declaration_no_options_no_dim: type_declaration_no_options '#' .

    $default  reduce using rule 729 (type_declaration_no_options_no_dim)


State 375

  706 dim_list: '[' . expr ']'
  707         | '[' . ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    ']'                               shift, and go to state 516
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 517
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 376

  708 dim_list: dim_list . '[' expr ']'
  709         | dim_list . '[' ']'
  711 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 518

    $default  reduce using rule 711 (type_declaration_no_options)


State 377

  776 type_declaration: type_declaration '|' . type_declaration_no_options
  777                 | type_declaration '|' . '#'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268
    '#'          shift, and go to state 519

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 520
    type_declaration_no_options_no_dim  go to state 275


State 378

  792 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' . $@91 bitfield_alias_bits optional_commas $@92 '}'

    $default  reduce using rule 790 ($@91)

    $@91  go to state 521


State 379

  782 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' . $@83 tuple_alias_type_list optional_semis $@84 '}'

    $default  reduce using rule 780 ($@83)

    $@83  go to state 522


State 380

  787 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' . $@87 variant_alias_type_list optional_semis $@88 '}'

    $default  reduce using rule 785 ($@87)

    $@87  go to state 523


State 381

  217 function_name: "operator" "is" "name" .

    $default  reduce using rule 217 (function_name)


State 382

  218 function_name: "operator" "as" "name" .

    $default  reduce using rule 218 (function_name)


State 383

  211 function_name: "operator" "?." "name" .

    $default  reduce using rule 211 (function_name)


State 384

  206 function_name: "operator" "?[" ']' .

    $default  reduce using rule 206 (function_name)


State 385

  219 function_name: "operator" '?' "as" .
  220              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 524

    $default  reduce using rule 219 (function_name)


State 386

  209 function_name: "operator" '.' "name" .
  210              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 525

    $default  reduce using rule 209 (function_name)


State 387

  205 function_name: "operator" '[' ']' .

    $default  reduce using rule 205 (function_name)


State 388

  542 function_argument_declaration_type: "$a" . '(' expr ')'

    '('  shift, and go to state 526


State 389

  157 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 157 (optional_function_argument_list)


State 390

  540 function_argument_declaration_no_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_no_type
  541 function_argument_declaration_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_type

    "let"  shift, and go to state 527
    "var"  shift, and go to state 528

    $default  reduce using rule 314 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 529


State 391

  543 function_argument_list: function_argument_declaration_no_type .
  545                       | function_argument_declaration_no_type . ';' function_argument_list

    ';'  shift, and go to state 530

    $default  reduce using rule 543 (function_argument_list)


State 392

  544 function_argument_list: function_argument_declaration_type .
  546                       | function_argument_declaration_type . ';' function_argument_list
  547                       | function_argument_declaration_type . ',' function_argument_list

    ','  shift, and go to state 531
    ';'  shift, and go to state 532

    $default  reduce using rule 544 (function_argument_list)


State 393

  158 optional_function_argument_list: '(' function_argument_list . ')'

    ')'  shift, and go to state 533


State 394

  160 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 534


State 395

  250 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 250 (function_declaration_header)


State 396

  252 function_declaration: optional_public_or_private_function $@13 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 252 (function_declaration)


State 397

  259 expression_block: $@16 . '{' expressions $@17 '}' expression_block_finally

    '{'  shift, and go to state 535


State 398

  682 enum_basic_type_declaration: "int" .

    $default  reduce using rule 682 (enum_basic_type_declaration)


State 399

  685 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 685 (enum_basic_type_declaration)


State 400

  688 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 688 (enum_basic_type_declaration)


State 401

  689 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 689 (enum_basic_type_declaration)


State 402

  683 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 683 (enum_basic_type_declaration)


State 403

  686 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 686 (enum_basic_type_declaration)


State 404

  684 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 684 (enum_basic_type_declaration)


State 405

  687 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 687 (enum_basic_type_declaration)


State 406

  621 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 621 (optional_enum_basic_type_declaration)


State 407

  631 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas . '{' $@47 enum_list optional_commas $@48 '}'

    '{'  shift, and go to state 536


State 408

  636 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 537

    $default  reduce using rule 632 (optional_structure_parent)

    optional_structure_parent  go to state 538


State 409

  649 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis . $@51 optional_struct_variable_declaration_list

    $default  reduce using rule 648 ($@51)

    $@51  go to state 539


State 410

  599 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 540
    "name"  shift, and go to state 541

    let_variable_name_with_pos_list  go to state 542
    let_variable_declaration         go to state 543


State 411

  135 metadata_argument_list: '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 135 (metadata_argument_list)


State 412

  136 metadata_argument_list: metadata_argument_list '@' annotation_argument . optional_emit_semis

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 544


State 413

  581 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 545


State 414

  588 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  589                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 546
    type_declaration_no_options_no_dim  go to state 275


State 415

  574 optional_ref: '&' .

    $default  reduce using rule 574 (optional_ref)


State 416

  590 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 547
    ":="  shift, and go to state 548
    '='   shift, and go to state 549

    copy_or_move_or_clone  go to state 550


State 417

  718 type_declaration_no_options_no_dim: "type" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 551


State 418

  741 type_declaration_no_options_no_dim: "array" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 552


State 419

  744 type_declaration_no_options_no_dim: "table" '<' $@61 . table_type_pair '>' $@62

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    table_type_pair                     go to state 553
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 554


State 420

  819 make_struct_decl: "struct" . '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 555


State 421

  822 make_struct_decl: "class" . '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 556


State 422

  423 expr: "true" .

    $default  reduce using rule 423 (expr)


State 423

  424 expr: "false" .

    $default  reduce using rule 424 (expr)


State 424

  298 expr_new: "new" . new_type_declaration
  299         | "new" . new_type_declaration '(' use_initializer ')'
  300         | "new" . new_type_declaration '(' expr_list ')'
  301         | "new" . new_type_declaration '(' make_struct_single ')'
  302         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  303         | "new" . make_decl

    "struct"       shift, and go to state 420
    "class"        shift, and go to state 421
    "array"        shift, and go to state 427
    "table"        shift, and go to state 429
    "fixed_array"  shift, and go to state 436
    "default"      shift, and go to state 437
    "tuple"        shift, and go to state 439
    "variant"      shift, and go to state 440
    "::"           shift, and go to state 57
    "name"         shift, and go to state 58
    '<'            shift, and go to state 557
    '['            shift, and go to state 464
    '{'            shift, and go to state 468

    name_in_namespace           go to state 269
    new_type_declaration        go to state 558
    structure_type_declaration  go to state 559
    make_decl                   go to state 560
    make_struct_decl            go to state 490
    make_tuple_call             go to state 491
    make_dim_decl               go to state 492
    make_table_decl             go to state 493
    array_comprehension         go to state 494


State 425

  338 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  339               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  340               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 561


State 426

  337 expr_type_decl: "type" . '<' $@26 type_declaration '>' $@27

    '<'  shift, and go to state 562


State 427

  838 make_dim_decl: "array" . "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'
  841              | "array" . "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'
  844              | "array" . "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'
  845              | "array" . '(' expr_list optional_comma ')'
  848              | "array" . '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    "struct"   shift, and go to state 563
    "tuple"    shift, and go to state 564
    "variant"  shift, and go to state 565
    '<'        shift, and go to state 566
    '('        shift, and go to state 567


State 428

  417 expr: "null" .

    $default  reduce using rule 417 (expr)


State 429

  857 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  858                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  859                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 568
    '('  shift, and go to state 569


State 430

  468 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 570


State 431

  328 expr_cast: "cast" . '<' $@20 type_declaration_no_options '>' $@21 expr

    '<'  shift, and go to state 571


State 432

  331 expr_cast: "upcast" . '<' $@22 type_declaration_no_options '>' $@23 expr

    '<'  shift, and go to state 572


State 433

  469 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 573


State 434

  334 expr_cast: "reinterpret" . '<' $@24 type_declaration_no_options '>' $@25 expr

    '<'  shift, and go to state 574


State 435

  499 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 575


State 436

  849 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  852              | "fixed_array" . '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 576
    '('  shift, and go to state 577


State 437

  828 make_struct_decl: "default" . '<' $@99 type_declaration_no_options '>' $@100 use_initializer

    '<'  shift, and go to state 578


State 438

  681 basic_type_declaration: "bitfield" .

    $default  reduce using rule 681 (basic_type_declaration)


State 439

  831 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  834                | "tuple" . '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 579
    '('  shift, and go to state 580


State 440

  825 make_struct_decl: "variant" . '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 581


State 441

  500 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  501               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  502               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    '<'  shift, and go to state 582


State 442

  453 expr: "++" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 583
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 443

  454 expr: "--" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 584
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 444

  503 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 585


State 445

  504 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 586


State 446

  505 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 587


State 447

  506 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 588


State 448

  507 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 589


State 449

  509 expr_mtag: "$c" . '(' expr ')' '(' ')'
  510          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 590


State 450

  508 expr_mtag: "..." .

    $default  reduce using rule 508 (expr_mtag)


State 451

  361 expr_numeric_const: "integer constant" .

    $default  reduce using rule 361 (expr_numeric_const)


State 452

  363 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 363 (expr_numeric_const)


State 453

  362 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 362 (expr_numeric_const)


State 454

  364 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 364 (expr_numeric_const)


State 455

  365 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 365 (expr_numeric_const)


State 456

  366 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 366 (expr_numeric_const)


State 457

  367 expr_numeric_const: "double constant" .

    $default  reduce using rule 367 (expr_numeric_const)


State 458

   41 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 38 (string_builder_body)

    string_builder_body  go to state 591


State 459

  430 expr: '-' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 592
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 460

  429 expr: '+' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 593
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 461

  467 expr: '*' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 594
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 462

  428 expr: '~' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 595
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 463

  427 expr: '!' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 596
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 464

  835 make_dim_decl: '[' . optional_expr_list ']'
  864 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  865                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 283 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 599
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 465

  457 expr: '(' . expr_list optional_comma ')'
  458     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 604
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 605
    make_struct_single      go to state 606
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 466

  346 block_or_lambda: '$' .

    $default  reduce using rule 346 (block_or_lambda)


State 467

  347 block_or_lambda: '@' .
  348                | '@' . '@'
  393 func_addr_expr: '@' . '@' func_addr_name
  396               | '@' . '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name
  399               | '@' . '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name
  518 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 607

    $default  reduce using rule 347 (block_or_lambda)


State 468

  856 make_table_decl: '{' . $@113 optional_emit_semis optional_expr_map_tuple_list '}'
  866 array_comprehension: '{' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "for"  shift, and go to state 608

    $default  reduce using rule 855 ($@113)

    $@113  go to state 609


State 469

  421 expr: string_builder .

    $default  reduce using rule 421 (expr)


State 470

  420 expr: expr_reader .

    $default  reduce using rule 420 (expr)


State 471

  498 expr: expr_call_pipe .

    $default  reduce using rule 498 (expr)


State 472

  387 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  388                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  410 expr_call: name_in_namespace . '(' ')'
  411          | name_in_namespace . '(' "uninitialized" ')'
  412          | name_in_namespace . '(' make_struct_single ')'
  413          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  414          | name_in_namespace . '(' expr_list ')'
  418 expr: name_in_namespace .

    '('  shift, and go to state 610

    $default  reduce using rule 418 (expr)


State 473

  491 expr: expr_new .

    $default  reduce using rule 491 (expr)


State 474

  490 expr: expr_cast .

    $default  reduce using rule 490 (expr)


State 475

  489 expr: expr_type_decl .

    $default  reduce using rule 489 (expr)


State 476

  488 expr: expr_type_info .

    $default  reduce using rule 488 (expr)


State 477

  358 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '['  shift, and go to state 611

    $default  reduce using rule 152 (optional_annotation_list)

    optional_annotation_list  go to state 612


State 478

  494 expr: expr_full_block .

    $default  reduce using rule 494 (expr)


State 479

  419 expr: expr_numeric_const .

    $default  reduce using rule 419 (expr)


State 480

  493 expr: expr_named_call .

    $default  reduce using rule 493 (expr)


State 481

  492 expr: expr_method_call .

    $default  reduce using rule 492 (expr)


State 482

  465 expr: func_addr_expr .

    $default  reduce using rule 465 (expr)


State 483

  425 expr: expr_field .

    $default  reduce using rule 425 (expr)


State 484

  260 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  466 expr: expr_call .

    '$'  shift, and go to state 466
    '@'  shift, and go to state 613
    '{'  shift, and go to state 614

    $default  reduce using rule 466 (expr)

    block_or_lambda                go to state 615
    expr_full_block_assumed_piped  go to state 616


State 485

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  719 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 652


State 486

  470 expr: expr_generator .

    $default  reduce using rule 470 (expr)


State 487

  426 expr: expr_mtag .

    $default  reduce using rule 426 (expr)


State 488

  415 expr_call: basic_type_declaration . '(' ')'
  416          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 653


State 489

  422 expr: make_decl .

    $default  reduce using rule 422 (expr)


State 490

  793 make_decl: make_struct_decl .

    $default  reduce using rule 793 (make_decl)


State 491

  797 make_decl: make_tuple_call .

    $default  reduce using rule 797 (make_decl)


State 492

  794 make_decl: make_dim_decl .

    $default  reduce using rule 794 (make_decl)


State 493

  795 make_decl: make_table_decl .

    $default  reduce using rule 795 (make_decl)


State 494

  796 make_decl: array_comprehension .

    $default  reduce using rule 796 (make_decl)


State 495

  747 type_declaration_no_options_no_dim: "iterator" '<' $@63 . type_declaration '>' $@64

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 654


State 496

  737 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 . type_declaration '>' $@58

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 655


State 497

  692 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 656


State 498

  701 bitfield_type_declaration: "bitfield" '<' $@52 . bitfield_bits '>' $@53

    "name"  shift, and go to state 657

    bitfield_bits  go to state 658


State 499

  751 type_declaration_no_options_no_dim: "block" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 659


State 500

  754 type_declaration_no_options_no_dim: "block" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 334

    $default  reduce using rule 156 (optional_function_argument_list)

    optional_function_argument_list  go to state 660


State 501

  758 type_declaration_no_options_no_dim: "function" '<' $@69 . type_declaration '>' $@70

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 661


State 502

  761 type_declaration_no_options_no_dim: "function" '<' $@71 . optional_function_argument_list optional_function_type '>' $@72

    '('  shift, and go to state 334

    $default  reduce using rule 156 (optional_function_argument_list)

    optional_function_argument_list  go to state 662


State 503

  765 type_declaration_no_options_no_dim: "lambda" '<' $@73 . type_declaration '>' $@74

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 663


State 504

  768 type_declaration_no_options_no_dim: "lambda" '<' $@75 . optional_function_argument_list optional_function_type '>' $@76

    '('  shift, and go to state 334

    $default  reduce using rule 156 (optional_function_argument_list)

    optional_function_argument_list  go to state 664


State 505

  771 type_declaration_no_options_no_dim: "tuple" '<' $@77 . tuple_type_list '>' $@78

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 666
    tuple_type_list                     go to state 667
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 506

  774 type_declaration_no_options_no_dim: "variant" '<' $@79 . variant_type_list '>' $@80

    "name"  shift, and go to state 669

    variant_type       go to state 670
    variant_type_list  go to state 671


State 507

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  693 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 672


State 508

  722 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 721 ($@56)

    $@56  go to state 673


State 509

  720 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 283 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 674
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 510

  732 type_declaration_no_options_no_dim: type_declaration_no_options "==" "const" .

    $default  reduce using rule 732 (type_declaration_no_options_no_dim)


State 511

  733 type_declaration_no_options_no_dim: type_declaration_no_options "==" '&' .

    $default  reduce using rule 733 (type_declaration_no_options_no_dim)


State 512

  726 type_declaration_no_options_no_dim: type_declaration_no_options '-' "const" .

    $default  reduce using rule 726 (type_declaration_no_options_no_dim)


State 513

  728 type_declaration_no_options_no_dim: type_declaration_no_options '-' '&' .

    $default  reduce using rule 728 (type_declaration_no_options_no_dim)


State 514

  723 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 675


State 515

  731 type_declaration_no_options_no_dim: type_declaration_no_options '-' '#' .

    $default  reduce using rule 731 (type_declaration_no_options_no_dim)


State 516

  707 dim_list: '[' ']' .

    $default  reduce using rule 707 (dim_list)


State 517

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  706 dim_list: '[' expr . ']'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 676


State 518

  708 dim_list: dim_list '[' . expr ']'
  709         | dim_list '[' . ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    ']'                               shift, and go to state 677
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 678
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 519

  777 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 777 (type_declaration)


State 520

  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"
  776 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    $default  reduce using rule 776 (type_declaration)


State 521

  792 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 . bitfield_alias_bits optional_commas $@92 '}'

    "name"  shift, and go to state 679

    $default  reduce using rule 696 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 680


State 522

  782 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 . tuple_alias_type_list optional_semis $@84 '}'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    $default  reduce using rule 552 (tuple_alias_type_list)

    name_in_namespace                   go to state 269
    tuple_type                          go to state 681
    tuple_alias_type_list               go to state 682
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 523

  787 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 . variant_alias_type_list optional_semis $@88 '}'

    "name"  shift, and go to state 669

    $default  reduce using rule 558 (variant_alias_type_list)

    variant_type             go to state 683
    variant_alias_type_list  go to state 684


State 524

  220 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 220 (function_name)


State 525

  210 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 210 (function_name)


State 526

  542 function_argument_declaration_type: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 685
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 527

  312 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 312 (kwd_let_var_or_nothing)


State 528

  313 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 313 (kwd_let_var_or_nothing)


State 529

  540 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_no_type
  541 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_type

    "$i"    shift, and go to state 686
    "name"  shift, and go to state 687

    variable_declaration_no_type  go to state 688
    variable_declaration_type     go to state 689
    variable_name_with_pos_list   go to state 690


State 530

  545 function_argument_list: function_argument_declaration_no_type ';' . function_argument_list

    "$a"  shift, and go to state 388
    '@'   shift, and go to state 220

    $default  reduce using rule 519 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 691


State 531

  547 function_argument_list: function_argument_declaration_type ',' . function_argument_list

    "$a"  shift, and go to state 388
    '@'   shift, and go to state 220

    $default  reduce using rule 519 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 692


State 532

  546 function_argument_list: function_argument_declaration_type ';' . function_argument_list

    "$a"  shift, and go to state 388
    '@'   shift, and go to state 220

    $default  reduce using rule 519 (optional_field_annotation)

    metadata_argument_list                 go to state 221
    optional_field_annotation              go to state 390
    function_argument_declaration_no_type  go to state 391
    function_argument_declaration_type     go to state 392
    function_argument_list                 go to state 693


State 533

  158 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 158 (optional_function_argument_list)


State 534

  160 optional_function_type: ':' type_declaration .
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 160 (optional_function_type)


State 535

  259 expression_block: $@16 '{' . expressions $@17 '}' expression_block_finally

    $default  reduce using rule 280 (expressions)

    expressions  go to state 694


State 536

  631 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' . $@47 enum_list optional_commas $@48 '}'

    $default  reduce using rule 629 ($@47)

    $@47  go to state 695


State 537

  633 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 57
    "name"  shift, and go to state 58

    name_in_namespace  go to state 696


State 538

  636 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 636 (structure_name)


State 539

  649 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 . optional_struct_variable_declaration_list

    ';'  shift, and go to state 697
    '{'  shift, and go to state 698

    optional_struct_variable_declaration_list  go to state 699


State 540

  576 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 700


State 541

  575 let_variable_name_with_pos_list: "name" .
  577                                | "name" . "aka" "name"

    "aka"  shift, and go to state 701

    $default  reduce using rule 575 (let_variable_name_with_pos_list)


State 542

  578 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  579                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  585 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  586                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  587                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 702
    ':'  shift, and go to state 703
    '&'  shift, and go to state 415

    $default  reduce using rule 573 (optional_ref)

    optional_ref  go to state 704


State 543

  599 global_variable_declaration_list: global_variable_declaration_list $@43 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 599 (global_variable_declaration_list)


State 544

  136 metadata_argument_list: metadata_argument_list '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 136 (metadata_argument_list)


State 545

  581 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 581 (global_let_variable_name_with_pos_list)


State 546

  588 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  589                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "<-"                   shift, and go to state 547
    "??"                   shift, and go to state 370
    ":="                   shift, and go to state 548
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 549
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    SEMICOLON              go to state 705
    copy_or_move_or_clone  go to state 706


State 547

  571 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 571 (copy_or_move_or_clone)


State 548

  572 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 572 (copy_or_move_or_clone)


State 549

  570 copy_or_move_or_clone: '=' .

    $default  reduce using rule 570 (copy_or_move_or_clone)


State 550

  590 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 707
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 551

  718 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration . '>' $@55
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 708


State 552

  741 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration . '>' $@60
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 709


State 553

  744 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair . '>' $@62

    '>'  shift, and go to state 710


State 554

  704 table_type_pair: type_declaration .
  705                | type_declaration . c_or_s type_declaration
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '|'                    shift, and go to state 377
    ';'                    shift, and go to state 16

    $default  reduce using rule 704 (table_type_pair)

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 715


State 555

  819 make_struct_decl: "struct" '<' . $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 817 ($@93)

    $@93  go to state 716


State 556

  822 make_struct_decl: "class" '<' . $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 820 ($@95)

    $@95  go to state 717


State 557

  296 new_type_declaration: '<' . $@18 type_declaration '>' $@19

    $default  reduce using rule 294 ($@18)

    $@18  go to state 718


State 558

  298 expr_new: "new" new_type_declaration .
  299         | "new" new_type_declaration . '(' use_initializer ')'
  300         | "new" new_type_declaration . '(' expr_list ')'
  301         | "new" new_type_declaration . '(' make_struct_single ')'
  302         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 719

    $default  reduce using rule 298 (expr_new)


State 559

  297 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 297 (new_type_declaration)


State 560

  303 expr_new: "new" make_decl .

    $default  reduce using rule 303 (expr_new)


State 561

  338 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  339               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  340               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 720
    '('  shift, and go to state 721


State 562

  337 expr_type_decl: "type" '<' . $@26 type_declaration '>' $@27

    $default  reduce using rule 335 ($@26)

    $@26  go to state 722


State 563

  838 make_dim_decl: "array" "struct" . '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 723


State 564

  841 make_dim_decl: "array" "tuple" . '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 724


State 565

  844 make_dim_decl: "array" "variant" . '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'

    '<'  shift, and go to state 725


State 566

  848 make_dim_decl: "array" '<' . $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    $default  reduce using rule 846 ($@109)

    $@109  go to state 726


State 567

  845 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 727
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 568

  858 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  859                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 728
    type_declaration_no_options_no_dim  go to state 275


State 569

  857 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 729
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 730
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    expr_map_tuple_list     go to state 731
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 570

  468 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 732
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 571

  328 expr_cast: "cast" '<' . $@20 type_declaration_no_options '>' $@21 expr

    $default  reduce using rule 326 ($@20)

    $@20  go to state 733


State 572

  331 expr_cast: "upcast" '<' . $@22 type_declaration_no_options '>' $@23 expr

    $default  reduce using rule 329 ($@22)

    $@22  go to state 734


State 573

  469 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 735
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 574

  334 expr_cast: "reinterpret" '<' . $@24 type_declaration_no_options '>' $@25 expr

    $default  reduce using rule 332 ($@24)

    $@24  go to state 736


State 575

  499 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 737
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 576

  852 make_dim_decl: "fixed_array" '<' . $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    $default  reduce using rule 850 ($@111)

    $@111  go to state 738


State 577

  849 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 739
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 578

  828 make_struct_decl: "default" '<' . $@99 type_declaration_no_options '>' $@100 use_initializer

    $default  reduce using rule 826 ($@99)

    $@99  go to state 740


State 579

  834 make_tuple_call: "tuple" '<' . $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 832 ($@101)

    $@101  go to state 741


State 580

  831 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 742
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 581

  825 make_struct_decl: "variant" '<' . $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 823 ($@97)

    $@97  go to state 743


State 582

  500 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  501               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  502               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 744
    type_declaration_no_options_no_dim  go to state 275


State 583

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  453     | "++" expr .
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 453 (expr)


State 584

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  454     | "--" expr .
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 454 (expr)


State 585

  503 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 745
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 586

  504 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 746
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 587

  505 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 747
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 588

  506 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 748
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 589

  507 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 749
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 590

  509 expr_mtag: "$c" '(' . expr ')' '(' ')'
  510          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 750
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 591

   39 string_builder_body: string_builder_body . character_sequence
   40                    | string_builder_body . "{" expr optional_format_string "}"
   41 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 163
    STRING_CHARACTER_ESC  shift, and go to state 164
    "end of the string"   shift, and go to state 751
    "{"                   shift, and go to state 752

    character_sequence  go to state 753


State 592

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  430 expr: '-' expr .
  431     | expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 430 (expr)


State 593

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  429 expr: '+' expr .
  431     | expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 429 (expr)


State 594

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  467     | '*' expr .
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 467 (expr)


State 595

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  428 expr: '~' expr .
  431     | expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 428 (expr)


State 596

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  427 expr: '!' expr .
  431     | expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 427 (expr)


State 597

  864 array_comprehension: '[' "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 754


State 598

  865 array_comprehension: '[' "iterator" . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "for"  shift, and go to state 755


State 599

  835 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 756


State 600

  284 optional_expr_list: expr_list . optional_comma
  342 expr_list: expr_list . ',' expr

    ','  shift, and go to state 757

    $default  reduce using rule 862 (optional_comma)

    optional_comma  go to state 758


State 601

  341 expr_list: expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 341 (expr_list)


State 602

  802 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  803                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 759


State 603

  289 name_in_namespace: "name" .
  290                  | "name" . "::" "name"
  798 make_struct_fields: "name" . copy_or_move expr
  799                   | "name" . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 761
    "::"  shift, and go to state 96
    '='   shift, and go to state 762

    $default  reduce using rule 289 (name_in_namespace)

    copy_or_move  go to state 763


State 604

  342 expr_list: expr_list . ',' expr
  457 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 862 (optional_comma)

    optional_comma  go to state 764


State 605

  800 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  801                   | make_struct_fields . ',' "name" ":=" expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  805                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  808 make_struct_single: make_struct_fields . optional_comma

    ','  shift, and go to state 765

    $default  reduce using rule 862 (optional_comma)

    optional_comma  go to state 766


State 606

  458 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 767


State 607

  348 block_or_lambda: '@' '@' .
  393 func_addr_expr: '@' '@' . func_addr_name
  396               | '@' '@' . '<' $@28 type_declaration_no_options '>' $@29 func_addr_name
  399               | '@' '@' . '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name
  518 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 768
    "$c"    shift, and go to state 769
    "name"  shift, and go to state 58
    '<'     shift, and go to state 770

    $default  reduce using rule 348 (block_or_lambda)

    name_in_namespace  go to state 771
    func_addr_name     go to state 772


State 608

  866 array_comprehension: '{' "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    '('  shift, and go to state 773


State 609

  856 make_table_decl: '{' $@113 . optional_emit_semis optional_expr_map_tuple_list '}'

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 774


State 610

  387 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  388                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  410 expr_call: name_in_namespace '(' . ')'
  411          | name_in_namespace '(' . "uninitialized" ')'
  412          | name_in_namespace '(' . make_struct_single ')'
  413          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  414          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "uninitialized"                   shift, and go to state 775
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 776
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 777
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 778
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 605
    make_struct_single      go to state 779
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 611

  153 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 60
    "private"   shift, and go to state 61
    "template"  shift, and go to state 62
    "|>"        shift, and go to state 63
    "::"        shift, and go to state 57
    "name"      shift, and go to state 58
    '!'         shift, and go to state 64
    '('         shift, and go to state 65

    annotation_declaration_name   go to state 66
    annotation_declaration_basic  go to state 67
    annotation_declaration        go to state 68
    annotation_list               go to state 780
    name_in_namespace             go to state 70


State 612

  358 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    "capture"  shift, and go to state 781

    $default  reduce using rule 356 (optional_capture_list)

    optional_capture_list  go to state 782


State 613

  347 block_or_lambda: '@' .
  348                | '@' . '@'

    '@'  shift, and go to state 783

    $default  reduce using rule 347 (block_or_lambda)


State 614

  360 expr_full_block_assumed_piped: '{' . expressions '}'

    $default  reduce using rule 280 (expressions)

    expressions  go to state 784


State 615

  359 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '['  shift, and go to state 611

    $default  reduce using rule 152 (optional_annotation_list)

    optional_annotation_list  go to state 785


State 616

  260 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 260 (expr_call_pipe)


State 617

  475 expr: expr "is" . "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr "is" . basic_type_declaration
  477     | expr "is" . "name"
  517 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 786
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 787
    "name"      shift, and go to state 788

    basic_type_declaration  go to state 789


State 618

  478 expr: expr "as" . "name"
  481     | expr "as" . "type" '<' $@36 type_declaration '>' $@37
  482     | expr "as" . basic_type_declaration
  515 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 790
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 791
    "name"      shift, and go to state 792

    basic_type_declaration  go to state 793


State 619

  431 expr: expr "<<" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 794
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 620

  432 expr: expr ">>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 795
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 621

  455 expr: expr "++" .

    $default  reduce using rule 455 (expr)


State 622

  456 expr: expr "--" .

    $default  reduce using rule 456 (expr)


State 623

  444 expr: expr "<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 796
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 624

  445 expr: expr ">=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 797
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 625

  442 expr: expr "==" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 798
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 626

  443 expr: expr "!=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 799
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 627

  389 expr_method_call: expr "->" . "name" '(' ')'
  390                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 800


State 628

  471 expr: expr "??" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 801
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 629

  463 expr: expr "?." . "name"
  512 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 802
    "name"  shift, and go to state 803


State 630

  461 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 804
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 631

  495 expr: expr "<|" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 805
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 632

  496 expr: expr "|>" . expr
  497     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 806
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 807
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 633

  433 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 808
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 634

  434 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 809
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 635

  449 expr: expr "&&" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 810
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 636

  450 expr: expr "||" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 811
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 637

  451 expr: expr "^^" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 812
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 638

  452 expr: expr ".." . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 813
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 639

  472 expr: expr '?' . expr ':' expr
  483     | expr '?' . "as" "name"
  486     | expr '?' . "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr '?' . "as" basic_type_declaration
  516 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "as"                              shift, and go to state 814
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 815
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 640

  447 expr: expr '|' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 816
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 641

  448 expr: expr '^' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 817
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 642

  446 expr: expr '&' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 818
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 643

  440 expr: expr '<' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 819
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 644

  441 expr: expr '>' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 820
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 645

  436 expr: expr '-' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 821
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 646

  435 expr: expr '+' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 822
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 647

  437 expr: expr '*' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 823
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 648

  438 expr: expr '/' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 824
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 649

  439 expr: expr '%' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 825
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 650

  400 expr_field: expr '.' . "name"
  401           | expr '.' . '.' "name"
  402           | expr '.' . "name" '(' ')'
  403           | expr '.' . "name" '(' expr_list ')'
  404           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  405           | expr '.' . basic_type_declaration '(' ')'
  406           | expr '.' . basic_type_declaration '(' expr_list ')'
  409           | expr '.' . $@32 error $@33
  460 expr: expr '.' . '[' expr ']'
  462     | expr '.' . "?[" expr ']'
  464     | expr '.' . "?." "name"
  511 expr_mtag: expr '.' . "$f" '(' expr ')'
  513          | expr '.' . '.' "$f" '(' expr ')'
  514          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "?."        shift, and go to state 826
    "?["        shift, and go to state 827
    "$f"        shift, and go to state 828
    "name"      shift, and go to state 829
    '.'         shift, and go to state 830
    '['         shift, and go to state 831

    $default  reduce using rule 407 ($@32)

    $@32                    go to state 832
    basic_type_declaration  go to state 833


State 651

  459 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 834
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 652

  719 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 719 (type_declaration_no_options_no_dim)


State 653

  415 expr_call: basic_type_declaration '(' . ')'
  416          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 835
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 836
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 654

  747 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration . '>' $@64
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 837


State 655

  737 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration . '>' $@58
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 838


State 656

  692 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 692 (auto_type_declaration)


State 657

  694 bitfield_bits: "name" .

    $default  reduce using rule 694 (bitfield_bits)


State 658

  695 bitfield_bits: bitfield_bits . ';' "name"
  701 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits . '>' $@53

    '>'  shift, and go to state 839
    ';'  shift, and go to state 840


State 659

  751 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration . '>' $@66
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 841


State 660

  754 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 394

    $default  reduce using rule 159 (optional_function_type)

    optional_function_type  go to state 842


State 661

  758 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration . '>' $@70
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 843


State 662

  761 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list . optional_function_type '>' $@72

    ':'  shift, and go to state 394

    $default  reduce using rule 159 (optional_function_type)

    optional_function_type  go to state 844


State 663

  765 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration . '>' $@74
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 845


State 664

  768 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list . optional_function_type '>' $@76

    ':'  shift, and go to state 394

    $default  reduce using rule 159 (optional_function_type)

    optional_function_type  go to state 846


State 665

  289 name_in_namespace: "name" .
  290                  | "name" . "::" "name"
  549 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 96
    ':'   shift, and go to state 847

    $default  reduce using rule 289 (name_in_namespace)


State 666

  550 tuple_type_list: tuple_type .

    $default  reduce using rule 550 (tuple_type_list)


State 667

  551 tuple_type_list: tuple_type_list . c_or_s tuple_type
  771 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list . '>' $@78

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 848
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 849


State 668

  548 tuple_type: type_declaration .
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 548 (tuple_type)


State 669

  555 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 850


State 670

  556 variant_type_list: variant_type .

    $default  reduce using rule 556 (variant_type_list)


State 671

  557 variant_type_list: variant_type_list . c_or_s variant_type
  774 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list . '>' $@80

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 851
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 852


State 672

  693 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 693 (auto_type_declaration)


State 673

  722 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    type_declaration_no_options_list    go to state 853
    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 854


State 674

  720 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 855


State 675

  723 type_declaration_no_options_no_dim: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 723 (type_declaration_no_options_no_dim)


State 676

  706 dim_list: '[' expr ']' .

    $default  reduce using rule 706 (dim_list)


State 677

  709 dim_list: dim_list '[' ']' .

    $default  reduce using rule 709 (dim_list)


State 678

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  708 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 856


State 679

  697 bitfield_alias_bits: "name" .

    $default  reduce using rule 697 (bitfield_alias_bits)


State 680

  698 bitfield_alias_bits: bitfield_alias_bits . commas "name"
  792 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits . optional_commas $@92 '}'

    "new line, comma"  shift, and go to state 711
    ','                shift, and go to state 712

    $default  reduce using rule 622 (optional_commas)

    COMMA            go to state 857
    commas           go to state 858
    optional_commas  go to state 859


State 681

  553 tuple_alias_type_list: tuple_type .

    $default  reduce using rule 553 (tuple_alias_type_list)


State 682

  554 tuple_alias_type_list: tuple_alias_type_list . semis tuple_type
  782 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list . optional_semis $@84 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 84 (optional_semis)

    SEMICOLON       go to state 860
    semis           go to state 861
    optional_semis  go to state 862


State 683

  559 variant_alias_type_list: variant_type .

    $default  reduce using rule 559 (variant_alias_type_list)


State 684

  560 variant_alias_type_list: variant_alias_type_list . semis variant_type
  787 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list . optional_semis $@88 '}'

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 84 (optional_semis)

    SEMICOLON       go to state 860
    semis           go to state 863
    optional_semis  go to state 864


State 685

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  542 function_argument_declaration_type: "$a" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 865


State 686

  651 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 866


State 687

  650 variable_name_with_pos_list: "name" .
  652                            | "name" . "aka" "name"

    "aka"  shift, and go to state 867

    $default  reduce using rule 650 (variable_name_with_pos_list)


State 688

  540 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type .

    $default  reduce using rule 540 (function_argument_declaration_no_type)


State 689

  541 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type .

    $default  reduce using rule 541 (function_argument_declaration_type)


State 690

  563 variable_declaration_no_type: variable_name_with_pos_list .
  564                             | variable_name_with_pos_list . '&'
  565                             | variable_name_with_pos_list . copy_or_move expr
  566 variable_declaration_type: variable_name_with_pos_list . ':' type_declaration
  567                          | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  653 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  654                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 760
    ','   shift, and go to state 868
    '='   shift, and go to state 762
    ':'   shift, and go to state 869
    '&'   shift, and go to state 870

    $default  reduce using rule 563 (variable_declaration_no_type)

    copy_or_move  go to state 871


State 691

  545 function_argument_list: function_argument_declaration_no_type ';' function_argument_list .

    $default  reduce using rule 545 (function_argument_list)


State 692

  547 function_argument_list: function_argument_declaration_type ',' function_argument_list .

    $default  reduce using rule 547 (function_argument_list)


State 693

  546 function_argument_list: function_argument_declaration_type ';' function_argument_list .

    $default  reduce using rule 546 (function_argument_list)


State 694

  259 expression_block: $@16 '{' expressions . $@17 '}' expression_block_finally
  281 expressions: expressions . expression_any
  282            | expressions . error

    error                             shift, and go to state 872
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 873
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 874
    "try"                             shift, and go to state 875
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 876
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 877
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 878
    "pass"                            shift, and go to state 879
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 880
    "goto"                            shift, and go to state 881
    "unsafe"                          shift, and go to state 882
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 883
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 109 ($@11)
    "if"         reduce using rule 96 ($@9)
    "static_if"  reduce using rule 96 ($@9)
    "for"        reduce using rule 106 ($@10)
    "with"       reduce using rule 111 ($@12)
    '}'          reduce using rule 258 ($@17)

    SEMICOLON                         go to state 884
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 885
    expression_goto                   go to state 886
    expression_if_one_liner           go to state 887
    expression_if_then_else           go to state 888
    $@9                               go to state 889
    expression_if_then_else_oneliner  go to state 890
    expression_for_loop               go to state 891
    $@10                              go to state 892
    expression_unsafe                 go to state 893
    expression_while_loop             go to state 894
    $@11                              go to state 895
    expression_with                   go to state 896
    $@12                              go to state 897
    expression_with_alias             go to state 898
    $@17                              go to state 899
    expr_call_pipe                    go to state 471
    expression_any                    go to state 900
    name_in_namespace                 go to state 472
    expression_delete                 go to state 901
    expr_new                          go to state 473
    expression_break                  go to state 902
    expression_continue               go to state 903
    expression_return                 go to state 904
    expression_yield                  go to state 905
    expression_try_catch              go to state 906
    kwd_let                           go to state 907
    expression_let                    go to state 908
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 909
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 910
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 695

  631 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 . enum_list optional_commas $@48 '}'

    "name"  shift, and go to state 911

    $default  reduce using rule 607 (enum_list)

    enum_expression  go to state 912
    enum_list        go to state 913


State 696

  633 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 633 (optional_structure_parent)


State 697

  644 optional_struct_variable_declaration_list: ';' .

    $default  reduce using rule 644 (optional_struct_variable_declaration_list)


State 698

  645 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 532 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 914


State 699

  649 structure_declaration: optional_annotation_list_with_emit_semis $@49 class_or_struct optional_public_or_private_structure $@50 structure_name optional_emit_semis $@51 optional_struct_variable_declaration_list .

    $default  reduce using rule 649 (structure_declaration)


State 700

  576 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 915
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 701

  577 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 916


State 702

  578 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  579                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 917


State 703

  585 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  586                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 918
    type_declaration_no_options_no_dim  go to state 275


State 704

  587 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 547
    ":="  shift, and go to state 548
    '='   shift, and go to state 549

    copy_or_move_or_clone  go to state 919


State 705

  588 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 588 (global_let_variable_declaration)


State 706

  589 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 920
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 707

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  590 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 921


State 708

  718 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 717 ($@55)

    $@55  go to state 922


State 709

  741 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 740 ($@60)

    $@60  go to state 923


State 710

  744 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' . $@62

    $default  reduce using rule 743 ($@62)

    $@62  go to state 924


State 711

   17 COMMA: "new line, comma" .

    $default  reduce using rule 17 (COMMA)


State 712

   16 COMMA: ',' .

    $default  reduce using rule 16 (COMMA)


State 713

  702 c_or_s: COMMA .

    $default  reduce using rule 702 (c_or_s)


State 714

  703 c_or_s: SEMICOLON .

    $default  reduce using rule 703 (c_or_s)


State 715

  705 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 925


State 716

  819 make_struct_decl: "struct" '<' $@93 . type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 926
    type_declaration_no_options_no_dim  go to state 275


State 717

  822 make_struct_decl: "class" '<' $@95 . type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 927
    type_declaration_no_options_no_dim  go to state 275


State 718

  296 new_type_declaration: '<' $@18 . type_declaration '>' $@19

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 928


State 719

  299 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  300         | "new" new_type_declaration '(' . expr_list ')'
  301         | "new" new_type_declaration '(' . make_struct_single ')'
  302         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "uninitialized"                   shift, and go to state 929
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 815 (use_initializer)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 930
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 605
    make_struct_single      go to state 931
    use_initializer         go to state 932
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 720

  339 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  340               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 933


State 721

  338 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 934
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 722

  337 expr_type_decl: "type" '<' $@26 . type_declaration '>' $@27

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 935


State 723

  838 make_dim_decl: "array" "struct" '<' . $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 836 ($@103)

    $@103  go to state 936


State 724

  841 make_dim_decl: "array" "tuple" '<' . $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 839 ($@105)

    $@105  go to state 937


State 725

  844 make_dim_decl: "array" "variant" '<' . $@107 variant_type_list '>' $@108 '(' make_variant_dim ')'

    $default  reduce using rule 842 ($@107)

    $@107  go to state 938


State 726

  848 make_dim_decl: "array" '<' $@109 . type_declaration_no_options '>' $@110 '(' optional_expr_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 939
    type_declaration_no_options_no_dim  go to state 275


State 727

  342 expr_list: expr_list . ',' expr
  845 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 862 (optional_comma)

    optional_comma  go to state 940


State 728

  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"
  858 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  859                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "??"                   shift, and go to state 370
    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '>'                    shift, and go to state 941
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 942


State 729

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  829 make_map_tuple: expr . "=>" expr
  830               | expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "=>"   shift, and go to state 943
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 830 (make_map_tuple)


State 730

  853 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 853 (expr_map_tuple_list)


State 731

  854 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  857 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 944

    $default  reduce using rule 862 (optional_comma)

    optional_comma  go to state 945


State 732

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  468     | "deref" '(' expr . ')'
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 946


State 733

  328 expr_cast: "cast" '<' $@20 . type_declaration_no_options '>' $@21 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 947
    type_declaration_no_options_no_dim  go to state 275


State 734

  331 expr_cast: "upcast" '<' $@22 . type_declaration_no_options '>' $@23 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 948
    type_declaration_no_options_no_dim  go to state 275


State 735

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  469     | "addr" '(' expr . ')'
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 949


State 736

  334 expr_cast: "reinterpret" '<' $@24 . type_declaration_no_options '>' $@25 expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 950
    type_declaration_no_options_no_dim  go to state 275


State 737

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  499     | "unsafe" '(' expr . ')'
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 951


State 738

  852 make_dim_decl: "fixed_array" '<' $@111 . type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 952
    type_declaration_no_options_no_dim  go to state 275


State 739

  342 expr_list: expr_list . ',' expr
  849 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 862 (optional_comma)

    optional_comma  go to state 953


State 740

  828 make_struct_decl: "default" '<' $@99 . type_declaration_no_options '>' $@100 use_initializer

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 954
    type_declaration_no_options_no_dim  go to state 275


State 741

  834 make_tuple_call: "tuple" '<' $@101 . tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 666
    tuple_type_list                     go to state 955
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 742

  342 expr_list: expr_list . ',' expr
  831 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 862 (optional_comma)

    optional_comma  go to state 956


State 743

  825 make_struct_decl: "variant" '<' $@97 . variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 669

    variant_type       go to state 670
    variant_type_list  go to state 957


State 744

  500 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  501               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  502               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_emit_semis expression_block
  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 958
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 745

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  503 expr_mtag: "$$" '(' expr . ')'
  511          | expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 959


State 746

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  504 expr_mtag: "$i" '(' expr . ')'
  511          | expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 960


State 747

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  505 expr_mtag: "$v" '(' expr . ')'
  511          | expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 961


State 748

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  506 expr_mtag: "$b" '(' expr . ')'
  511          | expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 962


State 749

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  507 expr_mtag: "$a" '(' expr . ')'
  511          | expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 963


State 750

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  509 expr_mtag: "$c" '(' expr . ')' '(' ')'
  510          | "$c" '(' expr . ')' '(' expr_list ')'
  511          | expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 964


State 751

   41 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 41 (string_builder)


State 752

   40 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 965
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 753

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   39 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 223
    STRING_CHARACTER_ESC  shift, and go to state 224

    $default  reduce using rule 39 (string_builder_body)


State 754

  864 array_comprehension: '[' "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 966
    "name"  shift, and go to state 967
    '('     shift, and go to state 968

    for_variable_name_with_pos_list  go to state 969


State 755

  865 array_comprehension: '[' "iterator" "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 970


State 756

  835 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 835 (make_dim_decl)


State 757

  342 expr_list: expr_list ',' . expr
  863 optional_comma: ',' .

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 863 (optional_comma)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 971
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 758

  284 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 284 (optional_expr_list)


State 759

  802 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  803                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 972
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 760

  562 copy_or_move: "<-" .

    $default  reduce using rule 562 (copy_or_move)


State 761

  799 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 973
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 762

  561 copy_or_move: '=' .

    $default  reduce using rule 561 (copy_or_move)


State 763

  798 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 974
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 764

  457 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 975


State 765

  800 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  801                   | make_struct_fields ',' . "name" ":=" expr
  804                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  805                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr
  863 optional_comma: ',' .

    "$f"    shift, and go to state 976
    "name"  shift, and go to state 977

    $default  reduce using rule 863 (optional_comma)


State 766

  808 make_struct_single: make_struct_fields optional_comma .

    $default  reduce using rule 808 (make_struct_single)


State 767

  458 expr: '(' make_struct_single ')' .

    $default  reduce using rule 458 (expr)


State 768

  392 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 978


State 769

  518 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 979


State 770

  396 func_addr_expr: '@' '@' '<' . $@28 type_declaration_no_options '>' $@29 func_addr_name
  399               | '@' '@' '<' . $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name

    ':'       reduce using rule 397 ($@30)
    '>'       reduce using rule 397 ($@30)
    '('       reduce using rule 397 ($@30)
    $default  reduce using rule 394 ($@28)

    $@28  go to state 980
    $@30  go to state 981


State 771

  391 func_addr_name: name_in_namespace .

    $default  reduce using rule 391 (func_addr_name)


State 772

  393 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 393 (func_addr_expr)


State 773

  866 array_comprehension: '{' "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 966
    "name"  shift, and go to state 967
    '('     shift, and go to state 968

    for_variable_name_with_pos_list  go to state 982


State 774

  856 make_table_decl: '{' $@113 optional_emit_semis . optional_expr_map_tuple_list '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 285 (optional_expr_map_tuple_list)

    string_builder                go to state 469
    expr_reader                   go to state 470
    expr_call_pipe                go to state 471
    optional_expr_map_tuple_list  go to state 983
    name_in_namespace             go to state 472
    expr_new                      go to state 473
    expr_cast                     go to state 474
    expr_type_decl                go to state 475
    expr_type_info                go to state 476
    block_or_lambda               go to state 477
    expr_full_block               go to state 478
    expr_numeric_const            go to state 479
    expr_named_call               go to state 480
    expr_method_call              go to state 481
    func_addr_expr                go to state 482
    expr_field                    go to state 483
    expr_call                     go to state 484
    expr                          go to state 729
    expr_generator                go to state 486
    expr_mtag                     go to state 487
    basic_type_declaration        go to state 488
    make_decl                     go to state 489
    make_struct_decl              go to state 490
    make_map_tuple                go to state 730
    make_tuple_call               go to state 491
    make_dim_decl                 go to state 492
    expr_map_tuple_list           go to state 984
    make_table_decl               go to state 493
    array_comprehension           go to state 494


State 775

  411 expr_call: name_in_namespace '(' "uninitialized" . ')'
  413          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 985
    ')'     shift, and go to state 986

    make_struct_fields  go to state 605
    make_struct_single  go to state 987


State 776

  387 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  835 make_dim_decl: '[' . optional_expr_list ']'
  864 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  865                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 283 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 599
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 988
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 777

  410 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 410 (expr_call)


State 778

  342 expr_list: expr_list . ',' expr
  388 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  414 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 989
    ')'  shift, and go to state 990


State 779

  412 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 991


State 780

  151 annotation_list: annotation_list . ',' annotation_declaration
  153 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 105
    ']'  shift, and go to state 992


State 781

  357 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 993


State 782

  358 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '('  shift, and go to state 334

    $default  reduce using rule 156 (optional_function_argument_list)

    optional_function_argument_list  go to state 994


State 783

  348 block_or_lambda: '@' '@' .

    $default  reduce using rule 348 (block_or_lambda)


State 784

  281 expressions: expressions . expression_any
  282            | expressions . error
  360 expr_full_block_assumed_piped: '{' expressions . '}'

    error                             shift, and go to state 872
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 873
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 874
    "try"                             shift, and go to state 875
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 876
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 877
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 878
    "pass"                            shift, and go to state 879
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 880
    "goto"                            shift, and go to state 881
    "unsafe"                          shift, and go to state 882
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 883
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468
    '}'                               shift, and go to state 995

    "while"      reduce using rule 109 ($@11)
    "if"         reduce using rule 96 ($@9)
    "static_if"  reduce using rule 96 ($@9)
    "for"        reduce using rule 106 ($@10)
    "with"       reduce using rule 111 ($@12)

    SEMICOLON                         go to state 884
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 885
    expression_goto                   go to state 886
    expression_if_one_liner           go to state 887
    expression_if_then_else           go to state 888
    $@9                               go to state 889
    expression_if_then_else_oneliner  go to state 890
    expression_for_loop               go to state 891
    $@10                              go to state 892
    expression_unsafe                 go to state 893
    expression_while_loop             go to state 894
    $@11                              go to state 895
    expression_with                   go to state 896
    $@12                              go to state 897
    expression_with_alias             go to state 898
    expr_call_pipe                    go to state 471
    expression_any                    go to state 900
    name_in_namespace                 go to state 472
    expression_delete                 go to state 901
    expr_new                          go to state 473
    expression_break                  go to state 902
    expression_continue               go to state 903
    expression_return                 go to state 904
    expression_yield                  go to state 905
    expression_try_catch              go to state 906
    kwd_let                           go to state 907
    expression_let                    go to state 908
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 909
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 910
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 785

  359 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    "capture"  shift, and go to state 781

    $default  reduce using rule 356 (optional_capture_list)

    optional_capture_list  go to state 996


State 786

  475 expr: expr "is" "type" . '<' $@34 type_declaration_no_options '>' $@35

    '<'  shift, and go to state 997


State 787

  517 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 998


State 788

  477 expr: expr "is" "name" .

    $default  reduce using rule 477 (expr)


State 789

  476 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 476 (expr)


State 790

  481 expr: expr "as" "type" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 999


State 791

  515 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1000


State 792

  478 expr: expr "as" "name" .

    $default  reduce using rule 478 (expr)


State 793

  482 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 482 (expr)


State 794

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  431     | expr "<<" expr .
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '-'   shift, and go to state 645
    '+'   shift, and go to state 646
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 431 (expr)


State 795

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  432     | expr ">>" expr .
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '-'   shift, and go to state 645
    '+'   shift, and go to state 646
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 432 (expr)


State 796

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  444     | expr "<=" expr .
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 444 (expr)


State 797

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  445     | expr ">=" expr .
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 445 (expr)


State 798

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  442     | expr "==" expr .
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 442 (expr)


State 799

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  443     | expr "!=" expr .
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 443 (expr)


State 800

  389 expr_method_call: expr "->" "name" . '(' ')'
  390                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1001


State 801

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  471     | expr "??" expr .
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 471 (expr)


State 802

  512 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1002


State 803

  463 expr: expr "?." "name" .

    $default  reduce using rule 463 (expr)


State 804

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  461     | expr "?[" expr . ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 1003


State 805

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  495     | expr "<|" expr .
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 495 (expr)


State 806

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  496     | expr "|>" expr .
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 627
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 496 (expr)


State 807

  415 expr_call: basic_type_declaration . '(' ')'
  416          | basic_type_declaration . '(' expr_list ')'
  497 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 653

    $default  reduce using rule 497 (expr)


State 808

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  433     | expr "<<<" expr .
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '-'   shift, and go to state 645
    '+'   shift, and go to state 646
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 433 (expr)


State 809

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  434     | expr ">>>" expr .
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '-'   shift, and go to state 645
    '+'   shift, and go to state 646
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 434 (expr)


State 810

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  449     | expr "&&" expr .
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 449 (expr)


State 811

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  450     | expr "||" expr .
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "^^"   shift, and go to state 637
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 450 (expr)


State 812

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  451     | expr "^^" expr .
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 451 (expr)


State 813

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  452     | expr ".." expr .
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    ".."  error (nonassociative)

    $default  reduce using rule 452 (expr)


State 814

  483 expr: expr '?' "as" . "name"
  486     | expr '?' "as" . "type" '<' $@38 type_declaration '>' $@39
  487     | expr '?' "as" . basic_type_declaration
  516 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1004
    "bool"      shift, and go to state 234
    "void"      shift, and go to state 235
    "string"    shift, and go to state 236
    "int"       shift, and go to state 238
    "int2"      shift, and go to state 239
    "int3"      shift, and go to state 240
    "int4"      shift, and go to state 241
    "uint"      shift, and go to state 242
    "bitfield"  shift, and go to state 438
    "uint2"     shift, and go to state 244
    "uint3"     shift, and go to state 245
    "uint4"     shift, and go to state 246
    "float"     shift, and go to state 247
    "float2"    shift, and go to state 248
    "float3"    shift, and go to state 249
    "float4"    shift, and go to state 250
    "range"     shift, and go to state 251
    "urange"    shift, and go to state 252
    "range64"   shift, and go to state 253
    "urange64"  shift, and go to state 254
    "int64"     shift, and go to state 256
    "uint64"    shift, and go to state 257
    "double"    shift, and go to state 258
    "int8"      shift, and go to state 261
    "uint8"     shift, and go to state 262
    "int16"     shift, and go to state 263
    "uint16"    shift, and go to state 264
    "$f"        shift, and go to state 1005
    "name"      shift, and go to state 1006

    basic_type_declaration  go to state 1007


State 815

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  472     | expr '?' expr . ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    ':'    shift, and go to state 1008
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651


State 816

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  447     | expr '|' expr .
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 447 (expr)


State 817

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  448     | expr '^' expr .
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 448 (expr)


State 818

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  446     | expr '&' expr .
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 446 (expr)


State 819

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  440     | expr '<' expr .
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 440 (expr)


State 820

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  441     | expr '>' expr .
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 441 (expr)


State 821

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  436     | expr '-' expr .
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 436 (expr)


State 822

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  435     | expr '+' expr .
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '*'   shift, and go to state 647
    '/'   shift, and go to state 648
    '%'   shift, and go to state 649
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 435 (expr)


State 823

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  437     | expr '*' expr .
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 437 (expr)


State 824

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  438     | expr '/' expr .
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 438 (expr)


State 825

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  439     | expr '%' expr .
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 617
    "as"  shift, and go to state 618
    "++"  shift, and go to state 621
    "--"  shift, and go to state 622
    "->"  shift, and go to state 627
    "??"  shift, and go to state 628
    "?."  shift, and go to state 629
    "?["  shift, and go to state 630
    "<|"  shift, and go to state 631
    "|>"  shift, and go to state 632
    '.'   shift, and go to state 650
    '['   shift, and go to state 651

    $default  reduce using rule 439 (expr)


State 826

  464 expr: expr '.' "?." . "name"
  514 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1009
    "name"  shift, and go to state 1010


State 827

  462 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1011
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 828

  511 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1012


State 829

  400 expr_field: expr '.' "name" .
  402           | expr '.' "name" . '(' ')'
  403           | expr '.' "name" . '(' expr_list ')'
  404           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1013

    $default  reduce using rule 400 (expr_field)


State 830

  401 expr_field: expr '.' '.' . "name"
  513 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1014
    "name"  shift, and go to state 1015


State 831

  460 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1016
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 832

  409 expr_field: expr '.' $@32 . error $@33

    error  shift, and go to state 1017


State 833

  405 expr_field: expr '.' basic_type_declaration . '(' ')'
  406           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1018


State 834

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  459     | expr '[' expr . ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 1019


State 835

  415 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 415 (expr_call)


State 836

  342 expr_list: expr_list . ',' expr
  416 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1020
    ')'  shift, and go to state 1021


State 837

  747 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' . $@64

    $default  reduce using rule 746 ($@64)

    $@64  go to state 1022


State 838

  737 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' . $@58

    $default  reduce using rule 736 ($@58)

    $@58  go to state 1023


State 839

  701 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits '>' . $@53

    $default  reduce using rule 700 ($@53)

    $@53  go to state 1024


State 840

  695 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1025


State 841

  751 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 750 ($@66)

    $@66  go to state 1026


State 842

  754 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1027


State 843

  758 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' . $@70

    $default  reduce using rule 757 ($@70)

    $@70  go to state 1028


State 844

  761 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type . '>' $@72

    '>'  shift, and go to state 1029


State 845

  765 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' . $@74

    $default  reduce using rule 764 ($@74)

    $@74  go to state 1030


State 846

  768 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type . '>' $@76

    '>'  shift, and go to state 1031


State 847

  549 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1032


State 848

  771 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' . $@78

    $default  reduce using rule 770 ($@78)

    $@78  go to state 1033


State 849

  551 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 1034
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 850

  555 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1035


State 851

  774 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' . $@80

    $default  reduce using rule 773 ($@80)

    $@80  go to state 1036


State 852

  557 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 669

    variant_type  go to state 1037


State 853

  288 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  722 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1038
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 1039


State 854

  287 type_declaration_no_options_list: type_declaration .
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 287 (type_declaration_no_options_list)


State 855

  720 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 720 (type_declaration_no_options_no_dim)


State 856

  708 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 708 (dim_list)


State 857

  605 commas: COMMA .

    $default  reduce using rule 605 (commas)


State 858

  606 commas: commas . COMMA
  623 optional_commas: commas .
  698 bitfield_alias_bits: bitfield_alias_bits commas . "name"

    "name"             shift, and go to state 1040
    "new line, comma"  shift, and go to state 711
    ','                shift, and go to state 712

    $default  reduce using rule 623 (optional_commas)

    COMMA  go to state 1041


State 859

  792 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas . $@92 '}'

    $default  reduce using rule 791 ($@92)

    $@92  go to state 1042


State 860

   82 semis: SEMICOLON .

    $default  reduce using rule 82 (semis)


State 861

   83 semis: semis . SEMICOLON
   85 optional_semis: semis .
  554 tuple_alias_type_list: tuple_alias_type_list semis . tuple_type

    "type"                 shift, and go to state 228
    "array"                shift, and go to state 229
    "table"                shift, and go to state 230
    "typedecl"             shift, and go to state 231
    "iterator"             shift, and go to state 232
    "smart_ptr"            shift, and go to state 233
    "bool"                 shift, and go to state 234
    "void"                 shift, and go to state 235
    "string"               shift, and go to state 236
    "auto"                 shift, and go to state 237
    "int"                  shift, and go to state 238
    "int2"                 shift, and go to state 239
    "int3"                 shift, and go to state 240
    "int4"                 shift, and go to state 241
    "uint"                 shift, and go to state 242
    "bitfield"             shift, and go to state 243
    "uint2"                shift, and go to state 244
    "uint3"                shift, and go to state 245
    "uint4"                shift, and go to state 246
    "float"                shift, and go to state 247
    "float2"               shift, and go to state 248
    "float3"               shift, and go to state 249
    "float4"               shift, and go to state 250
    "range"                shift, and go to state 251
    "urange"               shift, and go to state 252
    "range64"              shift, and go to state 253
    "urange64"             shift, and go to state 254
    "block"                shift, and go to state 255
    "int64"                shift, and go to state 256
    "uint64"               shift, and go to state 257
    "double"               shift, and go to state 258
    "function"             shift, and go to state 259
    "lambda"               shift, and go to state 260
    "int8"                 shift, and go to state 261
    "uint8"                shift, and go to state 262
    "int16"                shift, and go to state 263
    "uint16"               shift, and go to state 264
    "tuple"                shift, and go to state 265
    "variant"              shift, and go to state 266
    "::"                   shift, and go to state 57
    "$t"                   shift, and go to state 267
    "name"                 shift, and go to state 665
    "new line, semicolon"  shift, and go to state 13
    '$'                    shift, and go to state 268
    ';'                    shift, and go to state 16

    $default  reduce using rule 85 (optional_semis)

    SEMICOLON                           go to state 1043
    name_in_namespace                   go to state 269
    tuple_type                          go to state 1044
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 862

  782 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis . $@84 '}'

    $default  reduce using rule 781 ($@84)

    $@84  go to state 1045


State 863

   83 semis: semis . SEMICOLON
   85 optional_semis: semis .
  560 variant_alias_type_list: variant_alias_type_list semis . variant_type

    "name"                 shift, and go to state 669
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 85 (optional_semis)

    SEMICOLON     go to state 1043
    variant_type  go to state 1046


State 864

  787 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis . $@88 '}'

    $default  reduce using rule 786 ($@88)

    $@88  go to state 1047


State 865

  542 function_argument_declaration_type: "$a" '(' expr ')' .

    $default  reduce using rule 542 (function_argument_declaration_type)


State 866

  651 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1048
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 867

  652 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1049


State 868

  653 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  654                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1050


State 869

  566 variable_declaration_type: variable_name_with_pos_list ':' . type_declaration
  567                          | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1051


State 870

  564 variable_declaration_no_type: variable_name_with_pos_list '&' .

    $default  reduce using rule 564 (variable_declaration_no_type)


State 871

  565 variable_declaration_no_type: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1052
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 872

  282 expressions: expressions error .

    $default  reduce using rule 282 (expressions)


State 873

  306 expression_return: "return" .
  307                  | "return" . expr
  308                  | "return" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1053
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 306 (expression_return)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1054
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 874

  304 expression_break: "break" .

    $default  reduce using rule 304 (expression_break)


State 875

  311 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 257 ($@16)

    expression_block  go to state 1055
    $@16              go to state 397


State 876

  292 expression_delete: "delete" . expr
  293                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "explicit"                        shift, and go to state 1056
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1057
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 877

  113 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 1058


State 878

  305 expression_continue: "continue" .

    $default  reduce using rule 305 (expression_continue)


State 879

  279 expression_any: "pass" . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1059


State 880

   61 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 1060


State 881

   62 expression_goto: "goto" . "label" "integer constant"
   63                | "goto" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 1061
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1062
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 882

  108 expression_unsafe: "unsafe" . optional_emit_semis expression_block
  499 expr: "unsafe" . '(' expr ')'

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 575

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1063


State 883

  309 expression_yield: "yield" . expr
  310                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1064
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1065
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 884

  261 expression_any: SEMICOLON .

    $default  reduce using rule 261 (expression_any)


State 885

  277 expression_any: expression_label . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1066


State 886

  278 expression_any: expression_goto . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1067


State 887

   98 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner SEMICOLON

    "if"  shift, and go to state 1068


State 888

  274 expression_any: expression_if_then_else .

    $default  reduce using rule 274 (expression_any)


State 889

   97 expression_if_then_else: $@9 . if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else

    "if"         shift, and go to state 1069
    "static_if"  shift, and go to state 1070

    if_or_static_if  go to state 1071


State 890

  275 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 275 (expression_any)


State 891

  269 expression_any: expression_for_loop .

    $default  reduce using rule 269 (expression_any)


State 892

  107 expression_for_loop: $@10 . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "for"  shift, and go to state 1072


State 893

  266 expression_any: expression_unsafe .

    $default  reduce using rule 266 (expression_any)


State 894

  265 expression_any: expression_while_loop .

    $default  reduce using rule 265 (expression_any)


State 895

  110 expression_while_loop: $@11 . "while" '(' expr ')' optional_emit_semis expression_block

    "while"  shift, and go to state 1073


State 896

  267 expression_any: expression_with .

    $default  reduce using rule 267 (expression_any)


State 897

  112 expression_with: $@12 . "with" '(' expr ')' optional_emit_semis expression_block

    "with"  shift, and go to state 1074


State 898

  268 expression_any: expression_with_alias . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1075


State 899

  259 expression_block: $@16 '{' expressions $@17 . '}' expression_block_finally

    '}'  shift, and go to state 1076


State 900

  281 expressions: expressions expression_any .

    $default  reduce using rule 281 (expressions)


State 901

  263 expression_any: expression_delete . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1077


State 902

   80 expression_if_one_liner: expression_break .
  270 expression_any: expression_break . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 80 (expression_if_one_liner)

    SEMICOLON  go to state 1078


State 903

   81 expression_if_one_liner: expression_continue .
  271 expression_any: expression_continue . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 81 (expression_if_one_liner)

    SEMICOLON  go to state 1079


State 904

   78 expression_if_one_liner: expression_return .
  272 expression_any: expression_return . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 78 (expression_if_one_liner)

    SEMICOLON  go to state 1080


State 905

   79 expression_if_one_liner: expression_yield .
  273 expression_any: expression_yield . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    $default  reduce using rule 79 (expression_if_one_liner)

    SEMICOLON  go to state 1081


State 906

  276 expression_any: expression_try_catch .

    $default  reduce using rule 276 (expression_any)


State 907

  323 expression_let: kwd_let . optional_in_scope let_variable_declaration
  324               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  325               | kwd_let . optional_in_scope '{' variable_declaration_list '}'

    "inscope"  shift, and go to state 1082

    $default  reduce using rule 318 (optional_in_scope)

    optional_in_scope  go to state 1083


State 908

  264 expression_any: expression_let .

    $default  reduce using rule 264 (expression_any)


State 909

  262 expression_any: expr_assign . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1084


State 910

   77 expression_if_one_liner: expr .
  368 expr_assign: expr .
  369            | expr . '=' expr
  370            | expr . "<-" expr
  371            | expr . ":=" expr
  372            | expr . "&=" expr
  373            | expr . "|=" expr
  374            | expr . "^=" expr
  375            | expr . "&&=" expr
  376            | expr . "||=" expr
  377            | expr . "^^=" expr
  378            | expr . "+=" expr
  379            | expr . "-=" expr
  380            | expr . "*=" expr
  381            | expr . "/=" expr
  382            | expr . "%=" expr
  383            | expr . "<<=" expr
  384            | expr . ">>=" expr
  385            | expr . "<<<=" expr
  386            | expr . ">>>=" expr
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 617
    "as"    shift, and go to state 618
    "+="    shift, and go to state 1085
    "-="    shift, and go to state 1086
    "/="    shift, and go to state 1087
    "*="    shift, and go to state 1088
    "%="    shift, and go to state 1089
    "&="    shift, and go to state 1090
    "|="    shift, and go to state 1091
    "^="    shift, and go to state 1092
    "<<"    shift, and go to state 619
    ">>"    shift, and go to state 620
    "++"    shift, and go to state 621
    "--"    shift, and go to state 622
    "<="    shift, and go to state 623
    "<<="   shift, and go to state 1093
    ">>="   shift, and go to state 1094
    ">="    shift, and go to state 624
    "=="    shift, and go to state 625
    "!="    shift, and go to state 626
    "->"    shift, and go to state 627
    "<-"    shift, and go to state 1095
    "??"    shift, and go to state 628
    "?."    shift, and go to state 629
    "?["    shift, and go to state 630
    "<|"    shift, and go to state 631
    "|>"    shift, and go to state 632
    ":="    shift, and go to state 1096
    "<<<"   shift, and go to state 633
    ">>>"   shift, and go to state 634
    "<<<="  shift, and go to state 1097
    ">>>="  shift, and go to state 1098
    "&&"    shift, and go to state 635
    "||"    shift, and go to state 636
    "^^"    shift, and go to state 637
    "&&="   shift, and go to state 1099
    "||="   shift, and go to state 1100
    "^^="   shift, and go to state 1101
    ".."    shift, and go to state 638
    '='     shift, and go to state 1102
    '?'     shift, and go to state 639
    '|'     shift, and go to state 640
    '^'     shift, and go to state 641
    '&'     shift, and go to state 642
    '<'     shift, and go to state 643
    '>'     shift, and go to state 644
    '-'     shift, and go to state 645
    '+'     shift, and go to state 646
    '*'     shift, and go to state 647
    '/'     shift, and go to state 648
    '%'     shift, and go to state 649
    '.'     shift, and go to state 650
    '['     shift, and go to state 651

    "if"      reduce using rule 77 (expression_if_one_liner)
    $default  reduce using rule 368 (expr_assign)


State 911

  603 enum_expression: "name" .
  604                | "name" . '=' expr

    '='  shift, and go to state 1103

    $default  reduce using rule 603 (enum_expression)


State 912

  608 enum_list: enum_expression .

    $default  reduce using rule 608 (enum_list)


State 913

  609 enum_list: enum_list . commas enum_expression
  631 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list . optional_commas $@48 '}'

    "new line, comma"  shift, and go to state 711
    ','                shift, and go to state 712

    $default  reduce using rule 622 (optional_commas)

    COMMA            go to state 857
    commas           go to state 1104
    optional_commas  go to state 1105


State 914

  533 struct_variable_declaration_list: struct_variable_declaration_list . "new line, semicolon"
  535                                 | struct_variable_declaration_list . $@40 structure_variable_declaration SEMICOLON
  537                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  539                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block
  645 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    "new line, semicolon"  shift, and go to state 1106
    '['                    shift, and go to state 15
    '}'                    shift, and go to state 1107

    "def"     reduce using rule 154 (optional_annotation_list_with_emit_semis)
    $default  reduce using rule 534 ($@40)

    optional_annotation_list_with_emit_semis  go to state 1108
    $@40                                      go to state 1109


State 915

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  576 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1110


State 916

  577 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 577 (let_variable_name_with_pos_list)


State 917

  578 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  579                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1111

    $default  reduce using rule 578 (let_variable_name_with_pos_list)


State 918

  585 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  586                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"

    "const"                shift, and go to state 366
    "implicit"             shift, and go to state 367
    "explicit"             shift, and go to state 368
    "=="                   shift, and go to state 369
    "<-"                   shift, and go to state 547
    "??"                   shift, and go to state 370
    ":="                   shift, and go to state 548
    "new line, semicolon"  shift, and go to state 13
    '='                    shift, and go to state 549
    '?'                    shift, and go to state 371
    '&'                    shift, and go to state 372
    '-'                    shift, and go to state 373
    ';'                    shift, and go to state 16
    '#'                    shift, and go to state 374

    SEMICOLON              go to state 1112
    copy_or_move_or_clone  go to state 1113


State 919

  587 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1114
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 920

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  589 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1115


State 921

  590 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 590 (global_let_variable_declaration)


State 922

  718 type_declaration_no_options_no_dim: "type" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 718 (type_declaration_no_options_no_dim)


State 923

  741 type_declaration_no_options_no_dim: "array" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 741 (type_declaration_no_options_no_dim)


State 924

  744 type_declaration_no_options_no_dim: "table" '<' $@61 table_type_pair '>' $@62 .

    $default  reduce using rule 744 (type_declaration_no_options_no_dim)


State 925

  705 table_type_pair: type_declaration c_or_s type_declaration .
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 705 (table_type_pair)


State 926

  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"
  819 make_struct_decl: "struct" '<' $@93 type_declaration_no_options . '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1116
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 927

  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"
  822 make_struct_decl: "class" '<' $@95 type_declaration_no_options . '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1117
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 928

  296 new_type_declaration: '<' $@18 type_declaration . '>' $@19
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1118


State 929

  302 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  816 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 985

    $default  reduce using rule 816 (use_initializer)

    make_struct_fields  go to state 605
    make_struct_single  go to state 1119


State 930

  300 expr_new: "new" new_type_declaration '(' expr_list . ')'
  342 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1020
    ')'  shift, and go to state 1120


State 931

  301 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1121


State 932

  299 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1122


State 933

  339 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  340               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1123
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 1124


State 934

  338 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1125


State 935

  337 expr_type_decl: "type" '<' $@26 type_declaration . '>' $@27
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1126


State 936

  838 make_dim_decl: "array" "struct" '<' $@103 . type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1127
    type_declaration_no_options_no_dim  go to state 275


State 937

  841 make_dim_decl: "array" "tuple" '<' $@105 . tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 665
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    tuple_type                          go to state 666
    tuple_type_list                     go to state 1128
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 668


State 938

  844 make_dim_decl: "array" "variant" '<' $@107 . variant_type_list '>' $@108 '(' make_variant_dim ')'

    "name"  shift, and go to state 669

    variant_type       go to state 670
    variant_type_list  go to state 1129


State 939

  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"
  848 make_dim_decl: "array" '<' $@109 type_declaration_no_options . '>' $@110 '(' optional_expr_list ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1130
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 940

  845 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1131


State 941

  858 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1132


State 942

  859 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1133
    type_declaration_no_options_no_dim  go to state 275


State 943

  829 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1134
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 944

  854 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  863 optional_comma: ',' .

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 863 (optional_comma)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 729
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 1135
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 945

  857 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1136


State 946

  468 expr: "deref" '(' expr ')' .

    $default  reduce using rule 468 (expr)


State 947

  328 expr_cast: "cast" '<' $@20 type_declaration_no_options . '>' $@21 expr
  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1137
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 948

  331 expr_cast: "upcast" '<' $@22 type_declaration_no_options . '>' $@23 expr
  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1138
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 949

  469 expr: "addr" '(' expr ')' .

    $default  reduce using rule 469 (expr)


State 950

  334 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options . '>' $@25 expr
  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1139
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 951

  499 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 499 (expr)


State 952

  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"
  852 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options . '>' $@112 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1140
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 953

  849 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1141


State 954

  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"
  828 make_struct_decl: "default" '<' $@99 type_declaration_no_options . '>' $@100 use_initializer

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1142
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 955

  551 tuple_type_list: tuple_type_list . c_or_s tuple_type
  834 make_tuple_call: "tuple" '<' $@101 tuple_type_list . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1143
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 849


State 956

  831 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1144


State 957

  557 variant_type_list: variant_type_list . c_or_s variant_type
  825 make_struct_decl: "variant" '<' $@97 variant_type_list . '>' $@98 '(' use_initializer make_variant_dim ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1145
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 852


State 958

  500 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  501               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  502               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_emit_semis expression_block

    "capture"  shift, and go to state 781

    $default  reduce using rule 356 (optional_capture_list)

    optional_capture_list  go to state 1146


State 959

  503 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 503 (expr_mtag)


State 960

  504 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 504 (expr_mtag)


State 961

  505 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 505 (expr_mtag)


State 962

  506 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 506 (expr_mtag)


State 963

  507 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 507 (expr_mtag)


State 964

  509 expr_mtag: "$c" '(' expr ')' . '(' ')'
  510          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1147


State 965

   40 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    ':'    shift, and go to state 1148
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 35 (optional_format_string)

    optional_format_string  go to state 1149


State 966

  100 for_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 1150


State 967

   99 for_variable_name_with_pos_list: "name" .
  101                                | "name" . "aka" "name"

    "aka"  shift, and go to state 1151

    $default  reduce using rule 99 (for_variable_name_with_pos_list)


State 968

  102 for_variable_name_with_pos_list: '(' . tuple_expansion ')'

    "name"  shift, and go to state 1152

    tuple_expansion  go to state 1153


State 969

  103 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  104                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  105                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  864 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1154
    ','   shift, and go to state 1155


State 970

  865 array_comprehension: '[' "iterator" "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 966
    "name"  shift, and go to state 967
    '('     shift, and go to state 968

    for_variable_name_with_pos_list  go to state 1156


State 971

  342 expr_list: expr_list ',' expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 342 (expr_list)


State 972

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  802 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  803                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1157


State 973

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  799 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 799 (make_struct_fields)


State 974

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  798 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 798 (make_struct_fields)


State 975

  457 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 457 (expr)


State 976

  804 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  805                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1158


State 977

  800 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  801                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 1159
    '='   shift, and go to state 762

    copy_or_move  go to state 1160


State 978

  392 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1161
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 979

  518 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1162
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 980

  396 func_addr_expr: '@' '@' '<' $@28 . type_declaration_no_options '>' $@29 func_addr_name

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1163
    type_declaration_no_options_no_dim  go to state 275


State 981

  399 func_addr_expr: '@' '@' '<' $@30 . optional_function_argument_list optional_function_type '>' $@31 func_addr_name

    '('  shift, and go to state 334

    $default  reduce using rule 156 (optional_function_argument_list)

    optional_function_argument_list  go to state 1164


State 982

  103 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  104                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  105                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  866 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1165
    ','   shift, and go to state 1155


State 983

  856 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list . '}'

    '}'  shift, and go to state 1166


State 984

  286 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  854 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 944

    $default  reduce using rule 862 (optional_comma)

    optional_comma  go to state 1167


State 985

  798 make_struct_fields: "name" . copy_or_move expr
  799                   | "name" . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 761
    '='   shift, and go to state 762

    copy_or_move  go to state 763


State 986

  411 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 411 (expr_call)


State 987

  413 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1168


State 988

  387 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  800 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  801                   | make_struct_fields . ',' "name" ":=" expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  805                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1169
    ']'  shift, and go to state 1170


State 989

  342 expr_list: expr_list ',' . expr
  388 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 1171
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 971
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 990

  414 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 414 (expr_call)


State 991

  412 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 412 (expr_call)


State 992

  153 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 153 (optional_annotation_list)


State 993

  357 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1172
    ":="    shift, and go to state 1173
    "name"  shift, and go to state 1174
    '='     shift, and go to state 1175
    '&'     shift, and go to state 1176

    capture_entry  go to state 1177
    capture_list   go to state 1178


State 994

  358 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis block_or_simple_block

    ':'  shift, and go to state 394

    $default  reduce using rule 159 (optional_function_type)

    optional_function_type  go to state 1179


State 995

  360 expr_full_block_assumed_piped: '{' expressions '}' .

    $default  reduce using rule 360 (expr_full_block_assumed_piped)


State 996

  359 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '('  shift, and go to state 334

    $default  reduce using rule 156 (optional_function_argument_list)

    optional_function_argument_list  go to state 1180


State 997

  475 expr: expr "is" "type" '<' . $@34 type_declaration_no_options '>' $@35

    $default  reduce using rule 473 ($@34)

    $@34  go to state 1181


State 998

  517 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1182
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 999

  481 expr: expr "as" "type" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 479 ($@36)

    $@36  go to state 1183


State 1000

  515 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1184
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1001

  389 expr_method_call: expr "->" "name" '(' . ')'
  390                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1185
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1186
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1002

  512 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1187
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1003

  461 expr: expr "?[" expr ']' .

    $default  reduce using rule 461 (expr)


State 1004

  486 expr: expr '?' "as" "type" . '<' $@38 type_declaration '>' $@39

    '<'  shift, and go to state 1188


State 1005

  516 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1189


State 1006

  483 expr: expr '?' "as" "name" .

    $default  reduce using rule 483 (expr)


State 1007

  487 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 487 (expr)


State 1008

  472 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1190
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1009

  514 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1191


State 1010

  464 expr: expr '.' "?." "name" .

    $default  reduce using rule 464 (expr)


State 1011

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  462     | expr '.' "?[" expr . ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 1192


State 1012

  511 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1193
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1013

  402 expr_field: expr '.' "name" '(' . ')'
  403           | expr '.' "name" '(' . expr_list ')'
  404           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 1194
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1195
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1196
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1014

  513 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1197


State 1015

  401 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 401 (expr_field)


State 1016

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  460     | expr '.' '[' expr . ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ']'    shift, and go to state 1198


State 1017

  409 expr_field: expr '.' $@32 error . $@33

    $default  reduce using rule 408 ($@33)

    $@33  go to state 1199


State 1018

  405 expr_field: expr '.' basic_type_declaration '(' . ')'
  406           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1200
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1201
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1019

  459 expr: expr '[' expr ']' .

    $default  reduce using rule 459 (expr)


State 1020

  342 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 971
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1021

  416 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 416 (expr_call)


State 1022

  747 type_declaration_no_options_no_dim: "iterator" '<' $@63 type_declaration '>' $@64 .

    $default  reduce using rule 747 (type_declaration_no_options_no_dim)


State 1023

  737 type_declaration_no_options_no_dim: "smart_ptr" '<' $@57 type_declaration '>' $@58 .

    $default  reduce using rule 737 (type_declaration_no_options_no_dim)


State 1024

  701 bitfield_type_declaration: "bitfield" '<' $@52 bitfield_bits '>' $@53 .

    $default  reduce using rule 701 (bitfield_type_declaration)


State 1025

  695 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 695 (bitfield_bits)


State 1026

  751 type_declaration_no_options_no_dim: "block" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 751 (type_declaration_no_options_no_dim)


State 1027

  754 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 753 ($@68)

    $@68  go to state 1202


State 1028

  758 type_declaration_no_options_no_dim: "function" '<' $@69 type_declaration '>' $@70 .

    $default  reduce using rule 758 (type_declaration_no_options_no_dim)


State 1029

  761 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' . $@72

    $default  reduce using rule 760 ($@72)

    $@72  go to state 1203


State 1030

  765 type_declaration_no_options_no_dim: "lambda" '<' $@73 type_declaration '>' $@74 .

    $default  reduce using rule 765 (type_declaration_no_options_no_dim)


State 1031

  768 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' . $@76

    $default  reduce using rule 767 ($@76)

    $@76  go to state 1204


State 1032

  549 tuple_type: "name" ':' type_declaration .
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 549 (tuple_type)


State 1033

  771 type_declaration_no_options_no_dim: "tuple" '<' $@77 tuple_type_list '>' $@78 .

    $default  reduce using rule 771 (type_declaration_no_options_no_dim)


State 1034

  551 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 551 (tuple_type_list)


State 1035

  555 variant_type: "name" ':' type_declaration .
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 555 (variant_type)


State 1036

  774 type_declaration_no_options_no_dim: "variant" '<' $@79 variant_type_list '>' $@80 .

    $default  reduce using rule 774 (type_declaration_no_options_no_dim)


State 1037

  557 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 557 (variant_type_list)


State 1038

  722 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1205


State 1039

  288 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1206


State 1040

  698 bitfield_alias_bits: bitfield_alias_bits commas "name" .

    $default  reduce using rule 698 (bitfield_alias_bits)


State 1041

  606 commas: commas COMMA .

    $default  reduce using rule 606 (commas)


State 1042

  792 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 . '}'

    '}'  shift, and go to state 1207


State 1043

   83 semis: semis SEMICOLON .

    $default  reduce using rule 83 (semis)


State 1044

  554 tuple_alias_type_list: tuple_alias_type_list semis tuple_type .

    $default  reduce using rule 554 (tuple_alias_type_list)


State 1045

  782 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 . '}'

    '}'  shift, and go to state 1208


State 1046

  560 variant_alias_type_list: variant_alias_type_list semis variant_type .

    $default  reduce using rule 560 (variant_alias_type_list)


State 1047

  787 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 . '}'

    '}'  shift, and go to state 1209


State 1048

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  651 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1210


State 1049

  652 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 652 (variable_name_with_pos_list)


State 1050

  653 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  654                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1211

    $default  reduce using rule 653 (variable_name_with_pos_list)


State 1051

  566 variable_declaration_type: variable_name_with_pos_list ':' type_declaration .
  567                          | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 760
    '='   shift, and go to state 762
    '|'   shift, and go to state 377

    $default  reduce using rule 566 (variable_declaration_type)

    copy_or_move  go to state 1212


State 1052

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  565 variable_declaration_no_type: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 565 (variable_declaration_no_type)


State 1053

  308 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1213
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1054

  307 expression_return: "return" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 307 (expression_return)


State 1055

  311 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1214


State 1056

  293 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1215
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1057

  292 expression_delete: "delete" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 292 (expression_delete)


State 1058

  113 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1216


State 1059

  279 expression_any: "pass" SEMICOLON .

    $default  reduce using rule 279 (expression_any)


State 1060

   61 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1217


State 1061

   62 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1218


State 1062

   63 expression_goto: "goto" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 63 (expression_goto)


State 1063

  108 expression_unsafe: "unsafe" optional_emit_semis . expression_block

    $default  reduce using rule 257 ($@16)

    expression_block  go to state 1219
    $@16              go to state 397


State 1064

  310 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1220
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1065

  309 expression_yield: "yield" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 309 (expression_yield)


State 1066

  277 expression_any: expression_label SEMICOLON .

    $default  reduce using rule 277 (expression_any)


State 1067

  278 expression_any: expression_goto SEMICOLON .

    $default  reduce using rule 278 (expression_any)


State 1068

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner SEMICOLON

    '('  shift, and go to state 1221


State 1069

   73 if_or_static_if: "if" .

    $default  reduce using rule 73 (if_or_static_if)


State 1070

   74 if_or_static_if: "static_if" .

    $default  reduce using rule 74 (if_or_static_if)


State 1071

   97 expression_if_then_else: $@9 if_or_static_if . '(' expr ')' optional_emit_semis expression_if_block expression_else

    '('  shift, and go to state 1222


State 1072

  107 expression_for_loop: $@10 "for" . '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    '('  shift, and go to state 1223


State 1073

  110 expression_while_loop: $@11 "while" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1224


State 1074

  112 expression_with: $@12 "with" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1225


State 1075

  268 expression_any: expression_with_alias SEMICOLON .

    $default  reduce using rule 268 (expression_any)


State 1076

  259 expression_block: $@16 '{' expressions $@17 '}' . expression_block_finally

    "finally"  shift, and go to state 1226

    $default  reduce using rule 253 (expression_block_finally)

    expression_block_finally  go to state 1227


State 1077

  263 expression_any: expression_delete SEMICOLON .

    $default  reduce using rule 263 (expression_any)


State 1078

  270 expression_any: expression_break SEMICOLON .

    $default  reduce using rule 270 (expression_any)


State 1079

  271 expression_any: expression_continue SEMICOLON .

    $default  reduce using rule 271 (expression_any)


State 1080

  272 expression_any: expression_return SEMICOLON .

    $default  reduce using rule 272 (expression_any)


State 1081

  273 expression_any: expression_yield SEMICOLON .

    $default  reduce using rule 273 (expression_any)


State 1082

  317 optional_in_scope: "inscope" .

    $default  reduce using rule 317 (optional_in_scope)


State 1083

  323 expression_let: kwd_let optional_in_scope . let_variable_declaration
  324               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  325               | kwd_let optional_in_scope . '{' variable_declaration_list '}'

    "$i"    shift, and go to state 540
    "name"  shift, and go to state 541
    '('     shift, and go to state 1228
    '{'     shift, and go to state 1229

    tuple_expansion_variable_declaration  go to state 1230
    let_variable_name_with_pos_list       go to state 542
    let_variable_declaration              go to state 1231


State 1084

  262 expression_any: expr_assign SEMICOLON .

    $default  reduce using rule 262 (expression_any)


State 1085

  378 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1232
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1086

  379 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1233
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1087

  381 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1234
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1088

  380 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1235
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1089

  382 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1236
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1090

  372 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1237
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1091

  373 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1238
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1092

  374 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1239
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1093

  383 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1240
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1094

  384 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1241
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1095

  370 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1242
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1096

  371 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1243
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1097

  385 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1244
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1098

  386 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1245
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1099

  375 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1246
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1100

  376 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1247
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1101

  377 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1248
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1102

  369 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1249
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1103

  604 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1250
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1104

  606 commas: commas . COMMA
  609 enum_list: enum_list commas . enum_expression
  623 optional_commas: commas .

    "name"             shift, and go to state 911
    "new line, comma"  shift, and go to state 711
    ','                shift, and go to state 712

    $default  reduce using rule 623 (optional_commas)

    COMMA            go to state 1041
    enum_expression  go to state 1251


State 1105

  631 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas . $@48 '}'

    $default  reduce using rule 630 ($@48)

    $@48  go to state 1252


State 1106

  533 struct_variable_declaration_list: struct_variable_declaration_list "new line, semicolon" .

    $default  reduce using rule 533 (struct_variable_declaration_list)


State 1107

  645 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 645 (optional_struct_variable_declaration_list)


State 1108

  537 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  539                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "def"  shift, and go to state 1253


State 1109

  535 struct_variable_declaration_list: struct_variable_declaration_list $@40 . structure_variable_declaration SEMICOLON

    '@'  shift, and go to state 220

    $default  reduce using rule 519 (optional_field_annotation)

    metadata_argument_list          go to state 221
    optional_field_annotation       go to state 1254
    structure_variable_declaration  go to state 1255


State 1110

  576 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 576 (let_variable_name_with_pos_list)


State 1111

  579 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1256


State 1112

  585 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 585 (let_variable_declaration)


State 1113

  586 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1257
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1114

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  587 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1258


State 1115

  589 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 589 (global_let_variable_declaration)


State 1116

  819 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' . $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 818 ($@94)

    $@94  go to state 1259


State 1117

  822 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' . $@96 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 821 ($@96)

    $@96  go to state 1260


State 1118

  296 new_type_declaration: '<' $@18 type_declaration '>' . $@19

    $default  reduce using rule 295 ($@19)

    $@19  go to state 1261


State 1119

  302 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1262


State 1120

  300 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 300 (expr_new)


State 1121

  301 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 301 (expr_new)


State 1122

  299 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 299 (expr_new)


State 1123

  339 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1263


State 1124

  340 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1264


State 1125

  338 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 338 (expr_type_info)


State 1126

  337 expr_type_decl: "type" '<' $@26 type_declaration '>' . $@27

    $default  reduce using rule 336 ($@27)

    $@27  go to state 1265


State 1127

  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"
  838 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options . '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1266
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1128

  551 tuple_type_list: tuple_type_list . c_or_s tuple_type
  841 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list . '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1267
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 849


State 1129

  557 variant_type_list: variant_type_list . c_or_s variant_type
  844 make_dim_decl: "array" "variant" '<' $@107 variant_type_list . '>' $@108 '(' make_variant_dim ')'

    "new line, comma"      shift, and go to state 711
    "new line, semicolon"  shift, and go to state 13
    ','                    shift, and go to state 712
    '>'                    shift, and go to state 1268
    ';'                    shift, and go to state 16

    COMMA      go to state 713
    SEMICOLON  go to state 714
    c_or_s     go to state 852


State 1130

  848 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' . $@110 '(' optional_expr_list ')'

    $default  reduce using rule 847 ($@110)

    $@110  go to state 1269


State 1131

  845 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 845 (make_dim_decl)


State 1132

  858 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 285 (optional_expr_map_tuple_list)

    string_builder                go to state 469
    expr_reader                   go to state 470
    expr_call_pipe                go to state 471
    optional_expr_map_tuple_list  go to state 1270
    name_in_namespace             go to state 472
    expr_new                      go to state 473
    expr_cast                     go to state 474
    expr_type_decl                go to state 475
    expr_type_info                go to state 476
    block_or_lambda               go to state 477
    expr_full_block               go to state 478
    expr_numeric_const            go to state 479
    expr_named_call               go to state 480
    expr_method_call              go to state 481
    func_addr_expr                go to state 482
    expr_field                    go to state 483
    expr_call                     go to state 484
    expr                          go to state 729
    expr_generator                go to state 486
    expr_mtag                     go to state 487
    basic_type_declaration        go to state 488
    make_decl                     go to state 489
    make_struct_decl              go to state 490
    make_map_tuple                go to state 730
    make_tuple_call               go to state 491
    make_dim_decl                 go to state 492
    expr_map_tuple_list           go to state 984
    make_table_decl               go to state 493
    array_comprehension           go to state 494


State 1133

  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"
  859 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1271
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1134

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  829 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 829 (make_map_tuple)


State 1135

  854 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 854 (expr_map_tuple_list)


State 1136

  857 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 857 (make_table_decl)


State 1137

  328 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' . $@21 expr

    $default  reduce using rule 327 ($@21)

    $@21  go to state 1272


State 1138

  331 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' . $@23 expr

    $default  reduce using rule 330 ($@23)

    $@23  go to state 1273


State 1139

  334 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' . $@25 expr

    $default  reduce using rule 333 ($@25)

    $@25  go to state 1274


State 1140

  852 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' . $@112 '(' expr_list optional_comma ')'

    $default  reduce using rule 851 ($@112)

    $@112  go to state 1275


State 1141

  849 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 849 (make_dim_decl)


State 1142

  828 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' . $@100 use_initializer

    $default  reduce using rule 827 ($@100)

    $@100  go to state 1276


State 1143

  834 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 833 ($@102)

    $@102  go to state 1277


State 1144

  831 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 831 (make_tuple_call)


State 1145

  825 make_struct_decl: "variant" '<' $@97 variant_type_list '>' . $@98 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 824 ($@98)

    $@98  go to state 1278


State 1146

  500 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  501               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  502               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149
    '('                    shift, and go to state 1279

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1280


State 1147

  509 expr_mtag: "$c" '(' expr ')' '(' . ')'
  510          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1281
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1282
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1148

   37 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 36 ($@1)

    $@1  go to state 1283


State 1149

   40 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1284


State 1150

  100 for_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1285
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1151

  101 for_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1286


State 1152

  319 tuple_expansion: "name" .

    $default  reduce using rule 319 (tuple_expansion)


State 1153

  102 for_variable_name_with_pos_list: '(' tuple_expansion . ')'
  320 tuple_expansion: tuple_expansion . ',' "name"

    ','  shift, and go to state 1287
    ')'  shift, and go to state 1288


State 1154

  864 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1289
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1155

  103 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' . "name"
  104                                | for_variable_name_with_pos_list ',' . "name" "aka" "name"
  105                                | for_variable_name_with_pos_list ',' . '(' tuple_expansion ')'

    "name"  shift, and go to state 1290
    '('     shift, and go to state 1291


State 1156

  103 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  104                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  105                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  865 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1292
    ','   shift, and go to state 1155


State 1157

  802 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  803                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 1293
    '='   shift, and go to state 762

    copy_or_move  go to state 1294


State 1158

  804 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  805                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1295
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1159

  801 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1296
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1160

  800 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1297
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1161

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  392 func_addr_name: "$i" '(' expr . ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1298


State 1162

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  518          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1299


State 1163

  396 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options . '>' $@29 func_addr_name
  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1300
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1164

  399 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list . optional_function_type '>' $@31 func_addr_name

    ':'  shift, and go to state 394

    $default  reduce using rule 159 (optional_function_type)

    optional_function_type  go to state 1301


State 1165

  866 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1302
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1166

  856 make_table_decl: '{' $@113 optional_emit_semis optional_expr_map_tuple_list '}' .

    $default  reduce using rule 856 (make_table_decl)


State 1167

  286 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 286 (optional_expr_map_tuple_list)


State 1168

  413 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 413 (expr_call)


State 1169

  800 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  801                   | make_struct_fields ',' . "name" ":=" expr
  804                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  805                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 976
    "name"  shift, and go to state 977


State 1170

  387 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1303


State 1171

  388 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  835 make_dim_decl: '[' . optional_expr_list ']'
  864 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  865                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 283 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 599
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 1304
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1172

  351 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1305


State 1173

  352 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1306


State 1174

  353 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1307


State 1175

  350 capture_entry: '=' . "name"

    "name"  shift, and go to state 1308


State 1176

  349 capture_entry: '&' . "name"

    "name"  shift, and go to state 1309


State 1177

  354 capture_list: capture_entry .

    $default  reduce using rule 354 (capture_list)


State 1178

  355 capture_list: capture_list . ',' capture_entry
  357 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1310
    ')'  shift, and go to state 1311


State 1179

  358 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis block_or_simple_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1312


State 1180

  359 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis expression_block

    ':'  shift, and go to state 394

    $default  reduce using rule 159 (optional_function_type)

    optional_function_type  go to state 1313


State 1181

  475 expr: expr "is" "type" '<' $@34 . type_declaration_no_options '>' $@35

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1314
    type_declaration_no_options_no_dim  go to state 275


State 1182

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  517          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1315


State 1183

  481 expr: expr "as" "type" '<' $@36 . type_declaration '>' $@37

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1316


State 1184

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  515          | expr "as" "$f" '(' expr . ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1317


State 1185

  389 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 389 (expr_method_call)


State 1186

  342 expr_list: expr_list . ',' expr
  390 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1020
    ')'  shift, and go to state 1318


State 1187

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  512          | expr "?." "$f" '(' expr . ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1319


State 1188

  486 expr: expr '?' "as" "type" '<' . $@38 type_declaration '>' $@39

    $default  reduce using rule 484 ($@38)

    $@38  go to state 1320


State 1189

  516 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1321
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1190

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  472     | expr '?' expr ':' expr .
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 472 (expr)


State 1191

  514 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1322
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1192

  462 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 462 (expr)


State 1193

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  511          | expr '.' "$f" '(' expr . ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1323


State 1194

  404 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  835 make_dim_decl: '[' . optional_expr_list ']'
  864 array_comprehension: '[' . "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  865                    | '[' . "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "for"                             shift, and go to state 597
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "iterator"                        shift, and go to state 598
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "$f"                              shift, and go to state 602
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 603
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 283 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 599
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_fields      go to state 1324
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1195

  402 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 402 (expr_field)


State 1196

  342 expr_list: expr_list . ',' expr
  403 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1020
    ')'  shift, and go to state 1325


State 1197

  513 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1326
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1198

  460 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 460 (expr)


State 1199

  409 expr_field: expr '.' $@32 error $@33 .

    $default  reduce using rule 409 (expr_field)


State 1200

  405 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 405 (expr_field)


State 1201

  342 expr_list: expr_list . ',' expr
  406 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1020
    ')'  shift, and go to state 1327


State 1202

  754 type_declaration_no_options_no_dim: "block" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 754 (type_declaration_no_options_no_dim)


State 1203

  761 type_declaration_no_options_no_dim: "function" '<' $@71 optional_function_argument_list optional_function_type '>' $@72 .

    $default  reduce using rule 761 (type_declaration_no_options_no_dim)


State 1204

  768 type_declaration_no_options_no_dim: "lambda" '<' $@75 optional_function_argument_list optional_function_type '>' $@76 .

    $default  reduce using rule 768 (type_declaration_no_options_no_dim)


State 1205

  722 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 283 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 1328
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1206

  288 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377

    $default  reduce using rule 288 (type_declaration_no_options_list)


State 1207

  792 bitfield_alias_declaration: "bitfield" $@89 optional_public_or_private_alias "name" optional_emit_commas $@90 '{' $@91 bitfield_alias_bits optional_commas $@92 '}' .

    $default  reduce using rule 792 (bitfield_alias_declaration)


State 1208

  782 tuple_alias_declaration: "tuple" $@81 optional_public_or_private_alias "name" optional_emit_semis $@82 '{' $@83 tuple_alias_type_list optional_semis $@84 '}' .

    $default  reduce using rule 782 (tuple_alias_declaration)


State 1209

  787 variant_alias_declaration: "variant" $@85 optional_public_or_private_alias "name" optional_emit_semis $@86 '{' $@87 variant_alias_type_list optional_semis $@88 '}' .

    $default  reduce using rule 787 (variant_alias_declaration)


State 1210

  651 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 651 (variable_name_with_pos_list)


State 1211

  654 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1329


State 1212

  567 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1330
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1213

  308 expression_return: "return" "<-" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 308 (expression_return)


State 1214

  311 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 257 ($@16)

    expression_block  go to state 1331
    $@16              go to state 397


State 1215

  293 expression_delete: "delete" "explicit" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 293 (expression_delete)


State 1216

  113 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1332
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1217

   61 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 61 (expression_label)


State 1218

   62 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 62 (expression_goto)


State 1219

  108 expression_unsafe: "unsafe" optional_emit_semis expression_block .

    $default  reduce using rule 108 (expression_unsafe)


State 1220

  310 expression_yield: "yield" "<-" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 310 (expression_yield)


State 1221

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1333
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1222

   97 expression_if_then_else: $@9 if_or_static_if '(' . expr ')' optional_emit_semis expression_if_block expression_else

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1334
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1223

  107 expression_for_loop: $@10 "for" '(' . for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "$i"    shift, and go to state 966
    "name"  shift, and go to state 967
    '('     shift, and go to state 968

    for_variable_name_with_pos_list  go to state 1335


State 1224

  110 expression_while_loop: $@11 "while" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1336
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1225

  112 expression_with: $@12 "with" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1337
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1226

  256 expression_block_finally: "finally" . $@14 '{' expressions $@15 '}'

    $default  reduce using rule 254 ($@14)

    $@14  go to state 1338


State 1227

  259 expression_block: $@16 '{' expressions $@17 '}' expression_block_finally .

    $default  reduce using rule 259 (expression_block)


State 1228

  321 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  322                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    "name"  shift, and go to state 1152

    tuple_expansion  go to state 1339


State 1229

  325 expression_let: kwd_let optional_in_scope '{' . variable_declaration_list '}'

    $default  reduce using rule 582 (variable_declaration_list)

    variable_declaration_list  go to state 1340


State 1230

  324 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 324 (expression_let)


State 1231

  323 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 323 (expression_let)


State 1232

  378 expr_assign: expr "+=" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 378 (expr_assign)


State 1233

  379 expr_assign: expr "-=" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 379 (expr_assign)


State 1234

  381 expr_assign: expr "/=" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 381 (expr_assign)


State 1235

  380 expr_assign: expr "*=" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 380 (expr_assign)


State 1236

  382 expr_assign: expr "%=" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 382 (expr_assign)


State 1237

  372 expr_assign: expr "&=" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 372 (expr_assign)


State 1238

  373 expr_assign: expr "|=" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 373 (expr_assign)


State 1239

  374 expr_assign: expr "^=" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 374 (expr_assign)


State 1240

  383 expr_assign: expr "<<=" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 383 (expr_assign)


State 1241

  384 expr_assign: expr ">>=" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 384 (expr_assign)


State 1242

  370 expr_assign: expr "<-" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 370 (expr_assign)


State 1243

  371 expr_assign: expr ":=" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 371 (expr_assign)


State 1244

  385 expr_assign: expr "<<<=" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 385 (expr_assign)


State 1245

  386 expr_assign: expr ">>>=" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 386 (expr_assign)


State 1246

  375 expr_assign: expr "&&=" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 375 (expr_assign)


State 1247

  376 expr_assign: expr "||=" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 376 (expr_assign)


State 1248

  377 expr_assign: expr "^^=" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 377 (expr_assign)


State 1249

  369 expr_assign: expr '=' expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 369 (expr_assign)


State 1250

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  604 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 604 (enum_expression)


State 1251

  609 enum_list: enum_list commas enum_expression .

    $default  reduce using rule 609 (enum_list)


State 1252

  631 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 . '}'

    '}'  shift, and go to state 1341


State 1253

  537 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  539                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "public"   shift, and go to state 1342
    "private"  shift, and go to state 1343

    $default  reduce using rule 526 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1344


State 1254

  531 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1345

    $default  reduce using rule 529 (optional_static_member_variable)

    optional_static_member_variable  go to state 1346


State 1255

  535 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1347


State 1256

  579 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 579 (let_variable_name_with_pos_list)


State 1257

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  586 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1348


State 1258

  587 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 587 (let_variable_declaration)


State 1259

  819 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1349


State 1260

  822 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1350


State 1261

  296 new_type_declaration: '<' $@18 type_declaration '>' $@19 .

    $default  reduce using rule 296 (new_type_declaration)


State 1262

  302 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 302 (expr_new)


State 1263

  339 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1351
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1264

  340 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1352


State 1265

  337 expr_type_decl: "type" '<' $@26 type_declaration '>' $@27 .

    $default  reduce using rule 337 (expr_type_decl)


State 1266

  838 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' . $@104 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 837 ($@104)

    $@104  go to state 1353


State 1267

  841 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' . $@106 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 840 ($@106)

    $@106  go to state 1354


State 1268

  844 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' . $@108 '(' make_variant_dim ')'

    $default  reduce using rule 843 ($@108)

    $@108  go to state 1355


State 1269

  848 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 . '(' optional_expr_list ')'

    '('  shift, and go to state 1356


State 1270

  858 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1357


State 1271

  859 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1358


State 1272

  328 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1359
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1273

  331 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1360
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1274

  334 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1361
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1275

  852 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1362


State 1276

  828 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 . use_initializer

    "uninitialized"  shift, and go to state 1363

    $default  reduce using rule 815 (use_initializer)

    use_initializer  go to state 1364


State 1277

  834 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1365


State 1278

  825 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1366


State 1279

  500 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  501               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    ')'                               shift, and go to state 1367
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1368
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1280

  502 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis . expression_block

    $default  reduce using rule 257 ($@16)

    expression_block  go to state 1369
    $@16              go to state 397


State 1281

  509 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 509 (expr_mtag)


State 1282

  342 expr_list: expr_list . ',' expr
  510 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1020
    ')'  shift, and go to state 1370


State 1283

   37 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 33 (format_string)

    format_string  go to state 1371


State 1284

   40 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 40 (string_builder_body)


State 1285

  100 for_variable_name_with_pos_list: "$i" '(' expr . ')'
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1372


State 1286

  101 for_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 101 (for_variable_name_with_pos_list)


State 1287

  320 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1373


State 1288

  102 for_variable_name_with_pos_list: '(' tuple_expansion ')' .

    $default  reduce using rule 102 (for_variable_name_with_pos_list)


State 1289

  342 expr_list: expr_list . ',' expr
  864 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1020
    ')'  shift, and go to state 1374


State 1290

  103 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" .
  104                                | for_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1375

    $default  reduce using rule 103 (for_variable_name_with_pos_list)


State 1291

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' . tuple_expansion ')'

    "name"  shift, and go to state 1152

    tuple_expansion  go to state 1376


State 1292

  865 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1377
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1293

  803 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1378
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1294

  802 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1379
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1295

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  804 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  805                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1380


State 1296

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  801 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 801 (make_struct_fields)


State 1297

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  800 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 800 (make_struct_fields)


State 1298

  392 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 392 (func_addr_name)


State 1299

  518 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 518 (expr_mtag)


State 1300

  396 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' . $@29 func_addr_name

    $default  reduce using rule 395 ($@29)

    $@29  go to state 1381


State 1301

  399 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type . '>' $@31 func_addr_name

    '>'  shift, and go to state 1382


State 1302

  342 expr_list: expr_list . ',' expr
  866 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 1020
    ')'  shift, and go to state 1383


State 1303

  387 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 387 (expr_named_call)


State 1304

  388 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  800 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  801                   | make_struct_fields . ',' "name" ":=" expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  805                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1169
    ']'  shift, and go to state 1384


State 1305

  351 capture_entry: "<-" "name" .

    $default  reduce using rule 351 (capture_entry)


State 1306

  352 capture_entry: ":=" "name" .

    $default  reduce using rule 352 (capture_entry)


State 1307

  353 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1385


State 1308

  350 capture_entry: '=' "name" .

    $default  reduce using rule 350 (capture_entry)


State 1309

  349 capture_entry: '&' "name" .

    $default  reduce using rule 349 (capture_entry)


State 1310

  355 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1172
    ":="    shift, and go to state 1173
    "name"  shift, and go to state 1174
    '='     shift, and go to state 1175
    '&'     shift, and go to state 1176

    capture_entry  go to state 1386


State 1311

  357 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 357 (optional_capture_list)


State 1312

  358 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . block_or_simple_block

    "=>"  shift, and go to state 1387

    $default  reduce using rule 257 ($@16)

    expression_block       go to state 1388
    $@16                   go to state 397
    block_or_simple_block  go to state 1389


State 1313

  359 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1390


State 1314

  475 expr: expr "is" "type" '<' $@34 type_declaration_no_options . '>' $@35
  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "??"        shift, and go to state 370
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '>'         shift, and go to state 1391
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374


State 1315

  517 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 517 (expr_mtag)


State 1316

  481 expr: expr "as" "type" '<' $@36 type_declaration . '>' $@37
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1392


State 1317

  515 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 515 (expr_mtag)


State 1318

  390 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 390 (expr_method_call)


State 1319

  512 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 512 (expr_mtag)


State 1320

  486 expr: expr '?' "as" "type" '<' $@38 . type_declaration '>' $@39

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 274
    type_declaration_no_options_no_dim  go to state 275
    type_declaration                    go to state 1393


State 1321

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  516          | expr '?' "as" "$f" '(' expr . ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1394


State 1322

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  514          | expr '.' "?." "$f" '(' expr . ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1395


State 1323

  511 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 511 (expr_mtag)


State 1324

  404 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  800 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  801                   | make_struct_fields . ',' "name" ":=" expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  805                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1169
    ']'  shift, and go to state 1396


State 1325

  403 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 403 (expr_field)


State 1326

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  513          | expr '.' '.' "$f" '(' expr . ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1397


State 1327

  406 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 406 (expr_field)


State 1328

  722 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1398


State 1329

  654 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 654 (variable_name_with_pos_list)


State 1330

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  567 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 567 (variable_declaration_type)


State 1331

  311 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 311 (expression_try_catch)


State 1332

  113 expression_with_alias: "assume" "name" '=' expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 113 (expression_with_alias)


State 1333

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner SEMICOLON
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1399


State 1334

   97 expression_if_then_else: $@9 if_or_static_if '(' expr . ')' optional_emit_semis expression_if_block expression_else
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1400


State 1335

  103 for_variable_name_with_pos_list: for_variable_name_with_pos_list . ',' "name"
  104                                | for_variable_name_with_pos_list . ',' "name" "aka" "name"
  105                                | for_variable_name_with_pos_list . ',' '(' tuple_expansion ')'
  107 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list . "in" expr_list ')' optional_emit_semis expression_block

    "in"  shift, and go to state 1401
    ','   shift, and go to state 1155


State 1336

  110 expression_while_loop: $@11 "while" '(' expr . ')' optional_emit_semis expression_block
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1402


State 1337

  112 expression_with: $@12 "with" '(' expr . ')' optional_emit_semis expression_block
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1403


State 1338

  256 expression_block_finally: "finally" $@14 . '{' expressions $@15 '}'

    '{'  shift, and go to state 1404


State 1339

  320 tuple_expansion: tuple_expansion . ',' "name"
  321 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  322                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 1287
    ')'  shift, and go to state 1405


State 1340

  325 expression_let: kwd_let optional_in_scope '{' variable_declaration_list . '}'
  583 variable_declaration_list: variable_declaration_list . SEMICOLON
  584                          | variable_declaration_list . let_variable_declaration

    "$i"                   shift, and go to state 540
    "name"                 shift, and go to state 541
    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16
    '}'                    shift, and go to state 1406

    SEMICOLON                        go to state 1407
    let_variable_name_with_pos_list  go to state 542
    let_variable_declaration         go to state 1408


State 1341

  631 enum_declaration: optional_annotation_list_with_emit_semis "enum" $@46 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@47 enum_list optional_commas $@48 '}' .

    $default  reduce using rule 631 (enum_declaration)


State 1342

  527 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 527 (optional_public_or_private_member_variable)


State 1343

  528 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 528 (optional_public_or_private_member_variable)


State 1344

  537 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . "abstract" optional_constant $@41 function_declaration_header SEMICOLON
  539                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "abstract"  shift, and go to state 1409
    "static"    shift, and go to state 1345

    $default  reduce using rule 529 (optional_static_member_variable)

    optional_static_member_variable  go to state 1410


State 1345

  530 optional_static_member_variable: "static" .

    $default  reduce using rule 530 (optional_static_member_variable)


State 1346

  531 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1411
    "sealed"    shift, and go to state 1412

    $default  reduce using rule 521 (optional_override)

    optional_override  go to state 1413


State 1347

  535 struct_variable_declaration_list: struct_variable_declaration_list $@40 structure_variable_declaration SEMICOLON .

    $default  reduce using rule 535 (struct_variable_declaration_list)


State 1348

  586 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 586 (let_variable_declaration)


State 1349

  819 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1363

    $default  reduce using rule 815 (use_initializer)

    use_initializer  go to state 1414


State 1350

  822 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1363

    $default  reduce using rule 815 (use_initializer)

    use_initializer  go to state 1415


State 1351

  339 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1416


State 1352

  340 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1417


State 1353

  838 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1418


State 1354

  841 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1419


State 1355

  844 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 . '(' make_variant_dim ')'

    '('  shift, and go to state 1420


State 1356

  848 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 283 (optional_expr_list)

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    optional_expr_list      go to state 1421
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 600
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1357

  858 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 858 (make_table_decl)


State 1358

  859 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    $default  reduce using rule 285 (optional_expr_map_tuple_list)

    string_builder                go to state 469
    expr_reader                   go to state 470
    expr_call_pipe                go to state 471
    optional_expr_map_tuple_list  go to state 1422
    name_in_namespace             go to state 472
    expr_new                      go to state 473
    expr_cast                     go to state 474
    expr_type_decl                go to state 475
    expr_type_info                go to state 476
    block_or_lambda               go to state 477
    expr_full_block               go to state 478
    expr_numeric_const            go to state 479
    expr_named_call               go to state 480
    expr_method_call              go to state 481
    func_addr_expr                go to state 482
    expr_field                    go to state 483
    expr_call                     go to state 484
    expr                          go to state 729
    expr_generator                go to state 486
    expr_mtag                     go to state 487
    basic_type_declaration        go to state 488
    make_decl                     go to state 489
    make_struct_decl              go to state 490
    make_map_tuple                go to state 730
    make_tuple_call               go to state 491
    make_dim_decl                 go to state 492
    expr_map_tuple_list           go to state 984
    make_table_decl               go to state 493
    array_comprehension           go to state 494


State 1359

  328 expr_cast: "cast" '<' $@20 type_declaration_no_options '>' $@21 expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 328 (expr_cast)


State 1360

  331 expr_cast: "upcast" '<' $@22 type_declaration_no_options '>' $@23 expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 331 (expr_cast)


State 1361

  334 expr_cast: "reinterpret" '<' $@24 type_declaration_no_options '>' $@25 expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 334 (expr_cast)


State 1362

  852 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1423
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1363

  816 use_initializer: "uninitialized" .

    $default  reduce using rule 816 (use_initializer)


State 1364

  828 make_struct_decl: "default" '<' $@99 type_declaration_no_options '>' $@100 use_initializer .

    $default  reduce using rule 828 (make_struct_decl)


State 1365

  834 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1363

    $default  reduce using rule 815 (use_initializer)

    use_initializer  go to state 1424


State 1366

  825 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1363

    $default  reduce using rule 815 (use_initializer)

    use_initializer  go to state 1425


State 1367

  500 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 500 (expr_generator)


State 1368

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  501 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1426


State 1369

  502 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block .

    $default  reduce using rule 502 (expr_generator)


State 1370

  510 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 510 (expr_mtag)


State 1371

   34 format_string: format_string . STRING_CHARACTER
   37 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1427

    $default  reduce using rule 37 (optional_format_string)


State 1372

  100 for_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 100 (for_variable_name_with_pos_list)


State 1373

  320 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 320 (tuple_expansion)


State 1374

  864 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1428


State 1375

  104 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1429


State 1376

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' tuple_expansion . ')'
  320 tuple_expansion: tuple_expansion . ',' "name"

    ','  shift, and go to state 1287
    ')'  shift, and go to state 1430


State 1377

  342 expr_list: expr_list . ',' expr
  865 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1020
    ')'  shift, and go to state 1431


State 1378

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  803 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 803 (make_struct_fields)


State 1379

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  802 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 802 (make_struct_fields)


State 1380

  804 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  805                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 760
    ":="  shift, and go to state 1432
    '='   shift, and go to state 762

    copy_or_move  go to state 1433


State 1381

  396 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 768
    "name"  shift, and go to state 58

    name_in_namespace  go to state 771
    func_addr_name     go to state 1434


State 1382

  399 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' . $@31 func_addr_name

    $default  reduce using rule 398 ($@31)

    $@31  go to state 1435


State 1383

  866 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' make_map_tuple array_comprehension_where '}'

    ';'  shift, and go to state 1436


State 1384

  388 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1437


State 1385

  353 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1438


State 1386

  355 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 355 (capture_list)


State 1387

  344 block_or_simple_block: "=>" . expr
  345                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "<-"                              shift, and go to state 1439
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1440
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1388

  343 block_or_simple_block: expression_block .

    $default  reduce using rule 343 (block_or_simple_block)


State 1389

  358 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block .

    $default  reduce using rule 358 (expr_full_block)


State 1390

  359 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . expression_block

    $default  reduce using rule 257 ($@16)

    expression_block  go to state 1441
    $@16              go to state 397


State 1391

  475 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' . $@35

    $default  reduce using rule 474 ($@35)

    $@35  go to state 1442


State 1392

  481 expr: expr "as" "type" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 480 ($@37)

    $@37  go to state 1443


State 1393

  486 expr: expr '?' "as" "type" '<' $@38 type_declaration . '>' $@39
  776 type_declaration: type_declaration . '|' type_declaration_no_options
  777                 | type_declaration . '|' '#'

    '|'  shift, and go to state 377
    '>'  shift, and go to state 1444


State 1394

  516 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 516 (expr_mtag)


State 1395

  514 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 514 (expr_mtag)


State 1396

  404 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1445


State 1397

  513 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 513 (expr_mtag)


State 1398

  722 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@56 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 722 (type_declaration_no_options_no_dim)


State 1399

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner SEMICOLON

    "else"  shift, and go to state 1446

    $default  reduce using rule 75 (expression_else_one_liner)

    expression_else_one_liner  go to state 1447


State 1400

   97 expression_if_then_else: $@9 if_or_static_if '(' expr ')' . optional_emit_semis expression_if_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1448


State 1401

  107 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" . expr_list ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    expr_list               go to state 1449
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 601
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1402

  110 expression_while_loop: $@11 "while" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1450


State 1403

  112 expression_with: $@12 "with" '(' expr ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1451


State 1404

  256 expression_block_finally: "finally" $@14 '{' . expressions $@15 '}'

    $default  reduce using rule 280 (expressions)

    expressions  go to state 1452


State 1405

  321 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  322                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr SEMICOLON

    ':'  shift, and go to state 1453
    '&'  shift, and go to state 415

    $default  reduce using rule 573 (optional_ref)

    optional_ref  go to state 1454


State 1406

  325 expression_let: kwd_let optional_in_scope '{' variable_declaration_list '}' .

    $default  reduce using rule 325 (expression_let)


State 1407

  583 variable_declaration_list: variable_declaration_list SEMICOLON .

    $default  reduce using rule 583 (variable_declaration_list)


State 1408

  584 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 584 (variable_declaration_list)


State 1409

  537 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" . optional_constant $@41 function_declaration_header SEMICOLON

    "const"  shift, and go to state 1455

    $default  reduce using rule 524 (optional_constant)

    optional_constant  go to state 1456


State 1410

  539 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "override"  shift, and go to state 1411
    "sealed"    shift, and go to state 1412

    $default  reduce using rule 521 (optional_override)

    optional_override  go to state 1457


State 1411

  522 optional_override: "override" .

    $default  reduce using rule 522 (optional_override)


State 1412

  523 optional_override: "sealed" .

    $default  reduce using rule 523 (optional_override)


State 1413

  531 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1342
    "private"  shift, and go to state 1343

    $default  reduce using rule 526 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1458


State 1414

  819 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 985
    '('     shift, and go to state 1459

    $default  reduce using rule 814 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1460
    make_struct_dim_list           go to state 1461
    make_struct_dim_decl           go to state 1462
    optional_make_struct_dim_decl  go to state 1463


State 1415

  822 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 985
    '('     shift, and go to state 1459

    $default  reduce using rule 814 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1460
    make_struct_dim_list           go to state 1461
    make_struct_dim_decl           go to state 1462
    optional_make_struct_dim_decl  go to state 1464


State 1416

  339 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 339 (expr_type_info)


State 1417

  340 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1465
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1418

  838 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1363

    $default  reduce using rule 815 (use_initializer)

    use_initializer  go to state 1466


State 1419

  841 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1363

    $default  reduce using rule 815 (use_initializer)

    use_initializer  go to state 1467


State 1420

  844 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 985

    $default  reduce using rule 806 (make_variant_dim)

    make_struct_fields  go to state 1468
    make_variant_dim    go to state 1469


State 1421

  848 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1470


State 1422

  859 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1471


State 1423

  342 expr_list: expr_list . ',' expr
  852 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 757

    $default  reduce using rule 862 (optional_comma)

    optional_comma  go to state 1472


State 1424

  834 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 985
    '('     shift, and go to state 1459

    $default  reduce using rule 814 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1460
    make_struct_dim_list           go to state 1461
    make_struct_dim_decl           go to state 1462
    optional_make_struct_dim_decl  go to state 1473


State 1425

  825 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 985

    $default  reduce using rule 806 (make_variant_dim)

    make_struct_fields  go to state 1468
    make_variant_dim    go to state 1474


State 1426

  501 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 501 (expr_generator)


State 1427

   34 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 34 (format_string)


State 1428

  864 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1475
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1429

  104 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 104 (for_variable_name_with_pos_list)


State 1430

  105 for_variable_name_with_pos_list: for_variable_name_with_pos_list ',' '(' tuple_expansion ')' .

    $default  reduce using rule 105 (for_variable_name_with_pos_list)


State 1431

  865 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1476


State 1432

  805 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1477
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1433

  804 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1478
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1434

  396 func_addr_expr: '@' '@' '<' $@28 type_declaration_no_options '>' $@29 func_addr_name .

    $default  reduce using rule 396 (func_addr_expr)


State 1435

  399 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 . func_addr_name

    "::"    shift, and go to state 57
    "$i"    shift, and go to state 768
    "name"  shift, and go to state 58

    name_in_namespace  go to state 771
    func_addr_name     go to state 1479


State 1436

  866 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 729
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_map_tuple          go to state 1480
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1437

  388 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 388 (expr_named_call)


State 1438

  353 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 353 (capture_entry)


State 1439

  345 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1481
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1440

  344 block_or_simple_block: "=>" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    ".."  error (nonassociative)

    $default  reduce using rule 344 (block_or_simple_block)


State 1441

  359 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block .

    $default  reduce using rule 359 (expr_full_block_assumed_piped)


State 1442

  475 expr: expr "is" "type" '<' $@34 type_declaration_no_options '>' $@35 .

    $default  reduce using rule 475 (expr)


State 1443

  481 expr: expr "as" "type" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 481 (expr)


State 1444

  486 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' . $@39

    $default  reduce using rule 485 ($@39)

    $@39  go to state 1482


State 1445

  404 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 404 (expr_field)


State 1446

   76 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 873
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 874
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 878
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 883
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder           go to state 469
    expr_reader              go to state 470
    expression_if_one_liner  go to state 1483
    expr_call_pipe           go to state 471
    name_in_namespace        go to state 472
    expr_new                 go to state 473
    expression_break         go to state 1484
    expression_continue      go to state 1485
    expression_return        go to state 1486
    expression_yield         go to state 1487
    expr_cast                go to state 474
    expr_type_decl           go to state 475
    expr_type_info           go to state 476
    block_or_lambda          go to state 477
    expr_full_block          go to state 478
    expr_numeric_const       go to state 479
    expr_named_call          go to state 480
    expr_method_call         go to state 481
    func_addr_expr           go to state 482
    expr_field               go to state 483
    expr_call                go to state 484
    expr                     go to state 1488
    expr_generator           go to state 486
    expr_mtag                go to state 487
    basic_type_declaration   go to state 488
    make_decl                go to state 489
    make_struct_decl         go to state 490
    make_tuple_call          go to state 491
    make_dim_decl            go to state 492
    make_table_decl          go to state 493
    array_comprehension      go to state 494


State 1447

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1489


State 1448

   97 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis . expression_if_block expression_else

    '{'       reduce using rule 86 ($@3)
    '{'       [reduce using rule 89 ($@5)]
    $default  reduce using rule 89 ($@5)

    expression_if_block  go to state 1490
    $@3                  go to state 1491
    $@5                  go to state 1492


State 1449

  107 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list . ')' optional_emit_semis expression_block
  342 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1020
    ')'  shift, and go to state 1493


State 1450

  110 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 257 ($@16)

    expression_block  go to state 1494
    $@16              go to state 397


State 1451

  112 expression_with: $@12 "with" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 257 ($@16)

    expression_block  go to state 1495
    $@16              go to state 397


State 1452

  256 expression_block_finally: "finally" $@14 '{' expressions . $@15 '}'
  281 expressions: expressions . expression_any
  282            | expressions . error

    error                             shift, and go to state 872
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 873
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 874
    "try"                             shift, and go to state 875
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 876
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 877
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 878
    "pass"                            shift, and go to state 879
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 880
    "goto"                            shift, and go to state 881
    "unsafe"                          shift, and go to state 882
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 883
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 109 ($@11)
    "if"         reduce using rule 96 ($@9)
    "static_if"  reduce using rule 96 ($@9)
    "for"        reduce using rule 106 ($@10)
    "with"       reduce using rule 111 ($@12)
    '}'          reduce using rule 255 ($@15)

    SEMICOLON                         go to state 884
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 885
    expression_goto                   go to state 886
    expression_if_one_liner           go to state 887
    expression_if_then_else           go to state 888
    $@9                               go to state 889
    expression_if_then_else_oneliner  go to state 890
    expression_for_loop               go to state 891
    $@10                              go to state 892
    expression_unsafe                 go to state 893
    expression_while_loop             go to state 894
    $@11                              go to state 895
    expression_with                   go to state 896
    $@12                              go to state 897
    expression_with_alias             go to state 898
    $@15                              go to state 1496
    expr_call_pipe                    go to state 471
    expression_any                    go to state 900
    name_in_namespace                 go to state 472
    expression_delete                 go to state 901
    expr_new                          go to state 473
    expression_break                  go to state 902
    expression_continue               go to state 903
    expression_return                 go to state 904
    expression_yield                  go to state 905
    expression_try_catch              go to state 906
    kwd_let                           go to state 907
    expression_let                    go to state 908
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 909
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 910
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 1453

  321 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 228
    "array"      shift, and go to state 229
    "table"      shift, and go to state 230
    "typedecl"   shift, and go to state 231
    "iterator"   shift, and go to state 232
    "smart_ptr"  shift, and go to state 233
    "bool"       shift, and go to state 234
    "void"       shift, and go to state 235
    "string"     shift, and go to state 236
    "auto"       shift, and go to state 237
    "int"        shift, and go to state 238
    "int2"       shift, and go to state 239
    "int3"       shift, and go to state 240
    "int4"       shift, and go to state 241
    "uint"       shift, and go to state 242
    "bitfield"   shift, and go to state 243
    "uint2"      shift, and go to state 244
    "uint3"      shift, and go to state 245
    "uint4"      shift, and go to state 246
    "float"      shift, and go to state 247
    "float2"     shift, and go to state 248
    "float3"     shift, and go to state 249
    "float4"     shift, and go to state 250
    "range"      shift, and go to state 251
    "urange"     shift, and go to state 252
    "range64"    shift, and go to state 253
    "urange64"   shift, and go to state 254
    "block"      shift, and go to state 255
    "int64"      shift, and go to state 256
    "uint64"     shift, and go to state 257
    "double"     shift, and go to state 258
    "function"   shift, and go to state 259
    "lambda"     shift, and go to state 260
    "int8"       shift, and go to state 261
    "uint8"      shift, and go to state 262
    "int16"      shift, and go to state 263
    "uint16"     shift, and go to state 264
    "tuple"      shift, and go to state 265
    "variant"    shift, and go to state 266
    "::"         shift, and go to state 57
    "$t"         shift, and go to state 267
    "name"       shift, and go to state 58
    '$'          shift, and go to state 268

    name_in_namespace                   go to state 269
    basic_type_declaration              go to state 270
    structure_type_declaration          go to state 271
    auto_type_declaration               go to state 272
    bitfield_type_declaration           go to state 273
    type_declaration_no_options         go to state 1497
    type_declaration_no_options_no_dim  go to state 275


State 1454

  322 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 547
    ":="  shift, and go to state 548
    '='   shift, and go to state 549

    copy_or_move_or_clone  go to state 1498


State 1455

  525 optional_constant: "const" .

    $default  reduce using rule 525 (optional_constant)


State 1456

  537 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant . $@41 function_declaration_header SEMICOLON

    $default  reduce using rule 536 ($@41)

    $@41  go to state 1499


State 1457

  539 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@42 function_declaration_header optional_emit_semis expression_block

    "const"  shift, and go to state 1455

    $default  reduce using rule 524 (optional_constant)

    optional_constant  go to state 1500


State 1458

  531 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 686
    "name"  shift, and go to state 687

    variable_declaration_no_type  go to state 1501
    variable_declaration_type     go to state 1502
    variable_declaration          go to state 1503
    variable_name_with_pos_list   go to state 690


State 1459

  809 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 985

    make_struct_fields  go to state 1504


State 1460

  800 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  801                   | make_struct_fields . ',' "name" ":=" expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  805                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  811 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1169

    $default  reduce using rule 811 (make_struct_dim_decl)


State 1461

  810 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  812 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1505

    $default  reduce using rule 862 (optional_comma)

    optional_comma  go to state 1506


State 1462

  813 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 813 (optional_make_struct_dim_decl)


State 1463

  819 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1507


State 1464

  822 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1508


State 1465

  340 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1509


State 1466

  838 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 985
    '('     shift, and go to state 1459

    $default  reduce using rule 814 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1460
    make_struct_dim_list           go to state 1461
    make_struct_dim_decl           go to state 1462
    optional_make_struct_dim_decl  go to state 1510


State 1467

  841 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 985
    '('     shift, and go to state 1459

    $default  reduce using rule 814 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1460
    make_struct_dim_list           go to state 1461
    make_struct_dim_decl           go to state 1462
    optional_make_struct_dim_decl  go to state 1511


State 1468

  800 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  801                   | make_struct_fields . ',' "name" ":=" expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  805                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  807 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1169

    $default  reduce using rule 807 (make_variant_dim)


State 1469

  844 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1512


State 1470

  848 make_dim_decl: "array" '<' $@109 type_declaration_no_options '>' $@110 '(' optional_expr_list ')' .

    $default  reduce using rule 848 (make_dim_decl)


State 1471

  859 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 859 (make_table_decl)


State 1472

  852 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1513


State 1473

  834 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1514


State 1474

  825 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1515


State 1475

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  864 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ';'    shift, and go to state 1516

    $default  reduce using rule 860 (array_comprehension_where)

    array_comprehension_where  go to state 1517


State 1476

  865 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1518
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1477

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  805 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 805 (make_struct_fields)


State 1478

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  804 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 804 (make_struct_fields)


State 1479

  399 func_addr_expr: '@' '@' '<' $@30 optional_function_argument_list optional_function_type '>' $@31 func_addr_name .

    $default  reduce using rule 399 (func_addr_expr)


State 1480

  866 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1516

    $default  reduce using rule 860 (array_comprehension_where)

    array_comprehension_where  go to state 1519


State 1481

  345 block_or_simple_block: "=>" "<-" expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 345 (block_or_simple_block)


State 1482

  486 expr: expr '?' "as" "type" '<' $@38 type_declaration '>' $@39 .

    $default  reduce using rule 486 (expr)


State 1483

   76 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 76 (expression_else_one_liner)


State 1484

   80 expression_if_one_liner: expression_break .

    $default  reduce using rule 80 (expression_if_one_liner)


State 1485

   81 expression_if_one_liner: expression_continue .

    $default  reduce using rule 81 (expression_if_one_liner)


State 1486

   78 expression_if_one_liner: expression_return .

    $default  reduce using rule 78 (expression_if_one_liner)


State 1487

   79 expression_if_one_liner: expression_yield .

    $default  reduce using rule 79 (expression_if_one_liner)


State 1488

   77 expression_if_one_liner: expr .
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 77 (expression_if_one_liner)


State 1489

   98 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON .

    $default  reduce using rule 98 (expression_if_then_else_oneliner)


State 1490

   97 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block . expression_else

    "else"         shift, and go to state 1520
    "elif"         shift, and go to state 1521
    "static_elif"  shift, and go to state 1522

    $default  reduce using rule 70 (expression_else)

    elif_or_static_elif  go to state 1523
    expression_else      go to state 1524


State 1491

   88 expression_if_block: $@3 . '{' expressions $@4 '}' expression_block_finally

    '{'  shift, and go to state 1525


State 1492

   90 expression_if_block: $@5 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 873
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 874
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 878
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 883
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder           go to state 469
    expr_reader              go to state 470
    expression_if_one_liner  go to state 1526
    expr_call_pipe           go to state 471
    name_in_namespace        go to state 472
    expr_new                 go to state 473
    expression_break         go to state 1484
    expression_continue      go to state 1485
    expression_return        go to state 1486
    expression_yield         go to state 1487
    expr_cast                go to state 474
    expr_type_decl           go to state 475
    expr_type_info           go to state 476
    block_or_lambda          go to state 477
    expr_full_block          go to state 478
    expr_numeric_const       go to state 479
    expr_named_call          go to state 480
    expr_method_call         go to state 481
    func_addr_expr           go to state 482
    expr_field               go to state 483
    expr_call                go to state 484
    expr                     go to state 1488
    expr_generator           go to state 486
    expr_mtag                go to state 487
    basic_type_declaration   go to state 488
    make_decl                go to state 489
    make_struct_decl         go to state 490
    make_tuple_call          go to state 491
    make_dim_decl            go to state 492
    make_table_decl          go to state 493
    array_comprehension      go to state 494


State 1493

  107 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1527


State 1494

  110 expression_while_loop: $@11 "while" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 110 (expression_while_loop)


State 1495

  112 expression_with: $@12 "with" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 112 (expression_with)


State 1496

  256 expression_block_finally: "finally" $@14 '{' expressions $@15 . '}'

    '}'  shift, and go to state 1528


State 1497

  321 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON
  723 type_declaration_no_options_no_dim: type_declaration_no_options . '-' '[' ']'
  724                                   | type_declaration_no_options . "explicit"
  725                                   | type_declaration_no_options . "const"
  726                                   | type_declaration_no_options . '-' "const"
  727                                   | type_declaration_no_options . '&'
  728                                   | type_declaration_no_options . '-' '&'
  729                                   | type_declaration_no_options . '#'
  730                                   | type_declaration_no_options . "implicit"
  731                                   | type_declaration_no_options . '-' '#'
  732                                   | type_declaration_no_options . "==" "const"
  733                                   | type_declaration_no_options . "==" '&'
  734                                   | type_declaration_no_options . '?'
  738                                   | type_declaration_no_options . "??"

    "const"     shift, and go to state 366
    "implicit"  shift, and go to state 367
    "explicit"  shift, and go to state 368
    "=="        shift, and go to state 369
    "<-"        shift, and go to state 547
    "??"        shift, and go to state 370
    ":="        shift, and go to state 548
    '='         shift, and go to state 549
    '?'         shift, and go to state 371
    '&'         shift, and go to state 372
    '-'         shift, and go to state 373
    '#'         shift, and go to state 374

    copy_or_move_or_clone  go to state 1529


State 1498

  322 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1530
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1499

  537 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 . function_declaration_header SEMICOLON

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 1531


State 1500

  539 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@42 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 538 ($@42)

    $@42  go to state 1532


State 1501

  569 variable_declaration: variable_declaration_no_type .

    $default  reduce using rule 569 (variable_declaration)


State 1502

  568 variable_declaration: variable_declaration_type .

    $default  reduce using rule 568 (variable_declaration)


State 1503

  531 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 531 (structure_variable_declaration)


State 1504

  800 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  801                   | make_struct_fields . ',' "name" ":=" expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  805                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  809 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1169
    ')'  shift, and go to state 1533


State 1505

  810 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  863 optional_comma: ',' .

    '('  shift, and go to state 1534

    $default  reduce using rule 863 (optional_comma)


State 1506

  812 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 812 (make_struct_dim_decl)


State 1507

  819 make_struct_decl: "struct" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 819 (make_struct_decl)


State 1508

  822 make_struct_decl: "class" '<' $@95 type_declaration_no_options '>' $@96 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 822 (make_struct_decl)


State 1509

  340 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 340 (expr_type_info)


State 1510

  838 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1535


State 1511

  841 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1536


State 1512

  844 make_dim_decl: "array" "variant" '<' $@107 variant_type_list '>' $@108 '(' make_variant_dim ')' .

    $default  reduce using rule 844 (make_dim_decl)


State 1513

  852 make_dim_decl: "fixed_array" '<' $@111 type_declaration_no_options '>' $@112 '(' expr_list optional_comma ')' .

    $default  reduce using rule 852 (make_dim_decl)


State 1514

  834 make_tuple_call: "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 834 (make_tuple_call)


State 1515

  825 make_struct_decl: "variant" '<' $@97 variant_type_list '>' $@98 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 825 (make_struct_decl)


State 1516

  861 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1537


State 1517

  864 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1538


State 1518

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  865 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ';'    shift, and go to state 1516

    $default  reduce using rule 860 (array_comprehension_where)

    array_comprehension_where  go to state 1539


State 1519

  866 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1540


State 1520

   71 expression_else: "else" . optional_emit_semis expression_else_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1541


State 1521

   64 elif_or_static_elif: "elif" .

    $default  reduce using rule 64 (elif_or_static_elif)


State 1522

   65 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 65 (elif_or_static_elif)


State 1523

   72 expression_else: elif_or_static_elif . '(' expr ')' optional_emit_semis expression_else_block expression_else

    '('  shift, and go to state 1542


State 1524

   97 expression_if_then_else: $@9 if_or_static_if '(' expr ')' optional_emit_semis expression_if_block expression_else .

    $default  reduce using rule 97 (expression_if_then_else)


State 1525

   88 expression_if_block: $@3 '{' . expressions $@4 '}' expression_block_finally

    $default  reduce using rule 280 (expressions)

    expressions  go to state 1543


State 1526

   90 expression_if_block: $@5 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1544


State 1527

  107 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis . expression_block

    $default  reduce using rule 257 ($@16)

    expression_block  go to state 1545
    $@16              go to state 397


State 1528

  256 expression_block_finally: "finally" $@14 '{' expressions $@15 '}' .

    $default  reduce using rule 256 (expression_block_finally)


State 1529

  321 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1546
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1530

  322 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . SEMICOLON
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1547


State 1531

  537 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1548


State 1532

  539 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 185
    "bool"      shift, and go to state 186
    "string"    shift, and go to state 187
    "int"       shift, and go to state 188
    "int2"      shift, and go to state 189
    "int3"      shift, and go to state 190
    "int4"      shift, and go to state 191
    "uint"      shift, and go to state 192
    "uint2"     shift, and go to state 193
    "uint3"     shift, and go to state 194
    "uint4"     shift, and go to state 195
    "float"     shift, and go to state 196
    "float2"    shift, and go to state 197
    "float3"    shift, and go to state 198
    "float4"    shift, and go to state 199
    "range"     shift, and go to state 200
    "urange"    shift, and go to state 201
    "range64"   shift, and go to state 202
    "urange64"  shift, and go to state 203
    "int64"     shift, and go to state 204
    "uint64"    shift, and go to state 205
    "double"    shift, and go to state 206
    "int8"      shift, and go to state 207
    "uint8"     shift, and go to state 208
    "int16"     shift, and go to state 209
    "uint16"    shift, and go to state 210
    "++"        shift, and go to state 211
    "--"        shift, and go to state 212
    "name"      shift, and go to state 213

    function_name                go to state 214
    function_declaration_header  go to state 1549


State 1533

  809 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 809 (make_struct_dim_list)


State 1534

  810 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 602
    "name"  shift, and go to state 985

    make_struct_fields  go to state 1550


State 1535

  838 make_dim_decl: "array" "struct" '<' $@103 type_declaration_no_options '>' $@104 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 838 (make_dim_decl)


State 1536

  841 make_dim_decl: "array" "tuple" '<' $@105 tuple_type_list '>' $@106 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 841 (make_dim_decl)


State 1537

  861 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1551
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1538

  864 array_comprehension: '[' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 864 (array_comprehension)


State 1539

  865 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1552


State 1540

  866 array_comprehension: '{' "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 866 (array_comprehension)


State 1541

   71 expression_else: "else" optional_emit_semis . expression_else_block

    '{'       reduce using rule 91 ($@6)
    '{'       [reduce using rule 94 ($@8)]
    $default  reduce using rule 94 ($@8)

    expression_else_block  go to state 1553
    $@6                    go to state 1554
    $@8                    go to state 1555


State 1542

   72 expression_else: elif_or_static_elif '(' . expr ')' optional_emit_semis expression_else_block expression_else

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "null"                            shift, and go to state 428
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder          go to state 469
    expr_reader             go to state 470
    expr_call_pipe          go to state 471
    name_in_namespace       go to state 472
    expr_new                go to state 473
    expr_cast               go to state 474
    expr_type_decl          go to state 475
    expr_type_info          go to state 476
    block_or_lambda         go to state 477
    expr_full_block         go to state 478
    expr_numeric_const      go to state 479
    expr_named_call         go to state 480
    expr_method_call        go to state 481
    func_addr_expr          go to state 482
    expr_field              go to state 483
    expr_call               go to state 484
    expr                    go to state 1556
    expr_generator          go to state 486
    expr_mtag               go to state 487
    basic_type_declaration  go to state 488
    make_decl               go to state 489
    make_struct_decl        go to state 490
    make_tuple_call         go to state 491
    make_dim_decl           go to state 492
    make_table_decl         go to state 493
    array_comprehension     go to state 494


State 1543

   88 expression_if_block: $@3 '{' expressions . $@4 '}' expression_block_finally
  281 expressions: expressions . expression_any
  282            | expressions . error

    error                             shift, and go to state 872
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 873
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 874
    "try"                             shift, and go to state 875
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 876
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 877
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 878
    "pass"                            shift, and go to state 879
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 880
    "goto"                            shift, and go to state 881
    "unsafe"                          shift, and go to state 882
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 883
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 109 ($@11)
    "if"         reduce using rule 96 ($@9)
    "static_if"  reduce using rule 96 ($@9)
    "for"        reduce using rule 106 ($@10)
    "with"       reduce using rule 111 ($@12)
    '}'          reduce using rule 87 ($@4)

    SEMICOLON                         go to state 884
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 885
    expression_goto                   go to state 886
    expression_if_one_liner           go to state 887
    $@4                               go to state 1557
    expression_if_then_else           go to state 888
    $@9                               go to state 889
    expression_if_then_else_oneliner  go to state 890
    expression_for_loop               go to state 891
    $@10                              go to state 892
    expression_unsafe                 go to state 893
    expression_while_loop             go to state 894
    $@11                              go to state 895
    expression_with                   go to state 896
    $@12                              go to state 897
    expression_with_alias             go to state 898
    expr_call_pipe                    go to state 471
    expression_any                    go to state 900
    name_in_namespace                 go to state 472
    expression_delete                 go to state 901
    expr_new                          go to state 473
    expression_break                  go to state 902
    expression_continue               go to state 903
    expression_return                 go to state 904
    expression_yield                  go to state 905
    expression_try_catch              go to state 906
    kwd_let                           go to state 907
    expression_let                    go to state 908
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 909
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 910
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 1544

   90 expression_if_block: $@5 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 90 (expression_if_block)


State 1545

  107 expression_for_loop: $@10 "for" '(' for_variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block .

    $default  reduce using rule 107 (expression_for_loop)


State 1546

  321 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 617
    "as"                   shift, and go to state 618
    "<<"                   shift, and go to state 619
    ">>"                   shift, and go to state 620
    "++"                   shift, and go to state 621
    "--"                   shift, and go to state 622
    "<="                   shift, and go to state 623
    ">="                   shift, and go to state 624
    "=="                   shift, and go to state 625
    "!="                   shift, and go to state 626
    "->"                   shift, and go to state 627
    "??"                   shift, and go to state 628
    "?."                   shift, and go to state 629
    "?["                   shift, and go to state 630
    "<|"                   shift, and go to state 631
    "|>"                   shift, and go to state 632
    "<<<"                  shift, and go to state 633
    ">>>"                  shift, and go to state 634
    "&&"                   shift, and go to state 635
    "||"                   shift, and go to state 636
    "^^"                   shift, and go to state 637
    ".."                   shift, and go to state 638
    "new line, semicolon"  shift, and go to state 13
    '?'                    shift, and go to state 639
    '|'                    shift, and go to state 640
    '^'                    shift, and go to state 641
    '&'                    shift, and go to state 642
    '<'                    shift, and go to state 643
    '>'                    shift, and go to state 644
    '-'                    shift, and go to state 645
    '+'                    shift, and go to state 646
    '*'                    shift, and go to state 647
    '/'                    shift, and go to state 648
    '%'                    shift, and go to state 649
    '.'                    shift, and go to state 650
    '['                    shift, and go to state 651
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1558


State 1547

  322 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 322 (tuple_expansion_variable_declaration)


State 1548

  537 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@41 function_declaration_header SEMICOLON .

    $default  reduce using rule 537 (struct_variable_declaration_list)


State 1549

  539 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header . optional_emit_semis expression_block

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1559


State 1550

  800 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  801                   | make_struct_fields . ',' "name" ":=" expr
  804                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  805                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  810 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1169
    ')'  shift, and go to state 1560


State 1551

  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'
  861 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651

    $default  reduce using rule 861 (array_comprehension_where)


State 1552

  865 array_comprehension: '[' "iterator" "for" '(' for_variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 865 (array_comprehension)


State 1553

   71 expression_else: "else" optional_emit_semis expression_else_block .

    $default  reduce using rule 71 (expression_else)


State 1554

   93 expression_else_block: $@6 . '{' expressions $@7 '}' expression_block_finally

    '{'  shift, and go to state 1561


State 1555

   95 expression_else_block: $@8 . expression_if_one_liner SEMICOLON

    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 873
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 874
    "table"                           shift, and go to state 429
    "deref"                           shift, and go to state 430
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 878
    "reinterpret"                     shift, and go to state 434
    "unsafe"                          shift, and go to state 435
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 883
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    '{'                               shift, and go to state 468

    string_builder           go to state 469
    expr_reader              go to state 470
    expression_if_one_liner  go to state 1562
    expr_call_pipe           go to state 471
    name_in_namespace        go to state 472
    expr_new                 go to state 473
    expression_break         go to state 1484
    expression_continue      go to state 1485
    expression_return        go to state 1486
    expression_yield         go to state 1487
    expr_cast                go to state 474
    expr_type_decl           go to state 475
    expr_type_info           go to state 476
    block_or_lambda          go to state 477
    expr_full_block          go to state 478
    expr_numeric_const       go to state 479
    expr_named_call          go to state 480
    expr_method_call         go to state 481
    func_addr_expr           go to state 482
    expr_field               go to state 483
    expr_call                go to state 484
    expr                     go to state 1488
    expr_generator           go to state 486
    expr_mtag                go to state 487
    basic_type_declaration   go to state 488
    make_decl                go to state 489
    make_struct_decl         go to state 490
    make_tuple_call          go to state 491
    make_dim_decl            go to state 492
    make_table_decl          go to state 493
    array_comprehension      go to state 494


State 1556

   72 expression_else: elif_or_static_elif '(' expr . ')' optional_emit_semis expression_else_block expression_else
  389 expr_method_call: expr . "->" "name" '(' ')'
  390                 | expr . "->" "name" '(' expr_list ')'
  400 expr_field: expr . '.' "name"
  401           | expr . '.' '.' "name"
  402           | expr . '.' "name" '(' ')'
  403           | expr . '.' "name" '(' expr_list ')'
  404           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  405           | expr . '.' basic_type_declaration '(' ')'
  406           | expr . '.' basic_type_declaration '(' expr_list ')'
  409           | expr . '.' $@32 error $@33
  431 expr: expr . "<<" expr
  432     | expr . ">>" expr
  433     | expr . "<<<" expr
  434     | expr . ">>>" expr
  435     | expr . '+' expr
  436     | expr . '-' expr
  437     | expr . '*' expr
  438     | expr . '/' expr
  439     | expr . '%' expr
  440     | expr . '<' expr
  441     | expr . '>' expr
  442     | expr . "==" expr
  443     | expr . "!=" expr
  444     | expr . "<=" expr
  445     | expr . ">=" expr
  446     | expr . '&' expr
  447     | expr . '|' expr
  448     | expr . '^' expr
  449     | expr . "&&" expr
  450     | expr . "||" expr
  451     | expr . "^^" expr
  452     | expr . ".." expr
  455     | expr . "++"
  456     | expr . "--"
  459     | expr . '[' expr ']'
  460     | expr . '.' '[' expr ']'
  461     | expr . "?[" expr ']'
  462     | expr . '.' "?[" expr ']'
  463     | expr . "?." "name"
  464     | expr . '.' "?." "name"
  471     | expr . "??" expr
  472     | expr . '?' expr ':' expr
  475     | expr . "is" "type" '<' $@34 type_declaration_no_options '>' $@35
  476     | expr . "is" basic_type_declaration
  477     | expr . "is" "name"
  478     | expr . "as" "name"
  481     | expr . "as" "type" '<' $@36 type_declaration '>' $@37
  482     | expr . "as" basic_type_declaration
  483     | expr . '?' "as" "name"
  486     | expr . '?' "as" "type" '<' $@38 type_declaration '>' $@39
  487     | expr . '?' "as" basic_type_declaration
  495     | expr . "<|" expr
  496     | expr . "|>" expr
  497     | expr . "|>" basic_type_declaration
  511 expr_mtag: expr . '.' "$f" '(' expr ')'
  512          | expr . "?." "$f" '(' expr ')'
  513          | expr . '.' '.' "$f" '(' expr ')'
  514          | expr . '.' "?." "$f" '(' expr ')'
  515          | expr . "as" "$f" '(' expr ')'
  516          | expr . '?' "as" "$f" '(' expr ')'
  517          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 617
    "as"   shift, and go to state 618
    "<<"   shift, and go to state 619
    ">>"   shift, and go to state 620
    "++"   shift, and go to state 621
    "--"   shift, and go to state 622
    "<="   shift, and go to state 623
    ">="   shift, and go to state 624
    "=="   shift, and go to state 625
    "!="   shift, and go to state 626
    "->"   shift, and go to state 627
    "??"   shift, and go to state 628
    "?."   shift, and go to state 629
    "?["   shift, and go to state 630
    "<|"   shift, and go to state 631
    "|>"   shift, and go to state 632
    "<<<"  shift, and go to state 633
    ">>>"  shift, and go to state 634
    "&&"   shift, and go to state 635
    "||"   shift, and go to state 636
    "^^"   shift, and go to state 637
    ".."   shift, and go to state 638
    '?'    shift, and go to state 639
    '|'    shift, and go to state 640
    '^'    shift, and go to state 641
    '&'    shift, and go to state 642
    '<'    shift, and go to state 643
    '>'    shift, and go to state 644
    '-'    shift, and go to state 645
    '+'    shift, and go to state 646
    '*'    shift, and go to state 647
    '/'    shift, and go to state 648
    '%'    shift, and go to state 649
    '.'    shift, and go to state 650
    '['    shift, and go to state 651
    ')'    shift, and go to state 1563


State 1557

   88 expression_if_block: $@3 '{' expressions $@4 . '}' expression_block_finally

    '}'  shift, and go to state 1564


State 1558

  321 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 321 (tuple_expansion_variable_declaration)


State 1559

  539 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 257 ($@16)

    expression_block  go to state 1565
    $@16              go to state 397


State 1560

  810 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 810 (make_struct_dim_list)


State 1561

   93 expression_else_block: $@6 '{' . expressions $@7 '}' expression_block_finally

    $default  reduce using rule 280 (expressions)

    expressions  go to state 1566


State 1562

   95 expression_else_block: $@8 expression_if_one_liner . SEMICOLON

    "new line, semicolon"  shift, and go to state 13
    ';'                    shift, and go to state 16

    SEMICOLON  go to state 1567


State 1563

   72 expression_else: elif_or_static_elif '(' expr ')' . optional_emit_semis expression_else_block expression_else

    "new line, semicolon"  shift, and go to state 149

    $default  reduce using rule 68 (optional_emit_semis)

    emit_semis           go to state 150
    optional_emit_semis  go to state 1568


State 1564

   88 expression_if_block: $@3 '{' expressions $@4 '}' . expression_block_finally

    "finally"  shift, and go to state 1226

    $default  reduce using rule 253 (expression_block_finally)

    expression_block_finally  go to state 1569


State 1565

  539 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@42 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 539 (struct_variable_declaration_list)


State 1566

   93 expression_else_block: $@6 '{' expressions . $@7 '}' expression_block_finally
  281 expressions: expressions . expression_any
  282            | expressions . error

    error                             shift, and go to state 872
    "struct"                          shift, and go to state 420
    "class"                           shift, and go to state 421
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 422
    "false"                           shift, and go to state 423
    "new"                             shift, and go to state 424
    "typeinfo"                        shift, and go to state 425
    "type"                            shift, and go to state 426
    "array"                           shift, and go to state 427
    "return"                          shift, and go to state 873
    "null"                            shift, and go to state 428
    "break"                           shift, and go to state 874
    "try"                             shift, and go to state 875
    "table"                           shift, and go to state 429
    "delete"                          shift, and go to state 876
    "deref"                           shift, and go to state 430
    "assume"                          shift, and go to state 877
    "cast"                            shift, and go to state 431
    "upcast"                          shift, and go to state 432
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 433
    "continue"                        shift, and go to state 878
    "pass"                            shift, and go to state 879
    "reinterpret"                     shift, and go to state 434
    "label"                           shift, and go to state 880
    "goto"                            shift, and go to state 881
    "unsafe"                          shift, and go to state 882
    "fixed_array"                     shift, and go to state 436
    "default"                         shift, and go to state 437
    "bool"                            shift, and go to state 234
    "void"                            shift, and go to state 235
    "string"                          shift, and go to state 236
    "int"                             shift, and go to state 238
    "int2"                            shift, and go to state 239
    "int3"                            shift, and go to state 240
    "int4"                            shift, and go to state 241
    "uint"                            shift, and go to state 242
    "bitfield"                        shift, and go to state 438
    "uint2"                           shift, and go to state 244
    "uint3"                           shift, and go to state 245
    "uint4"                           shift, and go to state 246
    "float"                           shift, and go to state 247
    "float2"                          shift, and go to state 248
    "float3"                          shift, and go to state 249
    "float4"                          shift, and go to state 250
    "range"                           shift, and go to state 251
    "urange"                          shift, and go to state 252
    "range64"                         shift, and go to state 253
    "urange64"                        shift, and go to state 254
    "int64"                           shift, and go to state 256
    "uint64"                          shift, and go to state 257
    "double"                          shift, and go to state 258
    "int8"                            shift, and go to state 261
    "uint8"                           shift, and go to state 262
    "int16"                           shift, and go to state 263
    "uint16"                          shift, and go to state 264
    "tuple"                           shift, and go to state 439
    "variant"                         shift, and go to state 440
    "generator"                       shift, and go to state 441
    "yield"                           shift, and go to state 883
    "++"                              shift, and go to state 442
    "--"                              shift, and go to state 443
    "::"                              shift, and go to state 57
    "$$"                              shift, and go to state 444
    "$i"                              shift, and go to state 445
    "$v"                              shift, and go to state 446
    "$b"                              shift, and go to state 447
    "$a"                              shift, and go to state 448
    "$c"                              shift, and go to state 449
    "..."                             shift, and go to state 450
    "integer constant"                shift, and go to state 451
    "long integer constant"           shift, and go to state 452
    "unsigned integer constant"       shift, and go to state 453
    "unsigned long integer constant"  shift, and go to state 454
    "unsigned int8 constant"          shift, and go to state 455
    "floating point constant"         shift, and go to state 456
    "double constant"                 shift, and go to state 457
    "name"                            shift, and go to state 58
    "new line, semicolon"             shift, and go to state 13
    "start of the string"             shift, and go to state 458
    '-'                               shift, and go to state 459
    '+'                               shift, and go to state 460
    '*'                               shift, and go to state 461
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 462
    '!'                               shift, and go to state 463
    '['                               shift, and go to state 464
    '('                               shift, and go to state 465
    '$'                               shift, and go to state 466
    '@'                               shift, and go to state 467
    ';'                               shift, and go to state 16
    '{'                               shift, and go to state 468

    "while"      reduce using rule 109 ($@11)
    "if"         reduce using rule 96 ($@9)
    "static_if"  reduce using rule 96 ($@9)
    "for"        reduce using rule 106 ($@10)
    "with"       reduce using rule 111 ($@12)
    '}'          reduce using rule 92 ($@7)

    SEMICOLON                         go to state 884
    string_builder                    go to state 469
    expr_reader                       go to state 470
    expression_label                  go to state 885
    expression_goto                   go to state 886
    expression_if_one_liner           go to state 887
    $@7                               go to state 1570
    expression_if_then_else           go to state 888
    $@9                               go to state 889
    expression_if_then_else_oneliner  go to state 890
    expression_for_loop               go to state 891
    $@10                              go to state 892
    expression_unsafe                 go to state 893
    expression_while_loop             go to state 894
    $@11                              go to state 895
    expression_with                   go to state 896
    $@12                              go to state 897
    expression_with_alias             go to state 898
    expr_call_pipe                    go to state 471
    expression_any                    go to state 900
    name_in_namespace                 go to state 472
    expression_delete                 go to state 901
    expr_new                          go to state 473
    expression_break                  go to state 902
    expression_continue               go to state 903
    expression_return                 go to state 904
    expression_yield                  go to state 905
    expression_try_catch              go to state 906
    kwd_let                           go to state 907
    expression_let                    go to state 908
    expr_cast                         go to state 474
    expr_type_decl                    go to state 475
    expr_type_info                    go to state 476
    block_or_lambda                   go to state 477
    expr_full_block                   go to state 478
    expr_numeric_const                go to state 479
    expr_assign                       go to state 909
    expr_named_call                   go to state 480
    expr_method_call                  go to state 481
    func_addr_expr                    go to state 482
    expr_field                        go to state 483
    expr_call                         go to state 484
    expr                              go to state 910
    expr_generator                    go to state 486
    expr_mtag                         go to state 487
    basic_type_declaration            go to state 488
    make_decl                         go to state 489
    make_struct_decl                  go to state 490
    make_tuple_call                   go to state 491
    make_dim_decl                     go to state 492
    make_table_decl                   go to state 493
    array_comprehension               go to state 494


State 1567

   95 expression_else_block: $@8 expression_if_one_liner SEMICOLON .

    $default  reduce using rule 95 (expression_else_block)


State 1568

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis . expression_else_block expression_else

    '{'       reduce using rule 91 ($@6)
    '{'       [reduce using rule 94 ($@8)]
    $default  reduce using rule 94 ($@8)

    expression_else_block  go to state 1571
    $@6                    go to state 1554
    $@8                    go to state 1555


State 1569

   88 expression_if_block: $@3 '{' expressions $@4 '}' expression_block_finally .

    $default  reduce using rule 88 (expression_if_block)


State 1570

   93 expression_else_block: $@6 '{' expressions $@7 . '}' expression_block_finally

    '}'  shift, and go to state 1572


State 1571

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block . expression_else

    "else"         shift, and go to state 1520
    "elif"         shift, and go to state 1521
    "static_elif"  shift, and go to state 1522

    $default  reduce using rule 70 (expression_else)

    elif_or_static_elif  go to state 1523
    expression_else      go to state 1573


State 1572

   93 expression_else_block: $@6 '{' expressions $@7 '}' . expression_block_finally

    "finally"  shift, and go to state 1226

    $default  reduce using rule 253 (expression_block_finally)

    expression_block_finally  go to state 1574


State 1573

   72 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_else_block expression_else .

    $default  reduce using rule 72 (expression_else)


State 1574

   93 expression_else_block: $@6 '{' expressions $@7 '}' expression_block_finally .

    $default  reduce using rule 93 (expression_else_block)
